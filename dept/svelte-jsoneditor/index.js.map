{"version":3,"file":"index.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/environment.js","../node_modules/svelte/src/runtime/internal/loop.js","../node_modules/svelte/src/runtime/internal/globals.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/style_manager.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/spread.js","../node_modules/svelte/src/runtime/internal/Component.js","../src/lib/utils/debug.ts","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/transition/index.js","../node_modules/svelte-simple-modal/src/Modal.svelte","../src/lib/types.ts","../src/lib/constants.ts","../src/lib/utils/uniqueId.ts","../src/lib/utils/numberUtils.ts","../src/lib/utils/typeUtils.ts","../src/lib/utils/arrayUtils.ts","../src/lib/utils/jsonUtils.ts","../src/lib/utils/domUtils.ts","../src/lib/utils/keyBindings.ts","../src/lib/components/modals/popup/AbsolutePopupEntry.svelte","../src/lib/components/modals/popup/AbsolutePopup.svelte","../src/lib/utils/pathUtils.ts","../src/lib/utils/stringUtils.ts","../src/lib/plugins/query/javascriptQueryLanguage.ts","../node_modules/svelte-awesome/package/components/svg/Raw.svelte","../node_modules/svelte-awesome/package/components/svg/Svg.svelte","../node_modules/svelte-awesome/package/components/Icon.svelte","../src/lib/plugins/value/components/BooleanToggle.svelte","../src/lib/components/controls/ColorPickerPopup.svelte","../src/lib/plugins/value/components/ColorPicker.svelte","../src/lib/logic/expandItemsSections.ts","../src/lib/logic/documentState.ts","../src/lib/logic/selection.ts","../src/lib/utils/cssUtils.ts","../src/lib/plugins/value/components/utils/getValueClass.ts","../src/lib/components/controls/EditableDiv.svelte","../src/lib/plugins/value/components/EditableValue.svelte","../src/lib/logic/operations.ts","../src/lib/logic/search.ts","../src/lib/components/modes/treemode/highlight/SearchResultHighlighter.svelte","../src/lib/plugins/value/components/ReadonlyValue.svelte","../src/lib/components/controls/tooltip/Tooltip.svelte","../src/lib/components/controls/tooltip/tooltip.ts","../src/lib/plugins/value/components/TimestampTag.svelte","../src/lib/plugins/value/renderValue.ts","../src/lib/components/modals/transformModalStates.ts","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/svelte-select/filter.js","../node_modules/svelte-select/get-items.js","../node_modules/svelte-select/ChevronIcon.svelte","../node_modules/svelte-select/ClearIcon.svelte","../node_modules/svelte-select/LoadingIcon.svelte","../node_modules/svelte-select/Select.svelte","../node_modules/svelte-floating-ui/index.js","../src/lib/components/modals/TransformWizard.svelte","../src/lib/components/controls/selectQueryLanguage/SelectQueryLanguage.svelte","../src/lib/components/modals/TransformModalHeader.svelte","../src/lib/components/controls/createAutoScrollHandler.ts","../src/lib/assets/jump.js/src/easing.ts","../src/lib/assets/jump.js/src/jump.ts","../src/lib/logic/history.ts","../src/lib/utils/timeUtils.ts","../src/lib/logic/validation.ts","../src/lib/components/controls/createFocusTracker.ts","../src/lib/components/controls/Message.svelte","../src/lib/components/controls/ValidationErrorsOverview.svelte","../src/lib/utils/navigatorUtils.ts","../src/lib/components/modals/Header.svelte","../src/lib/components/modals/CopyPasteModal.svelte","../src/lib/typeguards.ts","../src/lib/components/controls/Menu.svelte","../src/lib/components/modals/repair/JSONRepairComponent.svelte","../src/lib/actions/onEscape.ts","../src/lib/components/modals/JSONRepairModal.svelte","../src/lib/components/controls/contextmenu/ContextMenuButton.svelte","../src/lib/components/controls/DropdownButton.svelte","../src/lib/components/controls/contextmenu/ContextMenuDropDownButton.svelte","../src/lib/components/controls/contextmenu/ContextMenu.svelte","../src/lib/components/modes/treemode/contextmenu/TreeContextMenu.svelte","../src/lib/components/modes/treemode/CollapsedItems.svelte","../src/lib/components/controls/contextmenu/ContextMenuPointer.svelte","../src/lib/components/modes/treemode/JSONKey.svelte","../src/lib/components/modes/treemode/JSONValue.svelte","../src/lib/components/modes/treemode/singleton.ts","../src/lib/logic/dragging.ts","../src/lib/utils/jsonPointer.ts","../src/lib/components/modes/treemode/ValidationErrorIcon.svelte","../src/lib/components/modes/treemode/JSONNode.svelte","../src/lib/img/customFontawesomeIcons.ts","../src/lib/components/modes/treemode/menu/TreeMenu.svelte","../src/lib/components/modes/treemode/Welcome.svelte","../src/lib/logic/sort.ts","../src/lib/components/controls/navigationBar/NavigationBarDropdown.svelte","../src/lib/components/controls/navigationBar/NavigationBarItem.svelte","../src/lib/utils/copyToClipboard.ts","../src/lib/components/controls/navigationBar/NavigationBarPathEditor.svelte","../src/lib/components/controls/navigationBar/NavigationBar.svelte","../src/lib/components/modes/treemode/menu/SearchBox.svelte","../src/lib/logic/table.ts","../src/lib/logic/actions.ts","../src/lib/components/controls/JSONPreview.svelte","../src/lib/components/modes/treemode/TreeMode.svelte","../src/lib/components/modals/TransformModal.svelte","../src/lib/components/modals/sortModalStates.ts","../src/lib/components/modals/SortModal.svelte","../src/lib/utils/noop.ts","../src/lib/utils/fileUtils.ts","../src/lib/components/modes/textmode/menu/TextMenu.svelte","../src/lib/components/modes/textmode/StatusBar.svelte","../node_modules/@lezer/common/dist/index.js","../node_modules/@lezer/highlight/dist/index.js","../src/lib/components/modes/textmode/codemirror/codemirror-theme.ts","../src/lib/components/modes/textmode/TextMode.svelte","../src/lib/components/modes/tablemode/menu/TableMenu.svelte","../src/lib/components/modes/tablemode/JSONValue.svelte","../src/lib/components/modes/tablemode/tag/InlineValue.svelte","../src/lib/components/modes/tablemode/ColumnHeader.svelte","../src/lib/actions/resizeObserver.ts","../src/lib/components/modes/tablemode/contextmenu/TableContextMenu.svelte","../src/lib/components/modes/tablemode/TableModeWelcome.svelte","../src/lib/components/modes/tablemode/RefreshColumnHeader.svelte","../src/lib/components/modes/tablemode/TableMode.svelte","../src/lib/components/modes/JSONEditorRoot.svelte","../src/lib/components/modals/JSONEditorModal.svelte","../src/lib/components/modals/ModalRef.svelte","../src/lib/components/JSONEditor.svelte","../src/lib/plugins/value/components/EnumValue.svelte","../src/lib/utils/jsonSchemaUtils.ts","../src/lib/plugins/value/renderJSONSchemaEnum.ts","../src/lib/plugins/validator/createAjvValidator.ts","../src/lib/plugins/query/lodashQueryLanguage.ts","../src/lib/plugins/query/jmespathQueryLanguage.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/**\n * Create a lightweight debug function to log output into the browser console.\n *\n * Inspired by https://github.com/visionmedia/debug (some code is copied below)\n *\n * Usage:\n *\n *     import { createDebug } from './debug.js'\n *\n *     const debug = createDebug('my:namespace')\n *\n *     debug('testing:', 2 + 2)\n *\n * By default, logging is only enabled when a property DEBUG is set in the\n * localStorage of your browser:\n *\n *     localStorage['debug'] = '*'\n *     localStorage['debug'] = 'jsoneditor:*'\n *     localStorage['debug'] = 'jsoneditor:TreeMode'\n *\n * The actual value of 'debug' is used to filter the debug messages.\n * The value can end with a '*' wild card to match any remaining text.\n *\n * By providing a value for `enabled`, you can choose conditions to\n * enable/disable debugging if you want, for example some flag determining\n * whether in development or production.\n */\nexport function createDebug(\n  namespace: string,\n  enabled = enableDebug(namespace)\n): (...args: unknown[]) => void {\n  if (!enabled) {\n    return noop\n  }\n\n  const color = selectColor(namespace)\n\n  return function debug(...args) {\n    console.log(`%c${namespace}`, `color:${color}`, ...args)\n  }\n}\n\nfunction enableDebug(namespace: string) {\n  const debug = tryReadLocalStorage('debug')\n\n  return debug?.endsWith('*') ? namespace.startsWith(debug.slice(0, -1)) : namespace === debug\n}\n\nfunction noop() {\n  // no operation\n}\n\n/**\n * Try read a specific key from localStorage\n */\nfunction tryReadLocalStorage(key: string): string | undefined {\n  try {\n    if (typeof window !== 'undefined' && typeof window.localStorage !== 'undefined') {\n      // reading local storage can fail for example because of security restrictions\n      return window.localStorage[key]\n    }\n  } catch (error) {\n    // we do nothing with the error, not needed in this specific case\n  }\n}\n\n/**\n * Selects a color for a debug namespace\n *\n * Code is copied from the following source: https://github.com/visionmedia/debug\n *\n * @param namespace The namespace string for the debug instance to be colored\n * @return An ANSI color code for the given namespace\n */\nfunction selectColor(namespace: string): string {\n  let hash = 0\n\n  for (let i = 0; i < namespace.length; i++) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i)\n    hash |= 0 // Convert to 32bit integer\n  }\n\n  return colors[Math.abs(hash) % colors.length]\n}\n\nconst colors = [\n  '#0000CC',\n  '#0099FF',\n  '#009400',\n  '#8dd200',\n  '#CCCC00',\n  '#CC9933',\n  '#ae04e7',\n  '#ff35d7',\n  '#FF3333',\n  '#FF6600',\n  '#FF9933',\n  '#FFCC33'\n]\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.8';\nexport const PUBLIC_VERSION = '4';\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","<script context=\"module\">\n  /**\n   * @typedef {typeof import('svelte').SvelteComponent | typeof import('svelte').SvelteComponent<any>} Component\n   * @typedef {import('svelte/types/runtime/transition').BlurParams} BlurParams\n   * @typedef {import('svelte/types/runtime/transition').FadeParams} FadeParams\n   * @typedef {import('svelte/types/runtime/transition').FlyParams} FlyParams\n   * @typedef {import('svelte/types/runtime/transition').SlideParams} SlideParams\n   * @typedef {import('svelte/types/runtime/transition').TransitionConfig} TransitionConfig\n   * @typedef {Record<string, string | number>} Styles\n   * @typedef {(node: Element, parameters: BlurParams | FadeParams | FlyParams | SlideParams) => TransitionConfig} TransitionFn\n   * @typedef {{ id: string | null, ariaLabel: string | null, ariaLabelledBy: string | null, closeButton: Component | boolean, closeOnEsc: boolean, closeOnOuterClick: boolean, styleBg: Styles, styleWindowWrap: Styles, styleWindow: Styles, styleContent: Styles, styleCloseButton: Styles, classBg: string | null, classWindowWrap: string | null, classWindow: string | null, classContent: string | null, classCloseButton: string | null, transitionBg: TransitionFn, transitionBgProps: BlurParams, transitionWindow: TransitionFn, transitionWindowProps: BlurParams, disableFocusTrap: boolean, isTabbable: boolean, unstyled: boolean }} Options\n   * @typedef {() => void} Callback\n   * @typedef {{ onOpen: Callback; onOpened: Callback; onClose: Callback; onClosed: Callback }} Callbacks\n   * @typedef {(NewComponent: Component, newProps?: Record<string, any>, options?: Partial<Options>, callbacks?: Partial<Callbacks>) => void} Open\n   * @typedef {(callback?: Partial<Callbacks>) => void} Close\n   * @typedef {{ open: Open, close: Close }} Context\n   */\n\n  /**\n   * Create a Svelte component with props bound to it.\n   * @type {(component: Component, props: Record<string, any>) => Component}\n   */\n  export function bind(Component, props = {}) {\n    return function ModalComponent(options) {\n      return new Component({\n        ...options,\n        props: {\n          ...props,\n          ...options.props,\n        },\n      });\n    };\n  }\n</script>\n\n<script>\n  import * as svelte from 'svelte';\n  import { fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  const baseSetContext = svelte.setContext;\n\n  /**\n   * A basic function that checks if a node is tabbale\n   */\n  const baseIsTabbable = (node) =>\n    node.tabIndex >= 0 &&\n    !node.hidden &&\n    !node.disabled &&\n    node.style.display !== 'none' &&\n    node.type !== 'hidden' &&\n    Boolean(\n      node.offsetWidth || node.offsetHeight || node.getClientRects().length\n    );\n\n  /**\n   * A function to determine if an HTML element is tabbable\n   * @type {((node: Element) => boolean)}\n   */\n  export let isTabbable = baseIsTabbable;\n\n  /**\n   * Svelte component to be shown as the modal\n   * @type {Component | null}\n   */\n  export let show = null;\n\n  /**\n   * Element ID assigned to the modal's root DOM element\n   * @type {string | null}\n   */\n  export let id = null;\n\n  /**\n   * Svelte context key to reference the simple modal context\n   * @type {string}\n   */\n  export let key = 'simple-modal';\n\n  /**\n   * Accessibility label of the modal\n   * @see https://www.w3.org/TR/wai-aria-1.1/#aria-label\n   * @type {string | null}\n   */\n  export let ariaLabel = null;\n\n  /**\n   * Element ID holding the accessibility label of the modal\n   * @see https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby\n   * @type {string | null}\n   */\n  export let ariaLabelledBy = null;\n\n  /**\n   * Whether to show a close button or not\n   * @type {Component | boolean}\n   */\n  export let closeButton = true;\n\n  /**\n   * Whether to close the modal on hitting the escape key or not\n   * @type {boolean}\n   */\n  export let closeOnEsc = true;\n\n  /**\n   * Whether to close the modal upon an outside mouse click or not\n   * @type {boolean}\n   */\n  export let closeOnOuterClick = true;\n\n  /**\n   * CSS for styling the background element\n   * @type {Styles}\n   */\n  export let styleBg = {};\n\n  /**\n   * CSS for styling the window wrapper element\n   * @type {Styles}\n   */\n  export let styleWindowWrap = {};\n\n  /**\n   * CSS for styling the window element\n   * @type {Styles}\n   */\n  export let styleWindow = {};\n\n  /**\n   * CSS for styling the content element\n   * @type {Styles}\n   */\n  export let styleContent = {};\n\n  /**\n   * CSS for styling the close element\n   * @type {Styles}\n   */\n  export let styleCloseButton = {};\n\n  /**\n   * Class name for the background element\n   * @type {string | null}\n   */\n  export let classBg = null;\n\n  /**\n   * Class name for window wrapper element\n   * @type {string | null}\n   */\n  export let classWindowWrap = null;\n\n  /**\n   * Class name for window element\n   * @type {string | null}\n   */\n  export let classWindow = null;\n\n  /**\n   * Class name for content element\n   * @type {string | null}\n   */\n  export let classContent = null;\n\n  /**\n   * Class name for close element\n   * @type {string | null}\n   */\n  export let classCloseButton = null;\n\n  /**\n   * Do not apply default styles to the modal\n   * @type {boolean}\n   */\n  export let unstyled = false;\n\n  /**\n   * The setContext() function associated with this library\n   * @description If you want to bundle simple-modal with its own version of\n   * Svelte you have to pass `setContext()` from your main app to simple-modal\n   * using this parameter\n   * @see https://svelte.dev/docs#run-time-svelte-setcontext\n   * @type {<T>(key: any, context: T) => T}\n   */\n  export let setContext = baseSetContext;\n\n  /**\n   * Transition function for the background element\n   * @see https://svelte.dev/docs#transition_fn\n   * @type {TransitionFn}\n   */\n  export let transitionBg = fade;\n\n  /**\n   * Parameters for the background element transition\n   * @type {BlurParams | FadeParams | FlyParams | SlideParams}\n   */\n  export let transitionBgProps = { duration: 250 };\n\n  /**\n   * Transition function for the window element\n   * @see https://svelte.dev/docs#transition_fn\n   * @type {TransitionFn}\n   */\n  export let transitionWindow = transitionBg;\n\n  /**\n   * Parameters for the window element transition\n   * @type {BlurParams | FadeParams | FlyParams | SlideParams}\n   */\n  export let transitionWindowProps = transitionBgProps;\n\n  /**\n   * If `true` elements outside the modal can be focused\n   * @type {boolean}\n   */\n  export let disableFocusTrap = false;\n\n  const defaultState = {\n    id,\n    ariaLabel,\n    ariaLabelledBy,\n    closeButton,\n    closeOnEsc,\n    closeOnOuterClick,\n    styleBg,\n    styleWindowWrap,\n    styleWindow,\n    styleContent,\n    styleCloseButton,\n    classBg,\n    classWindowWrap,\n    classWindow,\n    classContent,\n    classCloseButton,\n    transitionBg,\n    transitionBgProps,\n    transitionWindow,\n    transitionWindowProps,\n    disableFocusTrap,\n    isTabbable,\n    unstyled,\n  };\n  let state = { ...defaultState };\n\n  let Component = null;\n\n  let background;\n  let wrap;\n  let modalWindow;\n  let scrollY;\n  let cssBg;\n  let cssWindowWrap;\n  let cssWindow;\n  let cssContent;\n  let cssCloseButton;\n  let currentTransitionBg;\n  let currentTransitionWindow;\n  let prevBodyPosition;\n  let prevBodyOverflow;\n  let prevBodyWidth;\n  let outerClickTarget;\n\n  const camelCaseToDash = (str) =>\n    str.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n\n  const toCssString = (props) =>\n    props\n      ? Object.keys(props).reduce(\n          (str, key) => `${str}; ${camelCaseToDash(key)}: ${props[key]}`,\n          ''\n        )\n      : '';\n\n  const isFunction = (f) => !!(f && f.constructor && f.call && f.apply);\n\n  const updateStyleTransition = () => {\n    cssBg = toCssString(\n      Object.assign(\n        {},\n        {\n          width: window.innerWidth,\n          height: window.innerHeight,\n        },\n        state.styleBg\n      )\n    );\n    cssWindowWrap = toCssString(state.styleWindowWrap);\n    cssWindow = toCssString(state.styleWindow);\n    cssContent = toCssString(state.styleContent);\n    cssCloseButton = toCssString(state.styleCloseButton);\n    currentTransitionBg = state.transitionBg;\n    currentTransitionWindow = state.transitionWindow;\n  };\n\n  const toVoid = () => {};\n  let onOpen = toVoid;\n  let onClose = toVoid;\n  let onOpened = toVoid;\n  let onClosed = toVoid;\n\n  /**\n   * Open a modal.\n   * @description Calling this method will close the modal. Additionally, it\n   * allows to specify onClose and onClosed event handlers.`\n   * @type {Open}\n   */\n  const open = (NewComponent, newProps = {}, options = {}, callbacks = {}) => {\n    Component = bind(NewComponent, newProps);\n    state = { ...defaultState, ...options };\n    updateStyleTransition();\n    disableScroll();\n    onOpen = (event) => {\n      if (callbacks.onOpen) callbacks.onOpen(event);\n      /**\n       * The open event is fired right before the modal opens\n       * @event {void} open\n       */\n      dispatch('open');\n      /**\n       * The opening event is fired right before the modal opens\n       * @event {void} opening\n       * @deprecated Listen to the `open` event instead\n       */\n      dispatch('opening'); // Deprecated. Do not use!\n    };\n    onClose = (event) => {\n      if (callbacks.onClose) callbacks.onClose(event);\n      /**\n       * The close event is fired right before the modal closes\n       * @event {void} close\n       */\n      dispatch('close');\n      /**\n       * The closing event is fired right before the modal closes\n       * @event {void} closing\n       * @deprecated Listen to the `close` event instead\n       */\n      dispatch('closing'); // Deprecated. Do not use!\n    };\n    onOpened = (event) => {\n      if (callbacks.onOpened) callbacks.onOpened(event);\n      /**\n       * The opened event is fired after the modal's opening transition\n       * @event {void} opened\n       */\n      dispatch('opened');\n    };\n    onClosed = (event) => {\n      if (callbacks.onClosed) callbacks.onClosed(event);\n      /**\n       * The closed event is fired after the modal's closing transition\n       * @event {void} closed\n       */\n      dispatch('closed');\n    };\n  };\n\n  /**\n   * Close the modal.\n   * @description Calling this method will close the modal. Additionally, it\n   * allows to specify onClose and onClosed event handlers.`\n   * @type {Close}\n   */\n  const close = (callbacks = {}) => {\n    if (!Component) return;\n    onClose = callbacks.onClose || onClose;\n    onClosed = callbacks.onClosed || onClosed;\n    Component = null;\n    enableScroll();\n  };\n\n  const handleKeydown = (event) => {\n    if (state.closeOnEsc && Component && event.key === 'Escape') {\n      event.preventDefault();\n      close();\n    }\n\n    if (Component && event.key === 'Tab' && !state.disableFocusTrap) {\n      // trap focus\n      const nodes = modalWindow.querySelectorAll('*');\n      const tabbable = Array.from(nodes)\n        .filter(state.isTabbable)\n        .sort((a, b) => a.tabIndex - b.tabIndex);\n\n      let index = tabbable.indexOf(document.activeElement);\n      if (index === -1 && event.shiftKey) index = 0;\n\n      index += tabbable.length + (event.shiftKey ? -1 : 1);\n      index %= tabbable.length;\n\n      tabbable[index].focus();\n      event.preventDefault();\n    }\n  };\n\n  const handleOuterMousedown = (event) => {\n    if (\n      state.closeOnOuterClick &&\n      (event.target === background || event.target === wrap)\n    )\n      outerClickTarget = event.target;\n  };\n\n  const handleOuterMouseup = (event) => {\n    if (state.closeOnOuterClick && event.target === outerClickTarget) {\n      event.preventDefault();\n      close();\n    }\n  };\n\n  const disableScroll = () => {\n    scrollY = window.scrollY;\n    prevBodyPosition = document.body.style.position;\n    prevBodyOverflow = document.body.style.overflow;\n    prevBodyWidth = document.body.style.width;\n    document.body.style.position = 'fixed';\n    document.body.style.top = `-${scrollY}px`;\n    document.body.style.overflow = 'hidden';\n    document.body.style.width = '100%';\n  };\n\n  const enableScroll = () => {\n    document.body.style.position = prevBodyPosition || '';\n    document.body.style.top = '';\n    document.body.style.overflow = prevBodyOverflow || '';\n    document.body.style.width = prevBodyWidth || '';\n    window.scrollTo({\n      top: scrollY,\n      left: 0,\n      behavior: 'instant',\n    });\n  };\n\n  /**\n   * The exposed context methods: open() and close()\n   * @type {Context}\n   */\n  const context = { open, close };\n\n  setContext(key, context);\n\n  let isMounted = false;\n\n  $: {\n    if (isMounted) {\n      if (isFunction(show)) {\n        open(show);\n      } else {\n        close();\n      }\n    }\n  }\n\n  svelte.onDestroy(() => {\n    if (isMounted) close();\n  });\n\n  svelte.onMount(() => {\n    isMounted = true;\n  });\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n{#if Component}\n  <div\n    aria-hidden=\"true\"\n    id={state.id}\n    class={state.classBg}\n    class:bg={!unstyled}\n    on:mousedown={handleOuterMousedown}\n    on:mouseup={handleOuterMouseup}\n    bind:this={background}\n    transition:currentTransitionBg={state.transitionBgProps}\n    style={cssBg}\n  >\n    <div\n      class={state.classWindowWrap}\n      class:wrap={!unstyled}\n      bind:this={wrap}\n      style={cssWindowWrap}\n    >\n      <div\n        class={state.classWindow}\n        class:window={!unstyled}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-label={state.ariaLabelledBy ? null : state.ariaLabel || null}\n        aria-labelledby={state.ariaLabelledBy || null}\n        bind:this={modalWindow}\n        transition:currentTransitionWindow={state.transitionWindowProps}\n        on:introstart={onOpen}\n        on:outrostart={onClose}\n        on:introend={onOpened}\n        on:outroend={onClosed}\n        style={cssWindow}\n      >\n        {#if state.closeButton}\n          {#if isFunction(state.closeButton)}\n            <svelte:component this={state.closeButton} onClose={close} />\n          {:else}\n            <button\n              class={state.classCloseButton}\n              class:close={!unstyled}\n              aria-label=\"Close modal\"\n              on:click={close}\n              style={cssCloseButton}\n              type=\"button\"\n            />\n          {/if}\n        {/if}\n        <div\n          class={state.classContent}\n          class:content={!unstyled}\n          style={cssContent}\n        >\n          <svelte:component this={Component} />\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n<slot />\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .bg {\n    position: fixed;\n    z-index: 1000;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.66);\n  }\n\n  @supports (-webkit-touch-callout: none) {\n    body {\n      /* The hack for Safari iOS */\n      height: -webkit-fill-available;\n    }\n  }\n\n  .wrap {\n    position: relative;\n    margin: 2rem;\n    max-height: 100%;\n  }\n\n  .window {\n    position: relative;\n    width: 40rem;\n    max-width: 100%;\n    max-height: 100%;\n    margin: 2rem auto;\n    color: black;\n    border-radius: 0.5rem;\n    background: white;\n  }\n\n  .content {\n    position: relative;\n    padding: 1rem;\n    max-height: calc(100vh - 4rem);\n    overflow: auto;\n  }\n\n  .close {\n    display: block;\n    box-sizing: border-box;\n    position: absolute;\n    z-index: 1000;\n    top: 1rem;\n    right: 1rem;\n    margin: 0;\n    padding: 0;\n    width: 1.5rem;\n    height: 1.5rem;\n    border: 0;\n    color: black;\n    border-radius: 1.5rem;\n    background: white;\n    box-shadow: 0 0 0 1px black;\n    transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n      background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n    -webkit-appearance: none;\n  }\n\n  .close:before,\n  .close:after {\n    content: '';\n    display: block;\n    box-sizing: border-box;\n    position: absolute;\n    top: 50%;\n    width: 1rem;\n    height: 1px;\n    background: black;\n    transform-origin: center;\n    transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n      background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n  }\n\n  .close:before {\n    -webkit-transform: translate(0, -50%) rotate(45deg);\n    -moz-transform: translate(0, -50%) rotate(45deg);\n    transform: translate(0, -50%) rotate(45deg);\n    left: 0.25rem;\n  }\n\n  .close:after {\n    -webkit-transform: translate(0, -50%) rotate(-45deg);\n    -moz-transform: translate(0, -50%) rotate(-45deg);\n    transform: translate(0, -50%) rotate(-45deg);\n    left: 0.25rem;\n  }\n\n  .close:hover {\n    background: black;\n  }\n\n  .close:hover:before,\n  .close:hover:after {\n    height: 2px;\n    background: white;\n  }\n\n  .close:focus {\n    border-color: #3399ff;\n    box-shadow: 0 0 0 2px #3399ff;\n  }\n\n  .close:active {\n    transform: scale(0.9);\n  }\n\n  .close:hover,\n  .close:focus,\n  .close:active {\n    outline: none;\n  }\n</style>\n","import type { JSONPatchDocument, JSONPath, JSONPointer } from 'immutable-json-patch'\nimport type { SvelteComponent } from 'svelte'\nimport type { IconDefinition } from '@fortawesome/free-solid-svg-icons'\n\nexport type TextContent = { text: string }\n\nexport type JSONContent = { json: unknown }\n\nexport type Content = JSONContent | TextContent\n\n// The `JSONParser` interface is compatible with `JSON`,\n// except that JSON.stringify is wrongly defined to return a string whilst it can return a string or undefined\n// see: https://stackoverflow.com/questions/74461780/is-the-official-type-definition-for-json-stringify-wrong\nexport interface JSONParser {\n  parse(\n    text: string,\n    reviver?: ((this: unknown, key: string, value: unknown) => unknown) | null\n  ): unknown\n\n  stringify(\n    value: unknown,\n    replacer?:\n      | ((this: unknown, key: string, value: unknown) => unknown)\n      | Array<number | string>\n      | null,\n    space?: string | number\n  ): string | undefined\n}\n\nexport interface JSONPathParser {\n  parse: (pathStr: string) => JSONPath\n  stringify: (path: JSONPath) => string\n}\n\nexport interface VisibleSection {\n  start: number\n  end: number\n}\n\nexport enum Mode {\n  text = 'text',\n  tree = 'tree',\n  table = 'table'\n}\n\nexport enum SelectionType {\n  after = 'after',\n  inside = 'inside',\n  key = 'key',\n  value = 'value',\n  multi = 'multi',\n  text = 'text' // in text mode\n}\n\nexport enum CaretType {\n  after = 'after',\n  key = 'key',\n  value = 'value',\n  inside = 'inside'\n}\n\nexport interface PathOption {\n  value: JSONPath\n  label: string\n}\n\nexport interface NumberOption {\n  value: 1 | -1\n  label: string\n}\n\nexport interface CaretPosition {\n  path: JSONPath\n  type: CaretType // TODO: refactor this to use SelectionType here, then we can simplify the util functions to turn this into a selection\n}\n\nexport interface DocumentState {\n  expandedMap: JSONPointerMap<boolean>\n  enforceStringMap: JSONPointerMap<boolean>\n  visibleSectionsMap: JSONPointerMap<VisibleSection[]>\n  selection: JSONSelection | null\n  sortedColumn: SortedColumn | null\n}\n\nexport interface JSONPatchResult {\n  json: unknown\n  previousJson: unknown\n  undo: JSONPatchDocument\n  redo: JSONPatchDocument\n}\n\nexport type AfterPatchCallback = (\n  patchedJson: unknown,\n  patchedState: DocumentState\n) => { json?: unknown; state?: DocumentState } | undefined\n\nexport interface MultiSelection {\n  type: SelectionType.multi\n  anchorPath: JSONPath\n  focusPath: JSONPath\n}\n\nexport interface AfterSelection {\n  type: SelectionType.after\n  path: JSONPath\n}\n\nexport interface InsideSelection {\n  type: SelectionType.inside\n  path: JSONPath\n}\n\nexport interface KeySelection {\n  type: SelectionType.key\n  path: JSONPath\n  edit?: boolean\n}\n\nexport interface ValueSelection {\n  type: SelectionType.value\n  path: JSONPath\n  edit?: boolean\n}\n\nexport type JSONSelection =\n  | MultiSelection\n  | AfterSelection\n  | InsideSelection\n  | KeySelection\n  | ValueSelection\n\n// TextSelection is the result of EditorSelection.toJSON() from CodeMirror,\n// with an additional `type` property\nexport interface TextSelection {\n  type: SelectionType.text\n  ranges: { anchor: number; head: number }[]\n  main: number\n}\n\nexport type JSONEditorSelection = JSONSelection | TextSelection\n\nexport type JSONPointerMap<T> = Record<JSONPointer, T>\n\nexport type ClipboardValues = Array<{ key: string; value: unknown }>\n\nexport interface MenuButton {\n  type: 'button'\n  onClick: (event: MouseEvent) => void\n  icon?: IconDefinition\n  text?: string\n  title?: string\n  className?: string\n  disabled?: boolean\n}\n\nexport interface MenuDropDownButton {\n  type: 'dropdown-button'\n  main: MenuButton\n  width?: string\n  items: MenuButton[]\n}\n\nexport interface MenuLabel {\n  type: 'label'\n  text: string\n}\n\nexport interface MenuSeparator {\n  type: 'separator'\n}\n\nexport interface MenuSpace {\n  type: 'space'\n}\n\nexport type MenuItem = MenuButton | MenuSeparator | MenuSpace\n\nexport interface ContextMenuColumn {\n  type: 'column'\n  items: Array<MenuButton | MenuDropDownButton | MenuLabel | MenuSeparator>\n}\nexport interface ContextMenuRow {\n  type: 'row'\n  items: Array<MenuButton | MenuDropDownButton | ContextMenuColumn>\n}\nexport type ContextMenuItem = MenuButton | MenuDropDownButton | MenuSeparator | ContextMenuRow\n\nexport interface MessageAction {\n  text: string\n  title: string\n  icon?: IconDefinition\n  onClick?: () => void\n  onMouseDown?: () => void\n  disabled?: boolean\n}\n\nexport enum ValidationSeverity {\n  info = 'info',\n  warning = 'warning',\n  error = 'error'\n}\n\nexport interface ValidationError {\n  path: JSONPath\n  message: string\n  severity: ValidationSeverity\n}\n\nexport interface NestedValidationError extends ValidationError {\n  isChildError?: boolean\n}\n\nexport type Validator = (json: unknown) => ValidationError[]\n\nexport interface ParseError {\n  position: number | null\n  line: number | null\n  column: number | null\n  message: string\n}\n\nexport interface ContentParseError {\n  parseError: ParseError\n  isRepairable: boolean\n}\n\nexport interface ContentValidationErrors {\n  validationErrors: ValidationError[]\n}\n\nexport type ContentErrors = ContentParseError | ContentValidationErrors\n\nexport interface RichValidationError extends ValidationError {\n  line: number | null\n  column: number | null\n  from: number | null\n  to: number | null\n  actions: Array<{ name: string; apply: () => void }> | null\n}\n\nexport interface TextLocation {\n  path: JSONPath\n  line: number\n  column: number\n  from: number\n  to: number\n}\n\nexport interface Section {\n  start: number // start included\n  end: number // end excluded\n}\n\nexport interface QueryLanguage {\n  id: string\n  name: string\n  description: string\n  createQuery: (json: unknown, queryOptions: QueryLanguageOptions) => string\n  executeQuery: (json: unknown, query: string, parser: JSONParser) => unknown\n}\n\nexport interface QueryLanguageOptions {\n  filter?: {\n    path?: JSONPath\n    relation?: '==' | '!=' | '<' | '<=' | '>' | '>='\n    value?: string\n  }\n  sort?: {\n    path?: JSONPath\n    direction?: 'asc' | 'desc'\n  }\n  projection?: {\n    paths?: JSONPath[]\n  }\n}\n\nexport type OnChangeQueryLanguage = (queryLanguageId: string) => void\nexport interface OnChangeStatus {\n  contentErrors: ContentErrors | null\n  patchResult: JSONPatchResult | null\n}\nexport type OnChange =\n  | ((content: Content, previousContent: Content, status: OnChangeStatus) => void)\n  | null\nexport type OnJSONSelect = (selection: JSONSelection) => void\nexport type OnSelect = (selection: JSONEditorSelection | null) => void\nexport type OnPatch = (\n  operations: JSONPatchDocument,\n  afterPatch?: AfterPatchCallback\n) => JSONPatchResult\nexport type OnChangeText = (updatedText: string, afterPatch?: AfterPatchCallback) => void\nexport type OnSort = (params: {\n  operations: JSONPatchDocument\n  rootPath: JSONPath\n  itemPath: JSONPath\n  direction: 1 | -1\n}) => void\nexport type OnFind = (findAndReplace: boolean) => void\nexport type OnPaste = (pastedText: string) => void\nexport type OnPasteJson = (pastedJson: { path: JSONPath; contents: unknown }) => void\nexport type OnExpand = (path: JSONPath) => boolean\nexport type OnRenderValue = (props: RenderValueProps) => RenderValueComponentDescription[]\nexport type OnClassName = (path: JSONPath, value: unknown) => string | undefined\nexport type OnChangeMode = (mode: Mode) => void\nexport type OnContextMenu = (contextMenuProps: AbsolutePopupOptions) => void\nexport type RenderMenuContext = {\n  mode: 'tree' | 'text' | 'table'\n  modal: boolean\n}\nexport type OnRenderMenu = (items: MenuItem[], context: RenderMenuContext) => MenuItem[] | undefined\nexport type OnRenderMenuInternal = (items: MenuItem[]) => MenuItem[]\nexport type OnRenderContextMenu = (\n  items: ContextMenuItem[],\n  context: RenderMenuContext\n) => ContextMenuItem[] | undefined\nexport type OnRenderContextMenuInternal = (items: ContextMenuItem[]) => ContextMenuItem[]\nexport type OnError = (error: Error) => void\nexport type OnFocus = () => void\nexport type OnBlur = () => void\nexport type OnSortModal = (props: SortModalCallback) => void\nexport type OnTransformModal = (props: TransformModalCallback) => void\nexport type OnJSONEditorModal = (props: JSONEditorModalCallback) => void\nexport type FindNextInside = (path: JSONPath) => JSONSelection | null\n\nexport interface SearchResult {\n  items: ExtendedSearchResultItem[]\n  itemsMap: JSONPointerMap<ExtendedSearchResultItem[]>\n  activeItem: ExtendedSearchResultItem | undefined\n  activeIndex: number | -1\n}\n\nexport enum SearchField {\n  key = 'key',\n  value = 'value'\n}\n\nexport interface SearchResultItem {\n  path: JSONPath\n  field: SearchField\n  fieldIndex: number\n  start: number\n  end: number\n}\n\nexport interface ExtendedSearchResultItem extends SearchResultItem {\n  active: boolean\n}\n\nexport type EscapeValue = (value: unknown) => string\n\nexport type UnescapeValue = (escapedValue: string) => string\n\nexport interface ValueNormalization {\n  escapeValue: EscapeValue\n  unescapeValue: UnescapeValue\n}\n\nexport type PastedJson = { contents: unknown; path: JSONPath } | undefined\n\nexport interface DragInsideProps {\n  json: unknown\n  selection: JSONSelection\n  deltaY: number\n  items: Array<{ path: JSONPath; height: number }>\n}\n\nexport type DragInsideAction =\n  | { beforePath: JSONPath; offset: number }\n  | { append: true; offset: number }\n\nexport interface RenderedItem {\n  path: JSONPath\n  height: number\n}\n\nexport interface HistoryItem {\n  undo: {\n    patch: JSONPatchDocument | undefined\n    json: unknown | undefined\n    text: string | undefined\n    state: DocumentState\n    textIsRepaired: boolean\n  }\n  redo: {\n    patch: JSONPatchDocument | undefined\n    json: unknown | undefined\n    text: string | undefined\n    state: DocumentState\n    textIsRepaired: boolean\n  }\n}\n\nexport type InsertType = 'value' | 'object' | 'array' | 'structure'\n\nexport interface PopupEntry {\n  id: number\n  component: typeof SvelteComponent<Record<string, unknown>>\n  props: Record<string, unknown>\n  options: AbsolutePopupOptions\n}\n\nexport interface AbsolutePopupOptions {\n  anchor?: Element\n  position?: 'top' | 'left'\n  left?: number\n  top?: number\n  width?: number\n  height?: number\n  offsetTop?: number\n  offsetLeft?: number\n  showTip?: boolean\n  closeOnOuterClick?: boolean\n  onClose?: () => void\n}\n\nexport interface AbsolutePopupContext {\n  openAbsolutePopup: (\n    component: typeof SvelteComponent<Record<string, unknown>>,\n    props: Record<string, unknown>,\n    options: AbsolutePopupOptions\n  ) => number\n  closeAbsolutePopup: (popupId: number | undefined) => void\n}\n\nexport interface JSONEditorPropsOptional {\n  content?: Content\n  readOnly?: boolean\n  indentation?: number | string\n  tabSize?: number\n  mode?: Mode\n  mainMenuBar?: boolean\n  navigationBar?: boolean\n  statusBar?: boolean\n  askToFormat?: boolean\n  escapeControlCharacters?: boolean\n  escapeUnicodeCharacters?: boolean\n  flattenColumns?: true\n  parser?: JSONParser\n  validator?: Validator | null\n  validationParser?: JSONParser\n  pathParser?: JSONPathParser\n\n  queryLanguages?: QueryLanguage[]\n  queryLanguageId?: string\n\n  onChangeQueryLanguage?: OnChangeQueryLanguage\n  onChange?: OnChange\n  onRenderValue?: OnRenderValue\n  onClassName?: OnClassName\n  onRenderMenu?: OnRenderMenu\n  onChangeMode?: OnChangeMode\n  onError?: OnError\n  onFocus?: OnFocus\n  onBlur?: OnBlur\n}\n\nexport interface JSONEditorContext {\n  readOnly: boolean\n  parser: JSONParser\n  normalization: ValueNormalization\n  getJson: () => unknown | undefined\n  getDocumentState: () => DocumentState\n  findElement: (path: JSONPath) => Element | null\n  findNextInside: FindNextInside\n  focus: () => void\n  onPatch: OnPatch\n  onSelect: OnJSONSelect\n  onFind: OnFind\n  onPasteJson: (newPastedJson: PastedJson) => void\n  onRenderValue: OnRenderValue\n}\n\nexport interface TreeModeContext extends JSONEditorContext {\n  getJson: () => unknown | undefined\n  getDocumentState: () => DocumentState\n  findElement: (path: JSONPath) => Element | null\n  onInsert: (type: InsertType) => void\n  onExpand: (path: JSONPath, expanded: boolean, recursive?: boolean) => void\n  onExpandSection: (path: JSONPath, section: Section) => void\n  onContextMenu: OnContextMenu\n  onClassName: OnClassName\n  onDrag: (event: MouseEvent) => void\n  onDragEnd: () => void\n}\n\nexport interface RenderValueProps {\n  path: JSONPath\n  value: unknown\n  readOnly: boolean\n  enforceString: boolean\n  selection: JSONSelection | null\n  searchResultItems: SearchResultItem[] | undefined\n  isEditing: boolean\n  parser: JSONParser\n  normalization: ValueNormalization\n  onPatch: OnPatch\n  onPasteJson: OnPasteJson\n  onSelect: OnJSONSelect\n  onFind: OnFind\n  findNextInside: FindNextInside\n  focus: () => void\n}\n\nexport type RenderValuePropsOptional = Partial<RenderValueProps>\n\nexport interface JSONNodeProp {\n  key: string\n  value: unknown\n  path: JSONPath\n  expandedMap: JSONPointerMap<boolean> | undefined\n  enforceStringMap: JSONPointerMap<boolean> | undefined\n  visibleSectionsMap: JSONPointerMap<VisibleSection[]> | undefined\n  validationErrorsMap: JSONPointerMap<NestedValidationError> | undefined\n  keySearchResultItemsMap: ExtendedSearchResultItem[] | undefined\n  valueSearchResultItemsMap: JSONPointerMap<ExtendedSearchResultItem[]> | undefined\n  selection: JSONSelection | null\n}\n\nexport interface JSONNodeItem {\n  index: number\n  value: unknown\n  path: JSONPath\n  expandedMap: JSONPointerMap<boolean> | undefined\n  enforceStringMap: JSONPointerMap<boolean> | undefined\n  visibleSectionsMap: JSONPointerMap<VisibleSection[]> | undefined\n  validationErrorsMap: JSONPointerMap<NestedValidationError> | undefined\n  searchResultItemsMap: JSONPointerMap<ExtendedSearchResultItem[]> | undefined\n  selection: JSONSelection | null\n}\n\nexport interface DraggingState {\n  initialTarget: Element\n  initialClientY: number\n  initialContentTop: number\n  selectionStartIndex: number\n  selectionItemsCount: number\n  items: RenderedItem[]\n  offset: number\n  didMoveItems: boolean\n}\n\nexport interface RenderValueComponentDescription {\n  component: typeof SvelteComponent<RenderValuePropsOptional>\n  props: Record<string, unknown>\n}\n\nexport interface TransformModalOptions {\n  id?: string\n  rootPath?: JSONPath\n  onTransform?: (state: {\n    operations: JSONPatchDocument\n    json: unknown\n    transformedJson: unknown\n  }) => void\n  onClose?: () => void\n}\n\nexport interface TransformModalCallback {\n  id: string\n  rootPath: JSONPath\n  json: unknown\n  onTransform: (operations: JSONPatchDocument) => void\n  onClose: () => void\n}\n\nexport interface SortModalCallback {\n  id: string\n  json: unknown\n  rootPath: JSONPath\n  onSort: OnSort\n  onClose: () => void\n}\n\nexport interface JSONEditorModalCallback {\n  content: Content\n  path: JSONPath\n  onPatch: OnPatch\n  onClose: () => void\n}\n\nexport enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n\nexport enum UpdateSelectionAfterChange {\n  no = 'no',\n  self = 'self',\n  nextInside = 'nextInside'\n}\n\nexport interface TableCellIndex {\n  rowIndex: number\n  columnIndex: number\n}\n\nexport interface SortedColumn {\n  path: JSONPath\n  sortDirection: SortDirection\n}\n\n// TODO: work out the JSONSchema type in detail.\n//  Ideally, we use use Schema from Ajv, but this interface isn't worked out either\nexport type JSONSchema = Record<string, unknown>\nexport type JSONSchemaDefinitions = Record<string, JSONSchema>\nexport type JSONSchemaEnum = Array<unknown>\n","import type { Section } from './types'\nimport { SortDirection } from './types.js'\n\nexport const SCROLL_DURATION = 300 // ms\nexport const DEBOUNCE_DELAY = 300 // ms\nexport const TEXT_MODE_ONCHANGE_DELAY = 300 // ms\nexport const SEARCH_UPDATE_THROTTLE = 300 // ms\nexport const AUTO_SCROLL_INTERVAL = 50 // ms\nexport const AUTO_SCROLL_SPEED_SLOW = 200 // pixels per second\nexport const AUTO_SCROLL_SPEED_NORMAL = 400 // pixels per second\nexport const AUTO_SCROLL_SPEED_FAST = 1200 // pixels per second\nexport const MAX_SEARCH_RESULTS = 1000\nexport const ARRAY_SECTION_SIZE = 100\nexport const MAX_VALIDATION_ERRORS = 100\nexport const MAX_CHARACTERS_TEXT_PREVIEW = 20000\nexport const MAX_INLINE_OBJECT_CHARS = 50\nexport const MAX_HEADER_NAME_CHARACTERS = 50\nexport const DEFAULT_VISIBLE_SECTIONS: Section[] = [{ start: 0, end: ARRAY_SECTION_SIZE }]\nexport const MAX_VALIDATABLE_SIZE = 100 * 1024 * 1024 // 1 MB\nexport const MAX_AUTO_REPAIRABLE_SIZE = 1024 * 1024 // 1 MB\nexport const MAX_DOCUMENT_SIZE_TEXT_MODE = 10 * 1024 * 1024 // 10 MB\nexport const MAX_DOCUMENT_SIZE_EXPAND_ALL = 10 * 1024 // 10 KB\n\nexport const SIMPLE_MODAL_OPTIONS = {\n  closeButton: false,\n  classBg: 'jse-modal-bg',\n  classWindow: 'jse-modal-window',\n  classWindowWrap: 'jse-modal-window-wrap',\n  classContent: 'jse-modal-container'\n}\n\nexport const SORT_MODAL_OPTIONS = {\n  ...SIMPLE_MODAL_OPTIONS,\n  classWindow: 'jse-modal-window jse-modal-window-sort'\n}\n\nexport const TRANSFORM_MODAL_OPTIONS = {\n  ...SIMPLE_MODAL_OPTIONS,\n  classWindow: 'jse-modal-window jse-modal-window-transform'\n}\n\nexport const JSONEDITOR_MODAL_OPTIONS = {\n  ...SIMPLE_MODAL_OPTIONS,\n  classWindow: 'jse-modal-window jse-modal-window-jsoneditor'\n}\n\nexport const INSERT_EXPLANATION =\n  'Insert or paste contents, ' +\n  'enter [ insert a new array, ' +\n  'enter { to insert a new object, ' +\n  'or start typing to insert a new value'\n\nexport const CONTEXT_MENU_EXPLANATION =\n  'Open context menu ' +\n  '(Click here, ' +\n  'right click on the selection, ' +\n  'or use the context menu button or Ctrl+Q)'\n\nexport const HOVER_INSERT_INSIDE = 'hover-insert-inside'\nexport const HOVER_INSERT_AFTER = 'hover-insert-after'\nexport const HOVER_COLLECTION = 'hover-collection'\n\nexport const JSON_STATUS_VALID = 'valid'\nexport const JSON_STATUS_REPAIRABLE = 'repairable'\nexport const JSON_STATUS_INVALID = 'invalid'\n\n// TODO: can we dynamically calculate the size?\nexport const CONTEXT_MENU_HEIGHT = (40 + 2) * 8 // px\nexport const CONTEXT_MENU_WIDTH = 260 // px\n\nexport const SORT_DIRECTION_NAMES = {\n  [SortDirection.asc]: 'ascending',\n  [SortDirection.desc]: 'descending'\n}\n","let id = 0\n\nexport function uniqueId(): number {\n  id++\n  return id\n}\n","export function int(value: string): number {\n  return parseInt(value, 10)\n}\n\nexport function isDigit(char: string): boolean {\n  return DIGIT_REGEX.test(char)\n}\n\nconst DIGIT_REGEX = /^[0-9]$/\n\n// TODO: unit test\nexport function isNumber(value: string): boolean {\n  return NUMBER_REGEX.test(value)\n}\n\nconst NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/\n","// TODO: unit test typeUtils.js\n\nimport { isNumber } from './numberUtils.js'\nimport type { JSONParser } from '../types.js'\n\n/**\n * Test whether a value is an Object (and not an Array or Class)\n */\nexport function isObject(value: unknown): value is Record<string, unknown> {\n  // note that we check constructor.name, not constructor === Object,\n  // so we can use objects created in a different JS realm like an iframe.\n  return typeof value === 'object' && value !== null && value.constructor.name === 'Object'\n}\n\n/**\n * Test whether a value is an Object or an Array (and not a Class)\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isObjectOrArray(value: unknown): value is Object | Array<unknown> {\n  // Note that we check constructor.name, not constructor === Object,\n  // so we can use objects created in a different JS realm like an iframe.\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    (value.constructor.name === 'Object' || value.constructor.name === 'Array')\n  )\n}\n\n/**\n * Test whether a value is a boolean\n *\n * @param {*} value\n * @return {boolean}\n */\nexport function isBoolean(value: unknown): value is boolean {\n  return value === true || value === false\n}\n\n/**\n * Test whether a value is a timestamp in milliseconds after the year 2000.\n */\nexport function isTimestamp(value: unknown): boolean {\n  const YEAR_2000 = 946684800000\n\n  if (typeof value === 'number') {\n    return (\n      value > YEAR_2000 &&\n      isFinite(value) &&\n      Math.floor(value) === value &&\n      !isNaN(new Date(value).valueOf())\n    )\n  }\n\n  if (typeof value === 'bigint') {\n    return isTimestamp(Number(value))\n  }\n\n  // try getting the primitive value if that is different. For example when having a LosslessNumber\n  try {\n    const valueOf = value ? value.valueOf() : value\n    if (valueOf !== value) {\n      return isTimestamp(valueOf)\n    }\n  } catch (err) {\n    return false\n  }\n\n  return false\n}\n\n/**\n * Get the applied color given a color name or code\n * Returns the color if the input is a valid color, and returns null otherwise.\n *\n * Example output:\n *\n *     'rgba(255,0,0,0.7)' or 'rgb(255,0,0)'\n *\n * Source: https://stackoverflow.com/questions/6386090/validating-css-color-names/33184805\n */\nexport function getColorCSS(color: string): string | null {\n  const div = window.document.createElement('div')\n\n  div.style.color = color\n\n  const applied = div.style.color\n  return applied !== '' ? applied.replace(/\\s+/g, '').toLowerCase() : null\n}\n\n/**\n * Test if a string contains a valid color name or code.\n * Returns true if a valid color, false otherwise\n */\nexport function isColor(value: unknown): boolean {\n  return typeof value === 'string' && !!getColorCSS(value)\n}\n\n/**\n * Get the type of the value\n */\nexport function valueType(value: unknown, parser: JSONParser): string {\n  // primitive types\n  if (\n    typeof value === 'number' ||\n    typeof value === 'string' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined'\n  ) {\n    return typeof value\n  }\n  if (typeof value === 'bigint') {\n    return 'number' // we return number here, not bigint: all numeric types should return the same name\n  }\n  if (value === null) {\n    return 'null'\n  }\n\n  if (Array.isArray(value)) {\n    return 'array'\n  }\n  if (isObject(value)) {\n    // plain object only\n    return 'object'\n  }\n\n  // unknown type (like a LosslessNumber). Try out what stringfying results in\n  const valueStr = parser.stringify(value)\n  if (valueStr && isNumber(valueStr)) {\n    return 'number'\n  }\n  if (valueStr === 'true' || valueStr === 'false') {\n    return 'boolean'\n  }\n  if (valueStr === 'null') {\n    return 'null'\n  }\n\n  return 'unknown'\n}\n\n/**\n * Test whether a text contains a url (matches when a string starts\n * with 'http://*' or 'https://*' and has no whitespace characters)\n */\nconst isUrlRegex = /^https?:\\/\\/\\S+$/\nexport function isUrl(text: unknown): boolean {\n  return typeof text === 'string' && isUrlRegex.test(text)\n}\n\n/**\n * Convert contents of a string to the correct JSON type. This can be a string,\n * a number, a boolean, etc\n */\nexport function stringConvert(str: string, parser: JSONParser): unknown {\n  if (str === '') {\n    return ''\n  }\n\n  const strTrim = str.trim()\n\n  if (strTrim === 'null') {\n    return null\n  }\n\n  if (strTrim === 'true') {\n    return true\n  }\n\n  if (strTrim === 'false') {\n    return false\n  }\n\n  if (isNumber(strTrim)) {\n    return parser.parse(strTrim)\n  }\n\n  return str\n}\n\n/**\n * Test whether a string contains a numeric, boolean, or null value.\n * Returns true when the string contains a number, boolean, or null.\n */\nexport function isStringContainingPrimitiveValue(str: unknown, parser: JSONParser): boolean {\n  return typeof str === 'string' && typeof stringConvert(str, parser) !== 'string'\n}\n\n/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value: string): boolean {\n  return INTEGER_REGEX.test(value)\n}\n\nconst INTEGER_REGEX = /^-?[0-9]+$/\n","import { isObject } from './typeUtils.js'\nimport type { JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer, parseJSONPointer } from 'immutable-json-patch'\nimport { isEqual } from 'lodash-es'\n\nconst MAX_ITEM_PATHS_COLLECTION = 10000\nconst ROOT_PATH: JSONPath = []\n\n/**\n * Comparator to sort an array in ascending order\n *\n * Usage:\n *     [4,2,5].sort(compareAsc)    // [2,4,5]\n */\nexport function compareAsc<T>(a: T, b: T): number {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\n/**\n * Comparator to sort an array in ascending order\n *\n * Usage:\n *     [4,2,5].sort(compareDesc)   // [5,4,2]\n */\nexport function compareDesc<T>(a: T, b: T): number {\n  return a > b ? -1 : a < b ? 1 : 0\n}\n\n/**\n * Test whether all items of an array are strictly equal\n */\nexport function strictShallowEqual<T>(a: Array<T>, b: Array<T>): boolean {\n  if (a.length !== b.length) {\n    return false\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function compareArrays<T>(a: Array<T>, b: Array<T>): number {\n  const minLength = Math.min(a.length, b.length)\n\n  for (let i = 0; i < minLength; i++) {\n    if (a[i] < b[i]) {\n      return -1\n    }\n\n    if (a[i] > b[i]) {\n      return 1\n    }\n  }\n\n  return a.length - b.length\n}\n\n/**\n * Get the paths of all nested properties in the items of an array\n * @param array\n * @param includeObjects If true, object and array paths are returned as well\n */\nexport function getNestedPaths(array: unknown, includeObjects = false): JSONPath[] {\n  const pointersMap: Record<string, boolean> = {}\n\n  if (!Array.isArray(array)) {\n    throw new TypeError('Array expected')\n  }\n\n  function recurseNestedPaths(obj: unknown, path: JSONPath) {\n    const isValue = !Array.isArray(obj) && !isObject(obj)\n\n    if (isValue || (includeObjects && path.length > 0)) {\n      pointersMap[compileJSONPointer(path)] = true\n    }\n\n    if (isObject(obj)) {\n      Object.keys(obj).forEach((key) => {\n        recurseNestedPaths(obj[key], path.concat(key))\n      })\n    }\n  }\n\n  const max = Math.min(array.length, MAX_ITEM_PATHS_COLLECTION)\n  for (let i = 0; i < max; i++) {\n    const item = array[i]\n    recurseNestedPaths(item, ROOT_PATH)\n  }\n\n  const pathsArray = Object.keys(pointersMap).sort()\n\n  return pathsArray.map(parseJSONPointer)\n}\n\n/**\n * Invoke the callback with\n * @param start   Included start index\n * @param end       Excluded end index. End must be larger or equal to start\n * @param iteratee\n */\n// TODO: write tests\nexport function forEachIndex(start: number, end: number, iteratee: (index: number) => void) {\n  if (end <= start) {\n    return\n  }\n\n  for (let index = start; index < end; index++) {\n    iteratee(index)\n  }\n}\n\n/**\n * Limit the number of items in an array\n */\n// TODO: write unit test\nexport function limit<T>(array: Array<T>, max: number): Array<T> {\n  return array.length > max ? array.slice(0, max) : array\n}\n\n/**\n * Convert an array into an object having the array indices as keys\n */\nexport function arrayToObject<T>(array: Array<T>): Record<number, T> {\n  return {\n    ...array\n  }\n}\n\n/**\n * Get the values of an object as an array\n */\nexport function objectToArray<T>(object: Record<string, T>): Array<T> {\n  return Object.values(object)\n}\n\n/**\n * Test whether an array starts with a sub array\n */\nexport function arrayStartsWith<T>(\n  array: T[],\n  searchArray: T[],\n  equal: (a: T, b: T) => boolean = isEqual\n): boolean {\n  for (let i = 0; i < searchArray.length; i++) {\n    if (!equal(array[i], searchArray[i])) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Move a set of items inside an array\n */\nexport function moveItems<T>(array: T[], index: number, count: number, offset: number): T[] {\n  // TODO: check boundaries: index+offset >= 0, index+offset+count<array.length, index+count<array.length, etc\n  const copy = array.slice(0)\n  const moving: T[] = copy.splice(index, count)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  copy.splice.apply(copy, [index + offset, 0, ...moving])\n  return copy\n}\n\n/**\n * Take samples out of a large array, equally spread from start till end\n */\nexport function forEachSample<T>(\n  array: T[],\n  maxSampleCount: number,\n  callback: (item: T, index: number, array: T[]) => void\n) {\n  if (array.length < maxSampleCount) {\n    array.forEach(callback)\n  } else {\n    const step = maxSampleCount > 1 ? (array.length - 1) / (maxSampleCount - 1) : array.length\n    for (let i = 0; i < maxSampleCount; i++) {\n      const index = Math.floor(i * step)\n      callback(array[index], index, array)\n    }\n  }\n}\n","import type { JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer } from 'immutable-json-patch'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport jsonSourceMap from 'json-source-map'\nimport { jsonrepair } from 'jsonrepair'\nimport { isObject, isObjectOrArray, valueType } from './typeUtils.js'\nimport { arrayToObject, objectToArray } from './arrayUtils.js'\nimport type {\n  Content,\n  JSONContent,\n  JSONParser,\n  ParseError,\n  TextContent,\n  TextLocation\n} from '../types'\nimport { int } from './numberUtils.js'\n\n/**\n * Parse the JSON. if this fails, try to repair and parse.\n * Throws an exception when the JSON is invalid and could not be parsed.\n */\nexport function parseAndRepair(jsonText: string, parser: JSONParser): unknown {\n  try {\n    return parser.parse(jsonText)\n  } catch (err) {\n    // this can also throw\n    return parser.parse(jsonrepair(jsonText))\n  }\n}\n\n/**\n * Parse the JSON and if needed repair it.\n * When not valid, undefined is returned.\n */\nexport function parseAndRepairOrUndefined(\n  partialJson: string,\n  parser: JSONParser\n): unknown | undefined {\n  try {\n    return parseAndRepair(partialJson, parser)\n  } catch (err) {\n    return undefined\n  }\n}\n\n// TODO: deduplicate the logic in repairPartialJson and parseAndRepairPartialJson ?\nexport function parsePartialJson(partialJson: string, parse: (text: string) => unknown): unknown {\n  // for now: dumb brute force approach: simply try out a few things...\n\n  // remove trailing comma\n  partialJson = partialJson.replace(END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX, '')\n\n  try {\n    return parse(partialJson)\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    return parse('[' + partialJson + ']')\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    return parse('{' + partialJson + '}')\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  throw new Error('Failed to parse partial JSON')\n}\n\n/**\n * Repair partial JSON\n */\nexport function repairPartialJson(partialJson: string): string {\n  // for now: dumb brute force approach: simply try out a few things...\n\n  // remove trailing comma\n  partialJson = partialJson.replace(END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX, '')\n\n  try {\n    return jsonrepair(partialJson)\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    const repaired = jsonrepair('[' + partialJson + ']')\n    return repaired.substring(1, repaired.length - 1) // remove the outer [...] again\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  try {\n    const repaired = jsonrepair('{' + partialJson + '}')\n    return repaired.substring(1, repaired.length - 1) // remove the outer {...} again\n  } catch (err) {\n    // we ignore the error on purpose\n  }\n\n  throw new Error('Failed to repair partial JSON')\n}\n\n// test whether a string ends with a comma, followed by zero or more white space characters\nconst END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX = /,\\s*$/\n\n/**\n * Normalize a parse error message like\n *     \"Unexpected token i in JSON at position 4\"\n * or\n *     \"JSON.parse: expected property name or '}' at line 2 column 3 of the JSON data\"\n * and return the line and column numbers in an object\n *\n * Note that the returned line and column number in the object are zero-based,\n * and in the message are one based (human-readable)\n */\nexport function normalizeJsonParseError(jsonText: string, parseErrorMessage: string): ParseError {\n  const positionMatch = POSITION_REGEX.exec(parseErrorMessage)\n\n  if (positionMatch) {\n    // a message from Chrome, like \"Unexpected token i in JSON at line 2 column 3\"\n    const position = int(positionMatch[2])\n\n    const line = countCharacterOccurrences(jsonText, '\\n', 0, position)\n    const lastIndex = jsonText.lastIndexOf('\\n', position)\n    const column = position - lastIndex - 1\n\n    return {\n      position,\n      line,\n      column,\n      message: parseErrorMessage.replace(POSITION_REGEX, () => {\n        return `line ${line + 1} column ${column + 1}`\n      })\n    }\n  } else {\n    // a message from Firefox, like \"JSON.parse: expected property name or '}' at line 2 column 3 of the JSON data\"\n    const lineMatch = LINE_REGEX.exec(parseErrorMessage)\n    const lineOneBased = lineMatch ? int(lineMatch[1]) : null\n    const line = lineOneBased !== null ? lineOneBased - 1 : null\n\n    const columnMatch = COLUMN_REGEX.exec(parseErrorMessage)\n    const columnOneBased = columnMatch ? int(columnMatch[1]) : null\n    const column = columnOneBased !== null ? columnOneBased - 1 : null\n\n    const position =\n      line !== null && column !== null ? calculatePosition(jsonText, line, column) : null\n\n    // line and column are one based in the message\n    return {\n      position,\n      line,\n      column,\n      message: parseErrorMessage.replace(/^JSON.parse: /, '').replace(/ of the JSON data$/, '')\n    }\n  }\n}\n\n/**\n * Calculate the position in the text based on a line and column number\n * @param text\n * @param line     Zero-based line number\n * @param column   Zero-based column number\n */\nexport function calculatePosition(text: string, line: number, column: number): number | null {\n  let index = text.indexOf('\\n')\n  let i = 1\n\n  while (i < line && index !== -1) {\n    index = text.indexOf('\\n', index + 1)\n    i++\n  }\n\n  return index !== -1\n    ? index + column + 1 // +1 for the return character itself\n    : null\n}\n\nexport function countCharacterOccurrences(\n  text: string,\n  character: string,\n  start = 0,\n  end = text.length\n) {\n  let count = 0\n\n  for (let i = start; i < end; i++) {\n    if (text.charAt(i) === character) {\n      count++\n    }\n  }\n\n  return count\n}\n\n/**\n * Find the text location of a JSON path\n */\n// TODO: write unit tests\nexport function findTextLocation(text: string, path: JSONPath): TextLocation {\n  try {\n    const jsmap = jsonSourceMap.parse(text)\n\n    const pointerName = compileJSONPointer(path)\n    const pointer = jsmap.pointers[pointerName]\n    if (pointer) {\n      return {\n        path,\n        line: pointer.key ? pointer.key.line : pointer.value ? pointer.value.line : 0,\n        column: pointer.key ? pointer.key.column : pointer.value ? pointer.value.column : 0,\n        from: pointer.key ? pointer.key.pos : pointer.value ? pointer.value.pos : 0,\n        to: pointer.keyEnd ? pointer.keyEnd.pos : pointer.valueEnd ? pointer.valueEnd.pos : 0\n      }\n    }\n  } catch (err) {\n    console.error(err)\n  }\n\n  return {\n    path,\n    line: 0,\n    column: 0,\n    from: 0,\n    to: 0\n  }\n}\n\n/**\n * Convert a JSON object, array, or value to another type\n * If it cannot be converted, an error is thrown\n */\nexport function convertValue(\n  value: unknown,\n  type: 'value' | 'object' | 'array',\n  parser: JSONParser\n): unknown {\n  // FIXME: improve the TypeScript here, there are a couple of conversions\n  if (type === 'array') {\n    if (Array.isArray(value)) {\n      // nothing to do\n      return value\n    }\n\n    if (isObject(value)) {\n      return objectToArray(value)\n    }\n\n    if (typeof value === 'string') {\n      try {\n        const parsedValue = parser.parse(value)\n\n        if (Array.isArray(parsedValue)) {\n          return parsedValue\n        }\n\n        if (isObject(parsedValue)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          return objectToArray(parsedValue)\n        }\n      } catch (e) {\n        //we could not parse the string, so we return the string as the first key of the array\n        return [value]\n      }\n    }\n\n    //all other cases, we return the value as the first key of the array, same as the parsing error under the string case\n    return [value]\n  }\n\n  if (type === 'object') {\n    if (Array.isArray(value)) {\n      return arrayToObject(value)\n    }\n\n    if (isObject(value)) {\n      // nothing to do\n      return value\n    }\n\n    if (typeof value === 'string') {\n      try {\n        const parsedValue = parser.parse(value)\n\n        if (isObject(parsedValue)) {\n          return parsedValue\n        }\n\n        if (Array.isArray(parsedValue)) {\n          return arrayToObject(parsedValue)\n        }\n      } catch (e) {\n        //we could not parse the string, so we return the string as the first value of the object with key 'value'\n        return { value: value }\n      }\n    }\n\n    //all other cases, we return the value keyed under \"value\", same as the parsing error under the string case\n    return { value: value }\n  }\n\n  if (type === 'value') {\n    if (isObjectOrArray(value)) {\n      return parser.stringify(value)\n    }\n\n    // nothing to do\n    return value\n  }\n\n  throw new Error(`Cannot convert ${valueType(value, parser)} to ${type}`)\n}\n\n/**\n * Check whether provided value is valid a content type for JSONEditor\n * Returns a string with validation error message when there is an issue,\n * or null otherwise\n */\nexport function validateContentType(content: unknown): string | null {\n  if (!isObject(content)) {\n    return 'Content must be an object'\n  }\n\n  if (content.json !== undefined) {\n    if (content.text !== undefined) {\n      return 'Content must contain either a property \"json\" or a property \"text\" but not both'\n    } else {\n      return null\n    }\n  } else {\n    if (content.text === undefined) {\n      return 'Content must contain either a property \"json\" or a property \"text\"'\n    } else if (typeof content.text !== 'string') {\n      return (\n        'Content \"text\" property must be a string containing a JSON document. ' +\n        'Did you mean to use the \"json\" property instead?'\n      )\n    } else {\n      return null\n    }\n  }\n}\n\n/**\n * Check whether a value is Content (TextContent or JSONContent)\n */\nexport function isContent(content: unknown): content is Content {\n  return (\n    isObject(content) && (typeof content.json !== 'undefined' || typeof content.text === 'string')\n  )\n}\n\n/**\n * Check whether content contains text (and not JSON)\n */\nexport function isTextContent(content: unknown): content is TextContent {\n  return isObject(content) && typeof content.text === 'string'\n}\n\n/**\n * Check whether content contains json\n */\nexport function isJSONContent(content: unknown): content is JSONContent {\n  return isObject(content) && typeof content.json !== 'undefined'\n}\n\n/**\n * Convert Content into TextContent if it is JSONContent, else leave it as is\n */\nexport function toTextContent(\n  content: Content,\n  indentation: number | string | undefined = undefined,\n  parser: JSONParser = JSON\n): TextContent {\n  return isTextContent(content)\n    ? content\n    : { text: parser.stringify(content.json, null, indentation) as string }\n}\n\n/**\n * Convert Content into TextContent if it is JSONContent, else leave it as is\n * @throws {SyntaxError} Will throw a parse error when the text contents does not contain valid JSON\n */\nexport function toJSONContent(content: Content, parser: JSONParser = JSON): JSONContent {\n  return isJSONContent(content) ? content : { json: parser.parse(content.text) }\n}\n\n/**\n * Get the contents as Text. If the contents is JSON, the JSON will be parsed.\n */\nexport function getText(content: Content, indentation: number | string, parser: JSONParser) {\n  return toTextContent(content, indentation, parser).text\n}\n\n/**\n * Returns true when the (estimated) size of the contents exceeds the\n * provided maxSize.\n * @param content\n * @param maxSize  Maximum content size in bytes\n */\nexport function isLargeContent(content: Content, maxSize: number): boolean {\n  return estimateSerializedSize(content, maxSize) > maxSize\n}\n\n/**\n * A rough, fast estimation on whether a document is larger than given size\n * when serialized.\n *\n * maxSize is an optional max size in bytes. When reached, size estimation will\n * be cancelled. This is useful when you're only interested in knowing whether\n * the size exceeds a certain maximum size.\n */\nexport function estimateSerializedSize(content: Content, maxSize = Infinity): number {\n  if (isTextContent(content)) {\n    return content.text.length\n  }\n\n  const json = content.json\n\n  let estimatedSize = 0\n\n  function recurse(json: unknown) {\n    if (Array.isArray(json)) {\n      // open and close bracket, commas between items\n      estimatedSize += 2 + (json.length - 1)\n\n      if (estimatedSize > maxSize) {\n        return estimatedSize\n      }\n\n      for (let i = 0; i < json.length; i++) {\n        const item = json[i]\n\n        recurse(item)\n\n        if (estimatedSize > maxSize) {\n          return estimatedSize\n        }\n      }\n    } else if (isObject(json)) {\n      const keys = Object.keys(json)\n\n      // open and close brackets, separators between all keys and values, comma's between key/value pairs\n      estimatedSize += 2 + keys.length + (keys.length - 1)\n\n      for (let k = 0; k < keys.length; k++) {\n        const key = keys[k]\n        const value = json[key]\n\n        // key length and double quotes around it\n        estimatedSize += key.length + 2\n\n        recurse(value)\n      }\n    } else if (typeof json === 'string') {\n      estimatedSize += json.length + 2 // string length plus two for the double quote characters\n    } else {\n      // true, false, null, number\n      estimatedSize += String(json).length\n    }\n  }\n\n  recurse(json)\n\n  return estimatedSize\n}\n\nconst POSITION_REGEX = /(position|char) (\\d+)/\nconst LINE_REGEX = /line (\\d+)/\nconst COLUMN_REGEX = /column (\\d+)/\n\n/**\n * Check whether the actual functions of parse and stringify are strictly equal.\n * The object holding the functions may be a differing instance.\n */\nexport function isEqualParser(a: JSONParser, b: JSONParser): boolean {\n  return a.parse === b.parse && a.stringify === b.stringify\n}\n\n/**\n * Apply a fast and cheap heuristic to determine whether the content needs formatting (i.e. is compact).\n */\nexport function needsFormatting(jsonText: string): boolean {\n  // the check for the length>2 is because an empty array or object does not need formatting\n  return NEEDS_FORMATTING_REGEX.test(jsonText) && jsonText.length > 2\n}\n\n// regex that matches the start of an object or array, followed by a non-whitespace character\nconst NEEDS_FORMATTING_REGEX = /^[[{]\\S/\n","import type { ValueNormalization } from '$lib/types.js'\nimport { SelectionType } from '$lib/types.js'\nimport type { JSONPath } from 'immutable-json-patch'\nimport { compileJSONPointer, parseJSONPointer } from 'immutable-json-patch'\nimport { map, minBy } from 'lodash-es'\n\n/**\n * Create serialization functions to escape and stringify text,\n * and the other way around: to parse and unescape text.\n */\nexport function createNormalizationFunctions({\n  escapeControlCharacters,\n  escapeUnicodeCharacters\n}: {\n  escapeControlCharacters: boolean\n  escapeUnicodeCharacters: boolean\n}): ValueNormalization {\n  if (escapeControlCharacters) {\n    if (escapeUnicodeCharacters) {\n      return normalizeControlAndUnicode\n    } else {\n      return normalizeControl\n    }\n  } else {\n    if (escapeUnicodeCharacters) {\n      return normalizeUnicode\n    } else {\n      return normalizeNothing\n    }\n  }\n}\n\nconst normalizeControlAndUnicode = {\n  escapeValue: (value: unknown) => jsonEscapeUnicode(jsonEscapeControl(String(value))),\n  unescapeValue: (value: string) => jsonUnescapeControl(jsonUnescapeUnicode(value))\n}\n\nconst normalizeControl = {\n  escapeValue: (value: unknown) => jsonEscapeControl(String(value)),\n  unescapeValue: (value: string) => jsonUnescapeControl(value)\n}\n\nconst normalizeUnicode = {\n  escapeValue: (value: unknown) => jsonEscapeUnicode(String(value)),\n  unescapeValue: (value: string) => jsonUnescapeUnicode(value)\n}\n\nconst normalizeNothing = {\n  escapeValue: (value: unknown) => String(value),\n  unescapeValue: (value: string) => value\n}\n\n/**\n * Source:  https://stackoverflow.com/questions/12271547/shouldnt-json-stringify-escape-unicode-characters\n */\nexport function jsonEscapeUnicode(value: string): string {\n  return value.replace(/[^\\x20-\\x7F]/g, (x) => {\n    if (x === '\\b' || x === '\\f' || x === '\\n' || x === '\\r' || x === '\\t') {\n      return x\n    }\n\n    return '\\\\u' + ('000' + x.codePointAt(0)?.toString(16)).slice(-4)\n  })\n}\n\nexport function jsonUnescapeUnicode(value: string): string {\n  return value.replace(/\\\\u[a-fA-F0-9]{4}/g, (x) => {\n    try {\n      const unescaped: string = JSON.parse('\"' + x + '\"')\n      // the resolved character can be a control character like \" or \\n,\n      // that would result in invalid JSON, so we need to keep that escaped\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return controlCharacters[unescaped] || unescaped\n    } catch (err) {\n      return x\n    }\n  })\n}\n\nconst controlCharacters = {\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // escaped forward slash '\\/' is the same as '/', we can't escape/unescape it\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t'\n  // unicode is handled separately\n}\n\nconst escapedControlCharacters = {\n  '\\\\\"': '\"',\n  '\\\\\\\\': '\\\\',\n  // escaped forward slash '\\/' is the same as '/', we can't escape/unescape it\n  '\\\\/': '/',\n  '\\\\b': '\\b',\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t'\n  // unicode is handled separately\n}\n\nexport function jsonEscapeControl(value: string): string {\n  return value.replace(/[\"\\b\\f\\n\\r\\t\\\\]/g, (x) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return controlCharacters[x] || x\n  })\n}\n\nexport function jsonUnescapeControl(value: string): string {\n  return value.replace(/\\\\[\"bfnrt\\\\]/g, (x) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return escapedControlCharacters[x] || x\n  })\n}\n\nexport function addNewLineSuffix(value: unknown): string {\n  if (typeof value !== 'string') {\n    return String(value)\n  }\n\n  if (value.endsWith('\\n')) {\n    // DOM innerText strips the last \\n, therefore we add an extra \\n here\n    return value + '\\n'\n  }\n\n  return value\n}\n\n/**\n * Remove a newline suffix from text returned by element.innerText, it adds\n * one return too much.\n */\nexport function removeNewLineSuffix(text: string): string {\n  return text.replace(/\\n$/, '')\n}\n\n// regular expression matching one or multiple return characters with all their\n// enclosing white spaces\nexport function removeReturnsAndSurroundingWhitespace(text: string): string {\n  return text.replace(/(\\b|^)\\s*(\\b|$)/g, (match) => {\n    return /\\n/.exec(match) ? '' : match\n  })\n}\n\nexport function isChildOfNodeName(element: Element, nodeName: string): boolean {\n  return isChildOf(element, (e) => e.nodeName.toUpperCase() === nodeName.toUpperCase())\n}\n\nexport function isChildOfAttribute(element: Element, name: string, value: string): boolean {\n  return isChildOf(element, (e) => hasAttribute(e, name, value))\n}\n\n// test whether a DOM element is a content editable div\nexport function isContentEditableDiv(element: HTMLElement): boolean {\n  return element.nodeName === 'DIV' && element.contentEditable === 'true'\n}\n\n// test whether a DOM element is an \"input\" with type \"text\"\nexport function isTextInput(element: HTMLInputElement): boolean {\n  return (\n    element.nodeName === 'INPUT' &&\n    element.type !== undefined &&\n    element.type.toLowerCase() === 'text'\n  )\n}\n\nfunction hasAttribute(element: Element, name: string, value: string): boolean {\n  return typeof element.getAttribute === 'function' && element.getAttribute(name) === value\n}\n\n/**\n * Test if the element or one of its parents has a certain predicate\n * Can be use for example to check whether the element or it's parent has\n * a specific attribute or nodeName.\n */\nexport function isChildOf(element: Element, predicate: (element: Element) => boolean): boolean {\n  return !!findParent(element, predicate)\n}\n\n/**\n * Test if the element or one of its parents has a certain predicate\n * Can be use for example to check whether the element or it's parent has\n * a specific attribute or nodeName.\n * @param {HTMLElement} element\n * @param {function (element: HTMLElement) : boolean} predicate\n * @returns {HTMLElement | undefined}\n */\nexport function findParent(\n  element: Element,\n  predicate: (element: Element) => boolean\n): Element | undefined {\n  let e: Element | null = element\n\n  while (e && !predicate(e)) {\n    e = e.parentNode as Element\n  }\n\n  return e || undefined\n}\n\n/**\n * Set the cursor to the end of a content editable div\n * Source: https://stackoverflow.com/questions/13513329/set-cursor-to-the-end-of-contenteditable-div\n * @param {HTMLElement} element\n */\nexport function setCursorToEnd(element: HTMLElement) {\n  if (element.firstChild == null) {\n    element.focus()\n    return\n  }\n\n  const range = document.createRange()\n  const selection = window.getSelection()\n  range.setStart(element, 1)\n  range.collapse(true)\n  selection?.removeAllRanges()\n  selection?.addRange(range)\n}\n\n/**\n * Insert (append or replace) the text contents of the current active element\n */\nexport function insertActiveElementContents(\n  container: HTMLElement,\n  text: string,\n  replaceContents: boolean,\n  onActiveElement?: (activeElement: HTMLElement) => void\n) {\n  const window = getWindow(container)\n  if (!window) {\n    return\n  }\n\n  const activeElement: HTMLElement | null = window.document.activeElement\n    ? (window.document.activeElement as HTMLElement)\n    : null\n\n  if (activeElement && activeElement.isContentEditable) {\n    activeElement.textContent = replaceContents ? text : activeElement.textContent + text\n    setCursorToEnd(activeElement)\n    if (onActiveElement) {\n      onActiveElement(activeElement)\n    }\n  }\n}\n\n/**\n * Gets a DOM element's Window.  This is normally just the global `window`\n * variable, but if we opened a child window, it may be different.\n */\nexport function getWindow(element: Element): Window | null {\n  return element && element.ownerDocument ? element.ownerDocument.defaultView : null\n}\n\nexport function activeElementIsChildOf(element: Element) {\n  const window = getWindow(element)\n  const activeElement = window?.document.activeElement\n  return activeElement ? isChildOf(activeElement, (e) => e === element) : false\n}\n\n/**\n * Traverse over the parents of the element until a node is found with the\n * searched for node name. If the element itself contains the nodeName, the\n * element itself will be returned\n */\nexport function findParentWithNodeName(element: Element, nodeName: string): Element | undefined {\n  return findParent(element, (e) => e.nodeName === nodeName)\n}\n\nexport function getSelectionTypeFromTarget(target: Element): SelectionType {\n  if (isChildOfAttribute(target, 'data-type', 'selectable-key')) {\n    return SelectionType.key\n  }\n\n  if (isChildOfAttribute(target, 'data-type', 'selectable-value')) {\n    return SelectionType.value\n  }\n\n  if (isChildOfAttribute(target, 'data-type', 'insert-selection-area-inside')) {\n    return SelectionType.inside\n  }\n\n  if (isChildOfAttribute(target, 'data-type', 'insert-selection-area-after')) {\n    return SelectionType.after\n  }\n\n  return SelectionType.multi\n}\n\n/**\n * Encode a path into a string that can be used as attribute in HTML\n */\nexport function encodeDataPath(path: JSONPath): string {\n  return encodeURIComponent(compileJSONPointer(path))\n}\n\n/**\n * Decode a path that was stringified for use as an HTML attribute\n */\nexport function decodeDataPath(pathStr: string): JSONPath {\n  return parseJSONPointer(decodeURIComponent(pathStr))\n}\n\n/**\n * Find the data path of the given element. Traverses the parent nodes until find\n */\nexport function getDataPathFromTarget(target: Element): JSONPath | null {\n  const parent = findParent(target, (element) => {\n    return element?.hasAttribute ? element.hasAttribute('data-path') : false\n  })\n\n  const dataPath = parent?.getAttribute('data-path')\n  return dataPath ? decodeDataPath(dataPath) : null\n}\n\n/**\n * Find the nearest element in a given context menu with buttons or inputs\n */\n// TODO: unit test\nexport function findNearestElement<T extends Element>({\n  allElements,\n  currentElement,\n  direction,\n  hasPrio = () => true,\n  margin = 10\n}: {\n  allElements: T[]\n  currentElement: T\n  direction: 'Up' | 'Down' | 'Left' | 'Right'\n  margin?: number\n  hasPrio?: (element: T) => boolean\n}): T | undefined {\n  const all = map(allElements.filter(isVisible), calculateCenter)\n  const current = calculateCenter(currentElement)\n\n  interface CenterLocation {\n    x: number\n    y: number\n    rect: DOMRect\n    element: T\n  }\n\n  function isVisible(element: T): boolean {\n    const rect = element.getBoundingClientRect()\n    return rect.width > 0 && rect.height > 0\n  }\n\n  function calculateCenter(element: T): CenterLocation {\n    const rect = element.getBoundingClientRect()\n    return {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n      rect,\n      element\n    }\n  }\n\n  const isOnSameRow = (a: CenterLocation, b: CenterLocation) => Math.abs(a.y - b.y) < margin\n  const isLeft = (a: CenterLocation, b: CenterLocation) => a.rect.left + margin < b.rect.left\n  const isRight = (a: CenterLocation, b: CenterLocation) => a.rect.right > b.rect.right + margin\n  const isAbove = (a: CenterLocation, b: CenterLocation) => a.y + margin < b.y\n  const isBelow = (a: CenterLocation, b: CenterLocation) => a.y > b.y + margin\n\n  function distance(a: CenterLocation, b: CenterLocation, weightY = 1): number {\n    const diffX = a.x - b.x\n    const diffY = (a.y - b.y) * weightY\n    return Math.sqrt(diffX * diffX + diffY * diffY)\n  }\n  const distanceToCurrent = (candidate: CenterLocation) => distance(candidate, current)\n  const distanceToCurrentWeighted = (candidate: CenterLocation) => distance(candidate, current, 10)\n\n  if (direction === 'Left' || direction === 'Right') {\n    // First we find the first button left from the current button on the same row\n    // if not found, search the closest button left/right from current button\n    const candidatesLeft =\n      direction === 'Left'\n        ? all.filter((button) => isLeft(button, current))\n        : all.filter((button) => isRight(button, current))\n    const candidatesLeftOnRow = candidatesLeft.filter((button) => isOnSameRow(button, current))\n    const nearest =\n      minBy(candidatesLeftOnRow, distanceToCurrent) ||\n      minBy(candidatesLeft, distanceToCurrentWeighted)\n\n    return nearest?.element\n  }\n\n  if (direction === 'Up' || direction === 'Down') {\n    // first we only search through the prio buttons\n    // if there were no matching prio buttons, search all matching buttons\n    const candidates =\n      direction === 'Up'\n        ? all.filter((button) => isAbove(button, current))\n        : all.filter((button) => isBelow(button, current))\n    const prioCandidates = candidates.filter((button) => hasPrio(button.element))\n    const nearest = minBy(prioCandidates, distanceToCurrent) || minBy(candidates, distanceToCurrent)\n\n    return nearest?.element\n  }\n\n  return undefined\n}\n\nexport interface EditableDivElement extends HTMLDivElement {\n  refresh: () => void\n  cancel: () => void\n}\n\nexport function isEditableDivRef(element: Element | null): element is EditableDivElement {\n  return (\n    !!element &&\n    element.nodeName === 'DIV' &&\n    typeof (element as unknown as Record<string, unknown>).refresh === 'function' &&\n    typeof (element as unknown as Record<string, unknown>).cancel === 'function'\n  )\n}\n","// inspiration: https://github.com/andrepolischuk/keycomb\n\n// KeyComboEvent is a subset of KeyboardEvent\nexport interface KeyComboEvent {\n  ctrlKey?: boolean\n  metaKey?: boolean\n  altKey?: boolean\n  shiftKey?: boolean\n  key: string\n}\n\n/**\n * Get the active key combination from a keyboard event.\n * For example returns \"Ctrl+Shift+ArrowUp\" or \"Ctrl+A\"\n *\n * Returns the same output on both Windows and Mac:\n * meta keys \"Ctrl\" (\"Command\" on Mac), and \"Alt\" (\"Alt\" or \"Option\" on Mac)\n * So pressing \"Command\" and \"A\"on Mac will return \"Ctrl+A\"\n */\nexport function keyComboFromEvent(event: KeyComboEvent, separator = '+'): string {\n  const combi = []\n\n  if (event.ctrlKey) {\n    // Control on Windows\n    combi.push('Ctrl')\n  }\n  if (event.metaKey) {\n    // Command on Mac\n    combi.push('Ctrl')\n  }\n  if (event.altKey) {\n    // on Mac this is called Option\n    combi.push('Alt')\n  }\n  if (event.shiftKey) {\n    combi.push('Shift')\n  }\n\n  const keyName = event.key.length === 1 ? event.key.toUpperCase() : event.key\n  if (!(keyName in metaKeys)) {\n    // prevent output like 'Ctrl+Ctrl'\n    combi.push(keyName)\n  }\n\n  return combi.join(separator)\n}\n\nconst metaKeys = {\n  Ctrl: true,\n  Command: true,\n  Control: true,\n  Alt: true,\n  Option: true,\n  Shift: true\n}\n","<script lang=\"ts\">\n  import type { AbsolutePopupOptions, PopupEntry } from '$lib/types.js'\n  import { onMount } from 'svelte'\n  import { isChildOf } from '$lib/utils/domUtils.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n\n  export let popup: PopupEntry\n  export let closeAbsolutePopup: (popupId: number) => void\n\n  let refRootPopup: HTMLDivElement\n  let refHiddenInput: HTMLInputElement\n\n  onMount(focus)\n\n  function closeWhenOutside(event: Event) {\n    if (\n      popup.options &&\n      popup.options.closeOnOuterClick &&\n      !isChildOf(event.target as HTMLElement, (e) => e === refRootPopup)\n    ) {\n      closeAbsolutePopup(popup.id)\n    }\n  }\n\n  function handleWindowMouseDown(event: Event) {\n    closeWhenOutside(event)\n  }\n\n  function handleMouseDownInside(event: Event) {\n    event.stopPropagation()\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    if (combo === 'Escape') {\n      closeAbsolutePopup(popup.id)\n    }\n  }\n\n  function handleScrollWheel(event: Event) {\n    closeWhenOutside(event)\n  }\n\n  function calculateStyle(refRootPopup: HTMLDivElement, options: AbsolutePopupOptions) {\n    function calculatePosition() {\n      if (options.anchor) {\n        const { anchor, width = 0, height = 0, offsetTop = 0, offsetLeft = 0, position } = options\n        const { left, top, bottom, right } = anchor.getBoundingClientRect()\n\n        const positionAbove =\n          position === 'top' || (top + height > window.innerHeight && top > height)\n        const positionLeft =\n          position === 'left' || (left + width > window.innerWidth && left > width)\n\n        return {\n          left: positionLeft ? right - offsetLeft : left + offsetLeft,\n          top: positionAbove ? top - offsetTop : bottom + offsetTop,\n          positionAbove,\n          positionLeft\n        }\n      } else if (typeof options.left === 'number' && typeof options.top === 'number') {\n        const { left, top, width = 0, height = 0 } = options\n\n        const positionAbove = top + height > window.innerHeight && top > height\n        const positionLeft = left + width > window.innerWidth && left > width\n\n        return {\n          left,\n          top,\n          positionAbove,\n          positionLeft\n        }\n      } else {\n        throw new Error('Invalid config: pass either \"left\" and \"top\", or pass \"anchor\"')\n      }\n    }\n\n    const rootRect = refRootPopup.getBoundingClientRect()\n    const { left, top, positionAbove, positionLeft } = calculatePosition()\n\n    const verticalStyling = positionAbove\n      ? `bottom: ${rootRect.top - top}px;`\n      : `top: ${top - rootRect.top}px;`\n\n    const horizontalStyling = positionLeft\n      ? `right: ${rootRect.left - left}px;`\n      : `left: ${left - rootRect.left}px;`\n\n    return verticalStyling + horizontalStyling\n  }\n\n  function focus() {\n    if (refHiddenInput) {\n      refHiddenInput.focus()\n    }\n  }\n</script>\n\n<svelte:window\n  on:mousedown|capture={handleWindowMouseDown}\n  on:keydown|capture={handleKeyDown}\n  on:wheel|capture={handleScrollWheel}\n/>\n\n<div\n  role=\"none\"\n  bind:this={refRootPopup}\n  class=\"jse-absolute-popup\"\n  on:mousedown={handleMouseDownInside}\n  on:keydown={handleKeyDown}\n>\n  {#if refRootPopup}\n    <div class=\"jse-absolute-popup-content\" style={calculateStyle(refRootPopup, popup.options)}>\n      <input\n        type=\"text\"\n        readonly\n        tabindex=\"-1\"\n        class=\"jse-hidden-input\"\n        bind:this={refHiddenInput}\n      />\n      <svelte:component this={popup.component} {...popup.props} />\n    </div>\n  {/if}\n</div>\n\n<style src=\"./AbsolutePopupEntry.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { createDebug } from '$lib/utils/debug.js'\n  import { setContext, SvelteComponent } from 'svelte'\n  import type { AbsolutePopupOptions, PopupEntry, AbsolutePopupContext } from '$lib/types'\n  import { uniqueId } from '$lib/utils/uniqueId.js'\n  import AbsolutePopupEntry from './AbsolutePopupEntry.svelte'\n\n  const debug = createDebug('jsoneditor:AbsolutePopup')\n\n  let popups: PopupEntry[] = []\n\n  function openAbsolutePopup(\n    component: typeof SvelteComponent<Record<string, unknown>>,\n    props: Record<string, unknown>,\n    options: AbsolutePopupOptions\n  ): number {\n    debug('open...', props, options)\n\n    const popup: PopupEntry = {\n      id: uniqueId(),\n      component: component,\n      props: props || {},\n      options: options || {}\n    }\n\n    popups = [...popups, popup]\n\n    return popup.id\n  }\n\n  function closeAbsolutePopup(popupId: number | undefined) {\n    const popupIndex = popups.findIndex((popup) => popup.id === popupId)\n\n    if (popupIndex !== -1) {\n      const popup = popups[popupIndex]\n      if (popup.options.onClose) {\n        popup.options.onClose()\n      }\n\n      popups = popups.filter((popup) => popup.id !== popupId)\n    }\n  }\n\n  $: debug('popups', popups)\n\n  setContext<AbsolutePopupContext>('absolute-popup', { openAbsolutePopup, closeAbsolutePopup })\n</script>\n\n{#each popups as popup}\n  <AbsolutePopupEntry {popup} {closeAbsolutePopup} />\n{/each}\n\n<slot />\n","import { isEmpty, memoize } from 'lodash-es'\nimport type { JSONPath } from 'immutable-json-patch'\nimport type { PathOption } from '$lib/types.js'\n\n/**\n **\n * Stringify an array with a path like ['items', '3', 'name'] into string like 'items[3].name'\n * Note that we allow all characters in a property name, like \"item with spaces[3].name\",\n * so this path is not usable as-is in JavaScript.\n */\nexport function stringifyJSONPath(path: JSONPath): string {\n  return path\n    .map((p, index) => {\n      return integerNumberRegex.test(p)\n        ? '[' + p + ']'\n        : /[.[\\]]/.test(p) || p === '' // match any character . or [ or ] and handle an empty string\n          ? '[\"' + escapeQuotes(p) + '\"]'\n          : (index > 0 ? '.' : '') + p\n    })\n    .join('')\n}\n\nfunction escapeQuotes(prop: string): string {\n  return prop.replace(/\"/g, '\\\\\"')\n}\n\n/**\n * Parse a JSON path like 'items[3].name' into a path like ['items', '3', 'name']\n */\nexport function parseJSONPath(pathStr: string): JSONPath {\n  const path: JSONPath = []\n  let i = 0\n\n  while (i < pathStr.length) {\n    if (pathStr[i] === '.') {\n      i++\n    }\n\n    if (pathStr[i] === '[') {\n      i++\n\n      if (pathStr[i] === '\"') {\n        i++\n        path.push(parseProp((c) => c === '\"', true))\n        eatCharacter('\"')\n      } else {\n        path.push(parseProp((c) => c === ']'))\n      }\n\n      eatCharacter(']')\n    } else {\n      path.push(parseProp((c) => c === '.' || c === '['))\n    }\n  }\n\n  function parseProp(isEnd: (char: string) => boolean, unescape = false) {\n    let prop = ''\n\n    while (i < pathStr.length && !isEnd(pathStr[i])) {\n      if (unescape && pathStr[i] === '\\\\' && pathStr[i + 1] === '\"') {\n        // escaped double quote\n        prop += '\"'\n        i += 2\n      } else {\n        prop += pathStr[i]\n        i++\n      }\n    }\n\n    return prop\n  }\n\n  function eatCharacter(char: string) {\n    if (pathStr[i] !== char) {\n      throw new SyntaxError(`Invalid JSON path: ${char} expected at position ${i}`)\n    }\n    i++\n  }\n\n  return path\n}\n\n/**\n * Convert a JSONPath into an option for use in a select box\n */\nexport function pathToOption(path: JSONPath): PathOption {\n  return {\n    value: path,\n    label: isEmpty(path) ? '(item root)' : stringifyJSONPath(path)\n  }\n}\n\n/**\n * Stringify a JSON path into a lodash path like:\n *\n *     [\"data\", 2, \"nested property\", \"name\"]\n *\n * into a lodash path like:\n *\n *     \"data[2].nested.name\"\n *\n */\nexport function createLodashPropertySelector(path: JSONPath): string {\n  return path.length === 0\n    ? ''\n    : path.every((prop) => integerNumberRegex.test(prop) || javaScriptPropertyRegex.test(prop))\n      ? \"'\" + path.map(stringifyLodashProperty).join('').replace(/^\\./, '') + \"'\"\n      : JSON.stringify(path)\n}\n\n/**\n * Stringify a single property of a JSON path. See also createLodashPropertySelector\n */\nfunction stringifyLodashProperty(prop: string): string {\n  if (integerNumberRegex.test(prop)) {\n    return '[' + prop + ']'\n  } else if (javaScriptPropertyRegex.test(prop)) {\n    return '.' + prop\n  } else {\n    const propStr = JSON.stringify(prop)\n    // remove enclosing double quotes, and unescape escaped double quotes \\\"\n    const jsonPathStr = propStr.substring(1, propStr.length - 1).replace(/\\\\\"/g, '\"')\n    return \"['\" + jsonPathStr + \"']\"\n  }\n}\n\n/**\n * Create a JavaScript property selector\n *\n * Turn a paths like:\n *\n *   ['location', 'latitude']\n *   ['address', 'full name']\n *\n * into a JavaScript selector (string) like:\n *\n *   '?.location?.latitude'\n *   '?.address?.[\"full name\"]'\n */\nexport function createPropertySelector(path: JSONPath): string {\n  return path\n    .map((prop) => {\n      if (integerNumberRegex.test(prop)) {\n        // an index\n        return `?.[${prop}]`\n      } else if (javaScriptPropertyRegex.test(prop)) {\n        // a key without special characters\n        return `?.${prop}`\n      } else {\n        // a key that may have special characters (like spaces or so)\n        return `?.[${JSON.stringify(prop)}]`\n      }\n    })\n    .join('')\n}\n\n// https://developer.mozilla.org/en-US/docs/Glossary/Identifier\n// Note: We can extend this regex to allow unicode characters too.\n// I'm too lazy to figure that out right now\nconst javaScriptPropertyRegex = /^[a-zA-Z$_][a-zA-Z$_\\d]*$/\nconst integerNumberRegex = /^\\d+$/\n\n/**\n * Create a memoized function that will memoize the input path, and return\n * the memoized instance of the path when the stringified version is the same.\n */\nexport function createMemoizePath(): (path: JSONPath) => JSONPath {\n  return memoize((path) => path, stringifyJSONPath)\n}\n","/**\n * Find a unique name. Suffix the name with ' (copy)', '(copy 2)', etc\n * until a unique name is found\n * @param name    Proposed name\n * @param keys    Array with existing keys\n */\nexport function findUniqueName(name: string, keys: string[]): string {\n  const keysSet = new Set(keys)\n\n  // remove any \" (copy)\" or \" (copy 2)\" suffix from the name\n  const nameWithoutCopySuffix = name.replace(/ \\(copy( \\d+)?\\)$/, '')\n\n  let validName = name\n  let i = 1\n\n  while (keysSet.has(validName)) {\n    const copy = 'copy' + (i > 1 ? ' ' + i : '')\n    validName = `${nameWithoutCopySuffix} (${copy})`\n    i++\n  }\n\n  return validName\n}\n\n/**\n * Transform a text into lower case with the first character upper case\n */\nexport function toCapital(text: string): string {\n  return text && text.length > 0 ? text[0].toUpperCase() + text.substring(1).toLowerCase() : text\n}\n\nexport function compareStrings(a: string, b: string): -1 | 0 | 1 {\n  return a < b ? -1 : a > b ? 1 : 0\n}\n\n/**\n * Duplicate a piece of text\n */\nexport function duplicateInText(text: string, anchorOffset: number, focusOffset: number): string {\n  const startOffset = Math.min(anchorOffset, focusOffset)\n  const endOffset = Math.max(anchorOffset, focusOffset)\n\n  return (\n    text.slice(0, endOffset) +\n    text.slice(startOffset, endOffset) + // the duplicated piece of the text\n    text.slice(endOffset)\n  )\n}\n\n/**\n * Truncate a text to a maximum length.\n * When truncated, the text will pe appended with ellipsis '...'\n * @param text Text to be truncated\n * @param maxLength Maximum allowed length for the text including ellipsis\n */\nexport function truncate(text: string, maxLength: number): string {\n  const ellipsis = '...'\n  const maxTextLength = maxLength - ellipsis.length\n\n  return text.length > maxLength ? text.substring(0, maxTextLength) + ellipsis : text\n}\n\n/**\n * Cast contents of a string to the correct type.\n * This can be a string, a number, a boolean, null, undefined, etc\n * @param str\n * @return parsed string\n */\nexport function parseString(str: string): string | number | boolean | null | undefined {\n  if (str === '') {\n    return ''\n  }\n\n  const lower = str.toLowerCase()\n  if (lower === 'null') {\n    return null\n  }\n  if (lower === 'true') {\n    return true\n  }\n  if (lower === 'false') {\n    return false\n  }\n  if (lower === 'undefined') {\n    return undefined\n  }\n\n  const num = Number(str) // will nicely fail with '123ab'\n  const numFloat = parseFloat(str) // will nicely fail with '  '\n  if (!isNaN(num) && !isNaN(numFloat)) {\n    return num\n  }\n\n  return str\n}\n","import { createPropertySelector } from '../../utils/pathUtils.js'\nimport { parseString } from '../../utils/stringUtils.js'\nimport type { QueryLanguage, QueryLanguageOptions } from '../../types.js'\nimport { isInteger } from '../../utils/typeUtils.js'\n\nconst description = `\n<p>\n  Enter a JavaScript function to filter, sort, or transform the data.\n</p>\n`\n\nexport const javascriptQueryLanguage: QueryLanguage = {\n  id: 'javascript',\n  name: 'JavaScript',\n  description,\n  createQuery,\n  executeQuery\n}\n\nfunction createQuery(json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { filter, sort, projection } = queryOptions\n  const queryParts = ['  return data\\n']\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    // Note that the comparisons embrace type coercion,\n    // so a filter value like '5' (text) will match numbers like 5 too.\n    const actualValueGetter = `item => item${createPropertySelector(filter.path)}`\n\n    const filterValue = parseString(filter.value)\n    const filterValueStr =\n      typeof filterValue === 'string'\n        ? `'${filter.value}'`\n        : isInteger(filter.value) && !Number.isSafeInteger(filterValue)\n          ? `${filter.value}n` // bigint\n          : filter.value\n\n    queryParts.push(`    .filter(${actualValueGetter} ${filter.relation} ${filterValueStr})\\n`)\n  }\n\n  if (sort && sort.path && sort.direction) {\n    if (sort.direction === 'desc') {\n      queryParts.push(\n        `    .slice()\\n` +\n          `    .sort((a, b) => {\\n` +\n          `      // sort descending\\n` +\n          `      const valueA = a${createPropertySelector(sort.path)}\\n` +\n          `      const valueB = b${createPropertySelector(sort.path)}\\n` +\n          `      return valueA > valueB ? -1 : valueA < valueB ? 1 : 0\\n` +\n          `    })\\n`\n      )\n    } else {\n      // sort direction 'asc'\n      queryParts.push(\n        `    .slice()\\n` +\n          `    .sort((a, b) => {\\n` +\n          `      // sort ascending\\n` +\n          `      const valueA = a${createPropertySelector(sort.path)}\\n` +\n          `      const valueB = b${createPropertySelector(sort.path)}\\n` +\n          `      return valueA > valueB ? 1 : valueA < valueB ? -1 : 0\\n` +\n          `    })\\n`\n      )\n    }\n  }\n\n  if (projection && projection.paths) {\n    // It is possible to make a util function \"pickFlat\"\n    // and use that when building the query to make it more readable.\n    if (projection.paths.length > 1) {\n      const paths = projection.paths.map((path) => {\n        const name = path[path.length - 1] || 'item' // 'item' in case of having selected the item root\n        const item = `item${createPropertySelector(path)}`\n        return `      ${JSON.stringify(name)}: ${item}`\n      })\n\n      queryParts.push(`    .map(item => ({\\n${paths.join(',\\n')}})\\n    )\\n`)\n    } else {\n      const item = `item${createPropertySelector(projection.paths[0])}`\n\n      queryParts.push(`    .map(item => ${item})\\n`)\n    }\n  }\n\n  return `function query (data) {\\n${queryParts.join('')}}`\n}\n\nfunction executeQuery(json: unknown, query: string): unknown {\n  // FIXME: replace unsafe new Function with a JS based query language\n  //  As long as we don't persist or fetch queries, there is no security risk.\n  // TODO: only import the most relevant subset of lodash instead of the full library?\n  // eslint-disable-next-line no-new-func\n  const queryFn = new Function(\n    '\"use strict\";\\n' +\n      '\\n' +\n      query +\n      '\\n' +\n      '\\n' +\n      'if (typeof query !== \"function\") {\\n' +\n      '  throw new Error(\"Cannot execute query: expecting a function named \\'query\\' but is undefined\")\\n' +\n      '}\\n' +\n      '\\n' +\n      'return query;\\n'\n  )()\n\n  const output = queryFn(json)\n  return output !== undefined ? output : null\n}\n","<g>\n  {@html raw}\n</g>\n\n<script>let cursor = 0xd4937;\nfunction getId() {\n    cursor += 1;\n    return `fa-${cursor.toString(16)}`;\n}\nlet raw = '';\nexport let data;\nfunction getRaw(data) {\n    if (!data || !data.raw) {\n        return '';\n    }\n    let rawData = data.raw;\n    const ids = {};\n    rawData = rawData.replace(/\\s(?:xml:)?id=[\"']?([^\"')\\s]+)/g, (match, id) => {\n        const uniqueId = getId();\n        ids[id] = uniqueId;\n        return ` id=\"${uniqueId}\"`;\n    });\n    rawData = rawData.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, (match, rawId, _, pointerId) => {\n        const id = rawId || pointerId;\n        if (!id || !ids[id]) {\n            return match;\n        }\n        return `#${ids[id]}`;\n    });\n    return rawData;\n}\n$: raw = getRaw(data);\n</script>\n","<svg\n  version=\"1.1\"\n  class=\"fa-icon {className}\"\n  class:fa-spin={spin}\n  class:fa-pulse={pulse}\n  class:fa-inverse={inverse}\n  class:fa-flip-horizontal={flip === 'horizontal'}\n  class:fa-flip-vertical={flip === 'vertical'}\n  {width}\n  {height}\n  aria-label={label}\n  role={label ? 'img' : 'presentation'}\n  viewBox={box}\n  {style}\n  {...$$restProps}\n>\n  <slot />\n</svg>\n\n<style>\n  .fa-icon {\n    display: inline-block;\n    fill: currentColor;\n  }\n  .fa-flip-horizontal {\n    transform: scale(-1, 1);\n  }\n  .fa-flip-vertical {\n    transform: scale(1, -1);\n  }\n  .fa-spin {\n    animation: fa-spin 1s 0s infinite linear;\n  }\n  .fa-inverse {\n    color: #fff;\n  }\n  .fa-pulse {\n    animation: fa-spin 1s infinite steps(8);\n  }\n  @keyframes fa-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<script>let className = '';\nexport { className as class };\nexport let width;\nexport let height;\nexport let box = '0 0 0 0';\nexport let spin = false;\nexport let inverse = false;\nexport let pulse = false;\nexport let flip = 'none';\n// optionals\nexport let style = '';\nexport let label = '';\n</script>\n","<Svg\n  {label}\n  {width}\n  {height}\n  {box}\n  style={combinedStyle}\n  {spin}\n  {flip}\n  {inverse}\n  {pulse}\n  class={className}\n  {...$$restProps}\n>\n  <slot>\n    {#if iconData}\n      {#if iconData.paths}\n        {#each iconData.paths as path}\n          <path {...path} />\n        {/each}\n      {/if}\n      {#if iconData.polygons}\n        {#each iconData.polygons as polygon}\n          <polygon {...polygon} />\n        {/each}\n      {/if}\n      {#if iconData.raw}\n        <Raw bind:data={iconData} />\n      {/if}\n    {/if}\n  </slot>\n</Svg>\n\n<script context=\"module\"></script>\n\n<script>import Raw from './svg/Raw.svelte';\nimport Svg from './svg/Svg.svelte';\nlet className = '';\nexport let data;\nlet iconData;\nexport let scale = 1;\nexport let spin = false;\nexport let inverse = false;\nexport let pulse = false;\nexport let flip = undefined;\nexport let label = '';\nexport let style = '';\nexport { className as class };\n// internal\nlet childrenHeight = 0;\nlet childrenWidth = 0;\nlet outerScale = 1;\nlet width = 10;\nlet height = 10;\nlet combinedStyle;\nlet box;\nfunction normaliseData(data) {\n    let name;\n    let iconData;\n    if (!data) {\n        return undefined;\n    }\n    else if ('definition' in data) {\n        console.error(\"`import faIconName from '@fortawesome/package-name/faIconName` not supported - Please use `import { faIconName } from '@fortawesome/package-name/faIconName'` instead\");\n        return undefined;\n    }\n    else if ('iconName' in data && 'icon' in data) {\n        name = data.iconName;\n        let paths = [];\n        // fontawesome v5/6 icon imported with:\n        // import { iconName } from '@fortawesome/packagename/iconName';\n        // import { iconName } from '@fortawesome/packagename';\n        const [width, height, , , path] = data.icon;\n        if (Array.isArray(path)) {\n            paths = path;\n        }\n        else {\n            paths = [path];\n        }\n        iconData = {\n            width,\n            height,\n            paths: paths.map((path) => {\n                return { d: path };\n            })\n        };\n    }\n    else {\n        // inbuilt icons\n        name = Object.keys(data)[0];\n        iconData = data[name];\n    }\n    return iconData;\n}\nfunction normalisedScale() {\n    let numScale = 1;\n    if (typeof scale !== 'undefined') {\n        numScale = Number(scale);\n    }\n    if (isNaN(numScale) || numScale <= 0) {\n        console.warn('Invalid prop: prop \"scale\" should be a number over 0.');\n        return outerScale;\n    }\n    return numScale * outerScale;\n}\nfunction calculateBox() {\n    if (iconData) {\n        return `0 0 ${iconData.width} ${iconData.height}`;\n    }\n    return `0 0 ${width} ${height}`;\n}\nfunction calculateRatio() {\n    if (!iconData) {\n        return 1;\n    }\n    return Math.max(iconData.width, iconData.height) / 16;\n}\nfunction calculateWidth() {\n    if (childrenWidth) {\n        return childrenWidth;\n    }\n    if (iconData) {\n        return (iconData.width / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n}\nfunction calculateHeight() {\n    if (childrenHeight) {\n        return childrenHeight;\n    }\n    if (iconData) {\n        return (iconData.height / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n}\nfunction calculateStyle() {\n    let combined = '';\n    if (style !== null) {\n        combined += style;\n    }\n    let size = normalisedScale();\n    if (size === 1) {\n        if (combined.length === 0) {\n            return '';\n        }\n        return combined;\n    }\n    if (combined !== '' && !combined.endsWith(';')) {\n        combined += '; ';\n    }\n    return `${combined}font-size: ${size}em`;\n}\n$: {\n    iconData = normaliseData(data);\n    style;\n    scale;\n    width = calculateWidth();\n    height = calculateHeight();\n    combinedStyle = calculateStyle();\n    box = calculateBox();\n}\n</script>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { faCheckSquare, faSquare } from '@fortawesome/free-regular-svg-icons'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import Icon from 'svelte-awesome'\n  import type { OnPatch } from '$lib/types.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let readOnly: boolean\n  export let onPatch: OnPatch\n  export let focus: () => void\n\n  function toggleBooleanValue(event: MouseEvent) {\n    event.stopPropagation()\n\n    if (readOnly) {\n      return\n    }\n\n    onPatch([\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: !value\n      }\n    ])\n\n    focus()\n  }\n</script>\n\n<div\n  role=\"checkbox\"\n  tabindex=\"-1\"\n  aria-checked={value === true}\n  class=\"jse-boolean-toggle\"\n  class:jse-readonly={readOnly}\n  on:mousedown={toggleBooleanValue}\n  title={!readOnly ? 'Click to toggle this boolean value' : `Boolean value ${value}`}\n>\n  <Icon data={value === true ? faCheckSquare : faSquare} />\n</div>\n\n<style src=\"./BooleanToggle.scss\"></style>\n","<script lang=\"ts\">\n  import { onDestroy, onMount } from 'svelte'\n\n  export let color: string\n  export let onChange: (newColor: string) => void\n  export let showOnTop: boolean\n\n  let ref: HTMLElement | undefined\n  let destroyColorPicker = () => {}\n\n  onMount(async () => {\n    // Dynamically import VanillaPicker, because it requires `document` to be defined,\n    // and that is not supported server side\n    const VanillaPicker = (await import('vanilla-picker'))?.default\n\n    const colorPicker = new VanillaPicker({\n      parent: ref,\n      color,\n      popup: showOnTop ? 'top' : 'bottom',\n      onDone: function (color) {\n        const alpha = color.rgba[3]\n        const hex =\n          alpha === 1\n            ? color.hex.substring(0, 7) // return #RRGGBB\n            : color.hex // return #RRGGBBAA\n        onChange(hex)\n      }\n    })\n\n    colorPicker.show()\n\n    destroyColorPicker = () => {\n      colorPicker.destroy()\n    }\n  })\n\n  onDestroy(() => {\n    destroyColorPicker()\n  })\n</script>\n\n<div class=\"jse-color-picker-popup\" bind:this={ref} />\n\n<style src=\"./ColorPickerPopup.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getColorCSS } from '$lib/utils/typeUtils.js'\n  import { getWindow } from '$lib/utils/domUtils.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import { getContext } from 'svelte'\n  import ColorPickerPopup from '../../../components/controls/ColorPickerPopup.svelte'\n  import type { AbsolutePopupContext, OnPatch } from '$lib/types.js'\n\n  const { openAbsolutePopup } = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let path: JSONPath\n  export let value: string\n  export let readOnly: boolean\n  export let onPatch: OnPatch\n  export let focus: () => void\n\n  $: color = getColorCSS(value)\n\n  function onChange(color: string) {\n    onPatch([\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: color\n      }\n    ])\n\n    onClose()\n  }\n\n  function onClose() {\n    focus()\n  }\n\n  function openColorPicker(event: MouseEvent) {\n    if (readOnly) {\n      return\n    }\n\n    // estimate of the color picker height\n    // we'll render the color picker on top\n    // when there is not enough space below, and there is enough space above\n    const height = 300\n\n    const target = event.target as Element\n    const top = target.getBoundingClientRect().top\n    const windowHeight = getWindow(target)?.innerHeight ?? 0\n    const showOnTop = windowHeight - top < height && top > height\n\n    const props = {\n      color: value,\n      onChange,\n      showOnTop\n    }\n\n    openAbsolutePopup(ColorPickerPopup, props, {\n      anchor: target,\n      closeOnOuterClick: true,\n      onClose,\n      offsetTop: 18,\n      offsetLeft: -8,\n      height\n    })\n  }\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-color-picker-button\"\n  class:jse-readonly={readOnly}\n  style=\"background: {color}\"\n  title={!readOnly ? 'Click to open a color picker' : `Color ${value}`}\n  on:click={openColorPicker}\n/>\n\n<style src=\"./ColorPicker.scss\"></style>\n","import { sortBy } from 'lodash-es'\nimport { ARRAY_SECTION_SIZE } from '../constants.js'\nimport type { Section } from '$lib/types.js'\n\n/**\n * Create sections that can be expanded.\n * Used to display a button like \"Show items 100-200\"\n */\nexport function getExpandItemsSections(startIndex: number, endIndex: number): Section[] {\n  // expand the start of the section\n  const section1 = {\n    start: startIndex,\n    end: Math.min(nextRoundNumber(startIndex), endIndex)\n  }\n\n  // expand the middle of the section\n  const start2 = Math.max(currentRoundNumber((startIndex + endIndex) / 2), startIndex)\n  const section2 = {\n    start: start2,\n    end: Math.min(nextRoundNumber(start2), endIndex)\n  }\n\n  // expand the end of the section\n  const currentIndex = currentRoundNumber(endIndex)\n  const previousIndex = currentIndex === endIndex ? currentIndex - ARRAY_SECTION_SIZE : currentIndex\n  const section3 = {\n    start: Math.max(previousIndex, startIndex),\n    end: endIndex\n  }\n\n  const sections = [section1]\n\n  const showSection2 = section2.start >= section1.end && section2.end <= section3.start\n  if (showSection2) {\n    sections.push(section2)\n  }\n\n  const showSection3 = section3.start >= (showSection2 ? section2.end : section1.end)\n  if (showSection3) {\n    sections.push(section3)\n  }\n\n  return sections\n}\n\n/**\n * Sort and merge a list with sections\n */\nexport function mergeSections(sections: Section[]): Section[] {\n  const sortedSections = sortBy(sections, (section) => section.start)\n\n  const mergedSections = [sortedSections[0]]\n\n  for (let sortedIndex = 0; sortedIndex < sortedSections.length; sortedIndex++) {\n    const mergedIndex = mergedSections.length - 1\n    const previous = mergedSections[mergedIndex]\n    const current = sortedSections[sortedIndex]\n\n    if (current.start <= previous.end) {\n      // there is overlap -> replace the previous item\n      mergedSections[mergedIndex] = {\n        start: Math.min(previous.start, current.start),\n        end: Math.max(previous.end, current.end)\n      }\n    } else {\n      // no overlap, just add the item\n      mergedSections.push(current)\n    }\n  }\n\n  return mergedSections\n}\n\n// TODO: write unit test\nexport function inVisibleSection(sections: Section[], index: number): boolean {\n  return sections.some((section) => {\n    return index >= section.start && index < section.end\n  })\n}\n\nexport function nextRoundNumber(index: number): number {\n  return currentRoundNumber(index) + ARRAY_SECTION_SIZE\n}\n\nexport function currentRoundNumber(index: number): number {\n  return Math.floor(index / ARRAY_SECTION_SIZE) * ARRAY_SECTION_SIZE\n}\n","import {\n  compileJSONPointer,\n  existsIn,\n  getIn,\n  immutableJSONPatch,\n  isJSONArray,\n  isJSONObject,\n  isJSONPatchAdd,\n  isJSONPatchCopy,\n  isJSONPatchMove,\n  isJSONPatchRemove,\n  isJSONPatchReplace,\n  type JSONPatchAdd,\n  type JSONPatchCopy,\n  type JSONPatchDocument,\n  type JSONPatchMove,\n  type JSONPatchRemove,\n  type JSONPatchReplace,\n  type JSONPath,\n  type JSONPointer,\n  parseJSONPointer,\n  parsePath,\n  startsWithJSONPointer\n} from 'immutable-json-patch'\nimport { initial, isEqual, last } from 'lodash-es'\nimport { DEFAULT_VISIBLE_SECTIONS, MAX_DOCUMENT_SIZE_EXPAND_ALL } from '../constants.js'\nimport { forEachIndex } from '../utils/arrayUtils.js'\nimport { isObject, isObjectOrArray, isStringContainingPrimitiveValue } from '../utils/typeUtils.js'\nimport {\n  currentRoundNumber,\n  inVisibleSection,\n  mergeSections,\n  nextRoundNumber\n} from './expandItemsSections.js'\nimport type {\n  CaretPosition,\n  DocumentState,\n  JSONParser,\n  JSONPointerMap,\n  JSONSelection,\n  OnExpand,\n  Section,\n  VisibleSection\n} from '$lib/types'\nimport { CaretType } from '$lib/types.js'\nimport { int } from '../utils/numberUtils.js'\nimport { isLargeContent } from '$lib/utils/jsonUtils.js'\n\ntype OnCreateSelection = (json: unknown, documentState: DocumentState) => JSONSelection\n\nexport type CreateDocumentStateProps = {\n  json: unknown | undefined\n  expand?: OnExpand\n  select?: OnCreateSelection\n}\n\nexport function createDocumentState(props?: CreateDocumentStateProps): DocumentState {\n  let documentState: DocumentState = {\n    expandedMap: {},\n    enforceStringMap: {},\n    visibleSectionsMap: {},\n    selection: null,\n    sortedColumn: null\n  }\n\n  if (props?.select && props.json !== undefined) {\n    documentState = {\n      ...documentState,\n      selection: props.select(props.json, documentState)\n    }\n  }\n\n  if (props?.expand) {\n    documentState = expandWithCallback(props.json, documentState, [], props.expand)\n  }\n\n  return documentState\n}\n\nexport function getVisibleSections(\n  documentState: DocumentState,\n  pointer: JSONPointer\n): VisibleSection[] {\n  return documentState.visibleSectionsMap[pointer] || DEFAULT_VISIBLE_SECTIONS\n}\n\n/**\n * Invoke a callback function for every visible item in the array\n */\nexport function forEachVisibleIndex(\n  jsonArray: Array<unknown>,\n  visibleSections: VisibleSection[],\n  callback: (index: number) => void\n) {\n  visibleSections.forEach(({ start, end }) => {\n    forEachIndex(start, Math.min(jsonArray.length, end), callback)\n  })\n}\n\n/**\n * Expand all nodes on given path\n * The end of the path itself is not expanded\n */\nexport function expandPath(\n  json: unknown,\n  documentState: DocumentState,\n  path: JSONPath\n): DocumentState {\n  const expandedMap: JSONPointerMap<boolean> = { ...documentState.expandedMap }\n  const visibleSectionsMap = { ...documentState.visibleSectionsMap }\n\n  for (let i = 0; i < path.length; i++) {\n    const partialPath = path.slice(0, i)\n    const partialPointer = compileJSONPointer(partialPath)\n\n    const value = getIn(json, partialPath)\n\n    if (isObjectOrArray(value)) {\n      expandedMap[partialPointer] = true\n    }\n\n    // if needed, enlarge the expanded sections such that the search result becomes visible in the array\n    if (Array.isArray(value) && i < path.length) {\n      const sections = visibleSectionsMap[partialPointer] || DEFAULT_VISIBLE_SECTIONS\n      const index = int(path[i])\n\n      if (!inVisibleSection(sections, index)) {\n        const start = currentRoundNumber(index)\n        const end = nextRoundNumber(start)\n        const newSection = { start, end }\n        visibleSectionsMap[partialPointer] = mergeSections(sections.concat(newSection))\n      }\n    }\n  }\n\n  return {\n    ...documentState,\n    expandedMap,\n    visibleSectionsMap\n  }\n}\n\n/**\n * Expand a node, end expand its children according to the provided callback\n * Nodes that are already expanded will be left untouched\n */\nexport function expandWithCallback(\n  json: unknown | undefined,\n  documentState: DocumentState,\n  path: JSONPath,\n  expandedCallback: OnExpand\n): DocumentState {\n  const expandedMap = { ...documentState.expandedMap }\n\n  function recurse(value: unknown) {\n    const pathIndex = currentPath.length\n\n    if (Array.isArray(value)) {\n      if (expandedCallback(currentPath)) {\n        const pointer = compileJSONPointer(currentPath)\n        expandedMap[pointer] = true\n\n        if (value.length > 0) {\n          const visibleSections = getVisibleSections(documentState, pointer)\n\n          forEachVisibleIndex(value, visibleSections, (index) => {\n            currentPath[pathIndex] = String(index)\n            recurse(value[index])\n          })\n\n          currentPath.pop()\n        }\n      }\n    } else if (isObject(value)) {\n      if (expandedCallback(currentPath)) {\n        expandedMap[compileJSONPointer(currentPath)] = true\n\n        const keys = Object.keys(value)\n        if (keys.length > 0) {\n          for (const key of keys) {\n            currentPath[pathIndex] = key\n            recurse(value[key])\n          }\n\n          currentPath.pop()\n        }\n      }\n    }\n  }\n\n  const currentPath = path.slice()\n  const value = json !== undefined ? getIn(json, path) : json\n  if (value !== undefined) {\n    recurse(value)\n  }\n\n  return {\n    ...documentState,\n    expandedMap\n  }\n}\n\n// TODO: write unit tests\nexport function expandSingleItem(documentState: DocumentState, path: JSONPath): DocumentState {\n  return {\n    ...documentState,\n    expandedMap: {\n      ...documentState.expandedMap,\n      [compileJSONPointer(path)]: true\n    }\n  }\n}\n\n// TODO: write unit tests\nexport function collapsePath(documentState: DocumentState, path: JSONPath): DocumentState {\n  // delete the expanded state of the path and all it's nested paths\n  const expandedMap = deletePath(documentState.expandedMap, path)\n  const enforceStringMap = deletePath(documentState.enforceStringMap, path)\n  const visibleSectionsMap = deletePath(documentState.visibleSectionsMap, path)\n\n  return {\n    ...documentState,\n    expandedMap,\n    enforceStringMap,\n    visibleSectionsMap\n  }\n}\n\n// TODO: write unit tests\nexport function setEnforceString(\n  documentState: DocumentState,\n  pointer: JSONPointer,\n  enforceString: boolean\n): DocumentState {\n  if (enforceString) {\n    const updatedEnforceString = { ...documentState.enforceStringMap }\n    updatedEnforceString[pointer] = enforceString\n\n    return {\n      ...documentState,\n      enforceStringMap: updatedEnforceString\n    }\n  } else {\n    // remove if defined\n    if (typeof documentState.enforceStringMap[pointer] === 'boolean') {\n      const updatedEnforceString = { ...documentState.enforceStringMap }\n      delete updatedEnforceString[pointer]\n      return {\n        ...documentState,\n        enforceStringMap: updatedEnforceString\n      }\n    } else {\n      return documentState\n    }\n  }\n}\n\n/**\n * Expand a section of items in an array\n */\nexport function expandSection(\n  json: unknown,\n  documentState: DocumentState,\n  pointer: JSONPointer,\n  section: Section\n): DocumentState {\n  return {\n    ...documentState,\n    visibleSectionsMap: {\n      ...documentState.visibleSectionsMap,\n      [pointer]: mergeSections(getVisibleSections(documentState, pointer).concat(section))\n    }\n  }\n}\n\nexport function syncKeys(actualKeys: string[], prevKeys?: string[]): string[] {\n  if (!prevKeys) {\n    return actualKeys\n  }\n\n  // copy the keys that still exist\n  const actualKeysSet = new Set(actualKeys)\n  const keys = prevKeys.filter((key) => actualKeysSet.has(key))\n\n  // add new keys\n  const keysSet = new Set(keys)\n  actualKeys.filter((key) => !keysSet.has(key)).forEach((key) => keys.push(key))\n\n  return keys\n}\n\n/**\n * Apply patch operations to both json and state\n */\nexport function documentStatePatch(\n  json: unknown,\n  documentState: DocumentState,\n  operations: JSONPatchDocument\n): { json: unknown; documentState: DocumentState } {\n  const updatedJson: unknown = immutableJSONPatch(json, operations)\n\n  const updatedDocumentState = operations.reduce((updatingState, operation) => {\n    if (isJSONPatchAdd(operation)) {\n      return documentStateAdd(updatedJson, updatingState, operation)\n    }\n\n    if (isJSONPatchRemove(operation)) {\n      return documentStateRemove(updatedJson, updatingState, operation)\n    }\n\n    if (isJSONPatchReplace(operation)) {\n      return documentStateReplace(updatedJson, updatingState, operation)\n    }\n\n    if (isJSONPatchCopy(operation) || isJSONPatchMove(operation)) {\n      return documentStateMoveOrCopy(updatedJson, updatingState, operation)\n    }\n\n    return updatingState\n  }, documentState)\n\n  return {\n    json: updatedJson,\n    documentState: updatedDocumentState\n  }\n}\n\nexport function documentStateAdd(\n  json: unknown,\n  documentState: DocumentState,\n  operation: JSONPatchAdd\n): DocumentState {\n  const path = parsePath(json, operation.path)\n  const parentPath = initial(path)\n  const parentPointer = compileJSONPointer(parentPath)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    const index = int(last(path) as string)\n\n    // shift all paths of the relevant parts of the state\n    const expandedMap = shiftPath(documentState.expandedMap, parentPath, index, 1)\n    const enforceStringMap = shiftPath(documentState.enforceStringMap, parentPath, index, 1)\n    let visibleSectionsMap = shiftPath(documentState.visibleSectionsMap, parentPath, index, 1)\n\n    // shift visible sections of array\n    visibleSectionsMap = updateInPathsMap(visibleSectionsMap, parentPointer, (sections) =>\n      shiftVisibleSections(sections, index, 1)\n    )\n\n    return {\n      ...documentState,\n      expandedMap,\n      enforceStringMap,\n      visibleSectionsMap\n    }\n  }\n\n  // object, nothing to do\n  return documentState\n}\n\nexport function documentStateRemove(\n  updatedJson: unknown,\n  documentState: DocumentState,\n  operation: JSONPatchRemove\n): DocumentState {\n  const path = parsePath(updatedJson, operation.path)\n  const parentPath = initial(path)\n  const parentPointer = compileJSONPointer(parentPath)\n  const parent = getIn(updatedJson, parentPath)\n\n  let { expandedMap, enforceStringMap, visibleSectionsMap } = documentState\n\n  // delete the path itself and its children\n  expandedMap = deletePath(expandedMap, path)\n  enforceStringMap = deletePath(enforceStringMap, path)\n  visibleSectionsMap = deletePath(visibleSectionsMap, path)\n\n  if (isJSONArray(parent)) {\n    const index = int(last(path) as string)\n\n    // shift all paths of the relevant parts of the state\n    expandedMap = shiftPath(expandedMap, parentPath, index, -1)\n    enforceStringMap = shiftPath(enforceStringMap, parentPath, index, -1)\n    visibleSectionsMap = shiftPath(visibleSectionsMap, parentPath, index, -1)\n\n    // shift visible sections of array\n    visibleSectionsMap = updateInPathsMap(visibleSectionsMap, parentPointer, (sections) =>\n      shiftVisibleSections(sections, index, -1)\n    )\n  }\n\n  return {\n    ...documentState,\n    expandedMap,\n    enforceStringMap,\n    visibleSectionsMap\n  }\n}\n\nexport function documentStateReplace(\n  updatedJson: unknown,\n  documentState: DocumentState,\n  operation: JSONPatchReplace\n): DocumentState {\n  const pointer = operation.path\n\n  // cleanup state from paths that are removed now\n  const expandedMap = cleanupNonExistingPaths(updatedJson, documentState.expandedMap)\n  const enforceStringMap = cleanupNonExistingPaths(updatedJson, documentState.enforceStringMap)\n  const visibleSectionsMap = cleanupNonExistingPaths(updatedJson, documentState.visibleSectionsMap)\n\n  // cleanup props of the object/array/value itself that are not applicable anymore\n  if (!isJSONObject(operation.value) && !isJSONArray(operation.value)) {\n    delete expandedMap[pointer]\n  }\n  if (!isJSONArray(operation.value)) {\n    delete visibleSectionsMap[pointer]\n  }\n  if (isJSONObject(operation.value) || isJSONArray(operation.value)) {\n    delete enforceStringMap[pointer]\n  }\n\n  return {\n    ...documentState,\n    expandedMap,\n    enforceStringMap,\n    visibleSectionsMap\n  }\n}\n\nexport function documentStateMoveOrCopy(\n  updatedJson: unknown,\n  documentState: DocumentState,\n  operation: JSONPatchCopy | JSONPatchMove\n): DocumentState {\n  if (isJSONPatchMove(operation) && operation.from === operation.path) {\n    // nothing to do\n    return documentState\n  }\n\n  // get the state that we will move or copy, and move it to the new location\n  const renamePointer = (pointer: JSONPointer) =>\n    operation.path + pointer.substring(operation.from.length)\n  const expandedMapCopy = movePath(\n    filterPath(documentState.expandedMap, operation.from),\n    renamePointer\n  )\n  const enforceStringMapCopy = movePath(\n    filterPath(documentState.enforceStringMap, operation.from),\n    renamePointer\n  )\n  const visibleSectionsMapCopy = movePath(\n    filterPath(documentState.visibleSectionsMap, operation.from),\n    renamePointer\n  )\n\n  // patch the document state: use the remove and add operations to apply a move or copy\n  // note that `value` is just a fake value, we do not use this for real\n  let updatedState = documentState\n  if (isJSONPatchMove(operation)) {\n    updatedState = documentStateRemove(updatedJson, updatedState, {\n      op: 'remove',\n      path: operation.from\n    })\n  }\n  updatedState = documentStateAdd(updatedJson, updatedState, {\n    op: 'add',\n    path: operation.path,\n    value: null\n  })\n\n  // merge the original and the copied state\n  const expandedMap = mergePaths(updatedState.expandedMap, expandedMapCopy)\n  const enforceStringMap = mergePaths(updatedState.enforceStringMap, enforceStringMapCopy)\n  const visibleSectionsMap = mergePaths(updatedState.visibleSectionsMap, visibleSectionsMapCopy)\n\n  return {\n    ...documentState,\n    expandedMap,\n    enforceStringMap,\n    visibleSectionsMap\n  }\n}\n\n/**\n * Delete a path from a PathsMap. Will delete the path and its child paths\n * IMPORTANT: will NOT shift array items when an array item is removed, use shiftPath for that\n */\nexport function deletePath<T>(map: JSONPointerMap<T>, path: JSONPath): JSONPointerMap<T> {\n  const updatedMap: JSONPointerMap<T> = {}\n  const pointer = compileJSONPointer(path)\n\n  // partition the contents of the map\n  Object.keys(map).forEach((itemPointer) => {\n    if (!startsWithJSONPointer(itemPointer, pointer)) {\n      updatedMap[itemPointer] = map[itemPointer]\n    }\n  })\n\n  return updatedMap\n}\n\n// TODO: unit test\nexport function filterPath<T>(map: JSONPointerMap<T>, pointer: JSONPointer): JSONPointerMap<T> {\n  const filteredMap: JSONPointerMap<T> = {}\n\n  Object.keys(map).forEach((itemPointer) => {\n    if (startsWithJSONPointer(itemPointer, pointer)) {\n      filteredMap[itemPointer] = map[itemPointer]\n    }\n  })\n\n  return filteredMap\n}\n\n// TODO: unit test\nexport function mergePaths<T>(a: JSONPointerMap<T>, b: JSONPointerMap<T>): JSONPointerMap<T> {\n  return { ...a, ...b }\n}\n\n// TODO: unit test\nexport function movePath<T>(\n  map: JSONPointerMap<T>,\n  changePointer: (pointer: JSONPointer) => JSONPointer\n): JSONPointerMap<T> {\n  const movedMap: JSONPointerMap<T> = {}\n\n  Object.keys(map).forEach((oldPointer) => {\n    const newPointer = changePointer(oldPointer)\n    movedMap[newPointer] = map[oldPointer]\n  })\n\n  return movedMap\n}\n\nexport function shiftPath<T>(\n  map: JSONPointerMap<T>,\n  path: JSONPath,\n  index: number,\n  offset: number\n): JSONPointerMap<T> {\n  const indexPathPos = path.length\n  const pointer = compileJSONPointer(path)\n\n  // collect all paths that need to be shifted, with their old path, new path, and value\n  const matches: { oldPointer: JSONPointer; newPointer: JSONPointer; value: T }[] = []\n  for (const itemPointer of Object.keys(map)) {\n    if (startsWithJSONPointer(itemPointer, pointer)) {\n      const itemPath: JSONPath = parseJSONPointer(itemPointer)\n      const pathIndex = int(itemPath[indexPathPos])\n\n      if (pathIndex >= index) {\n        itemPath[indexPathPos] = String(pathIndex + offset)\n\n        matches.push({\n          oldPointer: itemPointer,\n          newPointer: compileJSONPointer(itemPath),\n          value: map[itemPointer]\n        })\n      }\n    }\n  }\n\n  // if there are no changes, just return the original map\n  if (matches.length === 0) {\n    return map\n  }\n\n  const updatedMap = { ...map }\n\n  // delete all old paths from the map\n  // we do this *before* inserting new paths to prevent deleting a math that is already moved\n  matches.forEach((match) => {\n    delete updatedMap[match.oldPointer]\n  })\n\n  // insert shifted paths in the map\n  matches.forEach((match) => {\n    updatedMap[match.newPointer] = match.value\n  })\n\n  return updatedMap\n}\n\n// TODO: unit test\nexport function cleanupNonExistingPaths<T>(\n  json: unknown,\n  map: JSONPointerMap<T>\n): JSONPointerMap<T> {\n  const updatedMap: JSONPointerMap<T> = {}\n\n  // TODO: for optimization, we could pass a filter callback which allows you to filter paths\n  //  starting with a specific, so you don't need to invoke parseJSONPointer and existsIn for largest part\n\n  Object.keys(map)\n    .filter((pointer) => existsIn(json, parsePath(json, pointer)))\n    .forEach((pointer) => {\n      updatedMap[pointer] = map[pointer]\n    })\n\n  return updatedMap\n}\n\n/**\n * Update a value in a PathsMap.\n * When the path exists, the callback will be invoked.\n * When the path does not exist, the callback is not invoked.\n */\nexport function updateInPathsMap<T>(\n  map: JSONPointerMap<T>,\n  pointer: JSONPointer,\n  callback: (value: T) => T\n) {\n  const value = map[pointer]\n\n  if (pointer in map) {\n    const updatedValue = callback(value)\n    if (!isEqual(value, updatedValue)) {\n      const updatedMap = { ...map }\n\n      if (updatedValue === undefined) {\n        delete updatedMap[pointer]\n      } else {\n        updatedMap[pointer] = updatedValue\n      }\n\n      return updatedMap\n    }\n  }\n\n  return map\n}\n\n/**\n * Shift visible sections in an Array with a specified offset\n */\nexport function shiftVisibleSections(\n  visibleSections: VisibleSection[],\n  index: number,\n  offset: number\n): VisibleSection[] {\n  const shiftedSections = visibleSections.map((section) => {\n    return {\n      start: section.start > index ? section.start + offset : section.start,\n      end: section.end > index ? section.end + offset : section.end\n    }\n  })\n\n  return mergeAdjacentSections(shiftedSections)\n}\n\n// merge adjacent sections like [{start:0, end:100}, {start:100, end:200}] into [{start:0, end:200}]\nfunction mergeAdjacentSections(visibleSections: VisibleSection[]): VisibleSection[] {\n  const merged = visibleSections.slice(0)\n\n  let i = 1\n  while (i < merged.length) {\n    if (merged[i - 1].end === merged[i].start) {\n      merged[i - 1] = {\n        start: merged[i - 1].start,\n        end: merged[i].end\n      }\n      merged.splice(i)\n    }\n    i++\n  }\n\n  return merged\n}\n\nexport function getEnforceString(\n  value: unknown,\n  enforceStringMap: JSONPointerMap<boolean> | undefined,\n  pointer: JSONPointer,\n  parser: JSONParser\n): boolean {\n  const enforceString = enforceStringMap ? enforceStringMap[pointer] : undefined\n\n  if (typeof enforceString === 'boolean') {\n    return enforceString\n  }\n\n  return isStringContainingPrimitiveValue(value, parser)\n}\n\nexport function getNextKeys(keys: string[], key: string, includeKey = false): string[] {\n  const index = keys.indexOf(key)\n  if (index !== -1) {\n    return includeKey ? keys.slice(index) : keys.slice(index + 1)\n  } else {\n    // a new key, that doesn't have next keys\n    return []\n  }\n}\n\n/**\n * Get all paths which are visible and rendered\n */\n// TODO: create memoized version of getVisiblePaths which remembers just the previous result if json and state are the same\nexport function getVisiblePaths(json: unknown, documentState: DocumentState): JSONPath[] {\n  const paths: JSONPath[] = []\n\n  function _recurse(value: unknown, path: JSONPath) {\n    paths.push(path)\n    const pointer = compileJSONPointer(path)\n\n    if (value && documentState.expandedMap[pointer] === true) {\n      if (isJSONArray(value)) {\n        const visibleSections = getVisibleSections(documentState, pointer)\n        forEachVisibleIndex(value, visibleSections, (index) => {\n          _recurse(value[index], path.concat(String(index)))\n        })\n      }\n\n      if (isJSONObject(value)) {\n        Object.keys(value).forEach((key) => {\n          _recurse(value[key], path.concat(key))\n        })\n      }\n    }\n  }\n\n  _recurse(json, [])\n\n  return paths\n}\n\n/**\n * Get all caret position which are visible and rendered:\n * before a node, at a key, at a value, appending an object/array\n */\n// TODO: create memoized version of getVisibleCaretPositions which remembers just the previous result if json and state are the same\nexport function getVisibleCaretPositions(\n  json: unknown,\n  documentState: DocumentState,\n  includeInside = true\n): CaretPosition[] {\n  const paths: CaretPosition[] = []\n\n  function _recurse(value: unknown, path: JSONPath) {\n    paths.push({ path, type: CaretType.value })\n\n    const pointer = compileJSONPointer(path)\n    if (value && documentState.expandedMap[pointer] === true) {\n      if (includeInside) {\n        paths.push({ path, type: CaretType.inside })\n      }\n\n      if (isJSONArray(value)) {\n        const visibleSections = getVisibleSections(documentState, pointer)\n        forEachVisibleIndex(value, visibleSections, (index) => {\n          const itemPath = path.concat(String(index))\n\n          _recurse(value[index], itemPath)\n\n          if (includeInside) {\n            paths.push({ path: itemPath, type: CaretType.after })\n          }\n        })\n      }\n\n      if (isJSONObject(value)) {\n        const keys = Object.keys(value)\n        keys.forEach((key) => {\n          const propertyPath = path.concat(key)\n\n          paths.push({ path: propertyPath, type: CaretType.key })\n\n          _recurse(value[key], propertyPath)\n\n          if (includeInside) {\n            paths.push({ path: propertyPath, type: CaretType.after })\n          }\n        })\n      }\n    }\n  }\n\n  _recurse(json, [])\n\n  return paths\n}\n\n/**\n * Find the previous visible path.\n * This can be the last child of the previous object or array, or the parent of a first entry.\n */\n// TODO: write tests for getPreviousVisiblePath\nexport function getPreviousVisiblePath(\n  json: unknown,\n  documentState: DocumentState,\n  path: JSONPath\n): JSONPath | null {\n  const visiblePaths = getVisiblePaths(json, documentState)\n  const visiblePathPointers = visiblePaths.map(compileJSONPointer)\n  const pathPointer = compileJSONPointer(path)\n  const index = visiblePathPointers.indexOf(pathPointer)\n\n  if (index !== -1 && index > 0) {\n    return visiblePaths[index - 1]\n  }\n\n  return null\n}\n\n/**\n * Find the next visible path.\n * This can be the next parent entry.\n */\n// TODO: write tests for getNextVisiblePath\nexport function getNextVisiblePath(\n  json: unknown,\n  documentState: DocumentState,\n  path: JSONPath\n): JSONPath | null {\n  const visiblePaths = getVisiblePaths(json, documentState)\n  const visiblePathPointers = visiblePaths.map(compileJSONPointer)\n  const index = visiblePathPointers.indexOf(compileJSONPointer(path))\n\n  if (index !== -1 && index < visiblePaths.length - 1) {\n    return visiblePaths[index + 1]\n  }\n\n  return null\n}\n\n/**\n * Expand recursively when the expanded contents is small enough,\n * else expand in a minimalistic way\n */\n// TODO: write unit test\nexport function expandRecursive(\n  json: unknown,\n  documentState: DocumentState,\n  path: JSONPath\n): DocumentState {\n  const expandContents: unknown | undefined = getIn(json, path)\n  if (expandContents === undefined) {\n    return documentState\n  }\n\n  const expandAllRecursive = !isLargeContent({ json: expandContents }, MAX_DOCUMENT_SIZE_EXPAND_ALL)\n  const expandCallback = expandAllRecursive ? expandAll : expandMinimal\n\n  return expandWithCallback(json, documentState, path, expandCallback)\n}\n\n// TODO: write unit test\nexport function expandMinimal(path: JSONPath): boolean {\n  return path.length === 0 ? true : path.length === 1 && path[0] === '0' // first item of an array\n}\n\n// TODO: write unit test\nexport function expandAll(): boolean {\n  return true\n}\n\n// TODO: write unit test\nexport function getDefaultExpand(json: unknown): OnExpand {\n  return isLargeContent({ json }, MAX_DOCUMENT_SIZE_EXPAND_ALL) ? expandMinimal : expandAll\n}\n","import {\n  getIn,\n  isJSONArray,\n  isJSONObject,\n  isJSONPatchCopy,\n  isJSONPatchMove,\n  type JSONPatchDocument,\n  type JSONPatchOperation,\n  type JSONPath,\n  parsePath\n} from 'immutable-json-patch'\nimport { first, initial, isEmpty, isEqual, last } from 'lodash-es'\nimport { isObjectOrArray } from '$lib/utils/typeUtils.js'\nimport {\n  collapsePath,\n  getNextVisiblePath,\n  getPreviousVisiblePath,\n  getVisibleCaretPositions,\n  getVisiblePaths\n} from './documentState.js'\nimport type {\n  AfterSelection,\n  CaretPosition,\n  DocumentState,\n  InsideSelection,\n  JSONEditorSelection,\n  JSONParser,\n  JSONSelection,\n  KeySelection,\n  MultiSelection,\n  TextSelection,\n  ValueSelection\n} from '../types.js'\nimport { CaretType, SelectionType } from '$lib/types.js'\nimport { int } from '$lib/utils/numberUtils.js'\n\nexport function isAfterSelection(\n  selection: JSONEditorSelection | null\n): selection is AfterSelection {\n  return (selection && selection.type === SelectionType.after) || false\n}\n\nexport function isInsideSelection(\n  selection: JSONEditorSelection | null\n): selection is InsideSelection {\n  return (selection && selection.type === SelectionType.inside) || false\n}\n\nexport function isKeySelection(selection: JSONEditorSelection | null): selection is KeySelection {\n  return (selection && selection.type === SelectionType.key) || false\n}\n\nexport function isValueSelection(\n  selection: JSONEditorSelection | null\n): selection is ValueSelection {\n  return (selection && selection.type === SelectionType.value) || false\n}\n\nexport function isMultiSelection(\n  selection: JSONEditorSelection | null\n): selection is MultiSelection {\n  return (selection && selection.type === SelectionType.multi) || false\n}\n\nexport function isMultiSelectionWithOneItem(\n  selection: JSONEditorSelection | null\n): selection is MultiSelection {\n  return isMultiSelection(selection) && isEqual(selection.focusPath, selection.anchorPath)\n}\n\nexport function isJSONSelection(selection: JSONEditorSelection | null): selection is JSONSelection {\n  return (\n    isMultiSelection(selection) ||\n    isAfterSelection(selection) ||\n    isInsideSelection(selection) ||\n    isKeySelection(selection) ||\n    isValueSelection(selection)\n  )\n}\n\nexport function isTextSelection(selection: JSONEditorSelection | null): selection is TextSelection {\n  return (selection && selection.type === SelectionType.text) || false\n}\n\n/**\n * Expand a selection start and end into an array containing all paths\n * between (and including) start and end\n */\nexport function getSelectionPaths(json: unknown, selection: JSONSelection): JSONPath[] {\n  const paths: JSONPath[] = []\n\n  iterateOverSelection(json, selection, (path) => {\n    paths.push(path)\n  })\n\n  return paths\n}\n\n/**\n * Expand a selection start and end into an array containing all paths\n * between (and including) start and end.\n *\n * The function iterates always from start to end, independent of the order\n * of focusPath and anchorPath.\n *\n * When the callback returns something other than undefined, the iteration is\n * canceled and the value returned by the callback is returned by iterateOverSelection.\n */\nexport function iterateOverSelection<T>(\n  json: unknown | undefined,\n  selection: JSONSelection | null,\n  callback: (path: JSONPath) => void | undefined | T\n): void | undefined | T {\n  if (!selection) {\n    return undefined\n  }\n\n  const anchorPath = getAnchorPath(selection)\n  const focusPath = getFocusPath(selection)\n\n  if (isEqual(anchorPath, focusPath)) {\n    // just a single node\n    return callback(anchorPath)\n  } else {\n    // multiple nodes\n    if (json === undefined) {\n      return undefined\n    }\n\n    const sharedPath = findSharedPath(anchorPath, focusPath)\n\n    if (anchorPath.length === sharedPath.length || focusPath.length === sharedPath.length) {\n      // a parent and a child, like ['arr', 1] and ['arr']\n      return callback(sharedPath)\n    }\n\n    const selection = createMultiSelection(anchorPath, focusPath)\n    const startPath = getStartPath(json, selection)\n    const endPath = getEndPath(json, selection)\n\n    const startIndex = getChildIndex(json, selection, startPath)\n    const endIndex = getChildIndex(json, selection, endPath)\n\n    if (startIndex === -1 || endIndex === -1) {\n      return undefined\n    }\n\n    const value = getIn(json, sharedPath)\n\n    if (isJSONObject(value)) {\n      const keys = Object.keys(value)\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        const value = callback(sharedPath.concat(keys[i]))\n        if (value !== undefined) {\n          return value\n        }\n      }\n\n      return undefined\n    }\n\n    if (isJSONArray(value)) {\n      for (let i = startIndex; i <= endIndex; i++) {\n        const value = callback(sharedPath.concat(String(i)))\n        if (value !== undefined) {\n          return value\n        }\n      }\n\n      return undefined\n    }\n  }\n\n  throw new Error('Failed to create selection')\n}\n\nexport function getParentPath(selection: JSONSelection): JSONPath {\n  if (isInsideSelection(selection)) {\n    return selection.path\n  } else {\n    return initial(getFocusPath(selection))\n  }\n}\n\nexport function getStartPath(json: unknown, selection: JSONSelection): JSONPath {\n  if (!isMultiSelection(selection)) {\n    return selection.path\n  }\n\n  const anchorIndex = getChildIndex(json, selection, selection.anchorPath)\n  const focusIndex = getChildIndex(json, selection, selection.focusPath)\n\n  return focusIndex < anchorIndex ? selection.focusPath : selection.anchorPath\n}\n\nexport function getEndPath(json: unknown, selection: JSONSelection): JSONPath {\n  if (!isMultiSelection(selection)) {\n    return selection.path\n  }\n\n  const anchorIndex = getChildIndex(json, selection, selection.anchorPath)\n  const focusIndex = getChildIndex(json, selection, selection.focusPath)\n\n  return focusIndex > anchorIndex ? selection.focusPath : selection.anchorPath\n}\n\n// TODO: write unit test\nexport function isSelectionInsidePath(selection: JSONSelection, path: JSONPath): boolean {\n  return (\n    pathStartsWith(getFocusPath(selection), path) &&\n    (getFocusPath(selection).length > path.length || isInsideSelection(selection))\n  )\n}\n\nexport function getSelectionUp(\n  json: unknown,\n  documentState: DocumentState,\n  keepAnchorPath = false\n): JSONSelection | null {\n  const selection = documentState.selection\n  if (!selection) {\n    return null\n  }\n\n  const focusPath = keepAnchorPath ? getFocusPath(selection) : getStartPath(json, selection)\n  const previousPath = getPreviousVisiblePath(json, documentState, focusPath)\n\n  if (keepAnchorPath) {\n    // create a multi-selection with multiple nodes\n    if (isInsideSelection(selection) || isAfterSelection(selection)) {\n      return previousPath !== null ? createMultiSelection(focusPath, focusPath) : null\n    }\n\n    return previousPath !== null\n      ? createMultiSelection(getAnchorPath(selection), previousPath)\n      : null\n  }\n\n  if (isAfterSelection(selection)) {\n    // select the node itself, not the previous node,\n    // FIXME: when after an expanded object/array, should go to the last item inside the object/array\n    return createValueSelection(focusPath, false)\n  }\n\n  if (isInsideSelection(selection)) {\n    // select the node itself, not the previous node,\n    return createValueSelection(focusPath, false)\n  }\n\n  if (isKeySelection(selection)) {\n    if (previousPath == null || previousPath.length === 0) {\n      return null\n    }\n\n    const parentPath = initial(previousPath)\n    const parent = getIn(json, parentPath)\n    if (Array.isArray(parent) || isEmpty(previousPath)) {\n      // switch to value selection: array has no keys, and root object also not\n      return createValueSelection(previousPath, false)\n    } else {\n      return createKeySelection(previousPath, false)\n    }\n  }\n\n  if (isValueSelection(selection)) {\n    return previousPath !== null ? createValueSelection(previousPath, false) : null\n  }\n\n  if (previousPath !== null) {\n    return createValueSelection(previousPath, false)\n  }\n\n  return null\n}\n\nexport function getSelectionDown(\n  json: unknown,\n  documentState: DocumentState,\n  keepAnchorPath = false\n): JSONSelection | null {\n  const selection = documentState.selection\n  if (!selection) {\n    return null\n  }\n  const focusPath = keepAnchorPath ? getFocusPath(selection) : getEndPath(json, selection)\n\n  // if the focusPath is an Array or object, we must not step into it but\n  // over it, we pass state with this array/object collapsed\n  const collapsedState = isObjectOrArray(getIn(json, focusPath))\n    ? collapsePath(documentState, focusPath)\n    : documentState\n\n  const nextPath = getNextVisiblePath(json, documentState, focusPath)\n  const nextPathAfter = getNextVisiblePath(json, collapsedState, focusPath)\n\n  if (keepAnchorPath) {\n    // create a multi-selection with multiple nodes\n    if (isInsideSelection(selection)) {\n      return nextPath !== null ? createMultiSelection(nextPath, nextPath) : null\n    }\n\n    if (isAfterSelection(selection)) {\n      return nextPathAfter !== null ? createMultiSelection(nextPathAfter, nextPathAfter) : null\n    }\n\n    return nextPathAfter !== null\n      ? createMultiSelection(getAnchorPath(selection), nextPathAfter)\n      : null\n  }\n\n  if (isAfterSelection(selection)) {\n    return nextPathAfter !== null ? createValueSelection(nextPathAfter, false) : null\n  }\n\n  if (isInsideSelection(selection)) {\n    return nextPath !== null ? createValueSelection(nextPath, false) : null\n  }\n\n  if (isValueSelection(selection)) {\n    return nextPath !== null ? createValueSelection(nextPath, false) : null\n  }\n\n  if (isKeySelection(selection)) {\n    if (nextPath === null || nextPath.length === 0) {\n      return null\n    }\n\n    const parentPath = initial(nextPath) // not nextPathAfter!\n    const parent = getIn(json, parentPath)\n    if (Array.isArray(parent)) {\n      // switch to value selection: array has no keys\n      return createValueSelection(nextPath, false)\n    } else {\n      return createKeySelection(nextPath, false)\n    }\n  }\n\n  if (isMultiSelection(selection)) {\n    return nextPathAfter !== null\n      ? createValueSelection(nextPathAfter, false)\n      : nextPath !== null\n        ? createValueSelection(nextPath, false)\n        : null\n  }\n\n  return null\n}\n\n/**\n * Get the next selection for a value inside the current object/array\n * If there is no next value, select AFTER.\n * Only applicable for ValueSelection\n */\nexport function getSelectionNextInside(\n  json: unknown,\n  documentState: DocumentState,\n  path: JSONPath\n): JSONSelection | null {\n  // TODO: write unit tests for getSelectionNextInside\n  const parentPath = initial(path)\n  const childPath = [last(path) as string]\n\n  const parent: unknown | undefined = getIn(json, parentPath)\n  const nextPathInside = parent ? getNextVisiblePath(parent, documentState, childPath) : undefined\n\n  if (nextPathInside) {\n    return createValueSelection(parentPath.concat(nextPathInside), false)\n  } else {\n    return createAfterSelection(path)\n  }\n}\n\n/**\n * Find the caret position and its siblings for a given selection\n */\n// TODO: unit test\nexport function findCaretAndSiblings(\n  json: unknown,\n  documentState: DocumentState,\n  includeInside: boolean\n): { next: CaretPosition | null; caret: CaretPosition | null; previous: CaretPosition | null } {\n  const selection = documentState.selection\n  if (!selection) {\n    return { caret: null, previous: null, next: null }\n  }\n  const visibleCaretPositions = getVisibleCaretPositions(json, documentState, includeInside)\n\n  const index = visibleCaretPositions.findIndex((caret) => {\n    return (\n      isEqual(caret.path, getFocusPath(selection)) && String(caret.type) === String(selection.type)\n    )\n  })\n\n  return {\n    caret: index !== -1 ? visibleCaretPositions[index] : null,\n\n    previous: index !== -1 && index > 0 ? visibleCaretPositions[index - 1] : null,\n\n    next:\n      index !== -1 && index < visibleCaretPositions.length - 1\n        ? visibleCaretPositions[index + 1]\n        : null\n  }\n}\n\nexport function getSelectionLeft(\n  json: unknown,\n  documentState: DocumentState,\n  keepAnchorPath = false,\n  includeInside = true\n): JSONSelection | null {\n  const selection = documentState.selection\n  if (!selection) {\n    return null\n  }\n\n  const { caret, previous } = findCaretAndSiblings(json, documentState, includeInside)\n\n  if (keepAnchorPath) {\n    if (!isMultiSelection(selection)) {\n      return createMultiSelection(selection.path, selection.path)\n    }\n\n    return null\n  }\n\n  if (caret && previous) {\n    return fromCaretPosition(previous)\n  }\n\n  const parentPath = initial(getFocusPath(selection))\n  const parent = getIn(json, parentPath)\n\n  if (isValueSelection(selection) && Array.isArray(parent)) {\n    return createMultiSelection(selection.path, selection.path)\n  }\n\n  if (isMultiSelection(selection) && !Array.isArray(parent)) {\n    return createKeySelection(selection.focusPath, false)\n  }\n\n  return null\n}\n\nexport function getSelectionRight(\n  json: unknown,\n  documentState: DocumentState,\n  keepAnchorPath = false,\n  includeInside = true\n): JSONSelection | null {\n  const selection = documentState.selection\n  if (!selection) {\n    return null\n  }\n\n  const { caret, next } = findCaretAndSiblings(json, documentState, includeInside)\n\n  if (keepAnchorPath) {\n    if (!isMultiSelection(selection)) {\n      return createMultiSelection(selection.path, selection.path)\n    }\n\n    return null\n  }\n\n  if (caret && next) {\n    return fromCaretPosition(next)\n  }\n\n  if (isMultiSelection(selection)) {\n    return createValueSelection(selection.focusPath, false)\n  }\n\n  return null\n}\n\n/**\n * Get a proper initial selection based on what is visible\n */\nexport function getInitialSelection(json: unknown, documentState: DocumentState): JSONSelection {\n  const visiblePaths = getVisiblePaths(json, documentState)\n\n  // find the first, deepest nested entry (normally a value, not an Object/Array)\n  let index = 0\n  while (\n    index < visiblePaths.length - 1 &&\n    visiblePaths[index + 1].length > visiblePaths[index].length\n  ) {\n    index++\n  }\n\n  const path = visiblePaths[index]\n  return path === undefined || path.length === 0 || Array.isArray(getIn(json, initial(path)))\n    ? createValueSelection(path, false) // Array items and root object/array do not have a key, so select value in that case\n    : createKeySelection(path, false)\n}\n\nexport function createSelectionFromOperations(\n  json: unknown,\n  operations: JSONPatchDocument\n): JSONSelection | null {\n  if (operations.length === 1) {\n    const operation = first(operations) as JSONPatchOperation\n    if (operation.op === 'replace') {\n      // a replaced value\n      const path = parsePath(json, operation.path)\n\n      return createValueSelection(path, false)\n    }\n  }\n\n  if (!isEmpty(operations) && operations.every((operation) => operation.op === 'move')) {\n    const firstOp = first(operations)\n    const otherOps = operations.slice(1)\n\n    if (\n      (isJSONPatchCopy(firstOp) || isJSONPatchMove(firstOp)) &&\n      firstOp.from !== firstOp.path &&\n      otherOps.every((op) => (isJSONPatchCopy(op) || isJSONPatchMove(op)) && op.from === op.path)\n    ) {\n      // a renamed key\n      const path = parsePath(json, firstOp.path)\n\n      return createKeySelection(path, false)\n    }\n  }\n\n  const paths = operations\n    .filter((operation) => {\n      return (\n        operation.op !== 'test' &&\n        operation.op !== 'remove' &&\n        (operation.op !== 'move' || operation.from !== operation.path) &&\n        typeof operation.path === 'string'\n      )\n    })\n    .map((operation) => parsePath(json, operation.path))\n\n  if (isEmpty(paths)) {\n    return null\n  }\n\n  // TODO: make this function robust against operations which do not have consecutive paths or have wrongly ordered paths\n\n  return {\n    type: SelectionType.multi,\n    anchorPath: first(paths) as JSONPath,\n    focusPath: last(paths) as JSONPath\n  }\n}\n\n/**\n * Find the common path of two paths.\n * For example findCommonRoot(['arr', '1', 'name'], ['arr', '1', 'address', 'contact']) returns ['arr', '1']\n */\n// TODO: write unit tests for findSharedPath\nexport function findSharedPath(path1: JSONPath, path2: JSONPath): JSONPath {\n  let i = 0\n  while (i < path1.length && i < path2.length && path1[i] === path2[i]) {\n    i++\n  }\n\n  return path1.slice(0, i)\n}\n\nexport function singleItemSelected(selection: JSONSelection | null): boolean {\n  return (\n    isKeySelection(selection) ||\n    isValueSelection(selection) ||\n    isMultiSelectionWithOneItem(selection)\n  )\n}\n\nexport function findRootPath(json: unknown, selection: JSONSelection): JSONPath {\n  return singleItemSelected(selection) && isObjectOrArray(getIn(json, getFocusPath(selection)))\n    ? getFocusPath(selection)\n    : initial(getFocusPath(selection)) // the parent path of the paths\n}\n\n// TODO: unit test\nexport function pathStartsWith(path: JSONPath, parentPath: JSONPath): boolean {\n  if (path.length < parentPath.length) {\n    return false\n  }\n\n  for (let i = 0; i < parentPath.length; i++) {\n    if (path[i] !== parentPath[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// TODO: write unit tests\nexport function removeEditModeFromSelection(documentState: DocumentState): DocumentState {\n  const selection = documentState.selection\n\n  if ((isKeySelection(selection) || isValueSelection(selection)) && selection.edit) {\n    return {\n      ...documentState,\n      selection: {\n        ...selection,\n        edit: false\n      }\n    }\n  }\n\n  return documentState\n}\n\nexport function createKeySelection(path: JSONPath, edit: boolean): KeySelection {\n  return {\n    type: SelectionType.key,\n    path,\n    edit\n  }\n}\n\nexport function createValueSelection(path: JSONPath, edit: boolean): ValueSelection {\n  return {\n    type: SelectionType.value,\n    path,\n    edit\n  }\n}\n\nexport function createInsideSelection(path: JSONPath): InsideSelection {\n  return {\n    type: SelectionType.inside,\n    path\n  }\n}\n\nexport function createAfterSelection(path: JSONPath): AfterSelection {\n  return {\n    type: SelectionType.after,\n    path\n  }\n}\n\nexport function createMultiSelection(anchorPath: JSONPath, focusPath: JSONPath): MultiSelection {\n  // normalize the paths to both be a child of a shared parent\n  const sharedPath = findSharedPath(anchorPath, focusPath)\n  const isParent = anchorPath.length > sharedPath.length && focusPath.length > sharedPath.length\n\n  return {\n    type: SelectionType.multi,\n    anchorPath: isParent ? sharedPath.concat(anchorPath[sharedPath.length]) : sharedPath,\n    focusPath: isParent ? sharedPath.concat(focusPath[sharedPath.length]) : sharedPath\n  }\n}\n\n/**\n * Turn selected contents into plain text partial JSON, usable for copying to\n * clipboard for example.\n */\nexport function selectionToPartialJson(\n  json: unknown,\n  selection: JSONSelection | null,\n  indentation: number | string | undefined,\n  parser: JSONParser\n): string | null {\n  if (isKeySelection(selection)) {\n    return String(last(selection.path))\n  }\n\n  if (isValueSelection(selection)) {\n    const value = getIn(json, selection.path)\n    return typeof value === 'string' ? value : parser.stringify(value, null, indentation) ?? null // TODO: customizable indentation?\n  }\n\n  if (isMultiSelection(selection)) {\n    if (isEmpty(selection.focusPath)) {\n      // root object -> does not have a parent key/index\n      return parser.stringify(json, null, indentation) ?? null\n    }\n\n    const parentPath = getParentPath(selection)\n    const parent = getIn(json, parentPath)\n    if (Array.isArray(parent)) {\n      if (isMultiSelectionWithOneItem(selection)) {\n        // do not suffix a single selected array item with a comma\n        const item = getIn(json, selection.focusPath)\n        return parser.stringify(item, null, indentation) ?? null\n      } else {\n        return getSelectionPaths(json, selection)\n          .map((path) => {\n            const item = getIn(json, path)\n            return `${parser.stringify(item, null, indentation)},`\n          })\n          .join('\\n')\n      }\n    } else {\n      // parent is Object\n      return getSelectionPaths(json, selection)\n        .map((path) => {\n          const key = last(path)\n          const value = getIn(json, path)\n          return `${parser.stringify(key)}: ${parser.stringify(value, null, indentation)},`\n        })\n        .join('\\n')\n    }\n  }\n\n  return null\n}\n\nexport function isEditingSelection(selection: JSONSelection | null): boolean {\n  return (isKeySelection(selection) || isValueSelection(selection)) && selection.edit === true\n}\n\nexport function updateSelectionInDocumentState(\n  documentState: DocumentState,\n  selection: JSONSelection | null,\n  replaceIfUndefined = true\n): DocumentState {\n  if (!selection && !replaceIfUndefined) {\n    return documentState\n  }\n\n  return {\n    ...documentState,\n    selection\n  }\n}\n\n/**\n * Create a selection which selects the root of the document\n */\n// TODO: write unit tests\nexport function selectAll(): JSONSelection {\n  return createValueSelection([], false)\n}\n\n// TODO: write unit tests\nexport function hasSelectionContents(selection: JSONSelection | null): boolean {\n  return isKeySelection(selection) || isValueSelection(selection) || isMultiSelection(selection)\n}\n\n/**\n * Test whether the current selection can be converted.\n * That is the case when the selection is a key/value, or a multi selection with only one path\n */\nexport function canConvert(selection: JSONSelection | null): boolean {\n  return (\n    isKeySelection(selection) ||\n    isValueSelection(selection) ||\n    isMultiSelectionWithOneItem(selection)\n  )\n}\n\n// TODO: unit test\nexport function fromCaretPosition(caretPosition: CaretPosition): JSONSelection {\n  switch (caretPosition.type) {\n    case CaretType.key:\n      return createKeySelection(caretPosition.path, false)\n    case CaretType.value:\n      return createValueSelection(caretPosition.path, false)\n    case CaretType.after:\n      return createAfterSelection(caretPosition.path)\n    case CaretType.inside:\n      return createInsideSelection(caretPosition.path)\n  }\n}\n\n// TODO: unit test\nexport function fromSelectionType(\n  json: unknown,\n  selectionType: SelectionType,\n  path: JSONPath\n): JSONSelection {\n  switch (selectionType) {\n    case SelectionType.key:\n      return createKeySelection(path, false)\n    case SelectionType.value:\n      return createValueSelection(path, false)\n    case SelectionType.after:\n      return createAfterSelection(path)\n    case SelectionType.inside:\n      return createInsideSelection(path)\n    case SelectionType.multi:\n    case SelectionType.text: // type `text` is not applicable, but we need to handle all types\n      return createMultiSelection(path, path)\n  }\n}\n\nexport function selectionIfOverlapping(\n  json: unknown | undefined,\n  selection: JSONSelection | null,\n  path: JSONPath\n): JSONSelection | null {\n  if (!selection) {\n    return null\n  }\n\n  if (pathInSelection(json, selection, path)) {\n    return selection\n  }\n\n  const sharedPath = isMultiSelection(selection) ? initial(selection.focusPath) : selection.path\n  if (pathStartsWith(sharedPath, path)) {\n    return selection\n  }\n\n  return null\n}\n\nexport function pathInSelection(\n  json: unknown | undefined,\n  selection: JSONSelection | null,\n  path: JSONPath\n): boolean {\n  if (json === undefined || !selection) {\n    return false\n  }\n\n  if (isKeySelection(selection) || isInsideSelection(selection) || isAfterSelection(selection)) {\n    return isEqual(selection.path, path)\n  }\n\n  if (isValueSelection(selection)) {\n    return pathStartsWith(path, selection.path)\n  }\n\n  if (isMultiSelection(selection)) {\n    const startPath = getStartPath(json, selection)\n    const endPath = getEndPath(json, selection)\n    const parentPath = initial(selection.focusPath)\n\n    if (!pathStartsWith(path, parentPath) || path.length <= parentPath.length) {\n      return false\n    }\n\n    const startIndex = getChildIndex(json, selection, startPath)\n    const endIndex = getChildIndex(json, selection, endPath)\n    const pathIndex = getChildIndex(json, selection, path)\n    return pathIndex !== -1 && pathIndex >= startIndex && pathIndex <= endIndex\n  }\n\n  return false\n}\n\nfunction getChildIndex(json: unknown, selection: MultiSelection, path: JSONPath): number {\n  const parentPath = initial(selection.focusPath)\n  if (!pathStartsWith(path, parentPath) || path.length <= parentPath.length) {\n    return -1\n  }\n\n  const key = path[parentPath.length]\n  const parent = getIn(json, parentPath)\n\n  if (isJSONObject(parent)) {\n    const keys = Object.keys(parent)\n    return keys.indexOf(key)\n  }\n\n  if (isJSONArray(parent)) {\n    const index = int(key)\n    if (index < parent.length) {\n      return index\n    }\n  }\n\n  return -1\n}\n\n// TODO: write some unit tests\nexport function getFocusPath(selection: JSONSelection): JSONPath {\n  return isMultiSelection(selection) ? selection.focusPath : selection.path\n}\n\n// TODO: write some unit tests\nexport function getAnchorPath(selection: JSONSelection): JSONPath {\n  return isMultiSelection(selection) ? selection.anchorPath : selection.path\n}\n","/**\n * A simplified version of https://github.com/JedWatson/classnames\n *\n * Example usage:\n *\n *     classnames('primary-button', { selected: true }, 'left')\n *\n */\nexport function classnames(...args: Array<string | Record<string, boolean> | undefined>): string {\n  const classes = []\n\n  for (const arg of args) {\n    if (typeof arg === 'string') {\n      classes.push(arg)\n    }\n\n    if (arg && typeof arg === 'object') {\n      for (const key in arg) {\n        if (Object.hasOwnProperty.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n","import { isUrl, valueType } from '$lib/utils/typeUtils.js'\nimport type { JSONParser } from '$lib/types.js'\nimport { classnames } from '$lib/utils/cssUtils.js'\n\nexport function getValueClass(value: unknown, parser: JSONParser): string {\n  const type = valueType(value, parser)\n\n  return classnames('jse-value', 'jse-' + type, {\n    'jse-url': isUrl(value),\n    'jse-empty': typeof value === 'string' && value.length === 0\n  })\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { onDestroy, onMount } from 'svelte'\n  import { addNewLineSuffix, removeNewLineSuffix, setCursorToEnd } from '$lib/utils/domUtils.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { noop } from 'lodash-es'\n  import type { OnFind, OnPaste } from '$lib/types'\n  import { UpdateSelectionAfterChange } from '$lib/types'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  const debug = createDebug('jsoneditor:EditableDiv')\n\n  export let value: string\n  export let shortText = false\n  export let onChange: (newValue: string, updateSelection: UpdateSelectionAfterChange) => void\n  export let onCancel: () => void\n  export let onFind: OnFind\n  export let onPaste: OnPaste = noop\n  export let onValueClass: (value: string) => string = () => ''\n\n  let domValue: HTMLDivElement | undefined\n  let valueClass: string\n  $: valueClass = onValueClass(value)\n  let closed = false\n\n  onMount(() => {\n    debug('onMount', { value })\n    setDomValue(value)\n\n    // focus\n    if (domValue) {\n      setCursorToEnd(domValue)\n\n      // The refresh method can be used to update the classnames for example\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domValue.refresh = handleValueInput\n\n      // The cancel method can be used to cancel editing, without firing a change\n      // when the contents did change in the meantime. It is the same as pressing ESC\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domValue.cancel = handleCancel\n    }\n  })\n\n  onDestroy(() => {\n    const newValue = getDomValue()\n\n    debug('onDestroy', { closed, value, newValue })\n\n    if (!closed && newValue !== value) {\n      onChange(newValue, UpdateSelectionAfterChange.no)\n    }\n  })\n\n  function getDomValue(): string {\n    if (!domValue) {\n      return ''\n    }\n    return removeNewLineSuffix(domValue.innerText)\n  }\n\n  function setDomValue(updatedValue: string) {\n    if (!domValue) {\n      return\n    }\n    domValue.innerText = addNewLineSuffix(updatedValue)\n  }\n\n  function handleValueInput() {\n    const newValue = getDomValue()\n\n    if (newValue === '') {\n      // immediately update to clean up any left over <br/>\n      setDomValue('')\n    }\n\n    // update class\n    valueClass = onValueClass(newValue)\n  }\n\n  function handleCancel() {\n    // cancel changes (needed to prevent triggering a change onDestroy)\n    closed = true\n\n    onCancel()\n  }\n\n  function handleValueKeyDown(event: KeyboardEvent) {\n    event.stopPropagation()\n\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Escape') {\n      handleCancel()\n    }\n\n    if (combo === 'Enter' || combo === 'Tab') {\n      // apply changes\n      closed = true\n\n      const newValue = getDomValue()\n      onChange(newValue, UpdateSelectionAfterChange.nextInside)\n    }\n\n    if (combo === 'Ctrl+F') {\n      event.preventDefault()\n      onFind(false)\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      onFind(true)\n    }\n  }\n\n  function handleValuePaste(event: ClipboardEvent) {\n    event.stopPropagation()\n\n    if (!onPaste || !event.clipboardData) {\n      return\n    }\n\n    const clipboardText = event.clipboardData.getData('text/plain')\n    onPaste(clipboardText)\n  }\n\n  function handleBlur() {\n    const hasFocus = document.hasFocus()\n    const newValue = getDomValue()\n\n    debug('handleBlur', { hasFocus, closed, value, newValue })\n\n    // we only want to close the editable div when the focus did go to another\n    // element on the same page, but not when the user switches to another\n    // application or browser tab to copy/paste something whilst still editing\n    // the value, hence the check for document.hasFocus()\n    if (document.hasFocus() && !closed) {\n      closed = true\n      if (newValue !== value) {\n        onChange(newValue, UpdateSelectionAfterChange.self)\n      } else {\n        // Note that we do not fire an onCancel here: a blur action\n        // is caused by the user clicking somewhere else. If we apply\n        // onCancel now, we would override the selection that the user\n        // wants by clicking somewhere else in the editor (since `blur`\n        // is occurring *after* `mousedown`).\n      }\n    }\n  }\n</script>\n\n<div\n  role=\"textbox\"\n  tabindex=\"0\"\n  class={classnames('jse-editable-div', valueClass, { 'jse-short-text': shortText })}\n  contenteditable=\"true\"\n  spellcheck=\"false\"\n  on:input={handleValueInput}\n  on:keydown={handleValueKeyDown}\n  on:paste={handleValuePaste}\n  on:blur={handleBlur}\n  bind:this={domValue}\n/>\n\n<style src=\"./EditableDiv.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import { isObjectOrArray, stringConvert } from '$lib/utils/typeUtils.js'\n  import { createValueSelection, getFocusPath } from '$lib/logic/selection.js'\n  import { getValueClass } from '$lib/plugins/value/components/utils/getValueClass.js'\n  import EditableDiv from '../../../components/controls/EditableDiv.svelte'\n  import type {\n    FindNextInside,\n    JSONParser,\n    OnFind,\n    OnJSONSelect,\n    OnPasteJson,\n    OnPatch,\n    ValueNormalization\n  } from '$lib/types.js'\n  import { UpdateSelectionAfterChange } from '$lib/types.js'\n  import { isEqual } from 'lodash-es'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let parser: JSONParser\n  export let normalization: ValueNormalization\n  export let enforceString: boolean\n  export let onPatch: OnPatch\n  export let onPasteJson: OnPasteJson\n  export let onSelect: OnJSONSelect\n  export let onFind: OnFind\n  export let focus: () => void\n  export let findNextInside: FindNextInside\n\n  function convert(value: string): unknown {\n    return enforceString ? value : stringConvert(value, parser)\n  }\n\n  function handleChangeValue(newValue: string, updateSelection: UpdateSelectionAfterChange) {\n    onPatch(\n      [\n        {\n          op: 'replace',\n          path: compileJSONPointer(path),\n          value: convert(normalization.unescapeValue(newValue))\n        }\n      ],\n      (patchedJson, patchedState) => {\n        // Leave the selection as is when it is no longer the path that we were editing here\n        // This happens for example when the user clicks or double-clicks on another value\n        // whilst editing a value\n        if (patchedState.selection && !isEqual(path, getFocusPath(patchedState.selection))) {\n          return undefined\n        }\n\n        const selection =\n          updateSelection === UpdateSelectionAfterChange.nextInside\n            ? findNextInside(path)\n            : createValueSelection(path, false)\n\n        return {\n          state: {\n            ...patchedState,\n            selection\n          }\n        }\n      }\n    )\n\n    focus()\n  }\n\n  function handleCancelChange() {\n    onSelect(createValueSelection(path, false))\n    focus()\n  }\n\n  function handlePaste(pastedText: string): void {\n    try {\n      const pastedJson = parser.parse(pastedText)\n      if (isObjectOrArray(pastedJson)) {\n        onPasteJson({\n          path,\n          contents: pastedJson\n        })\n      }\n    } catch (err) {\n      // silently ignore: thee pasted text is no valid JSON object or array,\n      // no need to do anything\n    }\n  }\n\n  function handleOnValueClass(value: string): string {\n    return getValueClass(convert(normalization.unescapeValue(value)), parser)\n  }\n</script>\n\n<EditableDiv\n  value={normalization.escapeValue(value)}\n  onChange={handleChangeValue}\n  onCancel={handleCancelChange}\n  onPaste={handlePaste}\n  {onFind}\n  onValueClass={handleOnValueClass}\n/>\n","import { cloneDeepWith, first, initial, isEmpty, last, times } from 'lodash-es'\nimport {\n  compileJSONPointer,\n  existsIn,\n  getIn,\n  isJSONArray,\n  isJSONObject,\n  isJSONPatchMove,\n  isJSONPatchRemove,\n  isJSONPatchReplace,\n  type JSONPatchAdd,\n  type JSONPatchCopy,\n  type JSONPatchDocument,\n  type JSONPatchOperation,\n  type JSONPath,\n  parseJSONPointer,\n  revertJSONPatch\n} from 'immutable-json-patch'\nimport { parseAndRepair, parseAndRepairOrUndefined, parsePartialJson } from '../utils/jsonUtils.js'\nimport { findUniqueName } from '../utils/stringUtils.js'\nimport { isObject, isObjectOrArray } from '../utils/typeUtils.js'\nimport { getNextKeys } from './documentState.js'\nimport {\n  createAfterSelection,\n  createInsideSelection,\n  createSelectionFromOperations,\n  createValueSelection,\n  getEndPath,\n  getFocusPath,\n  getParentPath,\n  getSelectionPaths,\n  getStartPath,\n  isAfterSelection,\n  isInsideSelection,\n  isKeySelection,\n  isMultiSelection,\n  isValueSelection,\n  pathStartsWith\n} from './selection.js'\nimport type { ClipboardValues, DragInsideAction, JSONParser, JSONSelection } from '$lib/types'\nimport { int } from '../utils/numberUtils.js'\n\n/**\n * Create a JSONPatch for an insert operation.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the inserted node in case of duplicating\n * and object property\n */\n// TODO: write tests\nexport function insertBefore(\n  json: unknown,\n  path: JSONPath,\n  values: ClipboardValues\n): JSONPatchDocument {\n  const parentPath = initial(path)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    // the path is parsed from a JSONPatch operation,\n    // so array indices are a string which we have to parse into a number\n    const offset = int(last(path) as string)\n    return values.map((entry, index) => ({\n      op: 'add',\n      path: compileJSONPointer(parentPath.concat(String(offset + index))),\n      value: entry.value\n    }))\n  } else if (isJSONObject(parent)) {\n    // 'object'\n    const afterKey = last(path)\n    const keys = Object.keys(parent)\n    const nextKeys = afterKey !== undefined ? getNextKeys(keys, afterKey, true) : []\n\n    return [\n      // insert new values\n      ...values.map((entry) => {\n        const newProp = findUniqueName(entry.key, keys)\n        return {\n          op: 'add',\n          path: compileJSONPointer(parentPath.concat(newProp)),\n          value: entry.value\n        } as JSONPatchAdd\n      }),\n\n      // move all lower down keys so the inserted key will maintain its position\n      ...nextKeys.map((key) => moveDown(parentPath, key))\n    ]\n  } else {\n    throw new Error('Cannot create insert operations: parent must be an Object or Array')\n  }\n}\n\n/**\n * Create a JSONPatch for an append operation. The values will be appended\n * to the end of the array or object.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the inserted node in case of duplicating\n * and object property\n */\nexport function append(json: unknown, path: JSONPath, values: ClipboardValues): JSONPatchDocument {\n  const parent = getIn(json, path)\n\n  if (Array.isArray(parent)) {\n    const offset = parent.length\n    return values.map((entry, index) => ({\n      op: 'add',\n      path: compileJSONPointer(path.concat(String(offset + index))),\n      value: entry.value\n    }))\n  } else {\n    // 'object'\n    return values.map((entry) => {\n      const newProp = findUniqueName(entry.key, Object.keys(parent as Record<string, unknown>))\n      return {\n        op: 'add',\n        path: compileJSONPointer(path.concat(newProp)),\n        value: entry.value\n      }\n    })\n  }\n}\n\n/**\n * Rename an object key\n * Not applicable to arrays\n */\nexport function rename(\n  parentPath: JSONPath,\n  keys: string[],\n  oldKey: string,\n  newKey: string\n): JSONPatchDocument {\n  const filteredKeys = keys.filter((key) => key !== oldKey)\n  const newKeyUnique = findUniqueName(newKey, filteredKeys)\n  const nextKeys = getNextKeys(keys, oldKey, false)\n\n  return [\n    // rename a key\n    {\n      op: 'move',\n      from: compileJSONPointer(parentPath.concat(oldKey)),\n      path: compileJSONPointer(parentPath.concat(newKeyUnique))\n    },\n\n    // move all lower down keys so the renamed key will maintain it's position\n    ...nextKeys.map((key) => moveDown(parentPath, key))\n  ]\n}\n\n/**\n * Create a JSONPatch for an insert operation.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the inserted node in case of duplicating\n * and object property\n */\nexport function replace(\n  json: unknown,\n  paths: JSONPath[],\n  values: ClipboardValues\n): JSONPatchDocument {\n  const firstPath = first(paths)\n  const parentPath = initial(firstPath)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    const firstPath = first(paths)\n    const offset = firstPath ? int(last(firstPath) as string) : 0\n\n    return [\n      // remove operations\n      ...removeAll(paths),\n\n      // insert operations\n      ...values.map((entry, index) => {\n        const operation: JSONPatchOperation = {\n          op: 'add',\n          path: compileJSONPointer(parentPath.concat(String(index + offset))),\n          value: entry.value\n        }\n\n        return operation\n      })\n    ]\n  } else if (isJSONObject(parent)) {\n    // parent is Object\n    // if we're going to replace an existing object with key \"a\" with a new\n    // key \"a\", we must not create a new unique name \"a (copy)\".\n    const lastPath = last(paths)\n    const parentPath = initial(lastPath)\n    const beforeKey = last(lastPath)\n    const keys: string[] = Object.keys(parent)\n    const nextKeys = beforeKey !== undefined ? getNextKeys(keys, beforeKey, false) : []\n    const removeKeys = new Set(paths.map((path) => last(path)))\n    const filteredKeys = keys.filter((key) => !removeKeys.has(key))\n\n    return [\n      // remove operations\n      ...removeAll(paths),\n\n      // insert operations\n      ...values.map((entry) => {\n        const newProp = findUniqueName(entry.key, filteredKeys)\n        return {\n          op: 'add',\n          path: compileJSONPointer(parentPath.concat(newProp)),\n          value: entry.value\n        } as JSONPatchAdd\n      }),\n\n      // move down operations\n      // move all lower down keys so the renamed key will maintain its position\n      ...nextKeys.map((key) => moveDown(parentPath, key))\n    ]\n  } else {\n    throw new Error('Cannot create replace operations: parent must be an Object or Array')\n  }\n}\n\n/**\n * Create a JSONPatch for a duplicate action.\n *\n * This function needs the current data in order to be able to determine\n * a unique property name for the duplicated node in case of duplicating\n * and object property\n */\nexport function duplicate(json: unknown, paths: JSONPath[]): JSONPatchDocument {\n  // FIXME: here we assume paths is sorted correctly, that's a dangerous assumption\n  const lastPath = last(paths)\n\n  if (isEmpty(lastPath)) {\n    throw new Error('Cannot duplicate root object')\n  }\n\n  const parentPath = initial(lastPath)\n  const beforeKey = last(lastPath)\n  const parent = getIn(json, parentPath)\n\n  if (isJSONArray(parent)) {\n    const lastPath = last(paths)\n    const offset = lastPath ? int(last(lastPath) as string) + 1 : 0\n\n    return [\n      // copy operations\n      ...paths.map((path, index) => {\n        const operation: JSONPatchOperation = {\n          op: 'copy',\n          from: compileJSONPointer(path),\n          path: compileJSONPointer(parentPath.concat(String(index + offset)))\n        }\n\n        return operation\n      })\n    ]\n  } else if (isJSONObject(parent)) {\n    // 'object'\n    const keys = Object.keys(parent)\n    const nextKeys = beforeKey !== undefined ? getNextKeys(keys, beforeKey, false) : []\n\n    return [\n      // copy operations\n      ...paths.map((path) => {\n        const prop = last(path) as string\n        const newProp = findUniqueName(prop, keys)\n\n        return {\n          op: 'copy',\n          from: compileJSONPointer(path),\n          path: compileJSONPointer(parentPath.concat(newProp))\n        } as JSONPatchCopy\n      }),\n\n      // move down operations\n      // move all lower down keys so the renamed key will maintain it's position\n      ...nextKeys.map((key) => moveDown(parentPath, key))\n    ]\n  } else {\n    throw new Error('Cannot create duplicate operations: parent must be an Object or Array')\n  }\n}\n\n/**\n * Create a JSONPatch for an extract action.\n */\n// TODO: write unit tests\nexport function extract(json: unknown, selection: JSONSelection): JSONPatchDocument {\n  if (isValueSelection(selection)) {\n    return [\n      {\n        op: 'move',\n        from: compileJSONPointer(selection.path),\n        path: ''\n      }\n    ]\n  }\n\n  if (isMultiSelection(selection)) {\n    const parentPath = initial(selection.focusPath)\n    const parent = getIn(json, parentPath)\n\n    if (isJSONArray(parent)) {\n      const value = getSelectionPaths(json, selection).map((path) => {\n        const index = int(last(path) as string)\n        return parent[index]\n      })\n\n      return [\n        {\n          op: 'replace',\n          path: '',\n          value\n        }\n      ]\n    } else if (isJSONObject(parent)) {\n      // object\n      const value: Record<string, unknown> = {}\n      getSelectionPaths(json, selection).forEach((path) => {\n        const key = String(last(path))\n        value[key] = parent[key]\n      })\n\n      return [\n        {\n          op: 'replace',\n          path: '',\n          value\n        }\n      ]\n    }\n  } else {\n    throw new Error('Cannot create extract operations: parent must be an Object or Array')\n  }\n\n  // this should never happen\n  throw new Error('Cannot extract: unsupported type of selection ' + JSON.stringify(selection))\n}\n\n// TODO: write unit tests\nexport function insert(\n  json: unknown,\n  selection: JSONSelection | null,\n  clipboardText: string,\n  parser: JSONParser\n): JSONPatchDocument {\n  if (isKeySelection(selection)) {\n    // rename key\n    const clipboard = parseAndRepairOrUndefined(clipboardText, parser)\n    const parentPath = initial(selection.path)\n    const parent = getIn(json, parentPath)\n    const keys = Object.keys(parent as Record<string, unknown>)\n    const oldKey = last(selection.path) as string\n    const newKey = typeof clipboard === 'string' ? clipboard : clipboardText\n\n    return rename(parentPath, keys, oldKey, newKey)\n  }\n\n  if (\n    isValueSelection(selection) ||\n    (isMultiSelection(selection) && isEmpty(selection.focusPath)) // root selected\n  ) {\n    // replace selected value (new value can be primitive or an array/object with contents)\n    try {\n      return [\n        {\n          op: 'replace',\n          path: compileJSONPointer(getFocusPath(selection)),\n          value: parsePartialJson(clipboardText, (text) => parseAndRepair(text, parser))\n        }\n      ]\n    } catch (err) {\n      // parsing failed -> just paste the raw text as value\n      return [\n        {\n          op: 'replace',\n          path: compileJSONPointer(getFocusPath(selection)),\n          value: clipboardText\n        }\n      ]\n    }\n  }\n\n  if (isMultiSelection(selection)) {\n    const newValues = clipboardToValues(clipboardText, parser)\n\n    return replace(json, getSelectionPaths(json, selection), newValues)\n  }\n\n  if (isAfterSelection(selection)) {\n    const newValues = clipboardToValues(clipboardText, parser)\n    const path = selection.path\n    const parentPath = initial(path)\n    const parent = getIn(json, parentPath)\n\n    if (isJSONArray(parent)) {\n      const index = int(last(path) as string)\n      const nextItemPath = parentPath.concat(String(index + 1))\n\n      return insertBefore(json, nextItemPath, newValues)\n    } else if (isJSONObject(parent)) {\n      // value is an Object\n      const key = String(last(path))\n      const keys: string[] = Object.keys(parent)\n      if (isEmpty(keys) || last(keys) === key) {\n        return append(json, parentPath, newValues)\n      } else {\n        const index = keys.indexOf(key)\n        const nextKey = keys[index + 1]\n        const nextKeyPath = parentPath.concat(nextKey)\n\n        return insertBefore(json, nextKeyPath, newValues)\n      }\n    } else {\n      throw new Error('Cannot create insert operations: parent must be an Object or Array')\n    }\n  }\n\n  if (isInsideSelection(selection)) {\n    const newValues = clipboardToValues(clipboardText, parser)\n    const path = selection.path\n    const value = getIn(json, path)\n\n    if (isJSONArray(value)) {\n      const firstItemPath = path.concat('0')\n      return insertBefore(json, firstItemPath, newValues)\n    } else if (isJSONObject(value)) {\n      // value is an Object\n      const keys = Object.keys(value)\n      if (isEmpty(keys)) {\n        return append(json, path, newValues)\n      } else {\n        const firstKey = first(keys) as string\n        const firstKeyPath = path.concat(firstKey)\n\n        return insertBefore(json, firstKeyPath, newValues)\n      }\n    } else {\n      throw new Error('Cannot create insert operations: parent must be an Object or Array')\n    }\n  }\n\n  // this should never happen\n  throw new Error('Cannot insert: unsupported type of selection ' + JSON.stringify(selection))\n}\n\nexport function moveInsideParent(\n  json: unknown,\n  selection: JSONSelection | null,\n  dragInsideAction: DragInsideAction\n): JSONPatchDocument {\n  if (!selection) {\n    return []\n  }\n\n  const beforePath = 'beforePath' in dragInsideAction ? dragInsideAction['beforePath'] : undefined\n  const append = 'append' in dragInsideAction ? dragInsideAction['append'] : undefined\n\n  const parentPath = initial(getFocusPath(selection))\n  const parent = getIn(json, parentPath)\n\n  if (\n    !append &&\n    !(beforePath && pathStartsWith(beforePath, parentPath) && beforePath.length > parentPath.length)\n  ) {\n    return []\n  }\n\n  const startPath = getStartPath(json, selection)\n  const endPath = getEndPath(json, selection)\n  const startKey = last(startPath) as string\n  const endKey = last(endPath) as string\n  const toKey: string | undefined = beforePath ? beforePath[parentPath.length] : undefined\n\n  if (isJSONObject(parent)) {\n    const keys = Object.keys(parent)\n    const startIndex = keys.indexOf(startKey)\n    const endIndex = keys.indexOf(endKey)\n    const toIndex = append ? keys.length : toKey !== undefined ? keys.indexOf(toKey) : -1\n\n    if (startIndex !== -1 && endIndex !== -1 && toIndex !== -1) {\n      if (toIndex > startIndex) {\n        // moving down\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return [...keys.slice(startIndex, endIndex + 1), ...keys.slice(toIndex, keys.length)].map(\n          (key) => moveDown(parentPath, key)\n        )\n      } else {\n        // moving up\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return [...keys.slice(toIndex, startIndex), ...keys.slice(endIndex + 1, keys.length)].map(\n          (key) => moveDown(parentPath, key)\n        )\n      }\n    }\n  } else if (isJSONArray(parent)) {\n    // array\n    const startIndex = int(startKey)\n    const endIndex = int(endKey)\n    const toIndex = toKey !== undefined ? int(toKey) : parent.length\n    const count = endIndex - startIndex + 1\n\n    if (toIndex < startIndex) {\n      // move up\n      return times(count, (offset) => {\n        return {\n          op: 'move',\n          from: compileJSONPointer(parentPath.concat(String(startIndex + offset))),\n          path: compileJSONPointer(parentPath.concat(String(toIndex + offset)))\n        }\n      })\n    } else {\n      // move down\n      return times(count, () => {\n        return {\n          op: 'move',\n          from: compileJSONPointer(parentPath.concat(String(startIndex))),\n          path: compileJSONPointer(parentPath.concat(String(toIndex)))\n        }\n      })\n    }\n  } else {\n    throw new Error('Cannot create move operations: parent must be an Object or Array')\n  }\n\n  return []\n}\n\nexport function createNewValue(\n  json: unknown | undefined,\n  selection: JSONSelection | null,\n  valueType: 'object' | 'array' | 'structure' | 'value'\n): unknown {\n  if (valueType === 'object') {\n    return {}\n  }\n\n  if (valueType === 'array') {\n    return []\n  }\n\n  if (valueType === 'structure' && json !== undefined) {\n    const parentPath = selection ? getParentPath(selection) : []\n    const parent = getIn(json, parentPath)\n\n    if (Array.isArray(parent) && !isEmpty(parent)) {\n      const jsonExample = first(parent)\n      if (isObjectOrArray(jsonExample)) {\n        return cloneDeepWith(jsonExample, (value) => {\n          return Array.isArray(value)\n            ? []\n            : isObject(value)\n              ? undefined // leave object as is, will recurse into it\n              : ''\n        })\n      } else {\n        // just a primitive value\n        return ''\n      }\n    }\n  }\n\n  // type === value,\n  // or type === structure but the parent is no array or an array containing\n  // primitive values (and no objects having any structure).\n  return ''\n}\n\n/**\n * Create a JSONPatch for a remove operation\n */\nexport function remove(path: JSONPath): JSONPatchDocument {\n  return [\n    {\n      op: 'remove',\n      path: compileJSONPointer(path)\n    }\n  ]\n}\n\n/**\n * Create a JSONPatch for a multiple remove operation\n */\nexport function removeAll(paths: JSONPath[]): JSONPatchDocument {\n  return paths\n    .map((path) => {\n      const operation: JSONPatchOperation = {\n        op: 'remove',\n        path: compileJSONPointer(path)\n      }\n\n      return operation\n    })\n    .reverse() // reverse is needed for arrays: delete the last index first\n}\n\n// helper function to move a key down in an object,\n// so another key can get positioned before the moved down keys\nfunction moveDown(parentPath: JSONPath, key: string): JSONPatchOperation {\n  return {\n    op: 'move',\n    from: compileJSONPointer(parentPath.concat(key)),\n    path: compileJSONPointer(parentPath.concat(key))\n  }\n}\n\nexport function clipboardToValues(clipboardText: string, parser: JSONParser): ClipboardValues {\n  const textIsObject = /^\\s*{/.test(clipboardText)\n  const textIsArray = /^\\s*\\[/.test(clipboardText)\n\n  const clipboardOriginal = parseAndRepairOrUndefined(clipboardText, parser)\n  const clipboardRepaired =\n    clipboardOriginal !== undefined\n      ? clipboardOriginal\n      : parsePartialJson(clipboardText, (text) => parseAndRepair(text, parser))\n\n  if (\n    (textIsObject && isObject(clipboardRepaired)) ||\n    (textIsArray && Array.isArray(clipboardRepaired))\n  ) {\n    return [{ key: 'New item', value: clipboardRepaired }]\n  }\n\n  if (Array.isArray(clipboardRepaired)) {\n    return clipboardRepaired.map((value, index) => {\n      return { key: 'New item ' + index, value }\n    })\n  }\n\n  if (isObject(clipboardRepaired)) {\n    return Object.keys(clipboardRepaired).map((key) => {\n      return { key, value: clipboardRepaired[key] }\n    })\n  }\n\n  // regular value\n  return [{ key: 'New item', value: clipboardRepaired }]\n}\n\n// TODO: write unit tests\nexport function createRemoveOperations(\n  json: unknown,\n  selection: JSONSelection\n): { newSelection: JSONSelection | null; operations: JSONPatchDocument } {\n  if (isKeySelection(selection)) {\n    // FIXME: DOESN'T work yet\n    const parentPath = initial(selection.path)\n    const parent = getIn(json, parentPath)\n    const keys = Object.keys(parent as Record<string, unknown>)\n    const oldKey = last(selection.path) as string\n    const newKey = ''\n\n    const operations = rename(parentPath, keys, oldKey, newKey)\n    const newSelection = createSelectionFromOperations(json, operations)\n\n    return { operations, newSelection }\n  }\n\n  if (isValueSelection(selection)) {\n    const operations: JSONPatchDocument = [\n      {\n        op: 'replace',\n        path: compileJSONPointer(selection.path),\n        value: ''\n      }\n    ]\n\n    return { operations, newSelection: selection }\n  }\n\n  if (isMultiSelection(selection)) {\n    const paths = getSelectionPaths(json, selection)\n    const operations = removeAll(paths)\n    const lastPath = last(paths)\n\n    if (isEmpty(lastPath)) {\n      // there is no parent, this is the root document\n      const operations: JSONPatchDocument = [{ op: 'replace', path: '', value: '' }]\n\n      const newSelection = createValueSelection([], false)\n\n      return { operations, newSelection }\n    }\n\n    const parentPath = initial(lastPath)\n    const parent = getIn(json, parentPath)\n\n    if (isJSONArray(parent)) {\n      const firstPath = first(paths)\n      const index = int(last(firstPath) as string)\n      const newSelection =\n        index === 0\n          ? createInsideSelection(parentPath)\n          : createAfterSelection(parentPath.concat(String(index - 1)))\n\n      return { operations, newSelection }\n    } else if (isJSONObject(parent)) {\n      // parent is object\n      const keys = Object.keys(parent)\n      const firstPath = first(paths)\n      const key = last(firstPath) as string\n      const index = keys.indexOf(key)\n      const previousKey = keys[index - 1]\n      const newSelection =\n        index === 0\n          ? createInsideSelection(parentPath)\n          : createAfterSelection(parentPath.concat(previousKey))\n\n      return { operations, newSelection }\n    } else {\n      throw new Error('Cannot create remove operations: parent must be an Object or Array')\n    }\n  }\n\n  // this should never happen\n  throw new Error('Cannot remove: unsupported type of selection ' + JSON.stringify(selection))\n}\n\nexport function revertJSONPatchWithMoveOperations(\n  json: unknown,\n  operations: JSONPatchDocument\n): JSONPatchDocument {\n  return revertJSONPatch(json, operations, {\n    before: (json, operation, revertOperations) => {\n      if (isJSONPatchRemove(operation)) {\n        const path = parseJSONPointer(operation.path)\n        return {\n          revertOperations: [...revertOperations, ...createRevertMoveOperations(json, path)]\n        }\n      }\n\n      if (isJSONPatchMove(operation)) {\n        const from = parseJSONPointer(operation.from)\n        return {\n          revertOperations: [...revertOperations, ...createRevertMoveOperations(json, from)]\n        }\n      }\n\n      return { document: json }\n    }\n  })\n}\n\nfunction createRevertMoveOperations(json: unknown, path: JSONPath): JSONPatchOperation[] {\n  const parentPath = initial(path)\n  const afterKey = last(path) as string\n  const parent = getIn(json, parentPath)\n  if (isJSONObject(parent)) {\n    const keys = Object.keys(parent)\n    const nextKeys = getNextKeys(keys, afterKey, false)\n\n    // move all lower down keys so the inserted key will maintain its position\n    return nextKeys.map((key) => moveDown(parentPath, key))\n  }\n\n  return []\n}\n\n/**\n * Add operations to create parent objects when missing before replacing a nested value\n */\nexport function createNestedValueOperations(operations: JSONPatchOperation[], json: unknown) {\n  return operations.flatMap((operation) => {\n    if (isJSONPatchReplace(operation)) {\n      const path = parseJSONPointer(operation.path)\n      if (path.length > 0) {\n        const extendedOperations: JSONPatchOperation[] = [operation]\n\n        let parentPath = initial(path)\n        while (parentPath.length > 0 && !existsIn(json, parentPath)) {\n          extendedOperations.unshift({\n            op: 'add',\n            path: compileJSONPointer(parentPath),\n            value: {}\n          })\n\n          parentPath = initial(parentPath)\n        }\n\n        return extendedOperations\n      }\n    }\n\n    return operation\n  })\n}\n","import type {\n  JSONPatchDocument,\n  JSONPatchOperation,\n  JSONPath,\n  JSONPointer\n} from 'immutable-json-patch'\nimport { compileJSONPointer, getIn, isJSONArray, isJSONObject } from 'immutable-json-patch'\nimport { forEachRight, groupBy, initial, isEqual, last } from 'lodash-es'\nimport { getEnforceString } from './documentState.js'\nimport { createSelectionFromOperations } from './selection.js'\nimport { rename } from './operations.js'\nimport { stringConvert } from '../utils/typeUtils.js'\nimport type {\n  DocumentState,\n  ExtendedSearchResultItem,\n  JSONParser,\n  JSONPointerMap,\n  JSONSelection,\n  SearchResult,\n  SearchResultItem\n} from '$lib/types'\nimport { SearchField } from '$lib/types.js'\n\n// TODO: comment\n// TODO: unit test\nexport function updateSearchResult(\n  json: unknown,\n  newResultItems: SearchResultItem[],\n  previousResult: SearchResult | undefined\n): SearchResult {\n  const activePath = previousResult?.activeItem\n    ? getSearchResultPath(previousResult.activeItem)\n    : undefined\n\n  const matchingActiveIndex = newResultItems.findIndex((item) => {\n    return isEqual(activePath, getSearchResultPath(item))\n  })\n\n  const activeIndex =\n    matchingActiveIndex !== -1\n      ? matchingActiveIndex\n      : previousResult?.activeIndex !== undefined &&\n          previousResult?.activeIndex < newResultItems.length\n        ? previousResult?.activeIndex\n        : newResultItems.length > 0\n          ? 0\n          : -1\n\n  const items: ExtendedSearchResultItem[] = newResultItems.map((item, index) => {\n    return { ...item, active: index === activeIndex }\n  })\n\n  const activeItem = items[activeIndex]\n\n  return {\n    items,\n    itemsMap: groupBy(items, (item) => compileJSONPointer(item.path)),\n    activeItem,\n    activeIndex\n  }\n}\n\n// TODO: unit test\nexport function searchNext(searchResult: SearchResult): SearchResult {\n  const nextActiveIndex =\n    searchResult.activeIndex < searchResult.items.length - 1\n      ? searchResult.activeIndex + 1\n      : searchResult.items.length > 0\n        ? 0\n        : -1\n\n  const nextActiveItem = searchResult.items[nextActiveIndex]\n\n  const items: ExtendedSearchResultItem[] = searchResult.items.map((item, index) => {\n    return { ...item, active: index === nextActiveIndex }\n  })\n\n  return {\n    ...searchResult,\n    items,\n    itemsMap: groupBy(items, (item) => compileJSONPointer(item.path)),\n    activeItem: nextActiveItem,\n    activeIndex: nextActiveIndex\n  }\n}\n\n// TODO: unit test\nexport function searchPrevious(searchResult: SearchResult): SearchResult {\n  const previousActiveIndex =\n    searchResult.activeIndex > 0 ? searchResult.activeIndex - 1 : searchResult.items.length - 1\n\n  const previousActiveItem = searchResult.items[previousActiveIndex]\n\n  const items: ExtendedSearchResultItem[] = searchResult.items.map((item, index) => {\n    return { ...item, active: index === previousActiveIndex }\n  })\n\n  return {\n    ...searchResult,\n    items,\n    itemsMap: groupBy(items, (item) => compileJSONPointer(item.path)),\n    activeItem: previousActiveItem,\n    activeIndex: previousActiveIndex\n  }\n}\n\n// TODO: comment\nexport function search(\n  searchText: string,\n  json: unknown,\n  maxResults = Infinity\n): SearchResultItem[] {\n  const results: SearchResultItem[] = []\n  const path: JSONPath = [] // we reuse the same Array recursively, this is *much* faster than creating a new path every time\n\n  function onMatch(match: SearchResultItem) {\n    if (results.length < maxResults) {\n      results.push(match)\n    }\n  }\n\n  function searchRecursive(searchTextLowerCase: string, value: unknown) {\n    if (isJSONArray(value)) {\n      const level = path.length\n      path.push('0')\n\n      for (let i = 0; i < value.length; i++) {\n        path[level] = String(i)\n\n        searchRecursive(searchTextLowerCase, value[i])\n\n        if (results.length >= maxResults) {\n          return\n        }\n      }\n\n      path.pop()\n    } else if (isJSONObject(value)) {\n      const keys = Object.keys(value)\n      const level = path.length\n\n      path.push('')\n\n      for (const key of keys) {\n        path[level] = key\n\n        findCaseInsensitiveMatches(key, searchTextLowerCase, path, SearchField.key, onMatch)\n\n        searchRecursive(searchTextLowerCase, value[key])\n\n        if (results.length >= maxResults) {\n          return\n        }\n      }\n\n      path.pop()\n    } else {\n      // type is a value\n      findCaseInsensitiveMatches(\n        String(value),\n        searchTextLowerCase,\n        path,\n        SearchField.value,\n        onMatch\n      )\n    }\n  }\n\n  if (typeof searchText === 'string' && searchText !== '') {\n    const searchTextLowerCase = searchText.toLowerCase()\n    searchRecursive(searchTextLowerCase, json)\n  }\n\n  return results\n}\n\n/**\n * Do a case-insensitive search for a search text in a text\n */\nexport function findCaseInsensitiveMatches(\n  text: string,\n  searchTextLowerCase: string,\n  path: JSONPath,\n  field: SearchField,\n  onMatch: (searchResultItem: SearchResultItem) => void\n): void {\n  const textLower = text.toLowerCase()\n\n  let fieldIndex = 0\n  let position = -1\n  let index = -1\n\n  do {\n    index = textLower.indexOf(searchTextLowerCase, position)\n\n    if (index !== -1) {\n      position = index + searchTextLowerCase.length\n\n      onMatch({\n        path: path.slice(0), // path may be mutated in a later stage, therefore we store a copy\n        field,\n        fieldIndex,\n        start: index,\n        end: position\n      })\n\n      fieldIndex++\n    }\n  } while (index !== -1)\n}\n\n/**\n * Replace a search result item with a replacement text\n */\nexport function replaceText(text: string, replacementText: string, start: number, end: number) {\n  return text.substring(0, start) + replacementText + text.substring(end)\n}\n\n/**\n * Replace all matches with a replacement text\n */\nexport function replaceAllText(\n  text: string,\n  replacementText: string,\n  occurrences: Array<{ start: number; end: number }>\n): string {\n  let updatedText = text\n\n  forEachRight(occurrences, (occurrence) => {\n    updatedText = replaceText(updatedText, replacementText, occurrence.start, occurrence.end)\n  })\n\n  return updatedText\n}\n\nexport function createSearchAndReplaceOperations(\n  json: unknown,\n  documentState: DocumentState,\n  replacementText: string,\n  searchResultItem: SearchResultItem,\n  parser: JSONParser\n): { newSelection: JSONSelection | null; operations: JSONPatchDocument } {\n  const { field, path, start, end } = searchResultItem\n\n  if (field === SearchField.key) {\n    // replace a key\n    const parentPath = initial(path)\n    const parent = getIn(json, parentPath)\n    const oldKey = last(path) as string\n    const keys = Object.keys(parent as Record<string, unknown>)\n    const newKey = replaceText(oldKey, replacementText, start, end)\n\n    const operations = rename(parentPath, keys, oldKey, newKey)\n    const newSelection = createSelectionFromOperations(json, operations)\n\n    return {\n      newSelection,\n      operations\n    }\n  } else if (field === SearchField.value) {\n    // replace a value\n    const currentValue: unknown | undefined = getIn(json, path)\n    if (currentValue === undefined) {\n      throw new Error(`Cannot replace: path not found ${compileJSONPointer(path)}`)\n    }\n    const currentValueText = typeof currentValue === 'string' ? currentValue : String(currentValue)\n\n    const pointer = compileJSONPointer(path)\n    const enforceString = getEnforceString(\n      currentValue,\n      documentState.enforceStringMap,\n      pointer,\n      parser\n    )\n\n    const value = replaceText(currentValueText, replacementText, start, end)\n\n    const operations: JSONPatchOperation[] = [\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: enforceString ? value : stringConvert(value, parser)\n      }\n    ]\n\n    const newSelection = createSelectionFromOperations(json, operations)\n\n    return {\n      newSelection,\n      operations\n    }\n  } else {\n    throw new Error(`Cannot replace: unknown type of search result field ${field}`)\n  }\n}\n\nexport function createSearchAndReplaceAllOperations(\n  json: unknown,\n  documentState: DocumentState,\n  searchText: string,\n  replacementText: string,\n  parser: JSONParser\n): { newSelection: JSONSelection | null; operations: JSONPatchDocument } {\n  // TODO: to improve performance, we could reuse existing search results (except when hitting a maxResult limit)\n  const searchResultItems = search(searchText, json, Infinity /* maxResults */)\n\n  interface Match {\n    path: JSONPath\n    field: string\n    items: SearchResultItem[]\n  }\n\n  // step 1: deduplicate matches inside the same field/value\n  // (filter, map, and group)\n  const deduplicatedMatches: Match[] = []\n  for (let i = 0; i < searchResultItems.length; i++) {\n    const previousItem = searchResultItems[i - 1]\n    const item = searchResultItems[i]\n    if (i === 0 || item.field !== previousItem.field || !isEqual(item.path, previousItem.path)) {\n      deduplicatedMatches.push({\n        path: item.path,\n        field: item.field,\n        items: [item]\n      })\n    } else {\n      ;(last(deduplicatedMatches) as Match).items.push(item)\n    }\n  }\n\n  // step 2: sort from deepest nested to least nested\n  // this is needed to replace in that order because paths may change\n  // if there are replacements in keys\n  deduplicatedMatches.sort((a, b) => {\n    // sort values first, properties next\n    if (a.field !== b.field) {\n      if (a.field === SearchField.key) {\n        return 1\n      } else {\n        return -1\n      }\n    }\n\n    // sort longest paths first, shortest last\n    return b.path.length - a.path.length\n  })\n\n  // step 3: call createSearchAndReplaceOperations for each of the matches\n  let allOperations: JSONPatchDocument = []\n  let lastNewSelection: JSONSelection | null = null\n  deduplicatedMatches.forEach((match) => {\n    // TODO: there is overlap with the logic of createSearchAndReplaceOperations. Can we extract and reuse this logic?\n    const { field, path, items } = match\n\n    if (field === SearchField.key) {\n      // replace a key\n      const parentPath = initial(path)\n      const parent = getIn(json, parentPath)\n      const oldKey = last(path) as string\n      const keys = Object.keys(parent as Record<string, unknown>)\n      const newKey = replaceAllText(oldKey, replacementText, items)\n\n      const operations = rename(parentPath, keys, oldKey, newKey)\n      allOperations = allOperations.concat(operations)\n\n      lastNewSelection = createSelectionFromOperations(json, operations)\n    } else if (field === SearchField.value) {\n      // replace a value\n      const currentValue: unknown | undefined = getIn(json, path)\n      if (currentValue === undefined) {\n        throw new Error(`Cannot replace: path not found ${compileJSONPointer(path)}`)\n      }\n      const currentValueText =\n        typeof currentValue === 'string' ? currentValue : String(currentValue)\n\n      const pointer = compileJSONPointer(path)\n      const enforceString = getEnforceString(\n        currentValue,\n        documentState.enforceStringMap,\n        pointer,\n        parser\n      )\n\n      const value = replaceAllText(currentValueText, replacementText, items)\n\n      const operations: JSONPatchOperation[] = [\n        {\n          op: 'replace',\n          path: compileJSONPointer(path),\n          value: enforceString ? value : stringConvert(value, parser)\n        }\n      ]\n      allOperations = allOperations.concat(operations)\n\n      lastNewSelection = createSelectionFromOperations(json, operations)\n    } else {\n      throw new Error(`Cannot replace: unknown type of search result field ${field}`)\n    }\n  })\n\n  return {\n    operations: allOperations,\n    newSelection: lastNewSelection\n  }\n}\n\nexport interface SplitValuePart {\n  text: string\n  type: 'normal' | 'highlight'\n  active: boolean\n}\n\n/**\n * Split the text into separate parts for each search result and the text\n * in between.\n */\nexport function splitValue(text: string, matches: ExtendedSearchResultItem[]): SplitValuePart[] {\n  const parts: SplitValuePart[] = []\n\n  let previousEnd = 0\n\n  for (const match of matches) {\n    const precedingText = text.slice(previousEnd, match.start)\n    if (precedingText !== '') {\n      parts.push({\n        type: 'normal',\n        text: precedingText,\n        active: false\n      })\n    }\n\n    const matchingText = text.slice(match.start, match.end)\n    parts.push({\n      type: 'highlight',\n      text: matchingText,\n      active: match.active\n    })\n\n    previousEnd = match.end\n  }\n\n  const lastMatch = last(matches)\n  if (lastMatch && lastMatch.end < text.length) {\n    parts.push({\n      type: 'normal',\n      text: text.slice(lastMatch.end),\n      active: false\n    })\n  }\n\n  return parts\n}\n\n/**\n * Get the path of the search result property on a nested search result\n */\nfunction getSearchResultPath(searchResultItem: SearchResultItem): JSONPath {\n  return searchResultItem.path.concat(searchResultItem.field, String(searchResultItem.fieldIndex))\n}\n\n// TODO: write unit tests\nexport function filterKeySearchResults(\n  map: JSONPointerMap<ExtendedSearchResultItem[]> | undefined,\n  pointer: JSONPointer\n): ExtendedSearchResultItem[] | undefined {\n  const items = map?.[pointer]?.filter((item: SearchResultItem) => item.field === SearchField.key)\n\n  if (!items || items.length === 0) {\n    return undefined\n  }\n\n  return items\n}\n\n// TODO: write unit tests\nexport function filterValueSearchResults(\n  map: JSONPointerMap<ExtendedSearchResultItem[]> | undefined,\n  pointer: JSONPointer\n): ExtendedSearchResultItem[] | undefined {\n  const items = map?.[pointer]?.filter((item: SearchResultItem) => item.field === SearchField.value)\n\n  if (!items || items.length === 0) {\n    return undefined\n  }\n\n  return items\n}\n","<script lang=\"ts\">\n  import { splitValue } from '$lib/logic/search.js'\n  import { addNewLineSuffix } from '$lib/utils/domUtils.js'\n  import type { ExtendedSearchResultItem } from '$lib/types'\n\n  export let text: string\n  export let searchResultItems: ExtendedSearchResultItem[]\n\n  $: parts = splitValue(String(text), searchResultItems)\n</script>\n\n{#each parts as part}\n  {#if part.type === 'normal'}\n    {part.text}\n  {:else}\n    <span class=\"jse-highlight\" class:jse-active={part.active}>{addNewLineSuffix(part.text)}</span>\n  {/if}\n{/each}\n\n<style src=\"./SearchResultHighlighter.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { isUrl } from '$lib/utils/typeUtils.js'\n  import { createValueSelection } from '$lib/logic/selection.js'\n  import SearchResultHighlighter from '../../../components/modes/treemode/highlight/SearchResultHighlighter.svelte'\n  import { getValueClass } from './utils/getValueClass.js'\n  import { addNewLineSuffix } from '$lib/utils/domUtils.js'\n  import type {\n    ExtendedSearchResultItem,\n    JSONParser,\n    OnJSONSelect,\n    ValueNormalization\n  } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let readOnly: boolean\n  export let normalization: ValueNormalization\n  export let parser: JSONParser\n  export let onSelect: OnJSONSelect\n\n  export let searchResultItems: ExtendedSearchResultItem[] | undefined\n\n  $: valueIsUrl = isUrl(value)\n\n  function handleValueClick(event: MouseEvent) {\n    if (typeof value === 'string' && valueIsUrl && event.ctrlKey) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      window.open(value, '_blank')\n    }\n  }\n\n  function handleValueDoubleClick(event: MouseEvent) {\n    if (!readOnly) {\n      event.preventDefault()\n      onSelect(createValueSelection(path, true))\n    }\n  }\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<div\n  role=\"button\"\n  tabindex=\"-1\"\n  data-type=\"selectable-value\"\n  class={getValueClass(value, parser)}\n  on:click={handleValueClick}\n  on:dblclick={handleValueDoubleClick}\n  title={valueIsUrl ? 'Ctrl+Click or Ctrl+Enter to open url in new window' : null}\n>\n  {#if searchResultItems}\n    <SearchResultHighlighter text={normalization.escapeValue(value)} {searchResultItems} />\n  {:else}\n    {addNewLineSuffix(normalization.escapeValue(value))}\n  {/if}\n</div>\n\n<style src=\"./ReadonlyValue.scss\"></style>\n","<script lang=\"ts\">\n  export let text: string\n</script>\n\n<div class=\"jse-tooltip\">\n  {text}\n</div>\n\n<style src=\"./Tooltip.scss\"></style>\n","import Tooltip from './Tooltip.svelte'\nimport type { SvelteComponent } from 'svelte'\nimport type { AbsolutePopupOptions } from '$lib/types'\n\nexport interface TooltipOptions {\n  text: string\n  openAbsolutePopup: (\n    component: typeof SvelteComponent<Record<string, unknown>>,\n    props: Record<string, unknown>,\n    options: AbsolutePopupOptions\n  ) => number\n  closeAbsolutePopup: (popupId: number | undefined) => void\n}\n\nexport function tooltip(\n  node: Element,\n  { text, openAbsolutePopup, closeAbsolutePopup }: TooltipOptions\n) {\n  let popupId: number | undefined\n\n  function handleMouseEnter() {\n    const props = {\n      text\n    }\n\n    // opening popup will fail if there is already a popup open\n    popupId = openAbsolutePopup(Tooltip, props, {\n      position: 'top',\n      width: 10 * text.length, // rough estimate of the width of the message\n      offsetTop: 3,\n      anchor: node,\n      closeOnOuterClick: true\n    })\n  }\n\n  function handleMouseLeave() {\n    closeAbsolutePopup(popupId)\n  }\n\n  node.addEventListener('mouseenter', handleMouseEnter)\n  node.addEventListener('mouseleave', handleMouseLeave)\n\n  return {\n    destroy() {\n      node.removeEventListener('mouseenter', handleMouseEnter)\n      node.removeEventListener('mouseleave', handleMouseLeave)\n    }\n  }\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faClock } from '@fortawesome/free-regular-svg-icons'\n  import { getContext } from 'svelte'\n  import { tooltip } from '$lib/components/controls/tooltip/tooltip.js'\n  import type { AbsolutePopupContext } from '$lib/types'\n\n  const absolutePopupContext = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let value: number\n\n  $: text = `Time: ${new Date(value).toString()}`\n</script>\n\n<div class=\"jse-timestamp\" use:tooltip={{ text, ...absolutePopupContext }}>\n  <Icon data={faClock} />\n</div>\n\n<style src=\"./TimestampTag.scss\"></style>\n","import { isBoolean, isColor, isTimestamp } from '../../utils/typeUtils.js'\nimport BooleanToggle from './components/BooleanToggle.svelte'\nimport ColorPicker from './components/ColorPicker.svelte'\nimport EditableValue from './components/EditableValue.svelte'\nimport ReadonlyValue from './components/ReadonlyValue.svelte'\nimport TimestampTag from './components/TimestampTag.svelte'\nimport type { RenderValueComponentDescription, RenderValueProps } from '../../types'\n\nexport function renderValue({\n  path,\n  value,\n  readOnly,\n  enforceString,\n  searchResultItems,\n  isEditing,\n  parser,\n  normalization,\n  onPatch,\n  onPasteJson,\n  onSelect,\n  onFind,\n  findNextInside,\n  focus\n}: RenderValueProps): RenderValueComponentDescription[] {\n  const renderers: RenderValueComponentDescription[] = []\n\n  if (!isEditing && isBoolean(value)) {\n    renderers.push({\n      component: BooleanToggle,\n      props: { path, value, readOnly, onPatch, focus }\n    })\n  }\n\n  if (!isEditing && isColor(value)) {\n    renderers.push({\n      component: ColorPicker,\n      props: { path, value, readOnly, onPatch, focus }\n    })\n  }\n\n  if (isEditing) {\n    renderers.push({\n      component: EditableValue,\n      props: {\n        path,\n        value,\n        enforceString,\n        parser,\n        normalization,\n        onPatch,\n        onPasteJson,\n        onSelect,\n        onFind,\n        findNextInside,\n        focus\n      }\n    })\n  }\n\n  if (!isEditing) {\n    renderers.push({\n      component: ReadonlyValue,\n      props: { path, value, readOnly, parser, normalization, searchResultItems, onSelect }\n    })\n  }\n\n  if (!isEditing && isTimestamp(value)) {\n    renderers.push({\n      component: TimestampTag,\n      props: { value }\n    })\n  }\n\n  return renderers\n}\n","import type { QueryLanguageOptions } from '$lib/types.js'\n\nexport interface TransformModalState {\n  queryLanguageId: string\n  queryOptions: QueryLanguageOptions\n  query: string\n  isManual: boolean\n}\n\nexport const transformModalStates: Record<string, TransformModalState> = {}\n\nexport interface TransformModalStateShared {\n  showWizard: boolean\n  showOriginal: boolean\n}\n\nexport const transformModalStateShared: TransformModalStateShared = {\n  showWizard: true,\n  showOriginal: true\n}\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","export default function filter({\n    loadOptions,\n    filterText,\n    items,\n    multiple,\n    value,\n    itemId,\n    groupBy,\n    filterSelectedItems,\n    itemFilter,\n    convertStringItemsToObjects,\n    filterGroupedItems,\n    label,\n}) {\n    if (items && loadOptions) return items;\n    if (!items) return [];\n\n    if (items && items.length > 0 && typeof items[0] !== 'object') {\n        items = convertStringItemsToObjects(items);\n    }\n\n    let filterResults = items.filter((item) => {\n        let matchesFilter = itemFilter(item[label], filterText, item);\n        if (matchesFilter && multiple && value?.length) {\n            matchesFilter = !value.some((x) => {\n                return filterSelectedItems ? x[itemId] === item[itemId] : false;\n            });\n        }\n\n        return matchesFilter;\n    });\n\n    if (groupBy) {\n        filterResults = filterGroupedItems(filterResults);\n    }\n\n    return filterResults;\n}\n","export default async function getItems({ dispatch, loadOptions, convertStringItemsToObjects, filterText }) {\n    let res = await loadOptions(filterText).catch((err) => {\n        console.warn('svelte-select loadOptions error :>> ', err);\n        dispatch('error', { type: 'loadOptions', details: err });\n    });\n\n    if (res && !res.cancelled) {        \n        if (res) {\n            if (res && res.length > 0 && typeof res[0] !== 'object') {\n                res = convertStringItemsToObjects(res);\n            }\n            \n            dispatch('loaded', { items: res });\n        } else {\n            res = [];\n        }\n\n        return {\n            filteredItems: res,\n            loading: false,\n            focused: true,\n            listOpen: true,\n        };\n    }\n}\n","<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    focusable=\"false\"\n    aria-hidden=\"true\">\n    <path\n    fill=\"currentColor\"\n        d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n</svg>\n\n<style>\n  svg {\n      width: var(--chevron-icon-width, 20px);\n      height: var(--chevron-icon-width, 20px);\n      color: var(--chevron-icon-colour, currentColor);\n  }\n</style>","<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-2 -2 50 50\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n>\n    <path\n        fill=\"currentColor\"\n        d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\"\n    />\n</svg>\n\n<style>\n    svg {\n        width: var(--clear-icon-width, 20px);\n        height: var(--clear-icon-width, 20px);\n        color: var(--clear-icon-color, currentColor);\n    }\n</style>","<svg class=\"loading\" viewBox=\"25 25 50 50\">\n    <circle\n        class=\"circle_path\"\n        cx=\"50\"\n        cy=\"50\"\n        r=\"20\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"5\"\n        stroke-miterlimit=\"10\" />\n</svg>\n\n<style>\n    .loading {\n        width: var(--spinner-width, 20px);\n        height: var(--spinner-height, 20px);\n        color: var(--spinner-color, var(--icons-color));\n        animation: rotate 0.75s linear infinite;\n        transform-origin: center center;\n        transform: none;\n    }\n\n    .circle_path {\n        stroke-dasharray: 90;\n        stroke-linecap: round;\n    }\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>","<script>\n    import { beforeUpdate, createEventDispatcher, onDestroy, onMount } from 'svelte';\n    import { offset, flip, shift } from '@floating-ui/dom';\n    import { createFloatingActions } from 'svelte-floating-ui';\n\n    const dispatch = createEventDispatcher();\n\n    import _filter from './filter';\n    import _getItems from './get-items';\n\n    import ChevronIcon from './ChevronIcon.svelte';\n    import ClearIcon from './ClearIcon.svelte';\n    import LoadingIcon from './LoadingIcon.svelte';\n\n    export let justValue = null; // read-only\n\n    export let filter = _filter;\n    export let getItems = _getItems;\n\n    export let id = null;\n    export let name = null;\n    export let container = undefined;\n    export let input = undefined;\n    export let multiple = false;\n    export let multiFullItemClearable = false;\n    export let disabled = false;\n    export let focused = false;\n    export let value = null;\n    export let filterText = '';\n    export let placeholder = 'Please select';\n    export let placeholderAlwaysShow = false;\n    export let items = null;\n    export let label = 'label';\n    export let itemFilter = (label, filterText, option) => `${label}`.toLowerCase().includes(filterText.toLowerCase());\n    export let groupBy = undefined;\n    export let groupFilter = (groups) => groups;\n    export let groupHeaderSelectable = false;\n    export let itemId = 'value';\n    export let loadOptions = undefined;\n    export let containerStyles = '';\n    export let hasError = false;\n    export let filterSelectedItems = true;\n    export let required = false;\n    export let closeListOnChange = true;\n    export let clearFilterTextOnBlur = true;\n\n    export let createGroupHeaderItem = (groupValue, item) => {\n        return {\n            value: groupValue,\n            [label]: groupValue,\n        };\n    };\n\n    export const getFilteredItems = () => {\n        return filteredItems;\n    };\n\n    export let searchable = true;\n    export let inputStyles = '';\n    export let clearable = true;\n    export let loading = false;\n    export let listOpen = false;\n\n    let timeout;\n    export let debounce = (fn, wait = 1) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, wait);\n    };\n\n    export let debounceWait = 300;\n    export let hideEmptyState = false;\n    export let inputAttributes = {};\n    export let listAutoWidth = true;\n    export let showChevron = false;\n    export let listOffset = 5;\n    export let hoverItemIndex = 0;\n    export let floatingConfig = {};\n\n    export { containerClasses as class };\n\n    let containerClasses = '';\n    let activeValue;\n    let prev_value;\n    let prev_filterText;\n    let prev_multiple;\n\n    function setValue() {\n        if (typeof value === 'string') {\n            let item = (items || []).find((item) => item[itemId] === value);\n            value = item || {\n                [itemId]: value,\n                label: value,\n            };\n        } else if (multiple && Array.isArray(value) && value.length > 0) {\n            value = value.map((item) => (typeof item === 'string' ? { value: item, label: item } : item));\n        }\n    }\n\n    let _inputAttributes;\n    function assignInputAttributes() {\n        _inputAttributes = Object.assign(\n            {\n                autocapitalize: 'none',\n                autocomplete: 'off',\n                autocorrect: 'off',\n                spellcheck: false,\n                tabindex: 0,\n                type: 'text',\n                'aria-autocomplete': 'list',\n            },\n            inputAttributes\n        );\n\n        if (id) {\n            _inputAttributes['id'] = id;\n        }\n\n        if (!searchable) {\n            _inputAttributes['readonly'] = true;\n        }\n    }\n\n    function convertStringItemsToObjects(_items) {\n        return _items.map((item, index) => {\n            return {\n                index,\n                value: item,\n                label: `${item}`,\n            };\n        });\n    }\n\n    function filterGroupedItems(_items) {\n        const groupValues = [];\n        const groups = {};\n\n        _items.forEach((item) => {\n            const groupValue = groupBy(item);\n\n            if (!groupValues.includes(groupValue)) {\n                groupValues.push(groupValue);\n                groups[groupValue] = [];\n\n                if (groupValue) {\n                    groups[groupValue].push(\n                        Object.assign(createGroupHeaderItem(groupValue, item), {\n                            id: groupValue,\n                            groupHeader: true,\n                            selectable: groupHeaderSelectable,\n                        })\n                    );\n                }\n            }\n\n            groups[groupValue].push(Object.assign({ groupItem: !!groupValue }, item));\n        });\n\n        const sortedGroupedItems = [];\n\n        groupFilter(groupValues).forEach((groupValue) => {\n            if (groups[groupValue]) sortedGroupedItems.push(...groups[groupValue]);\n        });\n\n        return sortedGroupedItems;\n    }\n\n    function dispatchSelectedItem() {\n        if (multiple) {\n            if (JSON.stringify(value) !== JSON.stringify(prev_value)) {\n                if (checkValueForDuplicates()) {\n                    dispatch('input', value);\n                }\n            }\n            return;\n        }\n\n        if (!prev_value || JSON.stringify(value[itemId]) !== JSON.stringify(prev_value[itemId])) {\n            dispatch('input', value);\n        }\n    }\n\n    function setupMulti() {\n        if (value) {\n            if (Array.isArray(value)) {\n                value = [...value];\n            } else {\n                value = [value];\n            }\n        }\n    }\n\n    function setupSingle() {\n        if (value) value = null;\n    }\n\n    $: if ((items, value)) setValue();\n    $: if (inputAttributes || !searchable) assignInputAttributes();\n    $: if (multiple) setupMulti();\n    $: if (prev_multiple && !multiple) setupSingle();\n    $: if (multiple && value && value.length > 1) checkValueForDuplicates();\n    $: if (value) dispatchSelectedItem();\n    $: if (!value && multiple && prev_value) dispatch('input', value);\n    $: if (!focused && input) closeList();\n    $: if (filterText !== prev_filterText) setupFilterText();\n    $: if (!multiple && listOpen && value && filteredItems) setValueIndexAsHoverIndex();\n    $: dispatchHover(hoverItemIndex);\n\n    function setValueIndexAsHoverIndex() {\n        const valueIndex = filteredItems.findIndex((i) => {\n            return i[itemId] === value[itemId];\n        });\n\n        checkHoverSelectable(valueIndex, true);\n    }\n\n    function dispatchHover(i) {\n        dispatch('hoverItem', i);\n    }\n\n    function checkHoverSelectable(startingIndex = 0, ignoreGroup) {\n        hoverItemIndex = startingIndex < 0 ? 0 : startingIndex;\n        if (!ignoreGroup && groupBy && filteredItems[hoverItemIndex] && !filteredItems[hoverItemIndex].selectable) {\n            setHoverIndex(1);\n        }\n    }\n\n    function setupFilterText() {\n        if (!loadOptions && filterText.length === 0) return;\n\n        if (loadOptions) {\n            debounce(async function () {\n                loading = true;\n                let res = await getItems({\n                    dispatch,\n                    loadOptions,\n                    convertStringItemsToObjects,\n                    filterText,\n                });\n\n                if (res) {\n                    loading = res.loading;\n                    listOpen = listOpen ? res.listOpen : filterText.length > 0 ? true : false;\n                    focused = listOpen && res.focused;\n                    items = groupBy ? filterGroupedItems(res.filteredItems) : res.filteredItems;\n                } else {\n                    loading = false;\n                    focused = true;\n                    listOpen = true;\n                }\n            }, debounceWait);\n        } else {\n            listOpen = true;\n\n            if (multiple) {\n                activeValue = undefined;\n            }\n        }\n    }\n\n    $: hasValue = multiple ? value && value.length > 0 : value;\n    $: hideSelectedItem = hasValue && filterText.length > 0;\n    $: showClear = hasValue && clearable && !disabled && !loading;\n    $: placeholderText =\n        placeholderAlwaysShow && multiple\n            ? placeholder\n            : multiple && value?.length === 0\n            ? placeholder\n            : value\n            ? ''\n            : placeholder;\n    $: ariaSelection = value ? handleAriaSelection(multiple) : '';\n    $: ariaContext = handleAriaContent({ filteredItems, hoverItemIndex, focused, listOpen });\n    $: updateValueDisplay(items);\n    $: justValue = computeJustValue(multiple, value, itemId);\n    $: if (!multiple && prev_value && !value) dispatch('input', value);\n    $: filteredItems = filter({\n        loadOptions,\n        filterText,\n        items,\n        multiple,\n        value,\n        itemId,\n        groupBy,\n        label,\n        filterSelectedItems,\n        itemFilter,\n        convertStringItemsToObjects,\n        filterGroupedItems,\n    });\n    $: if (listOpen && filteredItems && !multiple && !value) checkHoverSelectable();\n    $: handleFilterEvent(filteredItems);\n    $: if (container && floatingConfig) floatingUpdate(Object.assign(_floatingConfig, floatingConfig));\n    $: listDom = !!list;\n    $: listMounted(list, listOpen);\n    $: if (listOpen && container && list) setListWidth();\n    $: scrollToHoverItem = hoverItemIndex;\n    $: if (listOpen && multiple) hoverItemIndex = 0;\n    $: if (input && listOpen && !focused) handleFocus();\n    $: if (filterText) hoverItemIndex = 0;\n\n    function handleFilterEvent(items) {\n        if (listOpen) dispatch('filter', items);\n    }\n\n    beforeUpdate(async () => {\n        prev_value = value;\n        prev_filterText = filterText;\n        prev_multiple = multiple;\n    });\n\n    function computeJustValue() {\n        if (multiple) return value ? value.map((item) => item[itemId]) : null;\n        return value ? value[itemId] : value;\n    }\n\n    function checkValueForDuplicates() {\n        let noDuplicates = true;\n        if (value) {\n            const ids = [];\n            const uniqueValues = [];\n\n            value.forEach((val) => {\n                if (!ids.includes(val[itemId])) {\n                    ids.push(val[itemId]);\n                    uniqueValues.push(val);\n                } else {\n                    noDuplicates = false;\n                }\n            });\n\n            if (!noDuplicates) value = uniqueValues;\n        }\n        return noDuplicates;\n    }\n\n    function findItem(selection) {\n        let matchTo = selection ? selection[itemId] : value[itemId];\n        return items.find((item) => item[itemId] === matchTo);\n    }\n\n    function updateValueDisplay(items) {\n        if (!items || items.length === 0 || items.some((item) => typeof item !== 'object')) return;\n        if (!value || (multiple ? value.some((selection) => !selection || !selection[itemId]) : !value[itemId])) return;\n\n        if (Array.isArray(value)) {\n            value = value.map((selection) => findItem(selection) || selection);\n        } else {\n            value = findItem() || value;\n        }\n    }\n\n    async function handleMultiItemClear(i) {\n        const itemToRemove = value[i];\n\n        if (value.length === 1) {\n            value = undefined;\n        } else {\n            value = value.filter((item) => {\n                return item !== itemToRemove;\n            });\n        }\n\n        dispatch('clear', itemToRemove);\n    }\n\n    function handleKeyDown(e) {\n        if (!focused) return;\n        e.stopPropagation();\n        switch (e.key) {\n            case 'Escape':\n                e.preventDefault();\n                closeList();\n                break;\n            case 'Enter':\n                e.preventDefault();\n\n                if (listOpen) {\n                    if (filteredItems.length === 0) break;\n                    const hoverItem = filteredItems[hoverItemIndex];\n\n                    if (value && !multiple && value[itemId] === hoverItem[itemId]) {\n                        closeList();\n                        break;\n                    } else {\n                        handleSelect(filteredItems[hoverItemIndex]);\n                    }\n                }\n\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(-1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'Tab':\n                if (listOpen && focused) {\n                    if (\n                        filteredItems.length === 0 ||\n                        (value && value[itemId] === filteredItems[hoverItemIndex][itemId])\n                    )\n                        return closeList();\n\n                    e.preventDefault();\n                    handleSelect(filteredItems[hoverItemIndex]);\n                    closeList();\n                }\n\n                break;\n            case 'Backspace':\n                if (!multiple || filterText.length > 0) return;\n\n                if (multiple && value && value.length > 0) {\n                    handleMultiItemClear(activeValue !== undefined ? activeValue : value.length - 1);\n                    if (activeValue === 0 || activeValue === undefined) break;\n                    activeValue = value.length > activeValue ? activeValue - 1 : undefined;\n                }\n\n                break;\n            case 'ArrowLeft':\n                if (!value || !multiple || filterText.length > 0) return;\n                if (activeValue === undefined) {\n                    activeValue = value.length - 1;\n                } else if (value.length > activeValue && activeValue !== 0) {\n                    activeValue -= 1;\n                }\n                break;\n            case 'ArrowRight':\n                if (!value || !multiple || filterText.length > 0 || activeValue === undefined) return;\n                if (activeValue === value.length - 1) {\n                    activeValue = undefined;\n                } else if (activeValue < value.length - 1) {\n                    activeValue += 1;\n                }\n                break;\n        }\n    }\n\n    function handleFocus(e) {\n        if (focused && input === document?.activeElement) return;\n        if (e) dispatch('focus', e);\n        input?.focus();\n        focused = true;\n    }\n\n    async function handleBlur(e) {\n        if (isScrolling) return;\n        if (listOpen || focused) {\n            dispatch('blur', e);\n            closeList();\n            focused = false;\n            activeValue = undefined;\n            input?.blur();\n        }\n    }\n\n    function handleClick() {\n        if (disabled) return;\n        if (filterText.length > 0) return listOpen = true;\n        listOpen = !listOpen;\n    }\n\n    export function handleClear() {\n        dispatch('clear', value);\n        value = undefined;\n        closeList();\n        handleFocus();\n    }\n\n    onMount(() => {\n        if (listOpen) focused = true;\n        if (focused && input) input.focus();\n    });\n\n    function itemSelected(selection) {\n        if (selection) {\n            filterText = '';\n            const item = Object.assign({}, selection);\n\n            if (item.groupHeader && !item.selectable) return;\n            value = multiple ? (value ? value.concat([item]) : [item]) : (value = item);\n\n            setTimeout(() => {\n                if (closeListOnChange) closeList();\n                activeValue = undefined;\n                dispatch('change', value);\n                dispatch('select', selection);\n            });\n        }\n    }\n\n    function closeList() {\n        if (clearFilterTextOnBlur) {\n            filterText = '';\n        }\n        listOpen = false;\n    }\n\n    export let ariaValues = (values) => {\n        return `Option ${values}, selected.`;\n    };\n\n    export let ariaListOpen = (label, count) => {\n        return `You are currently focused on option ${label}. There are ${count} results available.`;\n    };\n\n    export let ariaFocused = () => {\n        return `Select is focused, type to refine list, press down to open the menu.`;\n    };\n\n    function handleAriaSelection(_multiple) {\n        let selected = undefined;\n\n        if (_multiple && value.length > 0) {\n            selected = value.map((v) => v[label]).join(', ');\n        } else {\n            selected = value[label];\n        }\n\n        return ariaValues(selected);\n    }\n\n    function handleAriaContent() {\n        if (!filteredItems || filteredItems.length === 0) return '';\n        let _item = filteredItems[hoverItemIndex];\n        if (listOpen && _item) {\n            let count = filteredItems ? filteredItems.length : 0;\n            return ariaListOpen(_item[label], count);\n        } else {\n            return ariaFocused();\n        }\n    }\n\n    let list = null;\n\n    let isScrollingTimer;\n    function handleListScroll() {\n        clearTimeout(isScrollingTimer);\n        isScrollingTimer = setTimeout(() => {\n            isScrolling = false;\n        }, 100);\n    }\n\n    function handleClickOutside(event) {\n        if (!listOpen && !focused && container && !container.contains(event.target) && !list?.contains(event.target)) {\n            handleBlur();\n        }\n    }\n\n    onDestroy(() => {\n        list?.remove();\n    });\n\n    let isScrolling = false;\n\n    function handleSelect(item) {\n        if (!item || item.selectable === false) return;\n        itemSelected(item);\n    }\n\n    function handleHover(i) {\n        if (isScrolling) return;\n        hoverItemIndex = i;\n    }\n\n    function handleItemClick(args) {\n        const { item, i } = args;\n        if (item?.selectable === false) return;\n        if (value && !multiple && value[itemId] === item[itemId]) return closeList();\n        if (isItemSelectable(item)) {\n            hoverItemIndex = i;\n            handleSelect(item);\n        }\n    }\n\n    function setHoverIndex(increment) {\n        let selectableFilteredItems = filteredItems.filter(\n            (item) => !Object.hasOwn(item, 'selectable') || item.selectable === true\n        );\n\n        if (selectableFilteredItems.length === 0) {\n            return (hoverItemIndex = 0);\n        }\n\n        if (increment > 0 && hoverItemIndex === filteredItems.length - 1) {\n            hoverItemIndex = 0;\n        } else if (increment < 0 && hoverItemIndex === 0) {\n            hoverItemIndex = filteredItems.length - 1;\n        } else {\n            hoverItemIndex = hoverItemIndex + increment;\n        }\n\n        const hover = filteredItems[hoverItemIndex];\n\n        if (hover && hover.selectable === false) {\n            if (increment === 1 || increment === -1) setHoverIndex(increment);\n            return;\n        }\n    }\n\n    function isItemActive(item, value, itemId) {\n        if (multiple) return;\n        return value && value[itemId] === item[itemId];\n    }\n\n    function isItemFirst(itemIndex) {\n        return itemIndex === 0;\n    }\n\n    function isItemSelectable(item) {\n        return (item.groupHeader && item.selectable) || item.selectable || !item.hasOwnProperty('selectable');\n    }\n\n    const activeScroll = scrollAction;\n    const hoverScroll = scrollAction;\n\n    function scrollAction(node) {\n        return {\n            update(args) {\n                if (args.scroll) {\n                    handleListScroll();\n                    node.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n                }\n            },\n        };\n    }\n\n    function setListWidth() {\n        const { width } = container.getBoundingClientRect();\n        list.style.width = listAutoWidth ? width + 'px' : 'auto';\n    }\n\n    let _floatingConfig = {\n        strategy: 'absolute',\n        placement: 'bottom-start',\n        middleware: [offset(listOffset), flip(), shift()],\n        autoUpdate: false,\n    };\n\n    const [floatingRef, floatingContent, floatingUpdate] = createFloatingActions(_floatingConfig);\n\n    $: if (container && floatingConfig?.autoUpdate === undefined) {\n        _floatingConfig.autoUpdate = true;\n    }\n\n    let prefloat = true;\n    function listMounted(list, listOpen) {\n        if (!list || !listOpen) return (prefloat = true);\n        setTimeout(() => {\n            prefloat = false;\n        }, 0);\n    }\n</script>\n\n<svelte:window on:click={handleClickOutside} on:keydown={handleKeyDown} />\n\n<div\n    class=\"svelte-select {containerClasses}\"\n    class:multi={multiple}\n    class:disabled\n    class:focused\n    class:list-open={listOpen}\n    class:show-chevron={showChevron}\n    class:error={hasError}\n    style={containerStyles}\n    on:pointerup|preventDefault={handleClick}\n    bind:this={container}\n    use:floatingRef\n    role=\"none\">\n    {#if listOpen}\n        <div\n            use:floatingContent\n            bind:this={list}\n            class=\"svelte-select-list\"\n            class:prefloat\n            on:scroll={handleListScroll}\n            on:pointerup|preventDefault|stopPropagation\n            on:mousedown|preventDefault|stopPropagation>\n            {#if $$slots['list-prepend']}<slot name=\"list-prepend\" />{/if}\n            {#if $$slots.list}<slot name=\"list\" {filteredItems} />\n            {:else if filteredItems.length > 0}\n                {#each filteredItems as item, i}\n                    <div\n                        on:mouseover={() => handleHover(i)}\n                        on:focus={() => handleHover(i)}\n                        on:click|stopPropagation={() => handleItemClick({ item, i })}\n                        on:keydown|preventDefault|stopPropagation\n                        class=\"list-item\"\n                        tabindex=\"-1\"\n                        role=\"none\">\n                        <div\n                            use:activeScroll={{ scroll: isItemActive(item, value, itemId), listDom }}\n                            use:hoverScroll={{ scroll: scrollToHoverItem === i, listDom }}\n                            class=\"item\"\n                            class:list-group-title={item.groupHeader}\n                            class:active={isItemActive(item, value, itemId)}\n                            class:first={isItemFirst(i)}\n                            class:hover={hoverItemIndex === i}\n                            class:group-item={item.groupItem}\n                            class:not-selectable={item?.selectable === false}>\n                            <slot name=\"item\" {item} index={i}>\n                                {item?.[label]}\n                            </slot>\n                        </div>\n                    </div>\n                {/each}\n            {:else if !hideEmptyState}\n                <slot name=\"empty\">\n                    <div class=\"empty\">No options</div>\n                </slot>\n            {/if}\n            {#if $$slots['list-append']}<slot name=\"list-append\" />{/if}\n        </div>\n    {/if}\n\n    <span aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"additions text\" class=\"a11y-text\">\n        {#if focused}\n            <span id=\"aria-selection\">{ariaSelection}</span>\n            <span id=\"aria-context\">\n                {ariaContext}\n            </span>\n        {/if}\n    </span>\n\n    <div class=\"prepend\">\n        <slot name=\"prepend\" />\n    </div>\n\n    <div class=\"value-container\">\n        {#if hasValue}\n            {#if multiple}\n                {#each value as item, i}\n                    <div\n                        class=\"multi-item\"\n                        class:active={activeValue === i}\n                        class:disabled\n                        on:click|preventDefault={() => (multiFullItemClearable ? handleMultiItemClear(i) : {})}\n                        on:keydown|preventDefault|stopPropagation\n                        role=\"none\">\n                        <span class=\"multi-item-text\">\n                            <slot name=\"selection\" selection={item} index={i}>\n                                {item[label]}\n                            </slot>\n                        </span>\n\n                        {#if !disabled && !multiFullItemClearable && ClearIcon}\n                            <div\n                                class=\"multi-item-clear\"\n                                on:pointerup|preventDefault|stopPropagation={() => handleMultiItemClear(i)}>\n                                <slot name=\"multi-clear-icon\">\n                                    <ClearIcon />\n                                </slot>\n                            </div>\n                        {/if}\n                    </div>\n                {/each}\n            {:else}\n                <div class=\"selected-item\" class:hide-selected-item={hideSelectedItem}>\n                    <slot name=\"selection\" selection={value}>\n                        {value[label]}\n                    </slot>\n                </div>\n            {/if}\n        {/if}\n\n        <input\n            on:keydown={handleKeyDown}\n            on:blur={handleBlur}\n            on:focus={handleFocus}\n            readOnly={!searchable}\n            {..._inputAttributes}\n            bind:this={input}\n            bind:value={filterText}\n            placeholder={placeholderText}\n            style={inputStyles}\n            {disabled} />\n    </div>\n\n    <div class=\"indicators\">\n        {#if loading}\n            <div class=\"icon loading\" aria-hidden=\"true\">\n                <slot name=\"loading-icon\">\n                    <LoadingIcon />\n                </slot>\n            </div>\n        {/if}\n\n        {#if showClear}\n            <button type=\"button\" class=\"icon clear-select\" on:click={handleClear}>\n                <slot name=\"clear-icon\">\n                    <ClearIcon />\n                </slot>\n            </button>\n        {/if}\n\n        {#if showChevron}\n            <div class=\"icon chevron\" aria-hidden=\"true\">\n                <slot name=\"chevron-icon\" {listOpen}>\n                    <ChevronIcon />\n                </slot>\n            </div>\n        {/if}\n    </div>\n\n    <slot name=\"input-hidden\" {value}>\n        <input {name} type=\"hidden\" value={value ? JSON.stringify(value) : null} />\n    </slot>\n\n    {#if required && (!value || value.length === 0)}\n        <slot name=\"required\" {value}>\n            <select class=\"required\" required tabindex=\"-1\" aria-hidden=\"true\" />\n        </slot>\n    {/if}\n</div>\n\n<style>\n    .svelte-select {\n        /* deprecating camelCase custom props in favour of kebab-case for v5 */\n        --borderRadius: var(--border-radius);\n        --clearSelectColor: var(--clear-select-color);\n        --clearSelectWidth: var(--clear-select-width);\n        --disabledBackground: var(--disabled-background);\n        --disabledBorderColor: var(--disabled-border-color);\n        --disabledColor: var(--disabled-color);\n        --disabledPlaceholderColor: var(--disabled-placeholder-color);\n        --disabledPlaceholderOpacity: var(--disabled-placeholder-opacity);\n        --errorBackground: var(--error-background);\n        --errorBorder: var(--error-border);\n        --groupItemPaddingLeft: var(--group-item-padding-left);\n        --groupTitleColor: var(--group-title-color);\n        --groupTitleFontSize: var(--group-title-font-size);\n        --groupTitleFontWeight: var(--group-title-font-weight);\n        --groupTitlePadding: var(--group-title-padding);\n        --groupTitleTextTransform: var(--group-title-text-transform);\n        --groupTitleBorderColor: var(--group-title-border-color);\n        --groupTitleBorderWidth: var(--group-title-border-width);\n        --groupTitleBorderStyle: var(--group-title-border-style);\n        --indicatorColor: var(--chevron-color);\n        --indicatorHeight: var(--chevron-height);\n        --indicatorWidth: var(--chevron-width);\n        --inputColor: var(--input-color);\n        --inputLeft: var(--input-left);\n        --inputLetterSpacing: var(--input-letter-spacing);\n        --inputMargin: var(--input-margin);\n        --inputPadding: var(--input-padding);\n        --itemActiveBackground: var(--item-active-background);\n        --itemColor: var(--item-color);\n        --itemFirstBorderRadius: var(--item-first-border-radius);\n        --itemHoverBG: var(--item-hover-bg);\n        --itemHoverColor: var(--item-hover-color);\n        --itemIsActiveBG: var(--item-is-active-bg);\n        --itemIsActiveColor: var(--item-is-active-color);\n        --itemIsNotSelectableColor: var(--item-is-not-selectable-color);\n        --itemPadding: var(--item-padding);\n        --listBackground: var(--list-background);\n        --listBorder: var(--list-border);\n        --listBorderRadius: var(--list-border-radius);\n        --listEmptyColor: var(--list-empty-color);\n        --listEmptyPadding: var(--list-empty-padding);\n        --listEmptyTextAlign: var(--list-empty-text-align);\n        --listMaxHeight: var(--list-max-height);\n        --listPosition: var(--list-position);\n        --listShadow: var(--list-shadow);\n        --listZIndex: var(--list-z-index);\n        --multiItemBG: var(--multi-item-bg);\n        --multiItemBorderRadius: var(--multi-item-border-radius);\n        --multiItemDisabledHoverBg: var(--multi-item-disabled-hover-bg);\n        --multiItemDisabledHoverColor: var(--multi-item-disabled-hover-color);\n        --multiItemHeight: var(--multi-item-height);\n        --multiItemMargin: var(--multi-item-margin);\n        --multiItemPadding: var(--multi-item-padding);\n        --multiSelectInputMargin: var(--multi-select-input-margin);\n        --multiSelectInputPadding: var(--multi-select-input-padding);\n        --multiSelectPadding: var(--multi-select-padding);\n        --placeholderColor: var(--placeholder-color);\n        --placeholderOpacity: var(--placeholder-opacity);\n        --selectedItemPadding: var(--selected-item-padding);\n        --spinnerColor: var(--spinner-color);\n        --spinnerHeight: var(--spinner-height);\n        --spinnerWidth: var(--spinner-width);\n\n        --internal-padding: 0 0 0 16px;\n\n        border: var(--border, 1px solid #d8dbdf);\n        border-radius: var(--border-radius, 6px);\n        min-height: var(--height, 42px);\n        position: relative;\n        display: flex;\n        align-items: stretch;\n        padding: var(--padding, var(--internal-padding));\n        background: var(--background, #fff);\n        margin: var(--margin, 0);\n        width: var(--width, 100%);\n        font-size: var(--font-size, 16px);\n        max-height: var(--max-height);\n    }\n\n    * {\n        box-sizing: var(--box-sizing, border-box);\n    }\n\n    .svelte-select:hover {\n        border: var(--border-hover, 1px solid #b2b8bf);\n    }\n\n    .value-container {\n        display: flex;\n        flex: 1 1 0%;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: 5px 10px;\n        padding: var(--value-container-padding, 5px 0);\n        position: relative;\n        overflow: var(--value-container-overflow, hidden);\n        align-self: stretch;\n    }\n\n    .prepend,\n    .indicators {\n        display: flex;\n        flex-shrink: 0;\n        align-items: center;\n    }\n\n    .indicators {\n        position: var(--indicators-position);\n        top: var(--indicators-top);\n        right: var(--indicators-right);\n        bottom: var(--indicators-bottom);\n    }\n\n    input {\n        position: absolute;\n        cursor: default;\n        border: none;\n        color: var(--input-color, var(--item-color));\n        padding: var(--input-padding, 0);\n        letter-spacing: var(--input-letter-spacing, inherit);\n        margin: var(--input-margin, 0);\n        min-width: 10px;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background: transparent;\n        font-size: var(--font-size, 16px);\n    }\n\n    :not(.multi) > .value-container > input {\n        width: 100%;\n        height: 100%;\n    }\n\n    input::placeholder {\n        color: var(--placeholder-color, #78848f);\n        opacity: var(--placeholder-opacity, 1);\n    }\n\n    input:focus {\n        outline: none;\n    }\n\n    .svelte-select.focused {\n        border: var(--border-focused, 1px solid #006fe8);\n        border-radius: var(--border-radius-focused, var(--border-radius, 6px));\n    }\n\n    .disabled {\n        background: var(--disabled-background, #ebedef);\n        border-color: var(--disabled-border-color, #ebedef);\n        color: var(--disabled-color, #c1c6cc);\n    }\n\n    .disabled input::placeholder {\n        color: var(--disabled-placeholder-color, #c1c6cc);\n        opacity: var(--disabled-placeholder-opacity, 1);\n    }\n\n    .selected-item {\n        position: relative;\n        overflow: var(--selected-item-overflow, hidden);\n        padding: var(--selected-item-padding, 0 20px 0 0);\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        color: var(--selected-item-color, inherit);\n        font-size: var(--font-size, 16px);\n    }\n\n    .multi .selected-item {\n        position: absolute;\n        line-height: var(--height, 42px);\n        height: var(--height, 42px);\n    }\n\n    .selected-item:focus {\n        outline: none;\n    }\n\n    .hide-selected-item {\n        opacity: 0;\n    }\n\n    .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .clear-select {\n        all: unset;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--clear-select-width, 40px);\n        height: var(--clear-select-height, 100%);\n        color: var(--clear-select-color, var(--icons-color));\n        margin: var(--clear-select-margin, 0);\n        pointer-events: all;\n        flex-shrink: 0;\n    }\n\n    .clear-select:focus {\n        outline: var(--clear-select-focus-outline, 1px solid #006fe8);\n    }\n\n    .loading {\n        width: var(--loading-width, 40px);\n        height: var(--loading-height);\n        color: var(--loading-color, var(--icons-color));\n        margin: var(--loading--margin, 0);\n        flex-shrink: 0;\n    }\n\n    .chevron {\n        width: var(--chevron-width, 40px);\n        height: var(--chevron-height, 40px);\n        background: var(--chevron-background, transparent);\n        pointer-events: var(--chevron-pointer-events, none);\n        color: var(--chevron-color, var(--icons-color));\n        border: var(--chevron-border, 0 0 0 1px solid #d8dbdf);\n        flex-shrink: 0;\n    }\n\n    .multi {\n        padding: var(--multi-select-padding, var(--internal-padding));\n    }\n\n    .multi input {\n        padding: var(--multi-select-input-padding, 0);\n        position: relative;\n        margin: var(--multi-select-input-margin, 5px 0);\n        flex: 1 1 40px;\n    }\n\n    .svelte-select.error {\n        border: var(--error-border, 1px solid #ff2d55);\n        background: var(--error-background, #fff);\n    }\n\n    .a11y-text {\n        z-index: 9999;\n        border: 0px;\n        clip: rect(1px, 1px, 1px, 1px);\n        height: 1px;\n        width: 1px;\n        position: absolute;\n        overflow: hidden;\n        padding: 0px;\n        white-space: nowrap;\n    }\n\n    .multi-item {\n        background: var(--multi-item-bg, #ebedef);\n        margin: var(--multi-item-margin, 0);\n        outline: var(--multi-item-outline, 1px solid #ddd);\n        border-radius: var(--multi-item-border-radius, 4px);\n        height: var(--multi-item-height, 25px);\n        line-height: var(--multi-item-height, 25px);\n        display: flex;\n        cursor: default;\n        padding: var(--multi-item-padding, 0 5px);\n        overflow: hidden;\n        gap: var(--multi-item-gap, 4px);\n        outline-offset: -1px;\n        max-width: var(--multi-max-width, none);\n        color: var(--multi-item-color, var(--item-color));\n    }\n\n    .multi-item.disabled:hover {\n        background: var(--multi-item-disabled-hover-bg, #ebedef);\n        color: var(--multi-item-disabled-hover-color, #c1c6cc);\n    }\n\n    .multi-item-text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .multi-item-clear {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        --clear-icon-color: var(--multi-item-clear-icon-color, #000);\n    }\n\n    .multi-item.active {\n        outline: var(--multi-item-active-outline, 1px solid #006fe8);\n    }\n\n    .svelte-select-list {\n        box-shadow: var(--list-shadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));\n        border-radius: var(--list-border-radius, 4px);\n        max-height: var(--list-max-height, 252px);\n        overflow-y: auto;\n        background: var(--list-background, #fff);\n        position: var(--list-position, absolute);\n        z-index: var(--list-z-index, 2);\n        border: var(--list-border);\n    }\n\n    .prefloat {\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .list-group-title {\n        color: var(--group-title-color, #8f8f8f);\n        cursor: default;\n        font-size: var(--group-title-font-size, 16px);\n        font-weight: var(--group-title-font-weight, 600);\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--group-title-padding, 0 20px);\n        text-overflow: ellipsis;\n        overflow-x: hidden;\n        white-space: nowrap;\n        text-transform: var(--group-title-text-transform, uppercase);\n        border-width: var(--group-title-border-width, medium);\n        border-style: var(--group-title-border-style, none);\n        border-color: var(--group-title-border-color, color);\n    }\n\n    .empty {\n        text-align: var(--list-empty-text-align, center);\n        padding: var(--list-empty-padding, 20px 0);\n        color: var(--list-empty-color, #78848f);\n    }\n\n    .item {\n        cursor: default;\n        height: var(--item-height, var(--height, 42px));\n        line-height: var(--item-line-height, var(--height, 42px));\n        padding: var(--item-padding, 0 20px);\n        color: var(--item-color, inherit);\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: var(--item-transition, all 0.2s);\n        align-items: center;\n        width: 100%;\n    }\n\n    .item.group-item {\n        padding-left: var(--group-item-padding-left, 40px);\n    }\n\n    .item:active {\n        background: var(--item-active-background, #b9daff);\n    }\n\n    .item.active {\n        background: var(--item-is-active-bg, #007aff);\n        color: var(--item-is-active-color, #fff);\n    }\n\n    .item.first {\n        border-radius: var(--item-first-border-radius, 4px 4px 0 0);\n    }\n\n    .item.hover:not(.active) {\n        background: var(--item-hover-bg, #e7f2ff);\n        color: var(--item-hover-color, inherit);\n    }\n\n    .item.not-selectable,\n    .item.hover.item.not-selectable,\n    .item.active.item.not-selectable,\n    .item.not-selectable:active {\n        color: var(--item-is-not-selectable-color, #999);\n        background: transparent;\n    }\n\n    .required {\n        opacity: 0;\n        z-index: -1;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n    }\n</style>\n","//@ts-ignore\nimport { arrow as arrowCore } from \"@floating-ui/core\";\nimport { autoUpdate as _autoUpdate, computePosition } from \"@floating-ui/dom\";\nimport { get } from \"svelte/store\";\nimport { onDestroy } from 'svelte';\nexport function createFloatingActions(initOptions) {\n    let referenceElement;\n    let floatingElement;\n    const defaultOptions = {\n        autoUpdate: true\n    };\n    let options = initOptions;\n    const getOptions = (mixin) => {\n        return { ...defaultOptions, ...(initOptions || {}), ...(mixin || {}) };\n    };\n    const updatePosition = (updateOptions) => {\n        if (referenceElement && floatingElement) {\n            options = getOptions(updateOptions);\n            computePosition(referenceElement, floatingElement, options)\n                .then(v => {\n                Object.assign(floatingElement.style, {\n                    position: v.strategy,\n                    left: `${v.x}px`,\n                    top: `${v.y}px`,\n                });\n                options?.onComputed && options.onComputed(v);\n            });\n        }\n    };\n    const referenceAction = node => {\n        if ('subscribe' in node) {\n            setupVirtualElementObserver(node);\n            return {};\n        }\n        else {\n            referenceElement = node;\n            updatePosition();\n        }\n    };\n    const contentAction = (node, contentOptions) => {\n        let autoUpdateDestroy;\n        floatingElement = node;\n        options = getOptions(contentOptions);\n        setTimeout(() => updatePosition(contentOptions), 0); //tick doesn't work\n        updatePosition(contentOptions);\n        const destroyAutoUpdate = () => {\n            if (autoUpdateDestroy) {\n                autoUpdateDestroy();\n                autoUpdateDestroy = undefined;\n            }\n        };\n        const initAutoUpdate = ({ autoUpdate } = options || {}) => {\n            destroyAutoUpdate();\n            if (autoUpdate !== false) {\n                return _autoUpdate(referenceElement, floatingElement, () => updatePosition(options), (autoUpdate === true ? {} : autoUpdate));\n            }\n            return;\n        };\n        autoUpdateDestroy = initAutoUpdate();\n        return {\n            update(contentOptions) {\n                updatePosition(contentOptions);\n                autoUpdateDestroy = initAutoUpdate(contentOptions);\n            },\n            destroy() {\n                destroyAutoUpdate();\n            }\n        };\n    };\n    const setupVirtualElementObserver = (node) => {\n        const unsubscribe = node.subscribe(($node) => {\n            if (referenceElement === undefined) {\n                referenceElement = $node;\n                updatePosition();\n            }\n            else {\n                // Preserve the reference to the virtual element.\n                Object.assign(referenceElement, $node);\n                updatePosition();\n            }\n        });\n        onDestroy(unsubscribe);\n    };\n    return [\n        referenceAction,\n        contentAction,\n        updatePosition\n    ];\n}\nexport function arrow(options) {\n    return {\n        name: \"arrow\",\n        options,\n        fn(args) {\n            const element = get(options.element);\n            if (element) {\n                return arrowCore({\n                    element,\n                    padding: options.padding\n                }).fn(args);\n            }\n            return {};\n        }\n    };\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Select from 'svelte-select'\n  import { getNestedPaths } from '$lib/utils/arrayUtils.js'\n  import { pathToOption } from '$lib/utils/pathUtils.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { isEqual } from 'lodash-es'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { setIn } from 'immutable-json-patch'\n  import type { PathOption, QueryLanguageOptions } from '$lib/types.js'\n\n  const debug = createDebug('jsoneditor:TransformWizard')\n\n  export let json: unknown\n  export let queryOptions: QueryLanguageOptions = {}\n  export let onChange: (queryOptions: QueryLanguageOptions) => void\n\n  // options\n  $: jsonIsArray = Array.isArray(json)\n  $: paths = jsonIsArray ? getNestedPaths(json) : []\n  $: pathsIncludingObjects = jsonIsArray ? getNestedPaths(json, true) : []\n  $: fieldOptions = paths.map(pathToOption)\n  $: projectionOptions = pathsIncludingObjects ? pathsIncludingObjects.map(pathToOption) : []\n\n  const filterRelationOptions = ['==', '!=', '<', '<=', '>', '>='].map((relation) => ({\n    value: relation,\n    label: relation\n  }))\n\n  const sortDirectionOptions = [\n    { value: 'asc', label: 'ascending' },\n    { value: 'desc', label: 'descending' }\n  ]\n\n  // TODO: the binding with the select boxes is very cumbersome. Can we simplify this?\n  let filterPath = queryOptions?.filter?.path ? pathToOption(queryOptions.filter.path) : null\n  let filterRelation = queryOptions?.filter?.relation\n    ? filterRelationOptions.find((option) => option.value === queryOptions.filter?.relation)\n    : null\n  let filterValue = queryOptions?.filter?.value || ''\n  let sortPath = queryOptions?.sort?.path ? pathToOption(queryOptions.sort.path) : null\n  let sortDirection = queryOptions?.sort?.direction\n    ? sortDirectionOptions.find((option) => option.value === queryOptions.sort?.direction)\n    : null\n\n  $: projectionPaths =\n    queryOptions?.projection?.paths && projectionOptions\n      ? (queryOptions.projection.paths\n          .map((path) => projectionOptions.find((option) => isEqual(option.value, path)))\n          .filter((option) => !!option) as PathOption[])\n      : null\n\n  function changeFilterPath(path: JSONPath | undefined) {\n    if (!isEqual(queryOptions?.filter?.path, path)) {\n      debug('changeFilterPath', path)\n      queryOptions = setIn(queryOptions, ['filter', 'path'], path, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeFilterRelation(relation: string | undefined) {\n    if (!isEqual(queryOptions?.filter?.relation, relation)) {\n      debug('changeFilterRelation', relation)\n      queryOptions = setIn(queryOptions, ['filter', 'relation'], relation, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeFilterValue(value: string | undefined) {\n    if (!isEqual(queryOptions?.filter?.value, value)) {\n      debug('changeFilterValue', value)\n      queryOptions = setIn(queryOptions, ['filter', 'value'], value, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeSortPath(path: JSONPath | undefined) {\n    if (!isEqual(queryOptions?.sort?.path, path)) {\n      debug('changeSortPath', path)\n      queryOptions = setIn(queryOptions, ['sort', 'path'], path, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeSortDirection(direction: string | undefined) {\n    if (!isEqual(queryOptions?.sort?.direction, direction)) {\n      debug('changeSortDirection', direction)\n      queryOptions = setIn(queryOptions, ['sort', 'direction'], direction, true)\n      onChange(queryOptions)\n    }\n  }\n\n  function changeProjectionPaths(paths: JSONPath[] | unknown) {\n    if (!isEqual(queryOptions?.projection?.paths, paths)) {\n      debug('changeProjectionPaths', paths)\n      queryOptions = setIn(queryOptions, ['projection', 'paths'], paths, true)\n      onChange(queryOptions)\n    }\n  }\n\n  $: changeFilterPath(filterPath?.value)\n  $: changeFilterRelation(filterRelation?.value)\n  $: changeFilterValue(filterValue)\n  $: changeSortPath(sortPath?.value)\n  $: changeSortDirection(sortDirection?.value)\n  $: changeProjectionPaths(projectionPaths ? projectionPaths.map((item) => item.value) : undefined)\n</script>\n\n<table class=\"jse-transform-wizard\">\n  <tr>\n    <th>Filter</th>\n    <td>\n      <div class=\"jse-horizontal\">\n        <Select class=\"jse-filter-path\" showChevron items={fieldOptions} bind:value={filterPath} />\n        <Select\n          class=\"jse-filter-relation\"\n          showChevron\n          items={filterRelationOptions}\n          bind:value={filterRelation}\n        />\n        <input class=\"jse-filter-value\" bind:value={filterValue} />\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <th>Sort</th>\n    <td>\n      <div class=\"jse-horizontal\">\n        <Select class=\"jse-sort-path\" showChevron items={fieldOptions} bind:value={sortPath} />\n        <Select\n          class=\"jse-sort-direction\"\n          showChevron\n          items={sortDirectionOptions}\n          bind:value={sortDirection}\n        />\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <th>Pick</th>\n    <td>\n      <div class=\"jse-horizontal\">\n        <Select\n          class=\"jse-projection-paths\"\n          multiple\n          showChevron\n          items={projectionOptions}\n          bind:value={projectionPaths}\n        />\n      </div>\n    </td>\n  </tr>\n</table>\n\n<style src=\"./TransformWizard.scss\"></style>\n","<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faCheckSquare, faSquare } from '@fortawesome/free-regular-svg-icons'\n  import type { QueryLanguage, OnChangeQueryLanguage } from '$lib/types.js'\n\n  export let queryLanguages: QueryLanguage[]\n  export let queryLanguageId: string\n  export let onChangeQueryLanguage: OnChangeQueryLanguage\n\n  function handleChangeQueryLanguage(newQueryLanguageId: string) {\n    queryLanguageId = newQueryLanguageId\n    onChangeQueryLanguage(newQueryLanguageId)\n  }\n</script>\n\n<div class=\"jse-select-query-language\">\n  <div class=\"jse-select-query-language-container\">\n    {#each queryLanguages as queryLanguage}\n      <button\n        type=\"button\"\n        on:click={() => handleChangeQueryLanguage(queryLanguage.id)}\n        class=\"jse-query-language\"\n        class:selected={queryLanguage.id === queryLanguageId}\n        title={`Select ${queryLanguage.name} as query language`}\n      >\n        {#if queryLanguage.id === queryLanguageId}\n          <Icon data={faCheckSquare} />\n        {:else}\n          <Icon data={faSquare} />\n        {/if}\n        {queryLanguage.name}\n      </button>\n    {/each}\n  </div>\n</div>\n\n<style src=\"./SelectQueryLanguage.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getContext } from 'svelte'\n  import Icon from 'svelte-awesome'\n  import { faCog, faTimes } from '@fortawesome/free-solid-svg-icons'\n  import SelectQueryLanguage from '../controls/selectQueryLanguage/SelectQueryLanguage.svelte'\n  import type { AbsolutePopupContext, OnChangeQueryLanguage, QueryLanguage } from '$lib/types.js'\n  import type { Context } from 'svelte-simple-modal'\n\n  export let queryLanguages: QueryLanguage[]\n  export let queryLanguageId: string\n  export let onChangeQueryLanguage: OnChangeQueryLanguage\n\n  let refConfigButton: HTMLButtonElement | undefined\n  let popupId: number | undefined\n\n  const { close } = getContext<Context>('simple-modal')\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n\n  function openConfig() {\n    const props = {\n      queryLanguages,\n      queryLanguageId,\n      onChangeQueryLanguage: (queryLanguageId: string) => {\n        closeAbsolutePopup(popupId)\n        onChangeQueryLanguage(queryLanguageId)\n      }\n    }\n\n    popupId = openAbsolutePopup(SelectQueryLanguage, props, {\n      offsetTop: -2,\n      offsetLeft: 0,\n      anchor: refConfigButton,\n      closeOnOuterClick: true\n    })\n  }\n</script>\n\n<div class=\"jse-header\">\n  <div class=\"jse-title\">Transform</div>\n  {#if queryLanguages.length > 1}\n    <button\n      type=\"button\"\n      bind:this={refConfigButton}\n      class=\"jse-config\"\n      on:click={openConfig}\n      title=\"Select a query language\"\n    >\n      <Icon data={faCog} />\n    </button>\n  {/if}\n  <button type=\"button\" class=\"jse-close\" on:click={() => close()}>\n    <Icon data={faTimes} />\n  </button>\n</div>\n\n<style src=\"./Header.scss\"></style>\n","import { createDebug } from '$lib/utils/debug.js'\nimport {\n  AUTO_SCROLL_INTERVAL,\n  AUTO_SCROLL_SPEED_FAST,\n  AUTO_SCROLL_SPEED_NORMAL,\n  AUTO_SCROLL_SPEED_SLOW\n} from '$lib/constants.js'\n\nconst debug = createDebug('jsoneditor:AutoScrollHandler')\n\nexport function createAutoScrollHandler(scrollableElement: Element) {\n  debug('createAutoScrollHandler', scrollableElement)\n\n  let autoScrollSpeed: number | undefined // pixels per second\n  let autoScrollTimer: number | undefined\n\n  function calculateSpeed(diff: number) {\n    return diff < 20\n      ? AUTO_SCROLL_SPEED_SLOW\n      : diff < 50\n        ? AUTO_SCROLL_SPEED_NORMAL\n        : AUTO_SCROLL_SPEED_FAST\n  }\n\n  function autoScrollCallback() {\n    if (scrollableElement) {\n      // debug('auto scroll...')\n      const diff = (autoScrollSpeed || 0) * (AUTO_SCROLL_INTERVAL / 1000)\n\n      scrollableElement.scrollTop += diff\n    }\n  }\n\n  function startAutoScroll(speed: number) {\n    if (!autoScrollTimer || speed !== autoScrollSpeed) {\n      stopAutoScroll()\n\n      debug('startAutoScroll', speed)\n      autoScrollSpeed = speed\n      autoScrollTimer = setInterval(autoScrollCallback, AUTO_SCROLL_INTERVAL) as unknown as number\n    }\n  }\n\n  function stopAutoScroll() {\n    if (autoScrollTimer) {\n      debug('stopAutoScroll')\n\n      clearInterval(autoScrollTimer)\n      autoScrollTimer = undefined\n      autoScrollSpeed = undefined\n    }\n  }\n\n  function onDrag(event: MouseEvent) {\n    if (scrollableElement) {\n      const y = event.clientY\n      const { top, bottom } = scrollableElement.getBoundingClientRect()\n\n      if (y < top) {\n        const speed = calculateSpeed(top - y)\n        startAutoScroll(-speed)\n      } else if (y > bottom) {\n        const speed = calculateSpeed(y - bottom)\n        startAutoScroll(speed)\n      } else {\n        stopAutoScroll()\n      }\n    }\n  }\n\n  function onDragEnd() {\n    stopAutoScroll()\n  }\n\n  return {\n    onDrag,\n    onDragEnd\n  }\n}\n","// Robert Penner's easeInOutQuad\n\n// find the rest of his easing functions here: http://robertpenner.com/easing/\n// find them exported for ES6 consumption here: https://github.com/jaxgeller/ez.js\n\nexport default (t: number, b: number, c: number, d: number): number => {\n  t /= d / 2\n  if (t < 1) {\n    return (c / 2) * t * t + b\n  }\n  t--\n  return (-c / 2) * (t * (t - 2) - 1) + b\n}\n","import easeInOutQuad from './easing.js'\n\ntype Easing = (t: number, b: number, c: number, d: number) => number\ntype Duration = number | ((distance: number) => number)\n\ninterface JumpOptions {\n  duration?: Duration\n  offset?: number\n  callback?: () => void\n  easing?: Easing\n  a11y?: boolean\n  container?: Element | string\n}\n\nexport const createJump = () => {\n  // private variable cache\n  // no variables are created during a jump, preventing memory leaks\n\n  let container: Element // container element to be scrolled       (node)\n  let element: Element | undefined // element to scroll to                   (node)\n\n  let start: number // where scroll starts                    (px)\n  let stop: number // where scroll stops                     (px)\n\n  let offset // adjustment from the stop position      (px)\n  let easing: Easing // easing function                        (function)\n  let a11y: boolean // accessibility support flag             (boolean)\n\n  let distance: number // distance of scroll                     (px)\n  let duration: number // scroll duration                        (ms)\n\n  let timeStart: number // time scroll started                    (ms)\n  let timeElapsed: number // time spent scrolling thus far          (ms)\n\n  let next: number // next scroll position                   (px)\n\n  let callback: (() => void) | undefined // to call when done scrolling            (function)\n\n  let scrolling: boolean // true whilst scrolling                  (boolean)\n\n  // scroll position helper\n\n  function location() {\n    return container.scrollTop\n  }\n\n  // element offset helper\n\n  function top(element: Element) {\n    const elementTop = element.getBoundingClientRect().top\n    const containerTop = container.getBoundingClientRect ? container.getBoundingClientRect().top : 0\n\n    return elementTop - containerTop + start\n  }\n\n  // scrollTo helper\n\n  function scrollTo(top: number) {\n    container.scrollTo\n      ? container.scrollTo(container.scrollLeft, top) // window\n      : (container.scrollTop = top) // custom container\n  }\n\n  // rAF loop helper\n\n  function loop(timeCurrent: number) {\n    // store time scroll started, if not started already\n    if (!timeStart) {\n      timeStart = timeCurrent\n    }\n\n    // determine time spent scrolling so far\n    timeElapsed = timeCurrent - timeStart\n\n    // calculate next scroll position\n    next = easing(timeElapsed, start, distance, duration)\n\n    // scroll to it\n    scrollTo(next)\n\n    scrolling = true\n\n    // check progress\n    timeElapsed < duration\n      ? requestAnimationFrame(loop) // continue scroll loop\n      : done() // scrolling is done\n  }\n\n  // scroll finished helper\n\n  function done() {\n    // account for rAF time rounding inaccuracies\n    scrollTo(start + distance)\n\n    // if scrolling to an element, and accessibility is enabled\n    if (element && a11y) {\n      // add tabindex indicating programmatic focus\n      element.setAttribute('tabindex', '-1')\n\n      // focus the element\n      const htmlElement = element as HTMLElement\n      htmlElement.focus()\n    }\n\n    // if it exists, fire the callback\n    if (typeof callback === 'function') {\n      callback()\n    }\n\n    // reset time for next jump\n    timeStart = 0\n\n    // we're done scrolling\n    scrolling = false\n  }\n\n  // API\n\n  function jump(target: Element | number | string, options: JumpOptions = {}) {\n    // resolve options, or use defaults\n    duration = 1000\n    offset = options.offset || 0\n    callback = options.callback // \"undefined\" is a suitable default, and won't be called\n    easing = options.easing || easeInOutQuad\n    a11y = options.a11y || false\n\n    // resolve container\n    switch (typeof options.container) {\n      case 'object':\n        // we assume container is an HTML element (Node)\n        container = options.container\n        break\n\n      case 'string':\n        container = document.querySelector(options.container) as Element\n        break\n\n      default:\n        container = window.document.documentElement\n    }\n\n    // cache starting position\n    start = location()\n\n    // resolve target\n    switch (typeof target) {\n      // scroll from current position\n      case 'number':\n        element = undefined // no element to scroll to\n        a11y = false // make sure accessibility is off\n        stop = start + target\n        break\n\n      // scroll to element (node)\n      // bounding rect is relative to the viewport\n      case 'object':\n        element = target\n        stop = top(element)\n        break\n\n      // scroll to element (selector)\n      // bounding rect is relative to the viewport\n      case 'string':\n        element = document.querySelector(target) as unknown as Element\n        stop = top(element)\n        break\n\n      default:\n    }\n\n    // resolve scroll distance, accounting for offset\n    distance = stop - start + offset\n\n    // resolve duration\n    switch (typeof options.duration) {\n      // number in ms\n      case 'number':\n        duration = options.duration\n        break\n\n      // function passed the distance of the scroll\n      case 'function':\n        duration = options.duration(distance)\n        break\n\n      default:\n    }\n\n    // start the loop if we're not already scrolling\n    if (!scrolling) {\n      requestAnimationFrame(loop)\n    } else {\n      // reset time for next jump\n      timeStart = 0\n    }\n  }\n\n  // expose only the jump method\n  return jump\n}\n\n// export singleton\n\nconst singleton = createJump()\n\nexport default singleton\n","import { createDebug } from '../utils/debug.js'\n\nconst MAX_HISTORY_ITEMS = 1000\n\nconst debug = createDebug('jsoneditor:History')\n\n/**\n * @typedef {*} HistoryItem\n * @property {Object} undo\n * @property {Object} redo\n */\n\nexport interface HistoryOptions {\n  maxItems?: number\n  onChange?: (props: { canUndo: boolean; canRedo: boolean; length: number }) => void\n}\n\nexport interface HistoryState {\n  canUndo: boolean\n  canRedo: boolean\n  length: number\n}\n\nexport interface History<T> {\n  add: (item: T) => void\n  clear: () => void\n  getState: () => HistoryState\n  undo: () => T | undefined\n  redo: () => T | undefined\n}\n\nexport function createHistory<T>(options: HistoryOptions = {}): History<T> {\n  const maxItems = options.maxItems || MAX_HISTORY_ITEMS\n\n  /**\n   * items in history are sorted from newest first to oldest last\n   */\n  let items: T[] = []\n\n  let index = 0\n\n  function canUndo(): boolean {\n    return index < items.length\n  }\n\n  function canRedo(): boolean {\n    return index > 0\n  }\n\n  function getState(): HistoryState {\n    return {\n      canUndo: canUndo(),\n      canRedo: canRedo(),\n      length: items.length\n    }\n  }\n\n  function handleChange() {\n    if (options.onChange) {\n      options.onChange(getState())\n    }\n  }\n\n  function add(item: T) {\n    debug('add', item)\n\n    items = [item].concat(items.slice(index)).slice(0, maxItems)\n\n    index = 0\n\n    handleChange()\n  }\n\n  function clear() {\n    debug('clear')\n\n    items = []\n    index = 0\n\n    handleChange()\n  }\n\n  function undo(): T | undefined {\n    if (canUndo()) {\n      const item = items[index]\n      index += 1\n\n      debug('undo', item)\n\n      handleChange()\n\n      return item\n    }\n\n    return undefined\n  }\n\n  function redo(): T | undefined {\n    if (canRedo()) {\n      index -= 1\n\n      debug('redo', items[index])\n\n      handleChange()\n\n      return items[index]\n    }\n\n    return undefined\n  }\n\n  return {\n    add,\n    clear,\n    getState,\n    undo,\n    redo\n  }\n}\n","/**\n * Measure how long a callback takes to execute.\n * Returns the response from the callback\n * The measured duration is returned via the onDuration callback\n */\nexport function measure<T>(callback: () => T, onDuration: (duration: number) => void): T {\n  const start = Date.now()\n  const result = callback()\n  const end = Date.now()\n\n  onDuration(end - start)\n\n  return result\n}\n","import { initial, isEmpty } from 'lodash-es'\nimport type {\n  ContentErrors,\n  JSONParser,\n  JSONPointerMap,\n  NestedValidationError,\n  ValidationError,\n  Validator\n} from '$lib/types.js'\nimport { ValidationSeverity } from '$lib/types.js'\nimport { compileJSONPointer, type JSONPointer } from 'immutable-json-patch'\nimport { MAX_AUTO_REPAIRABLE_SIZE, MAX_VALIDATABLE_SIZE } from '../constants.js'\nimport { measure } from '../utils/timeUtils.js'\nimport { normalizeJsonParseError } from '../utils/jsonUtils.js'\nimport { createDebug } from '../utils/debug.js'\nimport { jsonrepair } from 'jsonrepair'\n\nconst debug = createDebug('validation')\n\n/**\n * Create a flat map with validation errors, where the key is the stringified path\n * and also create error messages for the parent nodes of the nodes having an error.\n *\n * Returns a nested object containing the validation errors\n */\nexport function mapValidationErrors(\n  validationErrors: ValidationError[]\n): JSONPointerMap<NestedValidationError> {\n  const map: Record<JSONPointer, ValidationError | NestedValidationError> = {}\n\n  // first generate a map with the errors themselves\n  validationErrors.forEach((validationError) => {\n    map[compileJSONPointer(validationError.path)] = validationError\n  })\n\n  // create error entries for all parent nodes (displayed when the node is collapsed)\n  validationErrors.forEach((validationError) => {\n    let parentPath = validationError.path\n\n    while (parentPath.length > 0) {\n      parentPath = initial(parentPath)\n      const parentPointer: JSONPointer = compileJSONPointer(parentPath)\n\n      if (!(parentPointer in map)) {\n        map[parentPointer] = {\n          isChildError: true,\n          path: parentPath,\n          message: 'Contains invalid data',\n          severity: ValidationSeverity.warning\n        }\n      }\n    }\n  })\n\n  return map\n}\n\nexport function validateJSON(\n  json: unknown,\n  validator: Validator | null,\n  parser: JSONParser,\n  validationParser: JSONParser\n): ValidationError[] {\n  debug('validateJSON')\n\n  if (!validator) {\n    return []\n  }\n\n  if (parser !== validationParser) {\n    // if needed, convert for example Lossless JSON to native JSON\n    // (like replace bigint or LosslessNumber into regular numbers)\n    const text = parser.stringify(json)\n    const convertedJSON = text !== undefined ? validationParser.parse(text) : undefined\n    return validator(convertedJSON)\n  } else {\n    return validator(json)\n  }\n}\n\nexport function validateText(\n  text: string,\n  validator: Validator | null,\n  parser: JSONParser,\n  validationParser: JSONParser\n): ContentErrors | null {\n  debug('validateText')\n\n  if (text.length > MAX_VALIDATABLE_SIZE) {\n    const validationError: ValidationError = {\n      path: [],\n      message: 'Validation turned off: the document is too large',\n      severity: ValidationSeverity.info\n    }\n\n    return {\n      validationErrors: [validationError]\n    }\n  }\n\n  if (text.length === 0) {\n    // new, empty document, do not try to parse\n    return null\n  }\n\n  try {\n    // parse with the \"main\" parser (not the validation parser) to get parse errors\n    // (like syntax errors and duplicate keys errors)\n    const json = measure(\n      () => parser.parse(text),\n      (duration) => debug(`validate: parsed json in ${duration} ms`)\n    )\n\n    if (!validator) {\n      return null\n    }\n\n    // if needed, parse with the validationParser to be able to feed the json to the validator\n    const convertedJSON =\n      parser === validationParser\n        ? json\n        : measure(\n            () => validationParser.parse(text),\n            (duration) => debug(`validate: parsed json with the validationParser in ${duration} ms`)\n          )\n\n    // actually validate the json\n    const validationErrors = measure(\n      () => validator(convertedJSON),\n      (duration) => debug(`validate: validated json in ${duration} ms`)\n    )\n\n    return !isEmpty(validationErrors) ? { validationErrors } : null\n  } catch (err) {\n    const isRepairable = measure(\n      () => canAutoRepair(text, parser),\n      (duration) => debug(`validate: checked whether repairable in ${duration} ms`)\n    )\n\n    const parseError = normalizeJsonParseError(\n      text,\n      (err as Error).message || (err as Error).toString()\n    )\n\n    return {\n      parseError,\n      isRepairable\n    }\n  }\n}\n\nfunction canAutoRepair(text: string, parser: JSONParser): boolean {\n  if (text.length > MAX_AUTO_REPAIRABLE_SIZE) {\n    return false\n  }\n\n  try {\n    parser.parse(jsonrepair(text))\n\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","import { createDebug } from '$lib/utils/debug.js'\n\nconst debug = createDebug('jsoneditor:FocusTracker')\n\nexport interface FocusTrackerProps {\n  onMount: (callback: () => void) => void\n  onDestroy: (callback: () => void) => void\n  getWindow: () => Window | null\n  hasFocus: () => boolean\n  onFocus: () => void\n  onBlur: () => void\n}\n\nexport function createFocusTracker({\n  onMount,\n  onDestroy,\n  getWindow,\n  hasFocus,\n  onFocus,\n  onBlur\n}: FocusTrackerProps) {\n  let blurTimeoutHandle: number | undefined\n  let focus = false\n\n  function handleFocusIn() {\n    const newFocus = hasFocus()\n\n    if (newFocus) {\n      clearTimeout(blurTimeoutHandle)\n      if (!focus) {\n        debug('focus')\n        onFocus()\n        focus = newFocus\n      }\n    }\n  }\n\n  function handleFocusOut() {\n    if (focus) {\n      // We set focus to false after timeout. Often, you get a blur and directly\n      // another focus when moving focus from one button to another.\n      // The focusIn handler will cancel any pending blur timer in those cases\n      clearTimeout(blurTimeoutHandle)\n      blurTimeoutHandle = setTimeout(() => {\n        if (!hasFocus()) {\n          debug('blur')\n          focus = false\n          onBlur()\n        }\n      }) as unknown as number\n    }\n  }\n\n  onMount(() => {\n    debug('mount FocusTracker')\n    const window = getWindow()\n    if (window) {\n      window.addEventListener('focusin', handleFocusIn, true)\n      window.addEventListener('focusout', handleFocusOut, true)\n    }\n  })\n\n  onDestroy(() => {\n    debug('destroy FocusTracker')\n    const window = getWindow()\n    if (window) {\n      window.removeEventListener('focusin', handleFocusIn, true)\n      window.removeEventListener('focusout', handleFocusOut, true)\n    }\n  })\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import type { MessageAction } from '$lib/types'\n  import type { IconDefinition } from '@fortawesome/free-solid-svg-icons'\n  import { onDestroy } from 'svelte'\n\n  export let type: 'success' | 'error' | 'warning' | 'info' = 'success'\n  export let icon: IconDefinition | undefined = undefined\n  export let message: string | undefined = undefined\n  export let actions: MessageAction[] = []\n  export let onClick: (() => void) | undefined = undefined\n  export let onClose: (() => void) | undefined = undefined\n\n  if (onClose) {\n    onDestroy(onClose)\n  }\n\n  function handleClick() {\n    if (onClick) {\n      onClick()\n    }\n  }\n</script>\n\n<div class=\"jse-message jse-{type}\">\n  <!-- svelte-ignore a11y-click-events-have-key-events -->\n  <div\n    role=\"button\"\n    tabindex=\"-1\"\n    class=\"jse-text\"\n    class:jse-clickable={!!onClick}\n    on:click={handleClick}\n  >\n    <div class=\"jse-text-centered\">\n      {#if icon}\n        <Icon data={icon} />\n      {/if}\n      {message}\n    </div>\n  </div>\n  <div class=\"jse-actions\">\n    {#each actions as action}\n      <button\n        type=\"button\"\n        on:click={() => {\n          if (action.onClick) {\n            action.onClick()\n          }\n        }}\n        on:mousedown={() => {\n          if (action.onMouseDown) {\n            action.onMouseDown()\n          }\n        }}\n        class=\"jse-button jse-action jse-primary\"\n        title={action.title}\n        disabled={action.disabled}\n      >\n        {#if action.icon}\n          <Icon data={action.icon} />\n        {/if}\n        {action.text}\n      </button>\n    {/each}\n  </div>\n</div>\n\n<style src=\"./Message.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faAngleDown,\n    faAngleRight,\n    faExclamationTriangle\n  } from '@fortawesome/free-solid-svg-icons'\n  import { isEmpty } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import type { ValidationError } from '$lib/types.js'\n  import { MAX_VALIDATION_ERRORS } from '$lib/constants.js'\n  import { limit } from '$lib/utils/arrayUtils.js'\n\n  export let validationErrors: ValidationError[]\n  export let selectError: (error: ValidationError) => void\n\n  $: count = validationErrors.length\n\n  let expanded = true\n\n  function collapse() {\n    expanded = false\n  }\n\n  function expand() {\n    expanded = true\n  }\n</script>\n\n{#if !isEmpty(validationErrors)}\n  <div class=\"jse-validation-errors-overview\">\n    {#if expanded || count === 1}\n      <table class=\"jse-validation-errors-overview-expanded\">\n        <tbody>\n          {#each limit(validationErrors, MAX_VALIDATION_ERRORS) as validationError, index}\n            <tr\n              class=\"jse-validation-error\"\n              on:click={() => {\n                // trigger on the next tick to prevent the editor not getting focus\n                setTimeout(() => selectError(validationError))\n              }}\n            >\n              <td class=\"jse-validation-error-icon\">\n                <Icon data={faExclamationTriangle} />\n              </td>\n              <td class=\"jse-validation-error-path\">\n                {stringifyJSONPath(validationError.path)}\n              </td>\n              <td class=\"jse-validation-error-message\">\n                {validationError.message}\n              </td>\n              <td class=\"jse-validation-error-action\">\n                {#if index === 0 && validationErrors.length > 1}\n                  <button\n                    type=\"button\"\n                    class=\"jse-validation-errors-collapse\"\n                    on:click|stopPropagation={collapse}\n                    title=\"Collapse validation errors\"\n                  >\n                    <Icon data={faAngleDown} />\n                  </button>\n                {/if}\n              </td>\n            </tr>\n          {/each}\n\n          {#if count > MAX_VALIDATION_ERRORS}\n            <tr class=\"jse-validation-error\">\n              <td />\n              <td />\n              <td>(and {count - MAX_VALIDATION_ERRORS} more errors)</td>\n              <td />\n            </tr>\n          {/if}\n        </tbody>\n      </table>\n    {:else}\n      <table class=\"jse-validation-errors-overview-collapsed\">\n        <tbody>\n          <tr class=\"jse-validation-error\" on:click={expand}>\n            <td class=\"jse-validation-error-icon\">\n              <Icon data={faExclamationTriangle} />\n            </td>\n            <td class=\"jse-validation-error-count\">\n              {count} validation errors\n              <div class=\"jse-validation-errors-expand\">\n                <Icon data={faAngleRight} />\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    {/if}\n  </div>\n{/if}\n\n<style src=\"./ValidationErrorsOverview.scss\"></style>\n","export const IS_MAC =\n  typeof navigator !== 'undefined' ? navigator.platform.toUpperCase().indexOf('MAC') >= 0 : false\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getContext } from 'svelte'\n  import Icon from 'svelte-awesome'\n  import { faTimes } from '@fortawesome/free-solid-svg-icons'\n  import type { Context } from 'svelte-simple-modal'\n\n  export let title = 'Modal'\n  export let onClose: (() => void) | undefined = undefined\n\n  const { close } = getContext<Context>('simple-modal')\n</script>\n\n<div class=\"jse-header\">\n  <div class=\"jse-title\">\n    {title}\n  </div>\n  <button\n    type=\"button\"\n    class=\"jse-close\"\n    on:click={() => {\n      if (onClose) {\n        onClose()\n      } else {\n        close()\n      }\n    }}\n  >\n    <Icon data={faTimes} />\n  </button>\n</div>\n\n<style src=\"./Header.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getContext } from 'svelte'\n  import { IS_MAC } from '../../utils/navigatorUtils.js'\n  import Header from './Header.svelte'\n  import type { Context } from 'svelte-simple-modal'\n\n  const { close } = getContext<Context>('simple-modal')\n\n  const ctrl = IS_MAC ? '⌘' : 'Ctrl'\n</script>\n\n<div class=\"jse-modal jse-copy-paste\">\n  <Header title=\"Copying and pasting\" />\n\n  <div class=\"jse-modal-contents\">\n    <div>These actions are unavailable via the menu. Please use:</div>\n\n    <div class=\"jse-shortcuts\">\n      <div class=\"jse-shortcut\">\n        <div class=\"jse-key\">\n          {ctrl}+C\n        </div>\n        for copy\n      </div>\n      <div class=\"jse-shortcut\">\n        <div class=\"jse-key\">\n          {ctrl}+X\n        </div>\n        for cut\n      </div>\n      <div class=\"jse-shortcut\">\n        <div class=\"jse-key\">\n          {ctrl}+V\n        </div>\n        for paste\n      </div>\n    </div>\n\n    <div class=\"jse-actions\">\n      <button type=\"button\" class=\"jse-primary\" on:click={() => close()}> Close </button>\n    </div>\n  </div>\n</div>\n\n<style src=\"./CopyPasteModal.scss\"></style>\n","import type {\n  ContentParseError,\n  ContentValidationErrors,\n  ContextMenuColumn,\n  ContextMenuRow,\n  MenuButton,\n  MenuDropDownButton,\n  MenuLabel,\n  MenuSeparator,\n  MenuSpace,\n  ValidationError,\n  NestedValidationError\n} from './types.js'\nimport { isObject } from '$lib/utils/typeUtils.js'\n\nexport function isMenuSpace(item: unknown): item is MenuSpace {\n  // checking the .space property is for backward compatibility\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'space' || item['space'] === true : false\n}\n\nexport function isMenuSeparator(item: unknown): item is MenuSeparator {\n  // checking the .separator property is for backward compatibility\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'separator' || item['separator'] === true : false\n}\n\nexport function isMenuLabel(item: unknown): item is MenuLabel {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'label' && typeof item['text'] === 'string' : false\n}\n\nexport function isMenuButton(item: unknown): item is MenuButton {\n  // for backward compatibility, we only check .onClick here and not item['type'] === 'button'\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? typeof item['onClick'] === 'function' : false\n}\n\nexport function isMenuDropDownButton(item: unknown): item is MenuDropDownButton {\n  return item\n    ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      item['type'] === 'dropdown-button' &&\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        isMenuButton(item['main']) &&\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        Array.isArray(item['items'])\n    : false\n}\n\nexport function isContextMenuRow(item: unknown): item is ContextMenuRow {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'row' && Array.isArray(item['items']) : false\n}\n\nexport function isContextMenuColumn(item: unknown): item is ContextMenuColumn {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return item ? item['type'] === 'column' && Array.isArray(item['items']) : false\n}\n\nexport function isContentParseError(contentErrors: unknown): contentErrors is ContentParseError {\n  return isObject(contentErrors) && isObject(contentErrors['parseError'])\n}\n\nexport function isContentValidationErrors(\n  contentErrors: unknown\n): contentErrors is ContentValidationErrors {\n  return isObject(contentErrors) && Array.isArray(contentErrors['validationErrors'])\n}\n\nexport function isValidationError(value: unknown): value is ValidationError {\n  return (\n    isObject(value) &&\n    Array.isArray(value.path) &&\n    typeof value.message === 'string' &&\n    'severity' in value\n  )\n}\n\nexport function isNestedValidationError(value: unknown): value is NestedValidationError {\n  return isObject(value) && isValidationError(value) && typeof value.isChildError === 'boolean'\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import type { MenuItem } from '$lib/types'\n  import { isMenuButton, isMenuSeparator, isMenuSpace } from '$lib/typeguards.js'\n\n  export let items: MenuItem[] = []\n\n  function unknownMenuItem(item: MenuItem): string {\n    console.error('Unknown type of menu item', item)\n    return '???'\n  }\n</script>\n\n<div class=\"jse-menu\">\n  <slot name=\"left\" />\n\n  {#each items as item}\n    {#if isMenuSeparator(item)}\n      <div class=\"jse-separator\" />\n    {:else if isMenuSpace(item)}\n      <div class=\"jse-space\" />\n    {:else if isMenuButton(item)}\n      <button\n        type=\"button\"\n        class=\"jse-button {item.className}\"\n        on:click={item.onClick}\n        title={item.title}\n        disabled={item.disabled || false}\n      >\n        {#if item.icon}\n          <Icon data={item.icon} />\n        {/if}\n        {#if item.text}\n          {item.text}\n        {/if}\n      </button>\n    {:else}\n      {unknownMenuItem(item)}\n    {/if}\n  {/each}\n\n  <slot name=\"right\" />\n</div>\n\n<style src=\"./Menu.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faArrowDown,\n    faCheck,\n    faExclamationTriangle,\n    faTimes,\n    faWrench\n  } from '@fortawesome/free-solid-svg-icons'\n  import { createDebug } from '$lib/utils/debug.js'\n  import Message from '../../controls/Message.svelte'\n  import { normalizeJsonParseError } from '$lib/utils/jsonUtils.js'\n  import Menu from '../../controls/Menu.svelte'\n  import type { MenuItem } from '$lib/types.js'\n\n  export let text = ''\n  export let readOnly = false\n  export let onParse: (text: string) => void\n  export let onRepair: (text: string) => string\n  export let onChange: ((updatedText: string) => void) | null = null\n  export let onApply: (repairedText: string) => void\n  export let onCancel: () => void\n\n  const debug = createDebug('jsoneditor:JSONRepair')\n\n  let domTextArea: HTMLTextAreaElement\n\n  $: error = getErrorMessage(text)\n  $: repairable = isRepairable(text)\n\n  $: debug('error', error)\n\n  function getErrorMessage(jsonText: string) {\n    try {\n      onParse(jsonText)\n      return null\n    } catch (err) {\n      return normalizeJsonParseError(jsonText, (err as Error).message)\n    }\n  }\n\n  function isRepairable(jsonText: string) {\n    try {\n      onRepair(jsonText)\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  function goToError() {\n    if (domTextArea && error) {\n      const position = error.position != null ? error.position : 0\n      domTextArea.setSelectionRange(position, position)\n      domTextArea.focus()\n    }\n  }\n\n  function handleChange(event: Event & { currentTarget: EventTarget & HTMLTextAreaElement }) {\n    debug('handleChange')\n\n    const value = (event.target as HTMLTextAreaElement).value\n\n    if (text === value) {\n      return\n    }\n\n    text = value\n\n    if (onChange) {\n      onChange(text)\n    }\n  }\n\n  function handleApply() {\n    onApply(text)\n  }\n\n  function handleRepair() {\n    try {\n      // TODO: simpleJsonRepair should also partially apply fixes. Now it's all or nothing\n      text = onRepair(text)\n\n      if (onChange) {\n        onChange(text)\n      }\n    } catch (err) {\n      // no need to do something with the error\n    }\n  }\n\n  let items: MenuItem[]\n  $: items = [\n    {\n      type: 'space'\n    },\n    {\n      type: 'button',\n      icon: faTimes,\n      title: 'Cancel repair',\n      className: 'jse-cancel',\n      onClick: onCancel\n    }\n  ]\n\n  $: gotoAction = {\n    icon: faArrowDown,\n    text: 'Show me',\n    title: 'Scroll to the error location',\n    onClick: goToError\n  }\n\n  $: repairAction = {\n    icon: faWrench,\n    text: 'Auto repair',\n    title: 'Automatically repair JSON',\n    onClick: handleRepair\n  }\n\n  $: errorActions = repairable ? [gotoAction, repairAction] : [gotoAction]\n\n  $: successActions = [\n    {\n      icon: faCheck,\n      text: 'Apply',\n      title: 'Apply fixed JSON',\n      disabled: readOnly,\n      onClick: handleApply\n    }\n  ]\n</script>\n\n<div class=\"jse-json-repair-component\">\n  <Menu {items}>\n    <div slot=\"left\" class=\"jse-info\">Repair invalid JSON, then click apply</div>\n  </Menu>\n\n  {#if error}\n    <Message\n      type=\"error\"\n      icon={faExclamationTriangle}\n      message={`Cannot parse JSON: ${error.message}`}\n      actions={errorActions}\n    />\n  {:else}\n    <Message\n      type=\"success\"\n      message=\"JSON is valid now and can be parsed.\"\n      actions={successActions}\n    />\n  {/if}\n  <textarea\n    bind:this={domTextArea}\n    on:input={handleChange}\n    readonly={readOnly}\n    class=\"jse-json-text\"\n    autocomplete=\"off\"\n    autocapitalize=\"off\"\n    spellcheck=\"false\">{text}</textarea\n  >\n</div>\n\n<style src=\"./JSONRepairComponent.scss\"></style>\n","import { isEmpty, last } from 'lodash-es'\n\ntype Callback = () => void\n\n// singleton stack with callbacks\nlet callbacks: Callback[] = []\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  if (event.key === 'Escape') {\n    const callback = last(callbacks)\n    if (callback) {\n      callback()\n    }\n  }\n}\n\n/**\n * The provided callback is invoked when the user presses Escape,\n * but only the callback of the last registered component is invoked.\n *\n * This is useful for example when opening a model on top of another modal:\n * you only want the top modal to close on Escape, and not the second modal.\n */\nexport function onEscape(element: Element | null, callback: Callback) {\n  if (isEmpty(callbacks)) {\n    window.addEventListener('keydown', handleKeyDown)\n  }\n\n  callbacks.push(callback)\n\n  return {\n    destroy: () => {\n      callbacks = callbacks.filter((c) => c !== callback)\n\n      if (isEmpty(callbacks)) {\n        window.removeEventListener('keydown', handleKeyDown)\n      }\n    }\n  }\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getContext } from 'svelte'\n  import JSONRepairComponent from './repair/JSONRepairComponent.svelte'\n  import { onEscape } from '$lib/actions/onEscape.js'\n  import type { Context } from 'svelte-simple-modal'\n\n  export let text: string\n  export let onParse: (text: string) => void\n  export let onRepair: (text: string) => string\n  export let onApply: (repairedText: string) => void\n\n  const { close } = getContext<Context>('simple-modal')\n\n  function handleApply(repairedText: string) {\n    close()\n    onApply(repairedText)\n  }\n\n  function handleCancel() {\n    close()\n  }\n</script>\n\n<div class=\"jse-modal jse-repair\" use:onEscape={close}>\n  <JSONRepairComponent\n    bind:text\n    {onParse}\n    {onRepair}\n    onApply={handleApply}\n    onCancel={handleCancel}\n  />\n</div>\n\n<style src=\"./JSONRepairModal.scss\"></style>\n","<script lang=\"ts\">\n  import type { MenuButton } from '$lib/types'\n  import Icon from 'svelte-awesome'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let item: MenuButton\n  export let className: string | undefined = undefined\n  export let onCloseContextMenu: () => void\n</script>\n\n<button\n  type=\"button\"\n  class={classnames('jse-context-menu-button', className, item.className)}\n  on:click={(event) => {\n    onCloseContextMenu()\n    item.onClick(event)\n  }}\n  title={item.title}\n  disabled={item.disabled || false}\n>\n  {#if item.icon}\n    <Icon data={item.icon} />\n  {/if}\n  {#if item.text}\n    {item.text}\n  {/if}\n</button>\n\n<style src=\"./ContextMenuButton.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faCaretDown } from '@fortawesome/free-solid-svg-icons'\n  import { onDestroy, onMount } from 'svelte'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import type { MenuButton } from '$lib/types.js'\n\n  export let items: MenuButton[] = []\n  export let title: string | undefined = undefined\n  export let width = '120px'\n\n  let visible = false\n\n  $: allItemsDisabled = items.every((item) => item.disabled === true)\n\n  function toggleShow() {\n    const wasVisible = visible\n\n    // trigger *after* the handleClick which changes visibility to false\n    setTimeout(() => (visible = !wasVisible))\n  }\n\n  function handleClick() {\n    visible = false\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    if (combo === 'Escape') {\n      event.preventDefault()\n      visible = false\n    }\n  }\n\n  onMount(() => {\n    document.addEventListener('click', handleClick)\n    document.addEventListener('keydown', handleKeyDown)\n  })\n\n  onDestroy(() => {\n    document.removeEventListener('click', handleClick)\n    document.removeEventListener('keydown', handleKeyDown)\n  })\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<div role=\"button\" tabindex=\"0\" class=\"jse-dropdown-button\" {title} on:click={handleClick}>\n  <slot name=\"defaultItem\" />\n\n  <button\n    type=\"button\"\n    class=\"jse-open-dropdown\"\n    data-type=\"jse-open-dropdown\"\n    class:jse-visible={visible}\n    on:click={toggleShow}\n    disabled={allItemsDisabled}\n  >\n    <Icon data={faCaretDown} />\n  </button>\n\n  <div class=\"jse-dropdown-items\" class:jse-visible={visible} style=\"width: {width};\">\n    <ul>\n      {#each items as item}\n        <li>\n          <button\n            type=\"button\"\n            on:click={(event) => item.onClick(event)}\n            title={item.title}\n            disabled={item.disabled}\n            class={item.className}\n          >\n            {#if item.icon}\n              <Icon data={item.icon} />\n            {/if}\n            {item.text}\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </div>\n</div>\n\n<style src=\"./DropdownButton.scss\"></style>\n","<script lang=\"ts\">\n  import type { MenuDropDownButton } from '$lib/types'\n  import DropdownButton from '../DropdownButton.svelte'\n  import Icon from 'svelte-awesome'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let item: MenuDropDownButton\n  export let className: string | undefined = undefined\n  export let onCloseContextMenu: () => void\n</script>\n\n<DropdownButton width={item.width} items={item.items}>\n  <button\n    class={classnames('jse-context-menu-button', className, item.main.className)}\n    type=\"button\"\n    slot=\"defaultItem\"\n    title={item.main.title}\n    on:click={(event) => {\n      onCloseContextMenu()\n      item.main.onClick(event)\n    }}\n    disabled={item.main.disabled || false}\n  >\n    {#if item.main.icon}\n      <Icon data={item.main.icon} />\n    {/if}\n    {item.main.text}\n  </button>\n</DropdownButton>\n\n<style src=\"./ContextMenuDropDownButton.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { onMount } from 'svelte'\n  import Icon from 'svelte-awesome'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { faLightbulb } from '@fortawesome/free-regular-svg-icons'\n  import { findNearestElement } from '$lib/utils/domUtils.js'\n  import type { ContextMenuItem, MenuItem } from '$lib/types.js'\n  import {\n    isContextMenuColumn,\n    isContextMenuRow,\n    isMenuButton,\n    isMenuDropDownButton,\n    isMenuLabel,\n    isMenuSeparator\n  } from '$lib/typeguards.js'\n  import ContextMenuButton from './ContextMenuButton.svelte'\n  import ContextMenuDropDownButton from './ContextMenuDropDownButton.svelte'\n\n  export let items: ContextMenuItem[]\n  export let onCloseContextMenu: () => void\n  export let tip: string | undefined\n\n  let refContextMenu: HTMLDivElement\n\n  onMount(() => {\n    const firstEnabledButton = Array.from(refContextMenu.querySelectorAll('button')).find(\n      (button) => !button.disabled\n    )\n\n    if (firstEnabledButton) {\n      firstEnabledButton.focus()\n    }\n  })\n\n  const directionByCombo: Record<string, 'Up' | 'Down' | 'Left' | 'Right'> = {\n    ArrowUp: 'Up',\n    ArrowDown: 'Down',\n    ArrowLeft: 'Left',\n    ArrowRight: 'Right'\n  }\n\n  function handleKeyDown(event: KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    const combo = keyComboFromEvent(event)\n    const direction: 'Up' | 'Down' | 'Left' | 'Right' | undefined = directionByCombo[combo]\n\n    if (direction && event.target) {\n      event.preventDefault()\n\n      const buttons: HTMLButtonElement[] = Array.from(\n        refContextMenu.querySelectorAll('button:not([disabled])')\n      )\n      const nearest = findNearestElement<HTMLButtonElement>({\n        allElements: buttons,\n        currentElement: event.target as unknown as HTMLButtonElement,\n        direction,\n        hasPrio: (element: HTMLButtonElement) => {\n          return element.getAttribute('data-type') !== 'jse-open-dropdown'\n        }\n      })\n      if (nearest) {\n        nearest.focus()\n      }\n    }\n  }\n\n  function unknownMenuItem(item: MenuItem): string {\n    console.error('Unknown type of context menu item', item)\n    return '???'\n  }\n</script>\n\n<div\n  role=\"menu\"\n  tabindex=\"-1\"\n  class=\"jse-contextmenu\"\n  bind:this={refContextMenu}\n  on:keydown={handleKeyDown}\n>\n  {#each items as item}\n    {#if isMenuButton(item)}\n      <ContextMenuButton {item} {onCloseContextMenu} />\n    {:else if isMenuDropDownButton(item)}\n      <ContextMenuDropDownButton {item} {onCloseContextMenu} />\n    {:else if isContextMenuRow(item)}\n      <div class=\"jse-row\">\n        {#each item.items as rowItem}\n          {#if isMenuButton(rowItem)}\n            <ContextMenuButton item={rowItem} {onCloseContextMenu} />\n          {:else if isMenuDropDownButton(rowItem)}\n            <ContextMenuDropDownButton item={rowItem} {onCloseContextMenu} />\n          {:else if isContextMenuColumn(rowItem)}\n            <div class=\"jse-column\">\n              {#each rowItem.items as columnItem}\n                {#if isMenuButton(columnItem)}\n                  <ContextMenuButton className=\"left\" item={columnItem} {onCloseContextMenu} />\n                {:else if isMenuDropDownButton(columnItem)}\n                  <ContextMenuDropDownButton\n                    className=\"left\"\n                    item={columnItem}\n                    {onCloseContextMenu}\n                  />\n                {:else if isMenuSeparator(columnItem)}\n                  <div class=\"jse-separator\" />\n                {:else if isMenuLabel(columnItem)}\n                  <div class=\"jse-label\">\n                    {columnItem.text}\n                  </div>\n                {:else}\n                  {unknownMenuItem(columnItem)}\n                {/if}\n              {/each}\n            </div>\n          {:else if isMenuSeparator(rowItem)}\n            <div class=\"jse-separator\" />\n          {:else}\n            {unknownMenuItem(rowItem)}\n          {/if}\n        {/each}\n      </div>\n    {:else if isMenuSeparator(item)}\n      <div class=\"jse-separator\" />\n    {:else}\n      {unknownMenuItem(item)}\n    {/if}\n  {/each}\n\n  {#if tip}\n    <div class=\"jse-row\">\n      <div class=\"jse-tip\">\n        <div class=\"jse-tip-icon\">\n          <Icon data={faLightbulb} />\n        </div>\n        <div class=\"jse-tip-text\">{tip}</div>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style src=\"./ContextMenu.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faArrowRightArrowLeft,\n    faCaretSquareDown,\n    faCaretSquareUp,\n    faClone,\n    faCopy,\n    faCropAlt,\n    faCut,\n    faFilter,\n    faPaste,\n    faPen,\n    faPlus,\n    faSortAmountDownAlt,\n    faTrashCan\n  } from '@fortawesome/free-solid-svg-icons'\n  import { compileJSONPointer, getIn } from 'immutable-json-patch'\n  import { initial, isEmpty } from 'lodash-es'\n  import {\n    canConvert,\n    getFocusPath,\n    isKeySelection,\n    isMultiSelection,\n    isValueSelection,\n    singleItemSelected\n  } from '$lib/logic/selection.js'\n  import { isObject, isObjectOrArray } from '$lib/utils/typeUtils.js'\n  import { faCheckSquare, faSquare } from '@fortawesome/free-regular-svg-icons'\n  import type {\n    ContextMenuItem,\n    DocumentState,\n    InsertType,\n    JSONParser,\n    OnRenderContextMenuInternal\n  } from '$lib/types'\n  import { getEnforceString } from '$lib/logic/documentState.js'\n  import ContextMenu from '../../../../components/controls/contextmenu/ContextMenu.svelte'\n\n  export let json: unknown\n  export let documentState: DocumentState\n  export let parser: JSONParser\n\n  export let showTip: boolean\n\n  export let onCloseContextMenu: () => void\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onEditKey: () => void\n  export let onEditValue: () => void\n  export let onToggleEnforceString: () => void\n  export let onCut: (indent: boolean) => void\n  export let onCopy: (indent: boolean) => void\n  export let onPaste: () => void\n  export let onRemove: () => void\n  export let onDuplicate: () => void\n  export let onExtract: () => void\n  export let onInsertBefore: () => void\n  export let onInsert: (type: InsertType) => void\n  export let onConvert: (type: InsertType) => void\n  export let onInsertAfter: () => void\n  export let onSort: () => void\n  export let onTransform: () => void\n\n  $: selection = documentState.selection\n\n  $: hasJson = json !== undefined\n  $: hasSelection = !!selection\n  $: rootSelected = selection ? isEmpty(getFocusPath(selection)) : false\n  $: focusValue = selection ? getIn(json, getFocusPath(selection)) : undefined\n  $: editValueText = Array.isArray(focusValue)\n    ? 'Edit array'\n    : isObject(focusValue)\n      ? 'Edit object'\n      : 'Edit value'\n\n  $: hasSelectionContents =\n    hasJson &&\n    (isMultiSelection(selection) || isKeySelection(selection) || isValueSelection(selection))\n\n  $: canDuplicate = hasJson && hasSelectionContents && !rootSelected // must not be root\n\n  $: canExtract =\n    hasJson &&\n    selection != null &&\n    (isMultiSelection(selection) || isValueSelection(selection)) &&\n    !rootSelected // must not be root\n\n  $: canEditKey =\n    hasJson &&\n    selection != null &&\n    singleItemSelected(selection) &&\n    !rootSelected &&\n    !Array.isArray(getIn(json, initial(getFocusPath(selection))))\n\n  $: canEditValue = hasJson && selection != null && singleItemSelected(selection)\n  $: canEnforceString = canEditValue && !isObjectOrArray(focusValue)\n\n  $: convertMode = hasSelectionContents\n  $: insertOrConvertText = convertMode ? 'Convert to:' : 'Insert:'\n  $: canInsertOrConvertStructure = convertMode ? false : hasSelection\n  $: canInsertOrConvertObject = convertMode\n    ? canConvert(selection) && !isObject(focusValue)\n    : hasSelection\n  $: canInsertOrConvertArray = convertMode\n    ? canConvert(selection) && !Array.isArray(focusValue)\n    : hasSelection\n  $: canInsertOrConvertValue = convertMode\n    ? canConvert(selection) && isObjectOrArray(focusValue)\n    : hasSelection\n\n  $: enforceString =\n    selection != null && focusValue\n      ? getEnforceString(\n          focusValue,\n          documentState.enforceStringMap,\n          compileJSONPointer(getFocusPath(selection)),\n          parser\n        )\n      : false\n\n  function handleInsertOrConvert(type: InsertType) {\n    if (hasSelectionContents) {\n      onConvert(type)\n    } else {\n      onInsert(type)\n    }\n  }\n\n  let defaultItems: ContextMenuItem[]\n  $: defaultItems = [\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'button',\n          onClick: () => onEditKey(),\n          icon: faPen,\n          text: 'Edit key',\n          title: 'Edit the key (Double-click on the key)',\n          disabled: !canEditKey\n        },\n        {\n          type: 'dropdown-button',\n          main: {\n            type: 'button',\n            onClick: () => onEditValue(),\n            icon: faPen,\n            text: editValueText,\n            title: 'Edit the value (Double-click on the value)',\n            disabled: !canEditValue\n          },\n          width: '11em',\n          items: [\n            {\n              type: 'button',\n              icon: faPen,\n              text: editValueText,\n              title: 'Edit the value (Double-click on the value)',\n              onClick: () => onEditValue(),\n              disabled: !canEditValue\n            },\n            {\n              type: 'button',\n              icon: enforceString ? faCheckSquare : faSquare,\n              text: 'Enforce string',\n              title: 'Enforce keeping the value as string when it contains a numeric value',\n              onClick: () => onToggleEnforceString(),\n              disabled: !canEnforceString\n            }\n          ]\n        }\n      ]\n    },\n    { type: 'separator' },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'dropdown-button',\n          main: {\n            type: 'button',\n            onClick: () => onCut(true),\n            icon: faCut,\n            text: 'Cut',\n            title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n            disabled: !hasSelectionContents\n          },\n          width: '10em',\n          items: [\n            {\n              type: 'button',\n              icon: faCut,\n              text: 'Cut formatted',\n              title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n              onClick: () => onCut(true),\n              disabled: !hasSelectionContents\n            },\n            {\n              type: 'button',\n              icon: faCut,\n              text: 'Cut compacted',\n              title: 'Cut selected contents, without indentation (Ctrl+Shift+X)',\n              onClick: () => onCut(false),\n              disabled: !hasSelectionContents\n            }\n          ]\n        },\n        {\n          type: 'dropdown-button',\n          main: {\n            type: 'button',\n            onClick: () => onCopy(true),\n            icon: faCopy,\n            text: 'Copy',\n            title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n            disabled: !hasSelectionContents\n          },\n          width: '12em',\n          items: [\n            {\n              type: 'button',\n              icon: faCopy,\n              text: 'Copy formatted',\n              title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n              onClick: () => onCopy(true),\n              disabled: !hasSelectionContents\n            },\n            {\n              type: 'button',\n              icon: faCopy,\n              text: 'Copy compacted',\n              title: 'Copy selected contents, without indentation (Ctrl+Shift+C)',\n              onClick: () => onCopy(false),\n              disabled: !hasSelectionContents\n            }\n          ]\n        },\n        {\n          type: 'button',\n          onClick: () => onPaste(),\n          icon: faPaste,\n          text: 'Paste',\n          title: 'Paste clipboard contents (Ctrl+V)',\n          disabled: !hasSelection\n        }\n      ]\n    },\n    { type: 'separator' },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'column',\n          items: [\n            {\n              type: 'button',\n              onClick: () => onDuplicate(),\n              icon: faClone,\n              text: 'Duplicate',\n              title: 'Duplicate selected contents (Ctrl+D)',\n              disabled: !canDuplicate\n            },\n            {\n              type: 'button',\n              onClick: () => onExtract(),\n              icon: faCropAlt,\n              text: 'Extract',\n              title: 'Extract selected contents',\n              disabled: !canExtract\n            },\n            {\n              type: 'button',\n              onClick: () => onSort(),\n              icon: faSortAmountDownAlt,\n              text: 'Sort',\n              title: 'Sort array or object contents',\n              disabled: !hasSelectionContents\n            },\n            {\n              type: 'button',\n              onClick: () => onTransform(),\n              icon: faFilter,\n              text: 'Transform',\n              title: 'Transform array or object contents (filter, sort, project)',\n              disabled: !hasSelectionContents\n            },\n            {\n              type: 'button',\n              onClick: () => onRemove(),\n              icon: faTrashCan,\n              text: 'Remove',\n              title: 'Remove selected contents (Delete)',\n              disabled: !hasSelectionContents\n            }\n          ]\n        },\n        {\n          type: 'column',\n          items: [\n            { type: 'label', text: insertOrConvertText },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('structure'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Structure',\n              title: insertOrConvertText + ' structure',\n              disabled: !canInsertOrConvertStructure\n            },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('object'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Object',\n              title: insertOrConvertText + ' structure',\n              disabled: !canInsertOrConvertObject\n            },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('array'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Array',\n              title: insertOrConvertText + ' array',\n              disabled: !canInsertOrConvertArray\n            },\n            {\n              type: 'button',\n              onClick: () => handleInsertOrConvert('value'),\n              icon: convertMode ? faArrowRightArrowLeft : faPlus,\n              text: 'Value',\n              title: insertOrConvertText + ' value',\n              disabled: !canInsertOrConvertValue\n            }\n          ]\n        }\n      ]\n    },\n    {\n      type: 'separator'\n    },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'button',\n          onClick: () => onInsertBefore(),\n          icon: faCaretSquareUp,\n          text: 'Insert before',\n          title: 'Select area before current entry to insert or paste contents',\n          disabled: !hasSelectionContents || rootSelected\n        },\n        {\n          type: 'button',\n          onClick: () => onInsertAfter(),\n          icon: faCaretSquareDown,\n          text: 'Insert after',\n          title: 'Select area after current entry to insert or paste contents',\n          disabled: !hasSelectionContents || rootSelected\n        }\n      ]\n    }\n  ]\n\n  $: items = onRenderContextMenu(defaultItems)\n</script>\n\n<ContextMenu\n  {items}\n  {onCloseContextMenu}\n  tip={showTip ? 'Tip: you can open this context menu via right-click or with Ctrl+Q' : undefined}\n/>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getExpandItemsSections } from '$lib/logic/expandItemsSections.js'\n  import type { JSONSelection, Section, VisibleSection, JSONEditorContext } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { pathInSelection } from '$lib/logic/selection.js'\n\n  export let visibleSections: VisibleSection[]\n  export let sectionIndex: number\n  export let total: number\n  export let path: JSONPath\n  export let selection: JSONSelection | null\n  export let onExpandSection: (path: JSONPath, section: Section) => void\n  export let context: JSONEditorContext\n\n  $: visibleSection = visibleSections[sectionIndex]\n\n  $: startIndex = visibleSection.end\n  $: endIndex = visibleSections[sectionIndex + 1] ? visibleSections[sectionIndex + 1].start : total\n\n  $: selected = pathInSelection(context.getJson(), selection, path.concat(String(startIndex)))\n\n  $: expandItemsSections = getExpandItemsSections(startIndex, endIndex)\n\n  function handleMouseMove(event: MouseEvent) {\n    // prevent the whole array from being selected whilst dragging over\n    // a section with collapsed items\n    event.stopPropagation()\n  }\n</script>\n\n<div\n  role=\"none\"\n  class=\"jse-collapsed-items\"\n  class:jse-selected={selected}\n  on:mousemove={handleMouseMove}\n  style:--level={path.length + 2}\n>\n  <div>\n    <div class=\"jse-text\">Items {startIndex}-{endIndex}</div>\n    {#each expandItemsSections as expandItemsSection}<button\n        type=\"button\"\n        class=\"jse-expand-items\"\n        on:click={() => onExpandSection(path, expandItemsSection)}\n      >\n        show {expandItemsSection.start}-{expandItemsSection.end}\n      </button>\n    {/each}\n  </div>\n</div>\n\n<style src=\"./CollapsedItems.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { faCaretDown } from '@fortawesome/free-solid-svg-icons'\n  import Icon from 'svelte-awesome'\n  import {\n    CONTEXT_MENU_EXPLANATION,\n    CONTEXT_MENU_HEIGHT,\n    CONTEXT_MENU_WIDTH\n  } from '$lib/constants.js'\n  import type { OnContextMenu } from '$lib/types'\n\n  export let selected: boolean\n  export let onContextMenu: OnContextMenu\n\n  function handleClick(event: MouseEvent & { currentTarget: EventTarget & HTMLButtonElement }) {\n    let buttonElem: Element | null = event.target as HTMLButtonElement\n    while (buttonElem && buttonElem.nodeName !== 'BUTTON') {\n      buttonElem = buttonElem.parentNode as Element\n    }\n\n    if (buttonElem) {\n      onContextMenu({\n        anchor: buttonElem,\n        left: 0,\n        top: 0,\n        width: CONTEXT_MENU_WIDTH,\n        height: CONTEXT_MENU_HEIGHT,\n        offsetTop: 2,\n        offsetLeft: 0,\n        showTip: true\n      })\n    }\n  }\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-context-menu-pointer\"\n  class:jse-selected={selected}\n  title={CONTEXT_MENU_EXPLANATION}\n  on:click={handleClick}\n>\n  <Icon data={faCaretDown} />\n</button>\n\n<style src=\"./ContextMenuPointer.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { initial, isEqual } from 'lodash-es'\n  import {\n    createKeySelection,\n    createValueSelection,\n    isEditingSelection,\n    isKeySelection\n  } from '$lib/logic/selection.js'\n  import SearchResultHighlighter from './highlight/SearchResultHighlighter.svelte'\n  import EditableDiv from '../../controls/EditableDiv.svelte'\n  import { addNewLineSuffix } from '$lib/utils/domUtils.js'\n  import type { ExtendedSearchResultItem, JSONSelection, TreeModeContext } from '$lib/types.js'\n  import { UpdateSelectionAfterChange } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import ContextMenuPointer from '../../../components/controls/contextmenu/ContextMenuPointer.svelte'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let path: JSONPath\n  export let key: string\n  export let selection: JSONSelection | null\n  export let searchResultItems: ExtendedSearchResultItem[] | undefined\n  export let onUpdateKey: (oldKey: string, newKey: string) => string\n\n  export let context: TreeModeContext\n\n  $: isKeySelected = selection ? isKeySelection(selection) && isEqual(selection.path, path) : false\n  $: isEditingKey = isKeySelected && isEditingSelection(selection)\n\n  function handleKeyDoubleClick(\n    event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }\n  ) {\n    if (!isEditingKey && !context.readOnly) {\n      event.preventDefault()\n      context.onSelect(createKeySelection(path, true))\n    }\n  }\n\n  function getKeyClass(key: string) {\n    return classnames('jse-key', {\n      'jse-empty': key === ''\n    })\n  }\n\n  function handleChangeValue(newKey: string, updateSelection: UpdateSelectionAfterChange) {\n    const updatedKey = onUpdateKey(key, context.normalization.unescapeValue(newKey))\n    const updatedPath = initial(path).concat(updatedKey)\n\n    context.onSelect(\n      updateSelection === UpdateSelectionAfterChange.nextInside\n        ? createValueSelection(updatedPath, false)\n        : createKeySelection(updatedPath, false)\n    )\n\n    if (updateSelection !== UpdateSelectionAfterChange.self) {\n      context.focus()\n    }\n  }\n\n  function handleCancelChange() {\n    context.onSelect(createKeySelection(path, false))\n    context.focus()\n  }\n</script>\n\n{#if !context.readOnly && isEditingKey}\n  <EditableDiv\n    value={context.normalization.escapeValue(key)}\n    shortText\n    onChange={handleChangeValue}\n    onCancel={handleCancelChange}\n    onFind={context.onFind}\n  />\n{:else}\n  <div\n    role=\"none\"\n    data-type=\"selectable-key\"\n    class={getKeyClass(key)}\n    on:dblclick={handleKeyDoubleClick}\n  >\n    {#if searchResultItems}\n      <SearchResultHighlighter text={context.normalization.escapeValue(key)} {searchResultItems} />\n    {:else}\n      {addNewLineSuffix(context.normalization.escapeValue(key))}\n    {/if}\n  </div>\n{/if}\n{#if !context.readOnly && isKeySelected && !isEditingKey}\n  <ContextMenuPointer selected={true} onContextMenu={context.onContextMenu} />\n{/if}\n\n<style src=\"./JSONKey.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONEditorContext, JSONSelection, SearchResultItem } from '$lib/types.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { isEditingSelection, isValueSelection } from '$lib/logic/selection.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let context: JSONEditorContext\n  export let enforceString: boolean\n  export let selection: JSONSelection | null\n  export let searchResultItems: SearchResultItem[] | undefined\n\n  $: isEditing = isValueSelection(selection) && isEditingSelection(selection)\n\n  $: renderers = context.onRenderValue({\n    path,\n    value,\n    readOnly: context.readOnly,\n    enforceString,\n    isEditing,\n    parser: context.parser,\n    normalization: context.normalization,\n    selection,\n    searchResultItems,\n    onPatch: context.onPatch,\n    onPasteJson: context.onPasteJson,\n    onSelect: context.onSelect,\n    onFind: context.onFind,\n    findNextInside: context.findNextInside,\n    focus: context.focus\n  })\n</script>\n\n{#each renderers as renderer}\n  {#key renderer.component}\n    <svelte:component this={renderer.component} {...renderer.props} />\n  {/key}\n{/each}\n","// used by JSONNode during dragging\nimport type { JSONPath } from 'immutable-json-patch'\n\nexport const singleton: Singleton = {\n  selecting: false,\n  selectionAnchor: null, // Path\n  selectionAnchorType: null, // Selection type\n  selectionFocus: null, // Path\n\n  dragging: false\n}\n\ninterface Singleton {\n  selecting: boolean\n  selectionAnchor: JSONPath | null\n  selectionAnchorType: string | null\n  selectionFocus: JSONPath | null\n\n  dragging: boolean\n}\n","import { createMultiSelection, getEndPath, getStartPath } from './selection.js'\nimport { initial, isEqual } from 'lodash-es'\nimport type { JSONPatchDocument } from 'immutable-json-patch'\nimport { getIn } from 'immutable-json-patch'\nimport { moveInsideParent } from './operations.js'\nimport type {\n  DocumentState,\n  DragInsideAction,\n  DragInsideProps,\n  JSONSelection,\n  MultiSelection,\n  RenderedItem\n} from '$lib/types'\n\nexport interface MoveSelectionProps {\n  json: unknown\n  documentState: DocumentState\n  deltaY: number\n  items: RenderedItem[]\n}\n\nexport interface MoveSelectionResult {\n  operations: JSONPatchDocument | undefined\n  updatedSelection: JSONSelection | null\n  offset: number\n}\n\nexport function onMoveSelection({\n  json,\n  documentState,\n  deltaY,\n  items\n}: MoveSelectionProps): MoveSelectionResult {\n  if (!documentState.selection) {\n    return {\n      operations: undefined,\n      updatedSelection: null,\n      offset: 0\n    }\n  }\n\n  const selection = documentState.selection\n  const dragInsideAction =\n    deltaY < 0\n      ? findSwapPathUp({ json, selection, deltaY, items })\n      : findSwapPathDown({ json, selection, deltaY, items })\n\n  if (!dragInsideAction || dragInsideAction.offset === 0) {\n    return {\n      operations: undefined,\n      updatedSelection: null,\n      offset: 0\n    }\n  }\n\n  const operations = moveInsideParent(json, selection, dragInsideAction)\n\n  const path = initial(getStartPath(json, selection))\n  const value = getIn(json, path)\n  if (Array.isArray(value)) {\n    const updatedSelection = createUpdatedArraySelection({\n      items,\n      json,\n      selection,\n      offset: dragInsideAction.offset\n    })\n\n    return {\n      operations,\n      updatedSelection,\n      offset: dragInsideAction.offset\n    }\n  } else {\n    // object\n    return {\n      operations,\n      updatedSelection: null,\n      offset: dragInsideAction.offset\n    }\n  }\n}\n\nfunction findSwapPathUp({\n  json,\n  items,\n  selection,\n  deltaY\n}: DragInsideProps): DragInsideAction | undefined {\n  const initialPath = getStartPath(json, selection)\n  const initialIndex = items.findIndex((item) => isEqual(item.path, initialPath))\n\n  const prevHeight = () => items[index - 1]?.height\n\n  let index = initialIndex\n  let cumulativeHeight = 0\n\n  while (prevHeight() !== undefined && Math.abs(deltaY) > cumulativeHeight + prevHeight() / 2) {\n    cumulativeHeight += prevHeight()\n    index -= 1\n  }\n\n  const beforePath = items[index].path\n  const offset = index - initialIndex\n\n  return index !== initialIndex && items[index] !== undefined ? { beforePath, offset } : undefined\n}\n\nfunction findSwapPathDown({\n  json,\n  items,\n  selection,\n  deltaY\n}: DragInsideProps): DragInsideAction | undefined {\n  const initialPath = getEndPath(json, selection)\n  const initialIndex = items.findIndex((item) => isEqual(item.path, initialPath))\n\n  let cumulativeHeight = 0\n  let index = initialIndex\n\n  const nextHeight = () => items[index + 1]?.height\n\n  while (nextHeight() !== undefined && Math.abs(deltaY) > cumulativeHeight + nextHeight() / 2) {\n    cumulativeHeight += nextHeight()\n    index += 1\n  }\n\n  const parentPath = initial(initialPath)\n  const parent = getIn(json, parentPath)\n  const isArray = Array.isArray(parent)\n  const beforeIndex = isArray ? index : index + 1\n  const beforePath = items[beforeIndex]?.path\n  const offset = index - initialIndex\n\n  return beforePath ? { beforePath, offset } : { append: true, offset }\n}\n\ninterface UpdatedArraySelectionProps {\n  items: RenderedItem[]\n  json: unknown\n  selection: JSONSelection\n  offset: number\n}\n\nfunction createUpdatedArraySelection({\n  items,\n  json,\n  selection,\n  offset\n}: UpdatedArraySelectionProps): MultiSelection {\n  const startPath = getStartPath(json, selection)\n  const endPath = getEndPath(json, selection)\n\n  const startIndex = items.findIndex((item) => isEqual(item.path, startPath))\n  const endIndex = items.findIndex((item) => isEqual(item.path, endPath))\n\n  const anchorPath = items[startIndex + offset]?.path\n  const focusPath = items[endIndex + offset]?.path\n\n  return createMultiSelection(anchorPath, focusPath)\n}\n","import type { JSONPointerMap } from '$lib/types'\nimport type { JSONPointer } from 'immutable-json-patch'\nimport { startsWithJSONPointer } from 'immutable-json-patch'\n\n// TODO: write unit tests\nexport function filterMapOrUndefined<T>(\n  map: JSONPointerMap<T> | undefined,\n  filter: (pointer: JSONPointer, value: T) => boolean\n): JSONPointerMap<T> | undefined {\n  if (!map) {\n    return undefined\n  }\n\n  const filteredMap: JSONPointerMap<T> = {}\n\n  for (const p of Object.keys(map)) {\n    if (filter(p, map[p])) {\n      filteredMap[p] = map[p]\n    }\n  }\n\n  return Object.keys(filteredMap).length > 0 ? filteredMap : undefined\n}\n\n// TODO: write unit tests\nexport function filterPointerOrUndefined<T>(\n  map: JSONPointerMap<T> | undefined,\n  pointer: JSONPointer\n): JSONPointerMap<T> | undefined {\n  return filterMapOrUndefined(map, (p) => startsWithJSONPointer(p, pointer))\n}\n","<script lang=\"ts\">\n  import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n  import Icon from 'svelte-awesome'\n  import { getContext } from 'svelte'\n  import { tooltip } from '../../controls/tooltip/tooltip.js'\n  import type { AbsolutePopupContext, NestedValidationError, ValidationError } from '$lib/types.js'\n  import { isNestedValidationError } from '$lib/typeguards.js'\n\n  const absolutePopupContext = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let validationError: NestedValidationError | ValidationError\n  export let onExpand: (event: MouseEvent) => void\n\n  $: text =\n    isNestedValidationError(validationError) && validationError.isChildError\n      ? 'Contains invalid data'\n      : validationError.message\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-validation-error\"\n  on:click={onExpand}\n  use:tooltip={{ text, ...absolutePopupContext }}\n>\n  <Icon data={faExclamationTriangle} />\n</button>\n\n<style src=\"./ValidationErrorIcon.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons'\n  import type { JSONPath, JSONPointer } from 'immutable-json-patch'\n  import { appendToJSONPointer, compileJSONPointer, parseJSONPointer } from 'immutable-json-patch'\n  import { initial, isEqual, last } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import {\n    DEFAULT_VISIBLE_SECTIONS,\n    HOVER_COLLECTION,\n    HOVER_INSERT_AFTER,\n    HOVER_INSERT_INSIDE,\n    INSERT_EXPLANATION\n  } from '$lib/constants.js'\n  import { getEnforceString, getVisibleCaretPositions } from '$lib/logic/documentState.js'\n  import { rename } from '$lib/logic/operations.js'\n  import {\n    createAfterSelection,\n    createInsideSelection,\n    createMultiSelection,\n    fromCaretPosition,\n    fromSelectionType,\n    getAnchorPath,\n    getEndPath,\n    getFocusPath,\n    getSelectionPaths,\n    getStartPath,\n    isAfterSelection,\n    isInsideSelection,\n    isKeySelection,\n    isMultiSelection,\n    isValueSelection,\n    pathInSelection,\n    isEditingSelection,\n    selectionIfOverlapping\n  } from '$lib/logic/selection.js'\n  import {\n    encodeDataPath,\n    getDataPathFromTarget,\n    getSelectionTypeFromTarget,\n    isChildOfAttribute,\n    isChildOfNodeName,\n    isContentEditableDiv\n  } from '$lib/utils/domUtils.js'\n  import CollapsedItems from './CollapsedItems.svelte'\n  import ContextMenuPointer from '../../../components/controls/contextmenu/ContextMenuPointer.svelte'\n  import JSONKey from './JSONKey.svelte'\n  import JSONValue from './JSONValue.svelte'\n  import { singleton } from './singleton.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { onMoveSelection } from '$lib/logic/dragging.js'\n  import { forEachIndex, moveItems } from '$lib/utils/arrayUtils.js'\n  import type {\n    AbsolutePopupOptions,\n    CaretPosition,\n    DraggingState,\n    ExtendedSearchResultItem,\n    JSONNodeItem,\n    JSONNodeProp,\n    JSONPointerMap,\n    JSONSelection,\n    NestedValidationError,\n    RenderedItem,\n    TreeModeContext,\n    VisibleSection\n  } from '$lib/types'\n  import { SelectionType } from '$lib/types.js'\n  import { filterPointerOrUndefined } from '$lib/utils/jsonPointer.js'\n  import { filterKeySearchResults, filterValueSearchResults } from '$lib/logic/search.js'\n  import { createMemoizePath } from '$lib/utils/pathUtils.js'\n  import ValidationErrorIcon from './ValidationErrorIcon.svelte'\n  import { isObject } from '$lib/utils/typeUtils.js'\n  import { classnames } from '$lib/utils/cssUtils.js'\n\n  export let value: unknown\n  export let path: JSONPath\n  export let expandedMap: JSONPointerMap<boolean> | undefined\n  export let enforceStringMap: JSONPointerMap<boolean> | undefined\n  export let visibleSectionsMap: JSONPointerMap<VisibleSection[]> | undefined\n  export let validationErrorsMap: JSONPointerMap<NestedValidationError> | undefined\n  export let searchResultItemsMap: JSONPointerMap<ExtendedSearchResultItem[]> | undefined\n  export let selection: JSONSelection | null\n  export let context: TreeModeContext\n  export let onDragSelectionStart: (\n    event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }\n  ) => void\n\n  const debug = createDebug('jsoneditor:JSONNode')\n\n  let hover: string | undefined = undefined\n  let hoverTimer: number | undefined = undefined\n  let dragging: DraggingState | undefined = undefined\n\n  // important to prevent creating a new path for all children with every re-render,\n  // that would force all children to re-render\n  const memoizePath = createMemoizePath()\n\n  let pointer: JSONPointer\n  $: pointer = compileJSONPointer(path)\n\n  let expanded: boolean\n  $: expanded = expandedMap ? expandedMap[pointer] === true : false\n\n  let enforceString: boolean | undefined\n  $: enforceString = getEnforceString(value, enforceStringMap, pointer, context.parser)\n\n  let visibleSections: VisibleSection[] | undefined\n  $: visibleSections = visibleSectionsMap ? visibleSectionsMap[pointer] : undefined\n\n  let validationError: NestedValidationError | undefined\n  $: validationError = validationErrorsMap ? validationErrorsMap[pointer] : undefined\n\n  let isNodeSelected: boolean\n  $: isNodeSelected = pathInSelection(context.getJson(), selection, path)\n\n  $: root = path.length === 0\n\n  // TODO: extract getProps into a separate function\n  function getProps(\n    path: JSONPath,\n    object: Record<string, unknown>,\n    expandedMap: JSONPointerMap<boolean> | undefined,\n    enforceStringMap: JSONPointerMap<boolean> | undefined,\n    visibleSectionsMap: JSONPointerMap<VisibleSection[]> | undefined,\n    validationErrorsMap: JSONPointerMap<NestedValidationError> | undefined,\n    searchResultItemsMap: JSONPointerMap<ExtendedSearchResultItem[]> | undefined,\n    selection: JSONSelection | null,\n    dragging: DraggingState | undefined\n  ): JSONNodeProp[] {\n    let props = Object.keys(object).map((key) => {\n      const keyPath = memoizePath(path.concat(key))\n      const keyPointer = appendToJSONPointer(pointer, key)\n      return {\n        key,\n        value: object[key],\n        path: keyPath,\n        expandedMap: filterPointerOrUndefined(expandedMap, keyPointer),\n        enforceStringMap: filterPointerOrUndefined(enforceStringMap, keyPointer),\n        visibleSectionsMap: filterPointerOrUndefined(visibleSectionsMap, keyPointer),\n        validationErrorsMap: filterPointerOrUndefined(validationErrorsMap, keyPointer),\n        keySearchResultItemsMap: filterKeySearchResults(searchResultItemsMap, keyPointer),\n        valueSearchResultItemsMap: filterPointerOrUndefined(searchResultItemsMap, keyPointer),\n        selection: selectionIfOverlapping(context.getJson(), selection, keyPath)\n      }\n    })\n\n    // reorder the props when dragging\n    if (dragging && dragging.offset !== 0) {\n      props = moveItems(\n        props,\n        dragging.selectionStartIndex,\n        dragging.selectionItemsCount,\n        dragging.offset\n      )\n    }\n\n    return props\n  }\n\n  // TODO: extract getItems into a separate function\n  function getItems(\n    path: JSONPath,\n    array: Array<unknown>,\n    visibleSection: VisibleSection,\n    expandedMap: JSONPointerMap<boolean> | undefined,\n    enforceStringMap: JSONPointerMap<boolean> | undefined,\n    visibleSectionsMap: JSONPointerMap<VisibleSection[]> | undefined,\n    validationErrorsMap: JSONPointerMap<NestedValidationError> | undefined,\n    searchResultItemsMap: JSONPointerMap<ExtendedSearchResultItem[]> | undefined,\n    selection: JSONSelection | null,\n    dragging: DraggingState | undefined\n  ): JSONNodeItem[] {\n    const start = visibleSection.start\n    const end = Math.min(visibleSection.end, array.length)\n    let items: JSONNodeItem[] = []\n\n    for (let index = start; index < end; index++) {\n      const itemPath = memoizePath(path.concat(String(index)))\n      const itemPointer = appendToJSONPointer(pointer, index)\n\n      items.push({\n        index,\n        value: array[index],\n        path: itemPath,\n        expandedMap: filterPointerOrUndefined(expandedMap, itemPointer),\n        enforceStringMap: filterPointerOrUndefined(enforceStringMap, itemPointer),\n        visibleSectionsMap: filterPointerOrUndefined(visibleSectionsMap, itemPointer),\n        validationErrorsMap: filterPointerOrUndefined(validationErrorsMap, itemPointer),\n        searchResultItemsMap: filterPointerOrUndefined(searchResultItemsMap, itemPointer),\n        selection: selectionIfOverlapping(context.getJson(), selection, itemPath)\n      })\n    }\n\n    // reorder the items when dragging\n    if (dragging && dragging.offset !== 0) {\n      const originalIndexes = items.map((item) => item.index)\n\n      items = moveItems(\n        items,\n        dragging.selectionStartIndex,\n        dragging.selectionItemsCount,\n        dragging.offset\n      )\n\n      // maintain the original indexes. Indexes must keep the same order,\n      // note that the indexes can be a visible section from 200-300 for example\n      for (let i = 0; i < items.length; i++) {\n        items[i].index = originalIndexes[i]\n      }\n    }\n\n    return items\n  }\n\n  function toggleExpand(event: MouseEvent) {\n    event.stopPropagation()\n\n    const recursive = event.ctrlKey\n    context.onExpand(path, !expanded, recursive)\n  }\n\n  function handleExpand(event: MouseEvent) {\n    event.stopPropagation()\n\n    context.onExpand(path, true)\n  }\n\n  function handleUpdateKey(oldKey: string, newKey: string): string {\n    const operations = rename(path, Object.keys(value as Record<string, unknown>), oldKey, newKey)\n    context.onPatch(operations)\n\n    // It is possible that the applied key differs from newKey,\n    // to prevent duplicate keys. Here we figure out the actually applied key\n    return last(parseJSONPointer(operations[0].path)) as string\n  }\n\n  function handleMouseDown(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    // check if the mouse down is not happening in the key or value input fields or on a button\n    if (\n      isContentEditableDiv(event.target as HTMLElement) ||\n      (event.which === 1 && isChildOfNodeName(event.target as Element, 'BUTTON')) // left mouse on a button\n    ) {\n      return\n    }\n\n    event.stopPropagation()\n    event.preventDefault()\n\n    // due to event.stopPropagation here and there, the focus tracker does not receive this mouse event.\n    // make sure the editor has focus\n    context.focus()\n\n    // we attach the mousemove and mouseup event listeners to the global document,\n    // so we will not miss if the mouse events happen outside the editor\n    document.addEventListener('mousemove', handleMouseMoveGlobal, true)\n    document.addEventListener('mouseup', handleMouseUpGlobal)\n\n    const anchorType = getSelectionTypeFromTarget(event.target as Element)\n    const json = context.getJson()\n    const documentState = context.getDocumentState()\n\n    if (\n      selection &&\n      anchorType !== SelectionType.after &&\n      anchorType !== SelectionType.inside &&\n      (selection.type === anchorType || selection.type === SelectionType.multi) &&\n      pathInSelection(json, selection, path)\n    ) {\n      // when right-clicking inside the current selection, do nothing: context menu will open\n      // when left-clicking inside the current selection, do nothing: it can be the start of dragging\n      if (event.button === 0) {\n        onDragSelectionStart(event)\n      }\n\n      return\n    }\n\n    // TODO: refactor dragging, there are now two separate mechanisms handling mouse movement: with dragging.* and with singleton.*\n    singleton.selecting = true\n    singleton.selectionAnchor = path\n    singleton.selectionAnchorType = anchorType\n    singleton.selectionFocus = path\n\n    if (event.shiftKey) {\n      // Shift+Click will select multiple entries\n      const fullSelection = context.getDocumentState().selection\n      if (fullSelection) {\n        context.onSelect(createMultiSelection(getAnchorPath(fullSelection), path))\n      }\n    } else {\n      if (anchorType === SelectionType.multi) {\n        if (root && (event.target as Element).hasAttribute('data-path')) {\n          const lastCaretPosition = last(\n            getVisibleCaretPositions(value, documentState)\n          ) as CaretPosition\n          context.onSelect(fromCaretPosition(lastCaretPosition))\n        } else {\n          context.onSelect(createMultiSelection(path, path))\n        }\n      } else if (json !== undefined) {\n        context.onSelect(fromSelectionType(json, anchorType, path))\n      }\n    }\n  }\n\n  function handleMouseMove(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    if (singleton.selecting) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (singleton.selectionFocus == null) {\n        // First move event, no selection yet.\n        // Clear the default selection of the browser\n        if (window.getSelection) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          window.getSelection().empty()\n        }\n      }\n\n      const selectionType = getSelectionTypeFromTarget(event.target as Element)\n\n      if (\n        !isEqual(path, singleton.selectionFocus) ||\n        selectionType !== singleton.selectionAnchorType\n      ) {\n        singleton.selectionFocus = path\n        singleton.selectionAnchorType = selectionType // TODO: this is a bit ugly\n\n        context.onSelect(\n          createMultiSelection(\n            singleton.selectionAnchor || singleton.selectionFocus,\n            singleton.selectionFocus\n          )\n        )\n      }\n    }\n  }\n\n  function handleMouseMoveGlobal(event: MouseEvent) {\n    context.onDrag(event)\n  }\n\n  function handleMouseUpGlobal(event: Event) {\n    if (singleton.selecting) {\n      singleton.selecting = false\n\n      event.stopPropagation()\n    }\n\n    context.onDragEnd()\n\n    document.removeEventListener('mousemove', handleMouseMoveGlobal, true)\n    document.removeEventListener('mouseup', handleMouseUpGlobal)\n  }\n\n  function findContentTop() {\n    return context.findElement([])?.getBoundingClientRect()?.top || 0\n  }\n\n  function calculateDeltaY(dragging: DraggingState, event: MouseEvent) {\n    // calculate the contentOffset, this changes when scrolling\n    const contentTop = findContentTop()\n    const contentOffset = contentTop - dragging.initialContentTop\n\n    // calculate the vertical mouse movement\n    const clientOffset = event.clientY - dragging.initialClientY\n\n    return clientOffset - contentOffset\n  }\n\n  function handleDragSelectionStart(\n    event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }\n  ) {\n    if (context.readOnly || !selection) {\n      return\n    }\n\n    const selectionParentPath = initial(getFocusPath(selection))\n    if (!isEqual(path, selectionParentPath)) {\n      // pass to parent\n      onDragSelectionStart(event)\n\n      return\n    }\n\n    // note that the returned items will be of one section only,\n    // and when the selection is spread over multiple sections,\n    // no items will be returned: this is not (yet) supported\n    const items = getVisibleItemsWithHeights(selection, visibleSections || DEFAULT_VISIBLE_SECTIONS)\n\n    debug('dragSelectionStart', { selection, items })\n\n    if (!items) {\n      debug('Cannot drag the current selection (probably spread over multiple sections)')\n      return\n    }\n\n    const json = context.getJson()\n    if (json === undefined) {\n      return\n    }\n    const initialPath = getStartPath(json, selection)\n    const selectionStartIndex = items.findIndex((item) => isEqual(item.path, initialPath))\n    const documentState = context.getDocumentState()\n    const { offset } = onMoveSelection({\n      json,\n      documentState,\n      deltaY: 0,\n      items\n    })\n\n    dragging = {\n      initialTarget: event.target as Element,\n      initialClientY: event.clientY,\n      initialContentTop: findContentTop(),\n      selectionStartIndex,\n      selectionItemsCount: getSelectionPaths(json, selection).length,\n      items,\n      offset,\n      didMoveItems: false // whether items have been moved during dragging or not\n    }\n    singleton.dragging = true\n\n    document.addEventListener('mousemove', handleDragSelection, true)\n    document.addEventListener('mouseup', handleDragSelectionEnd)\n  }\n\n  function handleDragSelection(event: MouseEvent) {\n    if (dragging) {\n      const json = context.getJson()\n      if (json === undefined) {\n        return\n      }\n      const documentState = context.getDocumentState()\n\n      const deltaY = calculateDeltaY(dragging, event)\n      const { offset } = onMoveSelection({\n        json,\n        documentState,\n        deltaY,\n        items: dragging.items\n      })\n\n      if (offset !== dragging.offset) {\n        debug('drag selection', offset, deltaY)\n\n        dragging = {\n          ...dragging,\n          offset,\n          didMoveItems: true\n        }\n      }\n    }\n  }\n\n  function handleDragSelectionEnd(event: MouseEvent) {\n    if (dragging) {\n      const json = context.getJson()\n      if (json === undefined) {\n        return\n      }\n      const documentState = context.getDocumentState()\n      const deltaY = calculateDeltaY(dragging, event)\n      const { operations, updatedSelection } = onMoveSelection({\n        json,\n        documentState,\n        deltaY,\n        items: dragging.items\n      })\n\n      if (operations) {\n        context.onPatch(operations, (_, patchedState) => ({\n          state: {\n            ...patchedState,\n            selection: updatedSelection || selection\n          }\n        }))\n      } else {\n        // the user did click inside the selection and no contents have been dragged,\n        // select the clicked item\n        if (event.target === dragging.initialTarget && !dragging.didMoveItems) {\n          const selectionType = getSelectionTypeFromTarget(event.target as Element)\n          const path = getDataPathFromTarget(event.target as Element)\n          if (path) {\n            context.onSelect(fromSelectionType(json, selectionType, path))\n          }\n        }\n      }\n\n      dragging = undefined\n      singleton.dragging = false\n\n      document.removeEventListener('mousemove', handleDragSelection, true)\n      document.removeEventListener('mouseup', handleDragSelectionEnd)\n    }\n  }\n\n  /**\n   * Get a list with all visible items and their rendered heights inside\n   * this object or array\n   */\n  // TODO: extract and unit test getVisibleItemsWithHeights\n  function getVisibleItemsWithHeights(\n    selection: JSONSelection,\n    visibleSections: VisibleSection[]\n  ): RenderedItem[] | null {\n    const items: RenderedItem[] = []\n\n    function addHeight(prop: string) {\n      const itemPath = path.concat(prop)\n      const element = context.findElement(itemPath)\n      if (element != null) {\n        items.push({\n          path: itemPath,\n          height: element.clientHeight\n        })\n      }\n    }\n\n    if (Array.isArray(value)) {\n      const json = context.getJson()\n      if (json === undefined) {\n        return null\n      }\n      const startPath = getStartPath(json, selection)\n      const endPath = getEndPath(json, selection)\n      const startIndex = parseInt(last(startPath) as string, 10)\n      const endIndex = parseInt(last(endPath) as string, 10)\n\n      // find the section where the selection is\n      // if the selection is spread over multiple visible sections,\n      // we will not return any items, so dragging will not work there.\n      // We do this to keep things simple for now.\n      const currentSection = visibleSections.find((visibleSection) => {\n        return startIndex >= visibleSection.start && endIndex <= visibleSection.end\n      })\n\n      if (!currentSection) {\n        return null\n      }\n\n      const { start, end } = currentSection\n      forEachIndex(start, Math.min(value.length, end), (index) => addHeight(String(index)))\n    } else {\n      // value is Object\n      Object.keys(value as Record<string, unknown>).forEach(addHeight)\n    }\n\n    return items\n  }\n\n  function handleMouseOver(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    if (singleton.selecting || singleton.dragging) {\n      return\n    }\n\n    event.stopPropagation()\n\n    if (isChildOfAttribute(event.target as Element, 'data-type', 'selectable-value')) {\n      hover = HOVER_COLLECTION\n    } else if (\n      isChildOfAttribute(event.target as Element, 'data-type', 'insert-selection-area-inside')\n    ) {\n      hover = HOVER_INSERT_INSIDE\n    } else if (\n      isChildOfAttribute(event.target as Element, 'data-type', 'insert-selection-area-after')\n    ) {\n      hover = HOVER_INSERT_AFTER\n    }\n\n    clearTimeout(hoverTimer)\n  }\n\n  function handleMouseOut(event: MouseEvent & { currentTarget: EventTarget & HTMLDivElement }) {\n    event.stopPropagation()\n\n    // to prevent \"flickering\" in the hovering state when hovering on the edge\n    // of the insert area context menu button: it's visibility toggles when\n    // `hover` toggles, which will alternating mouseout and mouseover events\n    hoverTimer = window.setTimeout(() => (hover = undefined))\n  }\n\n  function handleInsertInside(event: MouseEvent) {\n    if (!event.shiftKey) {\n      event.stopPropagation()\n      event.preventDefault()\n\n      context.onSelect(createInsideSelection(path))\n    }\n  }\n\n  function handleInsertAfter(event: MouseEvent) {\n    if (!event.shiftKey) {\n      event.stopPropagation()\n      event.preventDefault()\n\n      context.onSelect(createAfterSelection(path))\n    }\n  }\n\n  function handleInsertInsideOpenContextMenu(contextMenuProps: AbsolutePopupOptions) {\n    context.onSelect(createInsideSelection(path))\n    context.onContextMenu(contextMenuProps)\n  }\n\n  function handleInsertAfterOpenContextMenu(contextMenuProps: AbsolutePopupOptions) {\n    context.onSelect(createAfterSelection(path))\n    context.onContextMenu(contextMenuProps)\n  }\n</script>\n\n<div\n  role=\"treeitem\"\n  tabindex=\"-1\"\n  class={classnames(\n    'jse-json-node',\n    { 'jse-expanded': expanded },\n    context.onClassName(path, value)\n  )}\n  data-path={encodeDataPath(path)}\n  aria-selected={isNodeSelected}\n  style:--level={path.length}\n  class:jse-root={root}\n  class:jse-selected={isNodeSelected && isMultiSelection(selection)}\n  class:jse-selected-key={isNodeSelected && isKeySelection(selection)}\n  class:jse-selected-value={isNodeSelected && isValueSelection(selection)}\n  class:jse-readonly={context.readOnly}\n  class:jse-hovered={hover === HOVER_COLLECTION}\n  on:mousedown={handleMouseDown}\n  on:mousemove={handleMouseMove}\n  on:mouseover={handleMouseOver}\n  on:mouseout={handleMouseOut}\n  on:focus={undefined}\n  on:blur={undefined}\n>\n  {#if Array.isArray(value)}\n    <div class=\"jse-header-outer\">\n      <div class=\"jse-header\">\n        <button\n          type=\"button\"\n          class=\"jse-expand\"\n          on:click={toggleExpand}\n          title=\"Expand or collapse this array (Ctrl+Click to expand/collapse recursively)\"\n        >\n          {#if expanded}\n            <Icon data={faCaretDown} />\n          {:else}\n            <Icon data={faCaretRight} />\n          {/if}\n        </button>\n        <slot name=\"identifier\" />\n        {#if !root}\n          <div class=\"jse-separator\">:</div>\n        {/if}\n        <div class=\"jse-meta\">\n          <div class=\"jse-meta-inner\" data-type=\"selectable-value\">\n            {#if expanded}\n              <div class=\"jse-bracket\">[</div>\n              <span class=\"jse-tag jse-expanded\">\n                {value.length}\n                {value.length === 1 ? 'item' : 'items'}\n              </span>\n              &nbsp;\n            {:else}\n              <div class=\"jse-bracket\">[</div>\n              <button type=\"button\" class=\"jse-tag\" on:click={handleExpand}>\n                {value.length}\n                {value.length === 1 ? 'item' : 'items'}\n              </button>\n              <div class=\"jse-bracket\">]</div>\n            {/if}\n          </div>\n        </div>\n        {#if !context.readOnly && isNodeSelected && selection && (isValueSelection(selection) || isMultiSelection(selection)) && !isEditingSelection(selection) && isEqual(getFocusPath(selection), path)}\n          <div class=\"jse-context-menu-pointer-anchor\">\n            <ContextMenuPointer selected={true} onContextMenu={context.onContextMenu} />\n          </div>\n        {/if}\n      </div>\n      {#if validationError && (!expanded || !validationError.isChildError)}\n        <ValidationErrorIcon {validationError} onExpand={handleExpand} />\n      {/if}\n      {#if expanded}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-inside\"\n          data-type=\"insert-selection-area-inside\"\n          on:click={handleInsertInside}\n        />\n      {:else}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-after\"\n          data-type=\"insert-selection-area-after\"\n          on:click={handleInsertAfter}\n        />\n      {/if}\n    </div>\n    {#if expanded}\n      <div class=\"jse-items\">\n        {#if !context.readOnly && (hover === HOVER_INSERT_INSIDE || (isNodeSelected && isInsideSelection(selection)))}\n          <div\n            class=\"jse-insert-area jse-inside\"\n            class:jse-hovered={hover === HOVER_INSERT_INSIDE}\n            class:jse-selected={isNodeSelected && isInsideSelection(selection)}\n            data-type=\"insert-selection-area-inside\"\n            style:--level={path.length + 1}\n            title={INSERT_EXPLANATION}\n          >\n            <ContextMenuPointer\n              selected={isNodeSelected && isInsideSelection(selection)}\n              onContextMenu={handleInsertInsideOpenContextMenu}\n            />\n          </div>\n        {/if}\n        {#each visibleSections || DEFAULT_VISIBLE_SECTIONS as visibleSection, sectionIndex (sectionIndex)}\n          {#each getItems(path, value, visibleSection, expandedMap, enforceStringMap, visibleSectionsMap, validationErrorsMap, searchResultItemsMap, selection, dragging) as item (item.index)}\n            <svelte:self\n              value={item.value}\n              path={item.path}\n              expandedMap={item.expandedMap}\n              enforceStringMap={item.enforceStringMap}\n              visibleSectionsMap={item.visibleSectionsMap}\n              validationErrorsMap={item.validationErrorsMap}\n              searchResultItemsMap={item.searchResultItemsMap}\n              selection={item.selection}\n              {context}\n              onDragSelectionStart={handleDragSelectionStart}\n            >\n              <div slot=\"identifier\" class=\"jse-identifier\">\n                <div class=\"jse-index\">{item.index}</div>\n              </div>\n            </svelte:self>\n          {/each}\n          {#if visibleSection.end < value.length}\n            <CollapsedItems\n              visibleSections={visibleSections || DEFAULT_VISIBLE_SECTIONS}\n              {sectionIndex}\n              total={value.length}\n              {path}\n              onExpandSection={context.onExpandSection}\n              {selection}\n              {context}\n            />\n          {/if}\n        {/each}\n      </div>\n      <div class=\"jse-footer-outer\">\n        <div data-type=\"selectable-value\" class=\"jse-footer\">\n          <span class=\"jse-bracket\">]</span>\n        </div>\n        {#if !root}\n          <div\n            role=\"none\"\n            class=\"jse-insert-selection-area jse-after\"\n            data-type=\"insert-selection-area-after\"\n            on:click={handleInsertAfter}\n          />\n        {/if}\n      </div>\n    {/if}\n  {:else if isObject(value)}\n    <div class=\"jse-header-outer\">\n      <div class=\"jse-header\">\n        <button\n          type=\"button\"\n          class=\"jse-expand\"\n          on:click={toggleExpand}\n          title=\"Expand or collapse this object (Ctrl+Click to expand/collapse recursively)\"\n        >\n          {#if expanded}\n            <Icon data={faCaretDown} />\n          {:else}\n            <Icon data={faCaretRight} />\n          {/if}\n        </button>\n        <slot name=\"identifier\" />\n        {#if !root}\n          <div class=\"jse-separator\">:</div>\n        {/if}\n        <div class=\"jse-meta\" data-type=\"selectable-value\">\n          <div class=\"jse-meta-inner\">\n            {#if expanded}\n              <div class=\"jse-bracket jse-expanded\">&lbrace;</div>\n            {:else}\n              <div class=\"jse-bracket\">&lbrace;</div>\n              <button type=\"button\" class=\"jse-tag\" on:click={handleExpand}>\n                {Object.keys(value).length}\n                {Object.keys(value).length === 1 ? 'prop' : 'props'}\n              </button>\n              <div class=\"jse-bracket\">&rbrace;</div>\n            {/if}\n          </div>\n        </div>\n        {#if !context.readOnly && isNodeSelected && selection && (isValueSelection(selection) || isMultiSelection(selection)) && !isEditingSelection(selection) && isEqual(getFocusPath(selection), path)}\n          <div class=\"jse-context-menu-pointer-anchor\">\n            <ContextMenuPointer selected={true} onContextMenu={context.onContextMenu} />\n          </div>\n        {/if}\n      </div>\n      {#if validationError && (!expanded || !validationError.isChildError)}\n        <ValidationErrorIcon {validationError} onExpand={handleExpand} />\n      {/if}\n      {#if expanded}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-inside\"\n          data-type=\"insert-selection-area-inside\"\n          on:click={handleInsertInside}\n        />\n      {:else if !root}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-after\"\n          data-type=\"insert-selection-area-after\"\n          on:click={handleInsertAfter}\n        />\n      {/if}\n    </div>\n    {#if expanded}\n      <div class=\"jse-props\">\n        {#if !context.readOnly && (hover === HOVER_INSERT_INSIDE || (isNodeSelected && isInsideSelection(selection)))}\n          <div\n            class=\"jse-insert-area jse-inside\"\n            class:jse-hovered={hover === HOVER_INSERT_INSIDE}\n            class:jse-selected={isNodeSelected && isInsideSelection(selection)}\n            data-type=\"insert-selection-area-inside\"\n            style:--level={path.length + 1}\n            title={INSERT_EXPLANATION}\n          >\n            <ContextMenuPointer\n              selected={isNodeSelected && isInsideSelection(selection)}\n              onContextMenu={handleInsertInsideOpenContextMenu}\n            />\n          </div>\n        {/if}\n        {#each getProps(path, value, expandedMap, enforceStringMap, visibleSectionsMap, validationErrorsMap, searchResultItemsMap, selection, dragging) as prop}\n          <svelte:self\n            value={prop.value}\n            path={prop.path}\n            expandedMap={prop.expandedMap}\n            enforceStringMap={prop.enforceStringMap}\n            visibleSectionsMap={prop.visibleSectionsMap}\n            validationErrorsMap={prop.validationErrorsMap}\n            searchResultItemsMap={prop.valueSearchResultItemsMap}\n            selection={prop.selection}\n            {context}\n            onDragSelectionStart={handleDragSelectionStart}\n          >\n            <div slot=\"identifier\" class=\"jse-identifier\">\n              <JSONKey\n                path={prop.path}\n                key={prop.key}\n                selection={prop.selection}\n                searchResultItems={prop.keySearchResultItemsMap}\n                {context}\n                onUpdateKey={handleUpdateKey}\n              />\n            </div>\n          </svelte:self>\n        {/each}\n      </div>\n      <div class=\"jse-footer-outer\">\n        <div data-type=\"selectable-value\" class=\"jse-footer\">\n          <div class=\"jse-bracket\">&rbrace;</div>\n        </div>\n        {#if !root}\n          <div\n            role=\"none\"\n            class=\"jse-insert-selection-area jse-after\"\n            data-type=\"insert-selection-area-after\"\n            on:click={handleInsertAfter}\n          />\n        {/if}\n      </div>\n    {/if}\n  {:else}\n    <div class=\"jse-contents-outer\">\n      <div class=\"jse-contents\">\n        <slot name=\"identifier\" />\n        {#if !root}\n          <div class=\"jse-separator\">:</div>\n        {/if}\n        <JSONValue\n          {path}\n          {value}\n          enforceString={enforceString || false}\n          selection={isNodeSelected ? selection : null}\n          searchResultItems={filterValueSearchResults(searchResultItemsMap, pointer)}\n          {context}\n        />\n        {#if !context.readOnly && isNodeSelected && selection && (isValueSelection(selection) || isMultiSelection(selection)) && !isEditingSelection(selection) && isEqual(getFocusPath(selection), path)}\n          <div class=\"jse-context-menu-pointer-anchor\">\n            <ContextMenuPointer selected={true} onContextMenu={context.onContextMenu} />\n          </div>\n        {/if}\n      </div>\n      {#if validationError}\n        <ValidationErrorIcon {validationError} onExpand={handleExpand} />\n      {/if}\n      {#if !root}\n        <div\n          role=\"none\"\n          class=\"jse-insert-selection-area jse-after\"\n          data-type=\"insert-selection-area-after\"\n          on:click={handleInsertAfter}\n        />\n      {/if}\n    </div>\n  {/if}\n  {#if !context.readOnly && (hover === HOVER_INSERT_AFTER || (isNodeSelected && isAfterSelection(selection)))}\n    <div\n      class=\"jse-insert-area jse-after\"\n      class:jse-hovered={hover === HOVER_INSERT_AFTER}\n      class:jse-selected={isNodeSelected && isAfterSelection(selection)}\n      data-type=\"insert-selection-area-after\"\n      title={INSERT_EXPLANATION}\n    >\n      <ContextMenuPointer\n        selected={isNodeSelected && isAfterSelection(selection)}\n        onContextMenu={handleInsertAfterOpenContextMenu}\n      />\n    </div>\n  {/if}\n</div>\n\n<style src=\"./JSONNode.scss\"></style>\n","import type { IconDefinition } from '@fortawesome/free-solid-svg-icons'\nimport type { IconName } from '@fortawesome/fontawesome-common-types'\n\nexport const faJSONEditorExpand: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-expand' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'M 0,448 V 512 h 512 v -64 z ' +\n      'M 0,0 V 64 H 512 V 0 Z ' +\n      'M 256,96 128,224 h 256 z ' +\n      'M 256,416 384,288 H 128 Z'\n  ]\n}\n\nexport const faJSONEditorCollapse: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-collapse' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'm 0,224 v 64 h 512 v -64 z ' + 'M 256,192 384,64 H 128 Z ' + 'M 256,320 128,448 h 256 z'\n  ]\n}\n\nexport const faJSONEditorFormat: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-format' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'M 0,32 v 64 h 416 v -64 z ' +\n      'M 160,160 v 64 h 352 v -64 z ' +\n      'M 160,288 v 64 h 288 v -64 z ' +\n      'M 0,416 v 64 h 320 v -64 z'\n  ]\n}\n\nexport const faJSONEditorCompact: IconDefinition = {\n  prefix: 'fas',\n  iconName: 'jsoneditor-compact' as IconName,\n  icon: [\n    512,\n    512,\n    [],\n    '',\n    'M 0,32 v 64 h 512 v -64 z ' + 'M 0,160 v 64 h 512 v -64 z ' + 'M 0,288 v 64 h 352 v -64 z'\n  ]\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faCopy,\n    faEllipsisV,\n    faFilter,\n    faRedo,\n    faSearch,\n    faSortAmountDownAlt,\n    faUndo\n  } from '@fortawesome/free-solid-svg-icons'\n  import { CONTEXT_MENU_EXPLANATION } from '$lib/constants.js'\n  import { faJSONEditorCollapse, faJSONEditorExpand } from '$lib/img/customFontawesomeIcons.js'\n  import { isObjectOrArray } from '$lib/utils/typeUtils.js'\n  import Menu from '../../../controls/Menu.svelte'\n  import type { JSONSelection, MenuItem, OnRenderMenuInternal } from '$lib/types'\n  import { isKeySelection, isMultiSelection, isValueSelection } from '$lib/logic/selection.js'\n  import type { HistoryState } from '$lib/logic/history.js'\n\n  export let json: unknown\n  export let selection: JSONSelection | null\n\n  export let readOnly: boolean\n  export let showSearch = false\n  export let historyState: HistoryState\n\n  export let onExpandAll: () => void\n  export let onCollapseAll: () => void\n  export let onUndo: () => void\n  export let onRedo: () => void\n  export let onSort: () => void\n  export let onTransform: () => void\n  export let onContextMenu: (event: MouseEvent) => void\n  export let onCopy: () => void\n  export let onRenderMenu: OnRenderMenuInternal\n\n  function handleToggleSearch() {\n    showSearch = !showSearch\n  }\n\n  $: hasJson = json !== undefined\n  $: hasSelectionContents =\n    hasJson &&\n    (isMultiSelection(selection) || isKeySelection(selection) || isValueSelection(selection))\n\n  let expandMenuItem: MenuItem\n  $: expandMenuItem = {\n    type: 'button',\n    icon: faJSONEditorExpand,\n    title: 'Expand all',\n    className: 'jse-expand-all',\n    onClick: onExpandAll,\n    disabled: !isObjectOrArray(json)\n  }\n\n  let collapseMenuItem: MenuItem\n  $: collapseMenuItem = {\n    type: 'button',\n    icon: faJSONEditorCollapse,\n    title: 'Collapse all',\n    className: 'jse-collapse-all',\n    onClick: onCollapseAll,\n    disabled: !isObjectOrArray(json)\n  }\n\n  let searchMenuItem: MenuItem\n  $: searchMenuItem = {\n    type: 'button',\n    icon: faSearch,\n    title: 'Search (Ctrl+F)',\n    className: 'jse-search',\n    onClick: handleToggleSearch,\n    disabled: json === undefined\n  }\n\n  let defaultItems: MenuItem[]\n  $: defaultItems = !readOnly\n    ? [\n        expandMenuItem,\n        collapseMenuItem,\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faSortAmountDownAlt,\n          title: 'Sort',\n          className: 'jse-sort',\n          onClick: onSort,\n          disabled: readOnly || json === undefined\n        },\n        {\n          type: 'button',\n          icon: faFilter,\n          title: 'Transform contents (filter, sort, project)',\n          className: 'jse-transform',\n          onClick: onTransform,\n          disabled: readOnly || json === undefined\n        },\n        searchMenuItem,\n        {\n          type: 'button',\n          icon: faEllipsisV,\n          title: CONTEXT_MENU_EXPLANATION,\n          className: 'jse-contextmenu',\n          onClick: onContextMenu\n        },\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faUndo,\n          title: 'Undo (Ctrl+Z)',\n          className: 'jse-undo',\n          onClick: onUndo,\n          disabled: !historyState.canUndo\n        },\n        {\n          type: 'button',\n          icon: faRedo,\n          title: 'Redo (Ctrl+Shift+Z)',\n          className: 'jse-redo',\n          onClick: onRedo,\n          disabled: !historyState.canRedo\n        },\n        {\n          type: 'space'\n        }\n      ]\n    : [\n        expandMenuItem,\n        collapseMenuItem,\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faCopy,\n          title: 'Copy (Ctrl+C)',\n          className: 'jse-copy',\n          onClick: onCopy,\n          disabled: !hasSelectionContents\n        },\n        {\n          type: 'separator'\n        },\n        searchMenuItem,\n        {\n          type: 'space'\n        }\n      ]\n\n  $: items = onRenderMenu(defaultItems)\n</script>\n\n<Menu {items} />\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  export let readOnly: boolean\n  export let onCreateArray: () => void\n  export let onCreateObject: () => void\n  export let onClick: () => void\n</script>\n\n<div class=\"jse-welcome\" on:click={() => onClick()} role=\"none\">\n  <div class=\"jse-space jse-before\" />\n  <div class=\"jse-contents\">\n    <div class=\"jse-welcome-title\">Empty document</div>\n    {#if !readOnly}\n      <div class=\"jse-welcome-info\">\n        You can paste clipboard data using <b>Ctrl+V</b>, or use the following options:\n      </div>\n      <button\n        title={\"Create an empty JSON object (press '{')\"}\n        on:click|stopPropagation={() => onCreateObject()}>Create object</button\n      >\n      <button\n        title={\"Create an empty JSON array (press '[')\"}\n        on:click|stopPropagation={() => onCreateArray()}>Create array</button\n      >\n    {/if}\n  </div>\n  <div class=\"jse-space jse-after\" />\n</div>\n\n<style src=\"./Welcome.scss\"></style>\n","import diffSequence from '../generated/diffSequence.js'\nimport type { JSONPatchDocument, JSONPatchOperation, JSONPath } from 'immutable-json-patch'\nimport {\n  compileJSONPointer,\n  getIn,\n  isJSONArray,\n  isJSONPatchCopy,\n  isJSONPatchMove,\n  parseFrom,\n  parsePath,\n  setIn\n} from 'immutable-json-patch'\nimport { first, initial, isEmpty, isEqual, last } from 'lodash-es'\nimport naturalCompare from 'natural-compare-lite'\nimport { int } from '../utils/numberUtils.js'\nimport { isObject } from '../utils/typeUtils.js'\n\nexport function caseInsensitiveNaturalCompare(a: unknown, b: unknown) {\n  const aLower = typeof a === 'string' ? a.toLowerCase() : a\n  const bLower = typeof b === 'string' ? b.toLowerCase() : b\n\n  return naturalCompare(aLower, bLower)\n}\n\n/**\n * Sort a JSON object or array\n * @param json           The the JSON containing the (optionally nested)\n *                       object to be sorted\n * @param [rootPath=[]]  Relative path when the array was located\n * @param [itemPath=[]]  Item path by which to sort items in case of an array\n * @param [direction=1]  Pass 1 to sort ascending, -1 to sort descending\n * @return               Returns a JSONPatch document with move operation\n *                       to get the array sorted.\n */\nexport function sortJson(\n  json: unknown,\n  rootPath: JSONPath = [],\n  itemPath: JSONPath = [],\n  direction: 1 | -1 = 1\n): JSONPatchDocument {\n  if (isJSONArray(getIn(json, rootPath))) {\n    if (itemPath === undefined) {\n      throw new Error('Cannot sort: no property selected by which to sort the array')\n    }\n\n    return sortArray(json, rootPath, itemPath, direction)\n  }\n\n  if (isObject(json)) {\n    return sortObjectKeys(json, rootPath, direction)\n  }\n\n  throw new Error('Cannot sort: no array or object')\n}\n\n/**\n * Sort the keys of an object\n * @param json           The the JSON containing the (optionally nested)\n *                       object to be sorted\n * @param [rootPath=[]]  Relative path when the array was located\n * @param [direction=1]  Pass 1 to sort ascending, -1 to sort descending\n * @return               Returns a JSONPatch document with move operation\n *                       to get the array sorted.\n */\nexport function sortObjectKeys(\n  json: unknown,\n  rootPath: JSONPath = [],\n  direction: 1 | -1 = 1\n): JSONPatchDocument {\n  const object = getIn(json, rootPath)\n  const keys = Object.keys(object as unknown as Record<string, unknown>)\n  const sortedKeys = keys.slice()\n\n  sortedKeys.sort((keyA, keyB) => {\n    return direction * caseInsensitiveNaturalCompare(keyA, keyB)\n  })\n\n  // TODO: can we make this more efficient? check if the first couple of keys are already in order and if so ignore them\n  const operations: JSONPatchDocument = []\n  for (let i = 0; i < sortedKeys.length; i++) {\n    const key = sortedKeys[i]\n    const path = compileJSONPointer(rootPath.concat(key))\n    operations.push({\n      op: 'move',\n      from: path,\n      path\n    })\n  }\n\n  return operations\n}\n\n/**\n * Sort the items of an array\n * @param json               The document containing (optionally nested)\n *                           the array to be sorted.\n * @param [rootPath=[]]      Relative path when the array was located\n * @param [propertyPath=[]]  Nested path to the property on which to sort the contents\n * @param [direction=1]      Pass 1 to sort ascending, -1 to sort descending\n * @return                   Returns a JSONPatch document with move operation\n *                           to get the array sorted.\n */\nexport function sortArray(\n  json: unknown,\n  rootPath: JSONPath = [],\n  propertyPath: JSONPath = [],\n  direction: 1 | -1 = 1\n): JSONPatchDocument {\n  const comparator = createObjectComparator(propertyPath, direction)\n\n  // TODO: make the mechanism to sort configurable? Like use sortOperationsMove and sortOperationsMoveAdvanced\n  const array = getIn(json, rootPath) as Array<unknown>\n  return [\n    {\n      op: 'replace',\n      path: compileJSONPointer(rootPath),\n      value: array.slice(0).sort(comparator)\n    }\n  ]\n}\n\n/**\n * Create a comparator function to compare nested properties in an array\n */\nfunction createObjectComparator(propertyPath: JSONPath, direction: 1 | -1) {\n  return function comparator(a: unknown, b: unknown) {\n    const valueA = getIn(a, propertyPath)\n    const valueB = getIn(b, propertyPath)\n\n    if (valueA === undefined) {\n      return direction\n    }\n    if (valueB === undefined) {\n      return -direction\n    }\n\n    if (typeof valueA !== 'string' && typeof valueB !== 'string') {\n      // both values are a number, boolean, or null -> use simple, fast sorting\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return valueA > valueB ? direction : valueA < valueB ? -direction : 0\n    }\n\n    return direction * caseInsensitiveNaturalCompare(valueA, valueB)\n  }\n}\n\n/**\n * Create a list with JSON Patch move operations\n * needed to sort the array contents.\n */\nexport function sortOperationsMove<T>(\n  array: T[],\n  comparator: (a: T, b: T) => number\n): JSONPatchOperation[] {\n  const operations: JSONPatchOperation[] = []\n  const sorted = []\n\n  // TODO: rewrite the function to pass a callback instead of returning an array?\n  for (let i = 0; i < array.length; i++) {\n    // TODO: can we simplify the following code?\n    const item = array[i]\n    if (i > 0 && comparator(sorted[i - 1], item) > 0) {\n      let j = i - 1\n      while (j > 0 && comparator(sorted[j - 1], item) > 0) {\n        j--\n      }\n\n      operations.push({\n        op: 'move',\n        from: '/' + i,\n        path: '/' + j\n      })\n\n      sorted.splice(j, 0, item)\n    } else {\n      sorted.push(item)\n    }\n  }\n\n  return operations\n}\n\n/**\n * Create an array containing all move operations\n * needed to sort the array contents.\n */\nexport function sortOperationsMoveAdvanced<T>(\n  array: T[],\n  comparator: (a: T, b: T) => number\n): JSONPatchOperation[] {\n  const moves: { from: number; to: number }[] = []\n\n  const sortedIndices = array\n    .map((item, index) => ({ item, index }))\n    .sort((a, b) => comparator(a.item, b.item))\n    .map((entry) => entry.index)\n\n  let bIndex = 0\n\n  function foundSubsequence(nCommon: number, aCommon: number, bCommon: number) {\n    for (let b = bIndex; b < bCommon; b++) {\n      moves.push({\n        from: sortedIndices[b],\n        to: aCommon\n      })\n    }\n\n    bIndex = bCommon + nCommon\n  }\n\n  const size = array.length\n\n  function isCommon(aIndex: number, bIndex: number) {\n    return aIndex === sortedIndices[bIndex]\n  }\n\n  diffSequence(size, size, isCommon, foundSubsequence)\n  foundSubsequence(0, size, size)\n\n  // every move will change the actual indices, so we've to adjust for that\n  // in all moves that still have to be executed\n  for (let i = 0; i < moves.length; i++) {\n    if (moves[i].to > moves[i].from) {\n      moves[i].to--\n    }\n\n    const { from, to } = moves[i]\n\n    for (let j = i + 1; j < moves.length; j++) {\n      const other = moves[j]\n      if (other.from >= from) {\n        other.from--\n      }\n      if (other.to >= from) {\n        other.to--\n      }\n      if (other.from >= to) {\n        other.from++\n      }\n      if (other.to >= to) {\n        other.to++\n      }\n    }\n  }\n\n  return moves.map(({ from, to }) => {\n    return {\n      op: 'move',\n      from: '/' + from,\n      path: '/' + to\n    }\n  })\n}\n\n/**\n * Fast solution to apply many JSON patch move operations inside a single array,\n * like applying all moves needed to sort an array.\n *\n * Throws an error when not all operations are move operation inside the same\n * array.\n */\n// TODO: write unit tests\nexport function fastPatchSort(json: unknown, operations: JSONPatchDocument): unknown {\n  if (isEmpty(operations)) {\n    // nothing to do :)\n    return json\n  }\n\n  // validate whether all operations are \"move\" operations\n  const invalidOp = operations.find((operation) => {\n    return operation.op !== 'move'\n  })\n  if (invalidOp) {\n    throw new Error(\n      'Cannot apply fastPatchSort: not a \"move\" operation ' +\n        '(actual: ' +\n        JSON.stringify(invalidOp) +\n        ')'\n    )\n  }\n\n  // parse all paths\n  const parsedOperations: Array<{ from: JSONPath | undefined; path: JSONPath }> = operations.map(\n    (operation) => ({\n      from:\n        isJSONPatchCopy(operation) || isJSONPatchMove(operation)\n          ? parseFrom(operation.from)\n          : undefined,\n      path: parsePath(json, operation.path)\n    })\n  )\n\n  // validate whether the move actions take place in an array\n  const arrayPath = initial(first(parsedOperations)?.path)\n  const array = getIn(json, arrayPath)\n  if (!Array.isArray(array)) {\n    throw new Error(\n      'Cannot apply fastPatchSort: not an Array ' + '(path: ' + JSON.stringify(arrayPath) + ')'\n    )\n  }\n\n  // validate whether all paths are in the same array\n  const invalidPath = parsedOperations.find((parsedOperation) => {\n    return (\n      !isEqual(arrayPath, initial(parsedOperation.path)) ||\n      !isEqual(arrayPath, initial(parsedOperation.from))\n    )\n  })\n  if (invalidPath) {\n    throw new Error(\n      'Cannot apply fastPatchSort: not all move operations are in the same array ' +\n        '(expected: ' +\n        JSON.stringify(arrayPath) +\n        ', actual: ' +\n        JSON.stringify(invalidPath) +\n        ')'\n    )\n  }\n\n  // apply the actual operations on the same array. Only copy the only array once\n  const updatedArray = array.slice(0)\n  parsedOperations.forEach((parsedOperation) => {\n    const toIndex = int(last(parsedOperation.path) || '-1')\n    const fromIndex = int(last(parsedOperation.from) || '-1')\n\n    const value = updatedArray.splice(fromIndex, 1)[0]\n    updatedArray.splice(toIndex, 0, value)\n  })\n\n  return setIn(json, arrayPath, updatedArray)\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { limit } from '$lib/utils/arrayUtils.js'\n  import { truncate } from '$lib/utils/stringUtils.js'\n\n  export let items: (string | number)[]\n  export let selectedItem: string | number\n  export let onSelect: (item: string | number) => void\n\n  const MAX_ITEMS = 100\n  const MAX_ITEM_CHARACTERS = 30\n</script>\n\n<div class=\"jse-navigation-bar-dropdown\">\n  {#each limit(items, MAX_ITEMS) as item (item)}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-dropdown-item\"\n      class:jse-selected={item === selectedItem}\n      on:click|stopPropagation={() => onSelect(item)}\n      title={item.toString()}\n    >\n      {truncate(item.toString(), MAX_ITEM_CHARACTERS)}\n    </button>\n  {/each}\n  {#if items.length > MAX_ITEMS}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-dropdown-item\"\n      title=\"Limited to {MAX_ITEMS} items\"\n    >\n      ...\n    </button>\n  {/if}\n</div>\n\n<style src=\"./NavigationBarDropdown.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faAngleRight } from '@fortawesome/free-solid-svg-icons'\n  import NavigationBarDropdown from '../../../components/controls/navigationBar/NavigationBarDropdown.svelte'\n  import { getContext } from 'svelte'\n  import type { JSONPath } from 'immutable-json-patch'\n  import type { AbsolutePopupContext } from '$lib/types'\n\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let path: JSONPath\n  export let index: number\n  export let onSelect: (path: JSONPath) => void\n  export let getItems: (path: JSONPath) => string[]\n\n  let refNavigationBarItem: Element | undefined\n  let open = false\n  let popupId: number | undefined\n\n  $: itemPath = path.slice(0, index)\n  $: selectedItem = path[index]\n\n  function handleSelectItem(item: string) {\n    closeAbsolutePopup(popupId)\n    onSelect(itemPath.concat(item))\n  }\n\n  function openDropdown() {\n    if (refNavigationBarItem) {\n      open = true\n\n      const props = {\n        items: getItems(itemPath),\n        selectedItem,\n        onSelect: handleSelectItem\n      }\n\n      popupId = openAbsolutePopup(NavigationBarDropdown, props, {\n        anchor: refNavigationBarItem,\n        closeOnOuterClick: true,\n        onClose: () => {\n          open = false\n        }\n      })\n    }\n  }\n</script>\n\n<div class=\"jse-navigation-bar-item\" bind:this={refNavigationBarItem}>\n  <button\n    type=\"button\"\n    class=\"jse-navigation-bar-button jse-navigation-bar-arrow\"\n    class:jse-open={open}\n    on:click={openDropdown}\n  >\n    <Icon data={faAngleRight} />\n  </button>\n  {#if selectedItem !== undefined}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-button\"\n      on:click={() => handleSelectItem(selectedItem)}\n    >\n      {selectedItem}\n    </button>\n  {/if}\n</div>\n\n<style src=\"./NavigationBarItem.scss\"></style>\n","export default function copyToClipBoard(text: string): Promise<void> | void {\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text)\n  }\n  // Compatible with old browsers such as Chrome <=65, Edge <=18 & IE\n  // Compatible with HTTP\n  else if (document.queryCommandSupported?.('copy')) {\n    const textarea = document.createElement('textarea')\n    textarea.value = text\n\n    textarea.style.position = 'fixed' // Avoid scrolling to bottom\n    textarea.style.opacity = '0'\n\n    document.body.appendChild(textarea)\n    textarea.select()\n\n    // Security exception may be thrown by some browsers\n    try {\n      document.execCommand('copy')\n    } catch (e) {\n      console.error(e)\n    } finally {\n      document.body.removeChild(textarea)\n    }\n  } else {\n    console.error('Copy failed.')\n  }\n}\n","<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { getContext, onDestroy, onMount } from 'svelte'\n  import copyToClipBoard from '$lib/utils/copyToClipboard.js'\n  import { faCopy, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n  import Icon from 'svelte-awesome'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { tooltip } from '../../controls/tooltip/tooltip.js'\n  import type { AbsolutePopupContext, JSONPathParser, OnError } from '$lib/types.js'\n\n  const absolutePopupContext = getContext<AbsolutePopupContext>('absolute-popup')\n\n  export let path: JSONPath\n  export let pathParser: JSONPathParser\n  export let onChange: (updatedPath: JSONPath) => void\n  export let onClose: () => void\n  export let onError: OnError\n  export let pathExists: (path: JSONPath) => boolean\n\n  let inputRef: HTMLInputElement\n  let inputPath: string\n  let validationActive = false\n  $: inputPath = pathParser.stringify(path)\n  $: inputValidationError = validationActive ? parseAndValidate(inputPath).error : undefined\n\n  let copiedTimer: number | undefined = undefined\n  let copied = false\n  const copiedDelay = 1000 // ms\n\n  onMount(() => {\n    focus()\n  })\n\n  onDestroy(() => {\n    clearTimeout(copiedTimer)\n  })\n\n  function focus() {\n    inputRef.focus()\n  }\n\n  function parseAndValidate(pathStr: string): {\n    path: JSONPath | undefined\n    error: Error | undefined\n  } {\n    try {\n      const path = pathParser.parse(pathStr)\n      validatePathExists(path)\n      return {\n        path,\n        error: undefined\n      }\n    } catch (error) {\n      return {\n        path: undefined,\n        error: error as Error\n      }\n    }\n  }\n\n  function validatePathExists(path: JSONPath) {\n    if (!pathExists(path)) {\n      throw new Error('Path does not exist in current document')\n    }\n  }\n\n  function handleInput(event: Event & { currentTarget: EventTarget & HTMLInputElement }) {\n    inputPath = event.currentTarget.value\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Escape') {\n      onClose()\n    }\n\n    if (combo === 'Enter') {\n      validationActive = true\n      const result = parseAndValidate(inputPath)\n      if (result.path !== undefined) {\n        onChange(result.path)\n      } else {\n        onError(result.error as Error)\n      }\n    }\n  }\n\n  function handleCopy() {\n    copyToClipBoard(inputPath)\n    copied = true\n    copiedTimer = window.setTimeout(() => (copied = false), copiedDelay)\n    focus()\n  }\n</script>\n\n<div class=\"jse-navigation-bar-path-editor\" class:error={inputValidationError}>\n  <input\n    type=\"text\"\n    class=\"jse-navigation-bar-text\"\n    value={inputPath}\n    bind:this={inputRef}\n    on:keydown|stopPropagation={handleKeyDown}\n    on:input={handleInput}\n  />\n  {#if inputValidationError}\n    <button\n      type=\"button\"\n      class=\"jse-navigation-bar-validation-error\"\n      use:tooltip={{\n        text: String(inputValidationError || ''),\n        ...absolutePopupContext\n      }}\n    >\n      <Icon data={faExclamationTriangle} />\n    </button>\n  {/if}\n  {#if copied}\n    <div class=\"jse-copied-text\">Copied!</div>\n  {/if}\n  <button\n    type=\"button\"\n    class=\"jse-navigation-bar-copy\"\n    class:copied\n    title=\"Copy selected path to the clipboard\"\n    on:click={handleCopy}\n  >\n    <Icon data={faCopy} />\n  </button>\n</div>\n\n<style src=\"./NavigationBarPathEditor.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { existsIn, getIn } from 'immutable-json-patch'\n  import { range } from 'lodash-es'\n  import { isObject, isObjectOrArray } from '$lib/utils/typeUtils.js'\n  import { createMultiSelection, getFocusPath } from '$lib/logic/selection.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import { caseInsensitiveNaturalCompare } from '$lib/logic/sort.js'\n  import type { JSONPathParser, JSONSelection, OnError, OnJSONSelect } from '$lib/types.js'\n  import Icon from 'svelte-awesome'\n  import { faClose, faEdit } from '@fortawesome/free-solid-svg-icons'\n  import NavigationBarItem from './NavigationBarItem.svelte'\n  import NavigationBarPathEditor from './NavigationBarPathEditor.svelte'\n\n  const debug = createDebug('jsoneditor:NavigationBar')\n\n  export let json: unknown\n  export let selection: JSONSelection | null\n  export let onSelect: OnJSONSelect\n  export let onError: OnError\n  export let pathParser: JSONPathParser\n\n  let refNavigationBar: Element | undefined\n  let editing = false\n\n  $: path = selection ? getFocusPath(selection) : []\n  $: hasNextItem = isObjectOrArray(getIn(json, path))\n\n  // we have an unused parameter path to trigger scrollToLastItem when path changes,\n  // see $: scrollToLastItem(path)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function scrollToLastItem(path: JSONPath) {\n    setTimeout(() => {\n      if (refNavigationBar && refNavigationBar.scrollTo) {\n        const left = refNavigationBar.scrollWidth - refNavigationBar.clientWidth\n        if (left > 0) {\n          debug('scrollTo ', left)\n          refNavigationBar.scrollTo({ left, behavior: 'smooth' })\n        }\n      }\n    })\n  }\n\n  // trigger scrollToLastItem when path changes\n  $: scrollToLastItem(path)\n\n  function getItems(path: JSONPath): string[] {\n    debug('get items for path', path)\n\n    const node = getIn(json, path)\n    if (Array.isArray(node)) {\n      return range(0, node.length).map(String)\n    } else if (isObject(node)) {\n      const keys = Object.keys(node)\n\n      const sortedKeys = keys.slice(0)\n      sortedKeys.sort(caseInsensitiveNaturalCompare)\n\n      return sortedKeys\n    } else {\n      // never happens but just for robustness...\n      return []\n    }\n  }\n\n  function pathExists(path: JSONPath): boolean {\n    return existsIn(json, path)\n  }\n\n  function handleSelect(path: JSONPath) {\n    debug('select path', JSON.stringify(path))\n\n    onSelect(createMultiSelection(path, path))\n  }\n\n  function toggleEditing() {\n    editing = !editing\n  }\n\n  function handleCloseEditor() {\n    editing = false\n  }\n\n  function handleChangePath(path: JSONPath) {\n    handleCloseEditor()\n    handleSelect(path)\n  }\n</script>\n\n<div class=\"jse-navigation-bar\" bind:this={refNavigationBar}>\n  {#if !editing}\n    <!-- eslint-disable-next-line @typescript-eslint/no-unused-vars -->\n    {#each path as item, index (index)}\n      <NavigationBarItem {getItems} {path} {index} onSelect={handleSelect} />\n    {/each}\n    {#if hasNextItem}\n      <NavigationBarItem {getItems} {path} index={path.length} onSelect={handleSelect} />\n    {/if}\n  {:else}\n    <NavigationBarPathEditor\n      {path}\n      onClose={handleCloseEditor}\n      onChange={handleChangePath}\n      {onError}\n      {pathExists}\n      {pathParser}\n    />\n  {/if}\n\n  <button\n    type=\"button\"\n    class=\"jse-navigation-bar-edit\"\n    class:flex={!editing}\n    class:editing\n    title={editing ? 'Cancel editing the selected path' : 'Edit the selected path'}\n    on:click={toggleEditing}\n  >\n    <span class=\"jse-navigation-bar-space\">\n      <!-- ensure the right height (arrows have less height than the text) -->\n      {!isObjectOrArray(json) && !editing ? 'Navigation bar' : '\\u00A0'}\n    </span>\n\n    <Icon data={editing ? faClose : faEdit} />\n  </button>\n</div>\n\n<style src=\"./NavigationBar.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { debounce, noop } from 'lodash-es'\n  import Icon from 'svelte-awesome'\n  import {\n    faCaretDown,\n    faCaretRight,\n    faChevronDown,\n    faChevronUp,\n    faCircleNotch,\n    faSearch,\n    faTimes\n  } from '@fortawesome/free-solid-svg-icons'\n  import { DEBOUNCE_DELAY, MAX_SEARCH_RESULTS } from '$lib/constants.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n\n  export let show = false\n  export let searching: boolean\n  export let resultCount = 0\n  export let activeIndex = 0\n  export let showReplace = false\n  export let readOnly = false\n  export let onChange: (search: string) => void = noop\n  export let onPrevious: () => void = noop\n  export let onNext: () => void = noop\n  export let onReplace: (text: string, replaceText: string) => void = noop\n  export let onReplaceAll: (text: string, replaceText: string) => void = noop\n  export let onClose: () => void = noop\n\n  let text = ''\n  let previousText = ''\n  let replaceText = ''\n\n  $: formattedResultCount =\n    resultCount >= MAX_SEARCH_RESULTS ? `${MAX_SEARCH_RESULTS - 1}+` : String(resultCount)\n\n  $: onChangeDebounced = debounce(onChange, DEBOUNCE_DELAY)\n\n  $: onChangeDebounced(text)\n\n  $: if (show) {\n    initShow()\n  }\n\n  function initShow() {\n    if (text !== '') {\n      onChange(text)\n    }\n  }\n\n  function toggleShowReplace() {\n    showReplace = !showReplace && !readOnly\n  }\n\n  function handleSubmit(event: SubmitEvent & { currentTarget: EventTarget & HTMLFormElement }) {\n    event.preventDefault()\n\n    const pendingChanges = text !== previousText\n    if (pendingChanges) {\n      previousText = text\n      onChangeDebounced.cancel()\n      onChange(text)\n    } else {\n      onNext()\n    }\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    // key events must not be handled by the generic keydown handler of the\n    // whole JSONEditor.\n    event.stopPropagation()\n    const combo = keyComboFromEvent(event)\n\n    if (combo === 'Enter') {\n      event.preventDefault()\n      onNext()\n    }\n\n    if (combo === 'Shift+Enter') {\n      event.preventDefault()\n      onPrevious()\n    }\n\n    if (combo === 'Ctrl+Enter') {\n      event.preventDefault()\n\n      if (showReplace) {\n        handleReplace()\n      } else {\n        onNext()\n        // TODO: move focus to the active element\n      }\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      toggleShowReplace()\n    }\n\n    if (combo === 'Escape') {\n      event.preventDefault()\n\n      onClose()\n    }\n  }\n\n  function handleReplace() {\n    if (readOnly) {\n      return\n    }\n\n    onReplace(text, replaceText)\n  }\n\n  function handleReplaceAll() {\n    if (readOnly) {\n      return\n    }\n\n    onReplaceAll(text, replaceText)\n  }\n\n  function initSearchInput(element: HTMLInputElement) {\n    element.select()\n  }\n</script>\n\n{#if show}\n  <div class=\"jse-search-box\">\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <form class=\"jse-search-form\" on:submit={handleSubmit} on:keydown={handleKeyDown}>\n      {#if !readOnly}\n        <button\n          type=\"button\"\n          class=\"jse-replace-toggle\"\n          title=\"Toggle visibility of replace options (Ctrl+H)\"\n          on:click={toggleShowReplace}\n        >\n          <Icon data={showReplace ? faCaretDown : faCaretRight} />\n        </button>\n      {/if}\n      <div class=\"jse-search-contents\">\n        <div class=\"jse-search-section\">\n          <div class=\"jse-search-icon\">\n            {#if searching}\n              <Icon data={faCircleNotch} spin />\n            {:else}\n              <Icon data={faSearch} />\n            {/if}\n          </div>\n          <label class=\"jse-search-input-label\" about=\"jse-search input\">\n            <input\n              class=\"jse-search-input\"\n              title=\"Enter text to search\"\n              type=\"text\"\n              placeholder=\"Find\"\n              bind:value={text}\n              use:initSearchInput\n            />\n          </label>\n          <div class=\"jse-search-count\" class:jse-visible={text !== ''}>\n            {activeIndex !== -1 ? `${activeIndex + 1}/` : ''}{formattedResultCount}\n          </div>\n          <button\n            type=\"button\"\n            class=\"jse-search-next\"\n            title=\"Go to next search result (Enter)\"\n            on:click={() => onNext()}\n          >\n            <Icon data={faChevronDown} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"jse-search-previous\"\n            title=\"Go to previous search result (Shift+Enter)\"\n            on:click={() => onPrevious()}\n          >\n            <Icon data={faChevronUp} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"jse-search-clear\"\n            title=\"Close search box (Esc)\"\n            on:click={() => onClose()}\n          >\n            <Icon data={faTimes} />\n          </button>\n        </div>\n        {#if showReplace && !readOnly}\n          <div class=\"jse-replace-section\">\n            <input\n              class=\"jse-replace-input\"\n              title=\"Enter replacement text\"\n              type=\"text\"\n              placeholder=\"Replace\"\n              bind:value={replaceText}\n            />\n            <button\n              type=\"button\"\n              title=\"Replace current occurrence (Ctrl+Enter)\"\n              on:click={handleReplace}>Replace</button\n            >\n            <button type=\"button\" title=\"Replace all occurrences\" on:click={handleReplaceAll}\n              >All</button\n            >\n          </div>\n        {/if}\n      </div>\n    </form>\n  </div>\n{/if}\n\n<style src=\"./SearchBox.scss\"></style>\n","import type { JSONPatchOperation, JSONPath } from 'immutable-json-patch'\nimport {\n  compileJSONPointer,\n  isJSONArray,\n  isJSONObject,\n  parseJSONPointer\n} from 'immutable-json-patch'\nimport { groupBy, isEmpty, isEqual, mapValues, partition } from 'lodash-es'\nimport type {\n  DocumentState,\n  JSONSelection,\n  SortedColumn,\n  TableCellIndex,\n  ValidationError\n} from '$lib/types.js'\nimport { ValidationSeverity } from '$lib/types.js'\nimport { createValueSelection, getFocusPath, pathStartsWith } from './selection.js'\nimport { isNumber } from '../utils/numberUtils.js'\nimport type { Dictionary } from 'lodash'\nimport { stringifyJSONPath } from '$lib/utils/pathUtils.js'\nimport { forEachSample } from '$lib/utils/arrayUtils.js'\nimport { isObject } from '$lib/utils/typeUtils.js'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\ntype NestedObject = Record<string, NestedObject>\n\nconst endOfPath = Symbol('path')\n\nexport function getColumns(\n  array: Array<unknown>,\n  flatten: boolean,\n  maxSampleCount = Infinity\n): JSONPath[] {\n  const merged: NestedObject = {}\n\n  if (Array.isArray(array)) {\n    // We read samples spread through the whole array, from begin to end.\n    // When the array is sorted, and a specific field is present only at the last\n    // couple of items of the array or in the middle, we want to pick that up too.\n    forEachSample(array, maxSampleCount, (item) => {\n      if (isObject(item)) {\n        _recurseObject(item, merged, flatten)\n      } else {\n        merged[endOfPath] = true\n      }\n    })\n  }\n\n  const paths: JSONPath[] = []\n  if (endOfPath in merged) {\n    paths.push([])\n  }\n  _collectPaths(merged, [], paths, flatten)\n\n  return paths\n}\n\n// internal function for getColumns\n// mutates the argument merged\nfunction _recurseObject(object: NestedObject, merged: NestedObject, flatten: boolean): void {\n  for (const key in object) {\n    const value = object[key]\n    const valueMerged = merged[key] || (merged[key] = {})\n\n    if (isObject(value) && flatten) {\n      _recurseObject(value, valueMerged, flatten)\n    } else {\n      if (valueMerged[endOfPath] === undefined) {\n        valueMerged[endOfPath] = true\n      }\n    }\n  }\n}\n\n// internal function for getColumns\n// mutates the argument paths\nfunction _collectPaths(\n  object: NestedObject,\n  parentPath: JSONPath,\n  paths: JSONPath[],\n  flatten: boolean\n): void {\n  for (const key in object) {\n    const path = parentPath.concat(key)\n    const value = object[key]\n\n    if (value && value[endOfPath] === true) {\n      paths.push(path)\n    }\n\n    if (isJSONObject(value) && flatten) {\n      _collectPaths(value, path, paths, flatten)\n    }\n  }\n}\n\nexport function maintainColumnOrder(\n  newColumns: JSONPath[],\n  previousColumns: JSONPath[]\n): JSONPath[] {\n  const orderedColumns = new Set(previousColumns.map(compileJSONPointer))\n  const newColumnsSet = new Set(newColumns.map(compileJSONPointer))\n\n  // delete the columns that are gone now\n  for (const column of orderedColumns) {\n    if (!newColumnsSet.has(column)) {\n      orderedColumns.delete(column)\n    }\n  }\n\n  // append the new columns to the end\n  for (const column of newColumnsSet) {\n    if (!orderedColumns.has(column)) {\n      orderedColumns.add(column)\n    }\n  }\n\n  return [...orderedColumns].map(parseJSONPointer)\n}\n\nexport function getShallowKeys(value: unknown): JSONPath[] {\n  return isJSONObject(value) ? Object.keys(value).map((key) => [key]) : [[]]\n}\n\nexport function getRecursiveKeys(value: unknown): JSONPath[] {\n  const paths: JSONPath[] = []\n\n  function recurse(value: unknown, path: JSONPath) {\n    if (isJSONObject(value)) {\n      Object.keys(value).forEach((key) => {\n        recurse(value[key], path.concat(key))\n      })\n    } else {\n      // array or primitive value like string or number\n      paths.push(path)\n    }\n  }\n\n  recurse(value, [])\n\n  return paths\n}\n\nexport interface VisibleSection {\n  startIndex: number\n  endIndex: number\n  startHeight: number\n  visibleHeight: number\n  endHeight: number\n  averageItemHeight: number\n  visibleItems: Array<unknown>\n}\n\n// TODO: write unit tests\nexport function calculateVisibleSection(\n  scrollTop: number,\n  viewPortHeight: number,\n  json: unknown | undefined,\n  itemHeights: Record<number, number>,\n  defaultItemHeight: number,\n  margin = 80\n): VisibleSection {\n  const itemCount = isJSONArray(json) ? json.length : 0\n  const averageItemHeight = calculateAverageItemHeight(itemHeights, defaultItemHeight)\n  const viewPortTop = scrollTop - margin\n  const viewPortBottom = viewPortHeight + 2 * margin\n\n  const getItemHeight = (index: number) => itemHeights[index] || defaultItemHeight\n\n  let startIndex = 0\n  let startHeight = 0\n  while (startHeight < viewPortTop && startIndex < itemCount) {\n    startHeight += getItemHeight(startIndex)\n    startIndex++\n  }\n  if (startIndex > 0) {\n    // go one item back, else there is white space at the top for up to 1 missing item\n    startIndex--\n    startHeight -= getItemHeight(startIndex)\n  }\n\n  let endIndex = startIndex\n  let visibleHeight = 0\n  while (visibleHeight < viewPortBottom && endIndex < itemCount) {\n    visibleHeight += getItemHeight(endIndex)\n    endIndex++\n  }\n\n  let endHeight = 0\n  for (let i = endIndex; i < itemCount; i++) {\n    endHeight += getItemHeight(i)\n  }\n\n  const visibleItems = isJSONArray(json) ? json.slice(startIndex, endIndex) : []\n\n  return {\n    startIndex,\n    endIndex,\n    startHeight,\n    endHeight,\n    averageItemHeight,\n    visibleHeight,\n    visibleItems\n  }\n}\n\n// TODO: cleanup if we will not use it in the end\n// TODO: write unit tests\nexport function calculateVisibleSectionApprox(\n  scrollTop: number,\n  viewPortHeight: number,\n  json: unknown | undefined,\n  defaultItemHeight: number\n): VisibleSection {\n  const itemCount = isJSONArray(json) ? json.length : 0\n  const averageItemHeight = defaultItemHeight\n\n  const viewPortTop = scrollTop\n  const startIndex = Math.floor(viewPortTop / defaultItemHeight)\n  const startHeight = startIndex * defaultItemHeight\n  const endIndex = Math.ceil((viewPortTop + viewPortHeight) / defaultItemHeight)\n  const visibleHeight = (endIndex - startIndex) * defaultItemHeight\n  const endHeight = (itemCount - endIndex) * defaultItemHeight\n\n  const visibleItems = isJSONArray(json) ? json.slice(startIndex, endIndex) : []\n\n  return {\n    startIndex,\n    endIndex,\n    startHeight,\n    endHeight,\n    averageItemHeight,\n    visibleHeight,\n    visibleItems\n  }\n}\n\n// TODO: write unit tests\nexport function calculateAbsolutePosition(\n  path: JSONPath,\n  columns: JSONPath[],\n  itemHeights: Record<number, number>,\n  defaultItemHeight: number\n): number {\n  const { rowIndex } = toTableCellPosition(path, columns)\n\n  let top = 0\n  for (let currentIndex = 0; currentIndex < rowIndex; currentIndex++) {\n    top += itemHeights[currentIndex] || defaultItemHeight\n  }\n\n  // TODO: also calculate left\n  return top\n}\n\nfunction calculateAverageItemHeight(\n  itemHeights: Record<number, number>,\n  defaultItemHeight: number\n): number {\n  const values = Object.values(itemHeights) // warning: itemHeights is mutated and not updated itself, we can't watch it!\n  if (isEmpty(values)) {\n    return defaultItemHeight\n  }\n\n  const add = (a: number, b: number) => a + b\n  const total = values.reduce(add)\n  return total / values.length\n}\n\nexport function selectPreviousRow(columns: JSONPath[], selection: JSONSelection): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (rowIndex > 0) {\n    const previousPosition = { rowIndex: rowIndex - 1, columnIndex }\n    const previousPath = fromTableCellPosition(previousPosition, columns)\n    return createValueSelection(previousPath, false)\n  }\n\n  return selection\n}\n\nexport function selectNextRow(\n  json: unknown,\n  columns: JSONPath[],\n  selection: JSONSelection\n): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (rowIndex < (json as Array<unknown>).length - 1) {\n    const nextPosition = { rowIndex: rowIndex + 1, columnIndex }\n    const nextPath = fromTableCellPosition(nextPosition, columns)\n    return createValueSelection(nextPath, false)\n  }\n\n  return selection\n}\n\nexport function selectPreviousColumn(columns: JSONPath[], selection: JSONSelection): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (columnIndex > 0) {\n    const previousPosition = { rowIndex, columnIndex: columnIndex - 1 }\n    const previousPath = fromTableCellPosition(previousPosition, columns)\n    return createValueSelection(previousPath, false)\n  }\n\n  return selection\n}\n\nexport function selectNextColumn(columns: JSONPath[], selection: JSONSelection): JSONSelection {\n  const { rowIndex, columnIndex } = toTableCellPosition(getFocusPath(selection), columns)\n\n  if (columnIndex < columns.length - 1) {\n    const nextPosition = { rowIndex, columnIndex: columnIndex + 1 }\n    const nextPath = fromTableCellPosition(nextPosition, columns)\n    return createValueSelection(nextPath, false)\n  }\n\n  return selection\n}\n\nexport function toTableCellPosition(path: JSONPath, columns: JSONPath[]): TableCellIndex {\n  const [index, ...column] = path\n\n  const rowIndex = parseInt(index, 10)\n\n  return {\n    rowIndex: !isNaN(rowIndex) ? rowIndex : -1,\n    columnIndex: columns.findIndex((c) => pathStartsWith(column, c))\n  }\n}\n\nexport function fromTableCellPosition(position: TableCellIndex, columns: JSONPath[]): JSONPath {\n  const { rowIndex, columnIndex } = position\n\n  return [String(rowIndex), ...columns[columnIndex]]\n}\n\nexport function stringifyTableCellPosition(position: TableCellIndex): string {\n  const { rowIndex, columnIndex } = position\n\n  return `${rowIndex}:${columnIndex}`\n}\n\ninterface GroupedValidationErrorsByRow {\n  row: ValidationError[]\n  columns: Dictionary<ValidationError[]>\n}\n\nexport interface GroupedValidationErrors {\n  root: ValidationError[]\n  rows: Dictionary<GroupedValidationErrorsByRow>\n}\n\n/**\n * Group validation errors for use in the Table view: per column, and a group for the row as a whole\n */\nexport function groupValidationErrors(\n  validationErrors: ValidationError[],\n  columns: JSONPath[]\n): GroupedValidationErrors {\n  const [arrayErrors, rootErrors] = partition(validationErrors, (validationError) =>\n    isNumber(validationError.path[0])\n  )\n\n  const errorsByRow: Dictionary<ValidationError[]> = groupBy(arrayErrors, findRowIndex)\n\n  const groupedErrorsByRow = mapValues(errorsByRow, (errors) => {\n    const groupByRow: GroupedValidationErrorsByRow = {\n      row: [],\n      columns: {}\n    }\n\n    errors.forEach((error) => {\n      const columnIndex = findColumnIndex(error, columns)\n\n      if (columnIndex !== -1) {\n        if (groupByRow.columns[columnIndex] === undefined) {\n          groupByRow.columns[columnIndex] = []\n        }\n        groupByRow.columns[columnIndex].push(error)\n      } else {\n        groupByRow.row.push(error)\n      }\n    })\n\n    return groupByRow\n  })\n\n  return {\n    root: rootErrors,\n    rows: groupedErrorsByRow\n  }\n}\n\nexport function mergeValidationErrors(\n  path: JSONPath,\n  validationErrors: ValidationError[] | undefined\n): ValidationError | undefined {\n  if (!validationErrors || validationErrors.length === 0) {\n    return undefined\n  }\n\n  if (validationErrors.length === 1) {\n    return validationErrors[0]\n  }\n\n  return {\n    path,\n    message:\n      'Multiple validation issues: ' +\n      validationErrors\n        .map((error) => {\n          return stringifyJSONPath(error.path) + ' ' + error.message\n        })\n        .join(', '),\n    severity: ValidationSeverity.warning\n  }\n}\n\nfunction findRowIndex(error: ValidationError): number {\n  return parseInt(error.path[0], 10)\n}\n\nfunction findColumnIndex(error: ValidationError, columns: JSONPath[]): number {\n  const position = toTableCellPosition(error.path, columns)\n\n  if (position.columnIndex !== -1) {\n    return position.columnIndex\n  }\n\n  return -1\n}\n\n/**\n * Clear the sorted column from the documentState when it is affected by the operations\n */\nexport function clearSortedColumnWhenAffectedByOperations(\n  documentState: DocumentState,\n  operations: JSONPatchOperation[],\n  columms: JSONPath[]\n): DocumentState {\n  const mustBeCleared = operations.some((operation) =>\n    operationAffectsSortedColumn(documentState.sortedColumn, operation, columms)\n  )\n\n  if (mustBeCleared) {\n    return {\n      ...documentState,\n      sortedColumn: null\n    }\n  }\n\n  return documentState\n}\n\nexport function operationAffectsSortedColumn(\n  sortedColumn: SortedColumn | null,\n  operation: JSONPatchOperation,\n  columns: JSONPath[]\n): boolean {\n  if (!sortedColumn) {\n    return false\n  }\n\n  // an operation of replacing a value in a different column does not affect the currently sorted order\n  if (operation.op === 'replace') {\n    const path = parseJSONPointer(operation.path)\n    const { rowIndex, columnIndex } = toTableCellPosition(path, columns)\n    const selectedColumnIndex = columns.findIndex((column) => isEqual(column, sortedColumn.path))\n\n    if (rowIndex !== -1 && columnIndex !== -1 && columnIndex !== selectedColumnIndex) {\n      return false\n    }\n  }\n\n  // TODO: there are more cases where we can known an operation does not affect the sorted order, improve this\n  //  For example adding a nested value in a different column, or removing a full row.\n\n  return true\n}\n\n/**\n * Find nested arrays inside a JSON object\n */\nexport function findNestedArrays(json: unknown, maxLevel = 2): JSONPath[] {\n  const props: JSONPath[] = []\n\n  function recurse(value: unknown, path: JSONPath) {\n    if (isJSONObject(value) && path.length < maxLevel) {\n      Object.keys(value).forEach((key) => {\n        recurse(value[key], path.concat(key))\n      })\n    }\n\n    if (isJSONArray(value)) {\n      props.push(path)\n    }\n  }\n\n  recurse(json, [])\n\n  return props\n}\n","import {\n  createInsideSelection,\n  createKeySelection,\n  createMultiSelection,\n  createValueSelection,\n  getFocusPath,\n  hasSelectionContents,\n  isEditingSelection,\n  isKeySelection,\n  isValueSelection,\n  selectionToPartialJson\n} from '$lib/logic/selection.js'\nimport copyToClipboard from '$lib/utils/copyToClipboard.js'\nimport {\n  append,\n  createNewValue,\n  createRemoveOperations,\n  duplicate,\n  insert,\n  insertBefore,\n  removeAll\n} from '$lib/logic/operations.js'\nimport type {\n  AfterPatchCallback,\n  DocumentState,\n  InsertType,\n  JSONParser,\n  JSONSelection,\n  OnChange,\n  OnChangeText,\n  OnJSONSelect,\n  OnPatch\n} from '$lib/types'\nimport { createDebug } from '$lib/utils/debug.js'\nimport {\n  getIn,\n  isJSONObject,\n  isJSONPatchAdd,\n  isJSONPatchReplace,\n  type JSONPath,\n  parsePath\n} from 'immutable-json-patch'\nimport { isObject, isObjectOrArray } from '$lib/utils/typeUtils.js'\nimport {\n  expandAll,\n  expandPath,\n  expandRecursive,\n  expandWithCallback\n} from '$lib/logic/documentState.js'\nimport { initial, isEmpty, last } from 'lodash-es'\nimport { insertActiveElementContents } from '$lib/utils/domUtils.js'\nimport { fromTableCellPosition, toTableCellPosition } from '$lib/logic/table.js'\n\nconst debug = createDebug('jsoneditor:actions')\n\nexport interface OnCutAction {\n  json: unknown | undefined\n  documentState: DocumentState\n  indentation: string | number | undefined\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n}\n\n// TODO: write unit tests\nexport async function onCut({\n  json,\n  documentState,\n  indentation,\n  readOnly,\n  parser,\n  onPatch\n}: OnCutAction) {\n  if (\n    readOnly ||\n    json === undefined ||\n    !documentState.selection ||\n    !hasSelectionContents(documentState.selection)\n  ) {\n    return\n  }\n\n  const clipboard = selectionToPartialJson(json, documentState.selection, indentation, parser)\n  if (clipboard == null) {\n    return\n  }\n\n  debug('cut', { selection: documentState.selection, clipboard, indentation })\n\n  await copyToClipboard(clipboard)\n\n  const { operations, newSelection } = createRemoveOperations(json, documentState.selection)\n\n  onPatch(operations, (patchedJson, patchedState) => ({\n    state: {\n      ...patchedState,\n      selection: newSelection\n    }\n  }))\n}\n\nexport interface OnCopyAction {\n  json: unknown\n  documentState: DocumentState\n  indentation: string | number | undefined\n  parser: JSONParser\n}\n\n// TODO: write unit tests\nexport async function onCopy({ json, documentState, indentation, parser }: OnCopyAction) {\n  const clipboard = selectionToPartialJson(json, documentState.selection, indentation, parser)\n  if (clipboard == null) {\n    return\n  }\n\n  debug('copy', { clipboard, indentation })\n\n  await copyToClipboard(clipboard)\n}\n\ntype RepairModalCallback = (text: string, onApply: (repairedText: string) => void) => void\n\ninterface OnPasteAction {\n  clipboardText: string\n  json: unknown | undefined\n  selection: JSONSelection | null\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onChangeText: OnChangeText\n  openRepairModal: RepairModalCallback\n}\n\n// TODO: write unit tests\nexport function onPaste({\n  clipboardText,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onChangeText,\n  openRepairModal\n}: OnPasteAction) {\n  if (readOnly) {\n    return\n  }\n\n  function doPaste(pastedText: string) {\n    if (json !== undefined) {\n      const selectionNonNull = selection || createValueSelection([], false)\n\n      const operations = insert(json, selectionNonNull, pastedText, parser)\n\n      debug('paste', { pastedText, operations, selectionNonNull })\n\n      onPatch(operations, (patchedJson, patchedState) => {\n        let updatedState = patchedState\n\n        // expand newly inserted object/array\n        operations\n          .filter(\n            (operation) =>\n              (isJSONPatchAdd(operation) || isJSONPatchReplace(operation)) &&\n              isObjectOrArray(operation.value)\n          )\n          .forEach((operation) => {\n            const path = parsePath(json, operation.path)\n            updatedState = expandRecursive(patchedJson, updatedState, path)\n          })\n\n        return {\n          state: updatedState\n        }\n      })\n    } else {\n      // no json: empty document, or the contents is invalid text\n      debug('paste text', { pastedText })\n\n      onChangeText(clipboardText, (patchedJson, patchedState) => {\n        if (patchedJson) {\n          const path: JSONPath = []\n          return {\n            state: expandRecursive(patchedJson, patchedState, path) as DocumentState\n          }\n        }\n      })\n    }\n  }\n\n  try {\n    doPaste(clipboardText)\n  } catch (err) {\n    openRepairModal(clipboardText, (repairedText) => {\n      debug('repaired pasted text: ', repairedText)\n      doPaste(repairedText)\n    })\n  }\n}\n\nexport interface OnRemoveAction {\n  json: unknown | undefined\n  text: string | undefined\n  documentState: DocumentState\n  keepSelection: boolean\n  readOnly: boolean\n  onChange: OnChange\n  onPatch: OnPatch\n}\n\n// TODO: write unit tests\nexport function onRemove({\n  json,\n  text,\n  documentState,\n  keepSelection,\n  readOnly,\n  onChange,\n  onPatch\n}: OnRemoveAction) {\n  if (readOnly || !documentState.selection) {\n    return\n  }\n\n  // in case of a selected key or value, we change the selection to the whole\n  // entry to remove this, we do not want to clear a key or value only.\n  const removeSelection =\n    json !== undefined &&\n    (isKeySelection(documentState.selection) || isValueSelection(documentState.selection))\n      ? createMultiSelection(documentState.selection.path, documentState.selection.path)\n      : documentState.selection\n\n  if (isEmpty(getFocusPath(documentState.selection))) {\n    // root selected -> clear complete document\n    debug('remove root', { selection: documentState.selection })\n\n    if (onChange) {\n      onChange(\n        { text: '', json: undefined },\n        json !== undefined ? { text: undefined, json } : { text: text || '', json },\n        {\n          contentErrors: null,\n          patchResult: null\n        }\n      )\n    }\n  } else {\n    // remove selection\n    if (json !== undefined) {\n      const { operations, newSelection } = createRemoveOperations(json, removeSelection)\n\n      debug('remove', { operations, selection: documentState.selection, newSelection })\n\n      onPatch(operations, (patchedJson, patchedState) => ({\n        state: {\n          ...patchedState,\n          selection: keepSelection ? documentState.selection : newSelection\n        }\n      }))\n    }\n  }\n}\n\nexport interface OnDuplicateRowAction {\n  json: unknown | undefined\n  documentState: DocumentState\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onDuplicateRow({\n  json,\n  documentState,\n  columns,\n  readOnly,\n  onPatch\n}: OnDuplicateRowAction) {\n  if (\n    readOnly ||\n    json === undefined ||\n    !documentState.selection ||\n    !hasSelectionContents(documentState.selection)\n  ) {\n    return\n  }\n\n  const { rowIndex, columnIndex } = toTableCellPosition(\n    getFocusPath(documentState.selection),\n    columns\n  )\n\n  debug('duplicate row', { rowIndex })\n\n  const rowPath = [String(rowIndex)]\n  const operations = duplicate(json, [rowPath])\n\n  onPatch(operations, (patchedJson, patchedState) => {\n    const newRowIndex = rowIndex < (json as Array<unknown>).length ? rowIndex + 1 : rowIndex\n    const newPath = fromTableCellPosition({ rowIndex: newRowIndex, columnIndex }, columns)\n    const newSelection = createValueSelection(newPath, false)\n\n    return {\n      state: {\n        ...patchedState,\n        selection: newSelection\n      }\n    }\n  })\n}\n\nexport interface OnInsertBeforeRowAction {\n  json: unknown | undefined\n  documentState: DocumentState\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onInsertBeforeRow({\n  json,\n  documentState,\n  columns,\n  readOnly,\n  onPatch\n}: OnInsertBeforeRowAction) {\n  if (\n    readOnly ||\n    json === undefined ||\n    !documentState.selection ||\n    !hasSelectionContents(documentState.selection)\n  ) {\n    return\n  }\n\n  const { rowIndex } = toTableCellPosition(getFocusPath(documentState.selection), columns)\n\n  debug('insert before row', { rowIndex })\n\n  const rowPath = [String(rowIndex)]\n  const newValue = isJSONObject((json as Array<unknown>)[0]) ? {} : ''\n  const values = [{ key: '', value: newValue }]\n  const operations = insertBefore(json, rowPath, values)\n\n  onPatch(operations)\n}\n\nexport interface OnInsertAfterRowAction {\n  json: unknown | undefined\n  documentState: DocumentState\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onInsertAfterRow({\n  json,\n  documentState,\n  columns,\n  readOnly,\n  onPatch\n}: OnInsertAfterRowAction) {\n  if (\n    readOnly ||\n    json === undefined ||\n    !documentState.selection ||\n    !hasSelectionContents(documentState.selection)\n  ) {\n    return\n  }\n\n  const { rowIndex, columnIndex } = toTableCellPosition(\n    getFocusPath(documentState.selection),\n    columns\n  )\n\n  debug('insert after row', { rowIndex })\n\n  const nextRowIndex = rowIndex + 1\n  const nextRowPath = [String(nextRowIndex)]\n  const newValue = isJSONObject((json as Array<unknown>)[0]) ? {} : ''\n  const values = [{ key: '', value: newValue }]\n\n  const operations =\n    nextRowIndex < (json as Array<unknown>).length\n      ? insertBefore(json, nextRowPath, values)\n      : append(json, [], values)\n\n  onPatch(operations, (patchedJson, patchedState) => {\n    const nextPath = fromTableCellPosition({ rowIndex: nextRowIndex, columnIndex }, columns)\n    const newSelection = createValueSelection(nextPath, false)\n\n    return {\n      state: {\n        ...patchedState,\n        selection: newSelection\n      }\n    }\n  })\n}\n\nexport interface OnRemoveRowAction {\n  json: unknown | undefined\n  documentState: DocumentState\n  columns: JSONPath[]\n  readOnly: boolean\n  onPatch: OnPatch\n}\n\n/**\n * This function assumes that the json holds the Array that we're duplicating a row for,\n * it cannot duplicate something in some nested array\n */\n// TODO: write unit tests\nexport function onRemoveRow({\n  json,\n  documentState,\n  columns,\n  readOnly,\n  onPatch\n}: OnRemoveRowAction) {\n  if (\n    readOnly ||\n    json === undefined ||\n    !documentState.selection ||\n    !hasSelectionContents(documentState.selection)\n  ) {\n    return\n  }\n\n  const { rowIndex, columnIndex } = toTableCellPosition(\n    getFocusPath(documentState.selection),\n    columns\n  )\n\n  debug('remove row', { rowIndex })\n\n  const rowPath = [String(rowIndex)]\n  const operations = removeAll([rowPath])\n\n  onPatch(operations, (patchedJson, patchedState) => {\n    const newRowIndex =\n      rowIndex < (patchedJson as Array<unknown>).length\n        ? rowIndex\n        : rowIndex > 0\n          ? rowIndex - 1\n          : undefined\n\n    const newSelection =\n      newRowIndex !== undefined\n        ? createValueSelection(\n            fromTableCellPosition({ rowIndex: newRowIndex, columnIndex }, columns),\n            false\n          )\n        : null\n\n    debug('remove row new selection', { rowIndex, newRowIndex, newSelection })\n\n    return {\n      state: {\n        ...patchedState,\n        selection: newSelection\n      }\n    }\n  })\n}\n\nexport interface OnInsert {\n  insertType: InsertType\n  selectInside: boolean\n  refJsonEditor: HTMLElement\n  json: unknown | undefined\n  selection: JSONSelection | null\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onReplaceJson: (updatedJson: unknown, afterPatch: AfterPatchCallback) => void\n}\n\n// TODO: write unit tests\nexport function onInsert({\n  insertType,\n  selectInside,\n  refJsonEditor,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onReplaceJson\n}: OnInsert): void {\n  if (readOnly) {\n    return\n  }\n\n  const newValue = createNewValue(json, selection, insertType)\n\n  if (json !== undefined) {\n    const data = parser.stringify(newValue) as string\n    const operations = insert(json, selection, data, parser)\n    debug('onInsert', { insertType, operations, newValue, data })\n\n    const operation = last(\n      operations.filter((operation) => operation.op === 'add' || operation.op === 'replace')\n    )\n\n    onPatch(operations, (patchedJson, patchedState) => {\n      // TODO: extract determining the newSelection in a separate function\n      if (operation) {\n        const path = parsePath(patchedJson, operation.path)\n\n        if (isObjectOrArray(newValue)) {\n          return {\n            state: {\n              ...expandWithCallback(patchedJson, patchedState, path, expandAll),\n              selection: selectInside ? createInsideSelection(path) : patchedState.selection\n            }\n          }\n        }\n\n        if (newValue === '') {\n          // open the newly inserted value in edit mode\n          const parent = !isEmpty(path) ? getIn(patchedJson, initial(path)) : null\n\n          return {\n            // expandPath is invoked to make sure that visibleSections is extended when needed\n            state: expandPath(\n              patchedJson,\n              {\n                ...patchedState,\n                selection: isObject(parent)\n                  ? createKeySelection(path, true)\n                  : createValueSelection(path, true)\n              },\n              path\n            )\n          }\n        }\n\n        return undefined\n      }\n    })\n\n    debug('after patch')\n\n    if (operation) {\n      if (newValue === '') {\n        // open the newly inserted value in edit mode (can be cancelled via ESC this way)\n        tick2(() => insertActiveElementContents(refJsonEditor, '', true, refreshEditableDiv))\n      }\n    }\n  } else {\n    // document is empty or invalid (in that case it has text but no json)\n    debug('onInsert', { insertType, newValue })\n\n    const path: JSONPath = []\n    onReplaceJson(newValue, (patchedJson, patchedState) => ({\n      state: {\n        ...expandRecursive(patchedJson, patchedState, path),\n        selection: isObjectOrArray(newValue)\n          ? createInsideSelection(path)\n          : createValueSelection(path, true)\n      }\n    }))\n  }\n}\n\nexport interface OnInsertCharacter {\n  char: string\n  selectInside: boolean\n  refJsonEditor: HTMLElement\n  json: unknown | undefined\n  selection: JSONSelection | null\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onReplaceJson: (updatedJson: unknown, afterPatch: AfterPatchCallback) => void\n  onSelect: OnJSONSelect\n}\n\n// TODO: write unit tests\nexport async function onInsertCharacter({\n  char,\n  selectInside,\n  refJsonEditor,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onReplaceJson,\n  onSelect\n}: OnInsertCharacter) {\n  // a regular key like a, A, _, etc is entered.\n  // Replace selected contents with a new value having this first character as text\n  if (readOnly) {\n    return\n  }\n\n  if (isKeySelection(selection)) {\n    // only replace contents when not yet in edit mode (can happen when entering\n    // multiple characters very quickly after each other due to the async handling)\n    const replaceContents = !selection.edit\n\n    onSelect({ ...selection, edit: true })\n    tick2(() =>\n      // We use this way via insertActiveElementContents, so we can cancel via ESC\n      insertActiveElementContents(refJsonEditor, char, replaceContents, refreshEditableDiv)\n    )\n    return\n  }\n\n  if (char === '{') {\n    onInsert({\n      insertType: 'object',\n      selectInside,\n      refJsonEditor,\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch,\n      onReplaceJson\n    })\n  } else if (char === '[') {\n    onInsert({\n      insertType: 'array',\n      selectInside,\n      refJsonEditor,\n      json,\n      selection,\n      readOnly,\n      parser,\n      onPatch,\n      onReplaceJson\n    })\n  } else {\n    if (isValueSelection(selection) && json !== undefined) {\n      if (!isObjectOrArray(getIn(json, selection.path))) {\n        // only replace contents when not yet in edit mode (can happen when entering\n        // multiple characters very quickly after each other due to the async handling)\n        const replaceContents = !selection.edit\n\n        onSelect({ ...selection, edit: true })\n        tick2(() =>\n          // We use this way via insertActiveElementContents, so we can cancel via ESC\n          insertActiveElementContents(refJsonEditor, char, replaceContents, refreshEditableDiv)\n        )\n      } else {\n        // TODO: replace the object/array with editing a text in edit mode?\n        //  (Ideally this this should not create an entry in history though,\n        //  which isn't really possible right now since we have to apply\n        //  a patch to change the object/array into a value)\n      }\n    } else {\n      debug('onInsertValueWithCharacter', { char })\n      await onInsertValueWithCharacter({\n        char,\n        refJsonEditor,\n        json,\n        selection,\n        readOnly,\n        parser,\n        onPatch,\n        onReplaceJson\n      })\n    }\n  }\n}\n\ninterface OnInsertValueWithCharacter {\n  char: string\n  refJsonEditor: HTMLElement\n  json: unknown | undefined\n  selection: JSONSelection | null\n  readOnly: boolean\n  parser: JSONParser\n  onPatch: OnPatch\n  onReplaceJson: (updatedJson: unknown, afterPatch: AfterPatchCallback) => void\n}\n\nasync function onInsertValueWithCharacter({\n  char,\n  refJsonEditor,\n  json,\n  selection,\n  readOnly,\n  parser,\n  onPatch,\n  onReplaceJson\n}: OnInsertValueWithCharacter) {\n  if (readOnly) {\n    return\n  }\n\n  // first insert a new value\n  onInsert({\n    insertType: 'value',\n    selectInside: false, // not relevant, we insert a value, not an object or array\n    refJsonEditor,\n    json,\n    selection,\n    readOnly,\n    parser,\n    onPatch,\n    onReplaceJson\n  })\n\n  // only replace contents when not yet in edit mode (can happen when entering\n  // multiple characters very quickly after each other due to the async handling)\n  const replaceContents = !isEditingSelection(selection)\n\n  tick2(() => insertActiveElementContents(refJsonEditor, char, replaceContents, refreshEditableDiv))\n}\n\n/**\n * set two timeouts, two ticks of delay.\n * This allows to perform some action in the DOM *after* Svelte has re-rendered the app for example\n * WARNING: try to avoid using this function, it is tricky to rely on it.\n */\nfunction tick2(callback: () => void) {\n  setTimeout(() => setTimeout(callback))\n}\n\nfunction refreshEditableDiv(element: HTMLElement) {\n  // We force a refresh because when changing the text of the editable div programmatically,\n  // the DIV doesn't get a trigger to update it's class\n  // TODO: come up with a better solution\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  element?.refresh()\n}\n","<script lang=\"ts\">\n  import type { JSONParser } from '$lib/types'\n  import { truncate } from '$lib/utils/stringUtils.js'\n  import { getText } from '$lib/utils/jsonUtils.js'\n  import { MAX_CHARACTERS_TEXT_PREVIEW } from '$lib/constants.js'\n\n  export let text: string | undefined\n  export let json: unknown | undefined\n  export let indentation: number | string\n  export let parser: JSONParser\n\n  $: content = json !== undefined ? { json } : { text: text || '' }\n  $: truncated = truncate(getText(content, indentation, parser), MAX_CHARACTERS_TEXT_PREVIEW)\n</script>\n\n<div class=\"jse-json-preview\">\n  {truncated}\n</div>\n\n<style src=\"./JSONPreview.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { createAutoScrollHandler } from '../../controls/createAutoScrollHandler.js'\n  import { faCheck, faCode, faWrench } from '@fortawesome/free-solid-svg-icons'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, existsIn, getIn, immutableJSONPatch } from 'immutable-json-patch'\n  import { jsonrepair } from 'jsonrepair'\n  import { initial, isEmpty, isEqual, noop, throttle, uniqueId } from 'lodash-es'\n  import { getContext, onDestroy, onMount, tick } from 'svelte'\n  import { createJump } from '$lib/assets/jump.js/src/jump.js'\n  import {\n    CONTEXT_MENU_HEIGHT,\n    CONTEXT_MENU_WIDTH,\n    MAX_SEARCH_RESULTS,\n    SCROLL_DURATION,\n    SEARCH_UPDATE_THROTTLE,\n    SIMPLE_MODAL_OPTIONS\n  } from '$lib/constants.js'\n  import {\n    collapsePath,\n    createDocumentState,\n    documentStatePatch,\n    expandAll,\n    expandMinimal,\n    expandPath,\n    expandRecursive,\n    expandSection,\n    expandSingleItem,\n    expandWithCallback,\n    getDefaultExpand,\n    getEnforceString,\n    setEnforceString\n  } from '$lib/logic/documentState.js'\n  import { createHistory } from '$lib/logic/history.js'\n  import { duplicate, extract, revertJSONPatchWithMoveOperations } from '$lib/logic/operations.js'\n  import {\n    createSearchAndReplaceAllOperations,\n    createSearchAndReplaceOperations,\n    search,\n    searchNext,\n    searchPrevious,\n    updateSearchResult\n  } from '$lib/logic/search.js'\n  import {\n    canConvert,\n    createAfterSelection,\n    createInsideSelection,\n    createKeySelection,\n    createSelectionFromOperations,\n    createValueSelection,\n    findRootPath,\n    getAnchorPath,\n    getEndPath,\n    getFocusPath,\n    getInitialSelection,\n    getSelectionDown,\n    getSelectionLeft,\n    getSelectionNextInside,\n    getSelectionPaths,\n    getSelectionRight,\n    getSelectionUp,\n    hasSelectionContents,\n    isAfterSelection,\n    isEditingSelection,\n    isInsideSelection,\n    isJSONSelection,\n    isKeySelection,\n    isMultiSelection,\n    isMultiSelectionWithOneItem,\n    isSelectionInsidePath,\n    isValueSelection,\n    removeEditModeFromSelection,\n    selectAll,\n    updateSelectionInDocumentState\n  } from '$lib/logic/selection.js'\n  import { mapValidationErrors, validateJSON } from '$lib/logic/validation.js'\n  import {\n    activeElementIsChildOf,\n    createNormalizationFunctions,\n    encodeDataPath,\n    findParentWithNodeName,\n    getWindow,\n    isChildOf,\n    isChildOfNodeName,\n    isEditableDivRef\n  } from '$lib/utils/domUtils.js'\n  import {\n    convertValue,\n    isJSONContent,\n    isTextContent,\n    normalizeJsonParseError,\n    parseAndRepair,\n    parsePartialJson,\n    repairPartialJson\n  } from '$lib/utils/jsonUtils.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { isObjectOrArray, isUrl, stringConvert } from '$lib/utils/typeUtils.js'\n  import { createFocusTracker } from '../../controls/createFocusTracker.js'\n  import Message from '../../controls/Message.svelte'\n  import ValidationErrorsOverview from '../../controls/ValidationErrorsOverview.svelte'\n  import CopyPasteModal from '../../modals/CopyPasteModal.svelte'\n  import JSONRepairModal from '../../modals/JSONRepairModal.svelte'\n  import TreeContextMenu from './contextmenu/TreeContextMenu.svelte'\n  import JSONNode from './JSONNode.svelte'\n  import TreeMenu from './menu/TreeMenu.svelte'\n  import Welcome from './Welcome.svelte'\n  import NavigationBar from '../../controls/navigationBar/NavigationBar.svelte'\n  import SearchBox from './menu/SearchBox.svelte'\n  import type {\n    AbsolutePopupContext,\n    AbsolutePopupOptions,\n    AfterPatchCallback,\n    Content,\n    ContentErrors,\n    DocumentState,\n    HistoryItem,\n    InsertType,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONPathParser,\n    JSONPointerMap,\n    JSONSelection,\n    NestedValidationError,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnClassName,\n    OnError,\n    OnExpand,\n    OnFocus,\n    OnJSONEditorModal,\n    OnRenderContextMenuInternal,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    ParseError,\n    PastedJson,\n    SearchResult,\n    Section,\n    TransformModalOptions,\n    TreeModeContext,\n    ValidationError,\n    Validator,\n    ValueNormalization\n  } from '$lib/types'\n  import { Mode, ValidationSeverity } from '$lib/types.js'\n  import memoizeOne from 'memoize-one'\n  import { measure } from '$lib/utils/timeUtils.js'\n  import {\n    onCopy,\n    onCut,\n    onInsert,\n    onInsertCharacter,\n    onPaste,\n    onRemove\n  } from '$lib/logic/actions.js'\n  import JSONPreview from '../../controls/JSONPreview.svelte'\n  import type { Context } from 'svelte-simple-modal'\n\n  const debug = createDebug('jsoneditor:TreeMode')\n\n  const isSSR = typeof window === 'undefined'\n  debug('isSSR:', isSSR)\n\n  const { open } = getContext<Context>('simple-modal')\n  const sortModalId = uniqueId()\n  const transformModalId = uniqueId()\n\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n\n  let refContents: HTMLDivElement | undefined\n  let refHiddenInput: HTMLInputElement\n  let refJsonEditor: HTMLDivElement\n  let hasFocus = false\n  const jump = createJump()\n\n  export let readOnly: boolean\n  export let externalContent: Content\n  export let externalSelection: JSONEditorSelection | null\n  export let mainMenuBar: boolean\n  export let navigationBar: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validator: Validator | null\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n  export let indentation: number | string\n  export let onError: OnError\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onRenderValue: OnRenderValue\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onClassName: OnClassName | undefined\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n  export let onJSONEditorModal: OnJSONEditorModal\n\n  // modalOpen is true when one of the modals is open.\n  // This is used to track whether the editor still has focus\n  let modalOpen = false\n\n  createFocusTracker({\n    onMount,\n    onDestroy,\n    getWindow: () => getWindow(refJsonEditor),\n    hasFocus: () => (modalOpen && document.hasFocus()) || activeElementIsChildOf(refJsonEditor),\n    onFocus: () => {\n      hasFocus = true\n      if (onFocus) {\n        onFocus()\n      }\n    },\n    onBlur: () => {\n      hasFocus = false\n      if (onBlur) {\n        onBlur()\n      }\n    }\n  })\n\n  let json: unknown | undefined\n  let text: string | undefined\n  let parseError: ParseError | undefined = undefined\n\n  function updateSelection(\n    selection:\n      | JSONSelection\n      | null\n      | ((selection: JSONSelection | null) => JSONSelection | null | undefined | void)\n  ) {\n    debug('updateSelection', selection)\n\n    const updatedSelection =\n      typeof selection === 'function' ? selection(documentState.selection) || null : selection\n\n    if (!isEqual(updatedSelection, documentState.selection)) {\n      documentState = {\n        ...documentState,\n        selection: updatedSelection\n      }\n\n      onSelect(updatedSelection)\n    }\n  }\n\n  let documentStateInitialized = false\n  let documentState = createDocumentState()\n  let searchResult: SearchResult | undefined\n\n  let normalization: ValueNormalization\n  $: normalization = createNormalizationFunctions({\n    escapeControlCharacters,\n    escapeUnicodeCharacters\n  })\n\n  $: debug('selection', documentState.selection)\n\n  let pastedJson: PastedJson\n\n  let showSearch = false\n  let showReplace = false\n  let searching = false\n  let searchText = ''\n\n  async function handleSearchText(text: string) {\n    debug('search text updated', text)\n    searchText = text\n    await tick() // await for the search results to be updated\n    await focusActiveSearchResult()\n  }\n\n  async function handleNextSearchResult() {\n    searchResult = searchResult ? searchNext(searchResult) : undefined\n\n    await focusActiveSearchResult()\n  }\n\n  async function handlePreviousSearchResult() {\n    searchResult = searchResult ? searchPrevious(searchResult) : undefined\n\n    await focusActiveSearchResult()\n  }\n\n  async function handleReplace(text: string, replacementText: string) {\n    const activeItem = searchResult?.activeItem\n    debug('handleReplace', { replacementText, activeItem })\n\n    if (!activeItem || json === undefined) {\n      return\n    }\n\n    const { operations, newSelection } = createSearchAndReplaceOperations(\n      json,\n      documentState,\n      replacementText,\n      activeItem,\n      parser\n    )\n\n    handlePatch(operations, (patchedJson, patchedState) => ({\n      state: { ...patchedState, selection: newSelection }\n    }))\n\n    await tick()\n\n    await focusActiveSearchResult()\n  }\n\n  async function handleReplaceAll(text: string, replacementText: string) {\n    debug('handleReplaceAll', { text, replacementText })\n\n    const { operations, newSelection } = createSearchAndReplaceAllOperations(\n      json,\n      documentState,\n      text,\n      replacementText,\n      parser\n    )\n\n    handlePatch(operations, (patchedJson, patchedState) => ({\n      state: { ...patchedState, selection: newSelection }\n    }))\n\n    await tick()\n\n    await focusActiveSearchResult()\n  }\n\n  function clearSearchResult() {\n    showSearch = false\n    showReplace = false\n    handleSearchText('')\n    focus()\n  }\n\n  async function focusActiveSearchResult() {\n    const activeItem = searchResult?.activeItem\n\n    debug('focusActiveSearchResult', searchResult)\n\n    if (activeItem && json !== undefined) {\n      const path = activeItem.path\n      documentState = {\n        ...expandPath(json, documentState, path),\n        selection: null // navigation path of current selection would be confusing\n      }\n      await tick()\n      await scrollTo(path)\n    }\n  }\n\n  // we pass searchText and json as argument to trigger search when these variables change,\n  // via $: applySearchThrottled(searchText, json)\n  function applySearch(searchText: string, json: unknown) {\n    if (searchText === '') {\n      debug('clearing search result')\n\n      if (searchResult !== undefined) {\n        searchResult = undefined\n      }\n\n      return\n    }\n\n    searching = true\n\n    // setTimeout is to wait until the search icon has been rendered\n    setTimeout(() => {\n      debug('searching...', searchText)\n\n      // console.time('search') // TODO: cleanup\n      const newResultItems = search(searchText, json, MAX_SEARCH_RESULTS)\n      searchResult = updateSearchResult(json, newResultItems, searchResult)\n      // console.timeEnd('search') // TODO: cleanup\n\n      searching = false\n    })\n  }\n\n  function handleSelectValidationError(error: ValidationError) {\n    debug('select validation error', error)\n\n    updateSelection(createValueSelection(error.path, false))\n    scrollTo(error.path)\n  }\n\n  const history = createHistory<HistoryItem>({\n    onChange: (state) => {\n      historyState = state\n    }\n  })\n  let historyState = history.getState()\n\n  export function expand(callback: OnExpand = expandAll) {\n    debug('expand')\n\n    // clear the expanded state and visible sections (else you can't collapse anything)\n    const cleanDocumentState = {\n      ...documentState,\n      expandedMap: {},\n      visibleSectionsMap: {}\n    }\n\n    documentState = expandWithCallback(json, cleanDocumentState, [], callback)\n  }\n\n  // two-way binding of externalContent and internal json and text (\n  // when receiving an updated prop, we have to update state for example\n  $: applyExternalContent(externalContent)\n\n  $: applyExternalSelection(externalSelection)\n\n  const applySearchThrottled = throttle(applySearch, SEARCH_UPDATE_THROTTLE)\n  $: applySearchThrottled(searchText, json)\n\n  let textIsRepaired = false\n\n  let validationErrors: ValidationError[] = []\n  $: updateValidationErrors(json, validator, parser, validationParser)\n\n  let validationErrorsMap: JSONPointerMap<NestedValidationError>\n  $: validationErrorsMap = mapValidationErrors(validationErrors)\n\n  // because onChange returns the validation errors and there is also a separate listener,\n  // we would execute validation twice. Memoizing the last result solves this.\n  const memoizedValidate = memoizeOne(validateJSON)\n\n  function updateValidationErrors(\n    json: unknown,\n    validator: Validator | null,\n    parser: JSONParser,\n    validationParser: JSONParser\n  ) {\n    measure(\n      () => {\n        let newValidationErrors: ValidationError[]\n        try {\n          newValidationErrors = memoizedValidate(json, validator, parser, validationParser)\n        } catch (err) {\n          newValidationErrors = [\n            {\n              path: [],\n              message: 'Failed to validate: ' + (err as Error).message,\n              severity: ValidationSeverity.warning\n            }\n          ]\n        }\n\n        if (!isEqual(newValidationErrors, validationErrors)) {\n          debug('validationErrors changed:', newValidationErrors)\n          validationErrors = newValidationErrors\n        }\n      },\n      (duration) => debug(`validationErrors updated in ${duration} ms`)\n    )\n  }\n\n  export function validate(): ContentErrors | null {\n    debug('validate')\n\n    if (parseError) {\n      return {\n        parseError,\n        isRepairable: false // not applicable, if repairable, we will not have a parseError\n      }\n    }\n\n    // make sure the validation results are up-to-date\n    // normally, they are only updated on the next tick after the json is changed\n    updateValidationErrors(json, validator, parser, validationParser)\n    return !isEmpty(validationErrors) ? { validationErrors } : null\n  }\n\n  export function getJson() {\n    return json\n  }\n\n  function getDocumentState(): DocumentState {\n    return documentState\n  }\n\n  function applyExternalContent(updatedContent: Content) {\n    if (isJSONContent(updatedContent)) {\n      applyExternalJson(updatedContent.json)\n    } else if (isTextContent(updatedContent)) {\n      applyExternalText(updatedContent.text)\n    }\n  }\n\n  function applyExternalJson(updatedJson: unknown | undefined) {\n    if (updatedJson === undefined) {\n      return\n    }\n\n    // TODO: this is inefficient. Make an optional flag promising that the updates are immutable so we don't have to do a deep equality check? First do some profiling!\n    const isChanged = !isEqual(json, updatedJson)\n\n    debug('update external json', { isChanged, currentlyText: json === undefined })\n\n    if (!isChanged) {\n      // no actual change, don't do anything\n      return\n    }\n\n    const previousContent: Content = { json, text }\n    const previousState = documentState\n    const previousJson = json\n    const previousText = text\n    const previousTextIsRepaired = textIsRepaired\n\n    json = updatedJson\n    expandWhenNotInitialized(json)\n    text = undefined\n    textIsRepaired = false\n    parseError = undefined\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // let the functions applyExternalJson and applyExternalText _not_ return\n    // a patchResult ever.\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function applyExternalText(updatedText: string | undefined) {\n    if (updatedText === undefined || isJSONContent(externalContent)) {\n      return\n    }\n\n    const isChanged = updatedText !== text\n\n    debug('update external text', { isChanged })\n\n    if (!isChanged) {\n      // no actual change, don't do anything\n      return\n    }\n\n    const previousContent: Content = { json, text }\n    const previousJson = json\n    const previousState = documentState\n    const previousText = text\n    const previousTextIsRepaired = textIsRepaired\n\n    try {\n      json = parseMemoizeOne(updatedText)\n      expandWhenNotInitialized(json)\n      text = updatedText\n      textIsRepaired = false\n      parseError = undefined\n    } catch (err) {\n      try {\n        json = parseMemoizeOne(jsonrepair(updatedText))\n        expandWhenNotInitialized(json)\n        text = updatedText\n        textIsRepaired = true\n        parseError = undefined\n        clearSelectionWhenNotExisting(json)\n      } catch (repairError) {\n        // no valid JSON, will show empty document or invalid json\n        json = undefined\n        text = externalContent['text']\n        textIsRepaired = false\n        parseError =\n          text !== undefined && text !== ''\n            ? normalizeJsonParseError(text, (err as Error).message || String(err))\n            : undefined\n      }\n    }\n\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // let the functions applyExternalJson and applyExternalText _not_ return\n    // a patchResult ever.\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function applyExternalSelection(externalSelection: JSONEditorSelection | null) {\n    if (!isEqual(documentState.selection, externalSelection)) {\n      debug('applyExternalSelection', externalSelection)\n\n      if (isJSONSelection(externalSelection) || externalSelection === null) {\n        updateSelection(externalSelection)\n      }\n    }\n  }\n\n  function expandWhenNotInitialized(json: unknown) {\n    if (!documentStateInitialized) {\n      documentStateInitialized = true\n      documentState = expandWithCallback(json, documentState, [], getDefaultExpand(json))\n    }\n  }\n\n  function clearSelectionWhenNotExisting(json: unknown) {\n    if (!documentState.selection) {\n      return\n    }\n\n    if (\n      existsIn(json, getAnchorPath(documentState.selection)) &&\n      existsIn(json, getFocusPath(documentState.selection))\n    ) {\n      return\n    }\n\n    debug('clearing selection: path does not exist anymore', documentState.selection)\n    documentState = {\n      ...documentState,\n      selection: getInitialSelection(json, documentState)\n    }\n  }\n\n  function addHistoryItem({\n    previousJson,\n    previousState,\n    previousText,\n    previousTextIsRepaired\n  }: {\n    previousJson: unknown | undefined\n    previousText: string | undefined\n    previousState: DocumentState\n    previousTextIsRepaired: boolean\n  }) {\n    if (previousJson === undefined && previousText === undefined) {\n      // initialization -> do not create a history item\n      return\n    }\n\n    if (json !== undefined) {\n      if (previousJson !== undefined) {\n        // regular undo/redo with JSON patch\n        history.add({\n          undo: {\n            patch: [{ op: 'replace', path: '', value: previousJson }],\n            state: removeEditModeFromSelection(previousState),\n            json: undefined,\n            text: previousText,\n            textIsRepaired: previousTextIsRepaired\n          },\n          redo: {\n            patch: [{ op: 'replace', path: '', value: json }],\n            state: removeEditModeFromSelection(documentState),\n            json: undefined,\n            text,\n            textIsRepaired\n          }\n        })\n      } else {\n        history.add({\n          undo: {\n            patch: undefined,\n            json: undefined,\n            text: previousText,\n            state: removeEditModeFromSelection(previousState),\n            textIsRepaired: previousTextIsRepaired\n          },\n          redo: {\n            patch: undefined,\n            json,\n            state: removeEditModeFromSelection(documentState),\n            text,\n            textIsRepaired\n          }\n        })\n      }\n    } else {\n      if (previousJson !== undefined) {\n        history.add({\n          undo: {\n            patch: undefined,\n            json: previousJson,\n            state: removeEditModeFromSelection(previousState),\n            text: previousText,\n            textIsRepaired: previousTextIsRepaired\n          },\n          redo: {\n            patch: undefined,\n            json: undefined,\n            text,\n            textIsRepaired,\n            state: removeEditModeFromSelection(documentState)\n          }\n        })\n      } else {\n        // this cannot happen. Nothing to do, no change\n      }\n    }\n  }\n\n  function createDefaultSelection() {\n    debug('createDefaultSelection')\n\n    documentState = {\n      ...documentState,\n      selection: createValueSelection([], false)\n    }\n  }\n\n  export function patch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    debug('patch', operations, afterPatch)\n\n    if (json === undefined) {\n      throw new Error('Cannot apply patch: no JSON')\n    }\n\n    const previousContent = { json, text }\n    const previousJson = json\n    const previousState = documentState\n    const previousText = text\n    const previousTextIsRepaired = textIsRepaired\n\n    // execute the patch operations\n    const undo: JSONPatchDocument = revertJSONPatchWithMoveOperations(\n      json,\n      operations\n    ) as JSONPatchDocument\n    const patched = documentStatePatch(json, documentState, operations)\n\n    // update the selection based on the operations\n    const updatedSelection = createSelectionFromOperations(json, operations)\n    const patchedDocumentState = updateSelectionInDocumentState(\n      patched.documentState,\n      updatedSelection,\n      false\n    )\n    debug('patch updatedSelection', updatedSelection)\n\n    const callback =\n      typeof afterPatch === 'function' ? afterPatch(patched.json, patchedDocumentState) : undefined\n\n    json = callback && callback.json !== undefined ? callback.json : patched.json\n    const newState =\n      callback && callback.state !== undefined ? callback.state : patchedDocumentState\n    documentState = newState\n    text = undefined\n    textIsRepaired = false\n    pastedJson = undefined\n    parseError = undefined\n\n    // ensure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    history.add({\n      undo: {\n        patch: undo,\n        json: undefined,\n        text: previousText,\n        state: removeEditModeFromSelection(previousState),\n        textIsRepaired: previousTextIsRepaired\n      },\n      redo: {\n        patch: operations,\n        json: undefined,\n        state: removeEditModeFromSelection(newState),\n        text,\n        textIsRepaired\n      }\n    })\n\n    const patchResult = {\n      json,\n      previousJson,\n      undo,\n      redo: operations\n    }\n\n    emitOnChange(previousContent, patchResult)\n\n    return patchResult\n  }\n\n  // TODO: cleanup logging\n  // $: debug('json', json)\n  // $: debug('state', state)\n  // $: debug('selection', selection)\n\n  function handleEditKey() {\n    if (readOnly || !documentState.selection) {\n      return\n    }\n\n    updateSelection(createKeySelection(getFocusPath(documentState.selection), true))\n  }\n\n  function handleEditValue() {\n    if (readOnly || !documentState.selection) {\n      return\n    }\n\n    const path = getFocusPath(documentState.selection)\n    const value = getIn(json, path)\n    if (isObjectOrArray(value)) {\n      openJSONEditorModal(path, value)\n    } else {\n      updateSelection(createValueSelection(path, true))\n    }\n  }\n\n  function handleToggleEnforceString() {\n    if (readOnly || !isValueSelection(documentState.selection)) {\n      return\n    }\n\n    const path = getFocusPath(documentState.selection)\n    const pointer = compileJSONPointer(path)\n    const value = getIn(json, path)\n    const enforceString = !getEnforceString(value, documentState.enforceStringMap, pointer, parser)\n    const updatedValue = enforceString ? String(value) : stringConvert(String(value), parser)\n\n    debug('handleToggleEnforceString', { enforceString, value, updatedValue })\n\n    handlePatch(\n      [\n        {\n          op: 'replace',\n          path: pointer,\n          value: updatedValue\n        }\n      ],\n      (patchedJson, patchedState) => {\n        return {\n          state: setEnforceString(patchedState, pointer, enforceString)\n        }\n      }\n    )\n  }\n\n  export function acceptAutoRepair(): Content {\n    if (textIsRepaired && json !== undefined) {\n      handleReplaceJson(json)\n    }\n\n    return json !== undefined ? { json } : { text: text || '' }\n  }\n\n  async function handleCut(indent = true) {\n    await onCut({\n      json,\n      documentState,\n      indentation: indent ? indentation : undefined,\n      readOnly,\n      parser,\n      onPatch: handlePatch\n    })\n  }\n\n  async function handleCopy(indent = true) {\n    if (json === undefined) {\n      return\n    }\n\n    await onCopy({\n      json,\n      documentState,\n      indentation: indent ? indentation : undefined,\n      parser\n    })\n  }\n\n  function handlePaste(event: ClipboardEvent) {\n    event.preventDefault()\n\n    const clipboardText = event.clipboardData?.getData('text/plain') as string | undefined\n    if (clipboardText === undefined) {\n      return\n    }\n\n    onPaste({\n      clipboardText,\n      json,\n      selection: documentState.selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onChangeText: handleChangeText,\n      openRepairModal\n    })\n  }\n\n  function handlePasteFromMenu() {\n    open(\n      CopyPasteModal,\n      {},\n      {\n        ...SIMPLE_MODAL_OPTIONS,\n        styleWindow: {\n          width: '450px'\n        }\n      },\n      {\n        onClose: () => focus()\n      }\n    )\n  }\n\n  function openRepairModal(text: string, onApply: (repairedText: string) => void) {\n    open(\n      JSONRepairModal,\n      {\n        text,\n        onParse: (text: string) => parsePartialJson(text, (t) => parseAndRepair(t, parser)),\n        onRepair: repairPartialJson,\n        onApply\n      },\n      {\n        ...SIMPLE_MODAL_OPTIONS,\n        styleWindow: {\n          width: '600px',\n          height: '500px'\n        },\n        styleContent: {\n          padding: 0,\n          height: '100%'\n        }\n      },\n      {\n        onClose: () => focus()\n      }\n    )\n  }\n\n  function handleRemove() {\n    onRemove({\n      json,\n      text,\n      documentState,\n      keepSelection: false,\n      readOnly,\n      onChange,\n      onPatch: handlePatch\n    })\n  }\n\n  function handleDuplicate() {\n    if (\n      readOnly ||\n      json === undefined ||\n      !documentState.selection ||\n      !hasSelectionContents(documentState.selection) ||\n      isEmpty(getFocusPath(documentState.selection)) // root selected, cannot duplicate\n    ) {\n      return\n    }\n\n    debug('duplicate', { selection: documentState.selection })\n\n    const operations = duplicate(json, getSelectionPaths(json, documentState.selection))\n\n    handlePatch(operations)\n  }\n\n  function handleExtract() {\n    if (\n      readOnly ||\n      !documentState.selection ||\n      (!isMultiSelection(documentState.selection) && !isValueSelection(documentState.selection)) ||\n      isEmpty(getFocusPath(documentState.selection)) // root selected, cannot extract\n    ) {\n      return\n    }\n\n    debug('extract', { selection: documentState.selection })\n\n    const operations = extract(json, documentState.selection)\n\n    handlePatch(operations, (patchedJson, patchedState) => {\n      if (isObjectOrArray(patchedJson)) {\n        // expand extracted object/array\n        const path: JSONPath = []\n        return {\n          state: expandRecursive(patchedJson, patchedState, path)\n        }\n      }\n    })\n  }\n\n  function handleInsert(insertType: InsertType): void {\n    if (json === undefined) {\n      return\n    }\n\n    onInsert({\n      insertType,\n      selectInside: true,\n      refJsonEditor,\n      json,\n      selection: documentState.selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onReplaceJson: handleReplaceJson\n    })\n  }\n\n  function handleInsertFromContextMenu(type: 'value' | 'object' | 'array' | 'structure') {\n    if (isKeySelection(documentState.selection)) {\n      // in this case, we do not want to rename the key, but replace the property\n      updateSelection(createValueSelection(documentState.selection.path, false))\n    }\n\n    if (!documentState.selection) {\n      updateSelection(getInitialSelection(json, documentState))\n    }\n\n    handleInsert(type)\n  }\n\n  function handleConvert(type: 'value' | 'object' | 'array') {\n    if (readOnly || !documentState.selection) {\n      return\n    }\n\n    if (!canConvert(documentState.selection)) {\n      onError(new Error(`Cannot convert current selection to ${type}`))\n      return\n    }\n\n    try {\n      const path = getAnchorPath(documentState.selection)\n      const currentValue: unknown = getIn(json, path)\n      const convertedValue = convertValue(currentValue, type, parser)\n      if (convertedValue === currentValue) {\n        // no change, do nothing\n        return\n      }\n\n      const operations: JSONPatchDocument = [\n        { op: 'replace', path: compileJSONPointer(path), value: convertedValue }\n      ]\n\n      debug('handleConvert', { selection: documentState.selection, path, type, operations })\n\n      handlePatch(operations, (patchedJson, patchedState) => {\n        // expand converted object/array\n        return {\n          state: documentState.selection\n            ? expandRecursive(patchedJson, patchedState, getFocusPath(documentState.selection))\n            : documentState\n        }\n      })\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  function handleInsertBefore() {\n    if (!documentState.selection) {\n      return\n    }\n\n    const selectionBefore = getSelectionUp(json, documentState, false)\n    const parentPath = initial(getFocusPath(documentState.selection))\n\n    if (\n      selectionBefore &&\n      !isEmpty(getFocusPath(selectionBefore)) &&\n      isEqual(parentPath, initial(getFocusPath(selectionBefore)))\n    ) {\n      updateSelection(createAfterSelection(getFocusPath(selectionBefore)))\n    } else {\n      updateSelection(createInsideSelection(parentPath))\n    }\n\n    debug('insert before', { selection: documentState.selection, selectionBefore, parentPath })\n\n    tick().then(() => handleContextMenu())\n  }\n\n  function handleInsertAfter() {\n    if (!documentState.selection) {\n      return\n    }\n\n    const path = getEndPath(json, documentState.selection)\n\n    debug('insert after', path)\n\n    updateSelection(createAfterSelection(path))\n\n    tick().then(() => handleContextMenu())\n  }\n\n  async function handleInsertCharacter(char: string) {\n    await onInsertCharacter({\n      char,\n      selectInside: true,\n      refJsonEditor,\n      json,\n      selection: documentState.selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onReplaceJson: handleReplaceJson,\n      onSelect: updateSelection\n    })\n  }\n\n  function handleUndo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canUndo) {\n      return\n    }\n\n    const item = history.undo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.undo.patch ? immutableJSONPatch(json, item.undo.patch) : item.undo.json\n    documentState = item.undo.state\n    text = item.undo.text\n    textIsRepaired = item.undo.textIsRepaired\n    parseError = undefined\n\n    debug('undo', { item, json, documentState })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.undo.patch,\n            undo: item.redo.patch\n          }\n        : null\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (documentState.selection) {\n      scrollTo(getFocusPath(documentState.selection), false)\n    }\n  }\n\n  function handleRedo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canRedo) {\n      return\n    }\n\n    const item = history.redo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.redo.patch ? immutableJSONPatch(json, item.redo.patch) : item.redo.json\n    documentState = item.redo.state\n    text = item.redo.text\n    textIsRepaired = item.redo.textIsRepaired\n    parseError = undefined\n\n    debug('redo', { item, json, documentState })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.redo.patch,\n            undo: item.undo.patch\n          }\n        : null\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (documentState.selection) {\n      scrollTo(getFocusPath(documentState.selection), false)\n    }\n  }\n\n  function openSortModal(rootPath: JSONPath) {\n    if (readOnly || json === undefined) {\n      return\n    }\n\n    modalOpen = true\n\n    onSortModal({\n      id: sortModalId,\n      json,\n      rootPath,\n      onSort: async ({ operations }) => {\n        debug('onSort', rootPath, operations)\n\n        handlePatch(operations, (patchedJson, patchedState) => ({\n          // expand the newly replaced array and select it\n          state: {\n            ...expandRecursive(patchedJson, patchedState, rootPath),\n            selection: createValueSelection(rootPath, false)\n          }\n        }))\n      },\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    })\n  }\n\n  function handleSortSelection() {\n    if (!documentState.selection) {\n      return\n    }\n\n    const rootPath = findRootPath(json, documentState.selection)\n    openSortModal(rootPath)\n  }\n\n  function handleSortAll() {\n    const rootPath: JSONPath = []\n    openSortModal(rootPath)\n  }\n\n  /**\n   * This method is exposed via JSONEditor.transform\n   */\n  export function openTransformModal(options: TransformModalOptions) {\n    if (json === undefined) {\n      return\n    }\n\n    const { id, onTransform, onClose } = options\n    const rootPath = options.rootPath || []\n\n    modalOpen = true\n\n    onTransformModal({\n      id: id || transformModalId,\n      json,\n      rootPath,\n      onTransform: (operations) => {\n        if (onTransform) {\n          onTransform({\n            operations,\n            json,\n            transformedJson: immutableJSONPatch(json, operations)\n          })\n        } else {\n          debug('onTransform', rootPath, operations)\n\n          handlePatch(operations, (patchedJson, patchedState) => ({\n            // expand the newly replaced array and select it\n            state: {\n              ...expandRecursive(patchedJson, patchedState, rootPath),\n              selection: createValueSelection(rootPath, false)\n            }\n          }))\n        }\n      },\n      onClose: () => {\n        modalOpen = false\n        focus()\n        if (onClose) {\n          onClose()\n        }\n      }\n    })\n  }\n\n  function handleTransformSelection() {\n    if (!documentState.selection) {\n      return\n    }\n\n    const rootPath = findRootPath(json, documentState.selection)\n    openTransformModal({\n      rootPath\n    })\n  }\n\n  function handleTransformAll() {\n    openTransformModal({\n      rootPath: []\n    })\n  }\n\n  function openJSONEditorModal(path: JSONPath, value: unknown) {\n    debug('openJSONEditorModal', { path, value })\n\n    modalOpen = true\n\n    // open a popup where you can edit the nested object/array\n    onJSONEditorModal({\n      content: {\n        json: value\n      },\n      path,\n      onPatch: context.onPatch,\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    })\n  }\n\n  /**\n   * Scroll the window vertically to the node with given path.\n   * Expand the path when needed.\n   */\n  export async function scrollTo(path: JSONPath, scrollToWhenVisible = true): Promise<void> {\n    documentState = expandPath(json, documentState, path)\n    await tick() // await rerender (else the element we want to scroll to does not yet exist)\n\n    const elem = findElement(path)\n\n    debug('scrollTo', { path, elem, refContents })\n\n    if (!elem || !refContents) {\n      return Promise.resolve()\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    const elemRect = elem.getBoundingClientRect()\n    if (!scrollToWhenVisible) {\n      if (elemRect.bottom > viewPortRect.top && elemRect.top < viewPortRect.bottom) {\n        // element is fully or partially visible, don't scroll to it\n        return Promise.resolve()\n      }\n    }\n\n    const offset = -(viewPortRect.height / 4)\n\n    return new Promise<void>((resolve) => {\n      jump(elem, {\n        container: refContents,\n        offset,\n        duration: SCROLL_DURATION,\n        callback: () => resolve()\n      })\n    })\n  }\n\n  /**\n   * Find the DOM element of a given path.\n   * Note that the path can only be found when the node is expanded.\n   */\n  export function findElement(path: JSONPath): Element | null {\n    return refContents\n      ? refContents.querySelector(`div[data-path=\"${encodeDataPath(path)}\"]`)\n      : null\n  }\n\n  /**\n   * If given path is outside the visible viewport, scroll up/down.\n   * When the path is already in view, nothing is done\n   */\n  function scrollIntoView(path: JSONPath) {\n    const elem = findElement(path)\n\n    if (!elem || !refContents) {\n      return\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    const elemRect = elem.getBoundingClientRect()\n    const margin = 20\n    const elemHeight = isObjectOrArray(getIn(json, path))\n      ? margin // do not use real height when array or object\n      : elemRect.height\n\n    if (elemRect.top < viewPortRect.top + margin) {\n      // scroll down\n      jump(elem, {\n        container: refContents,\n        offset: -margin,\n        duration: 0\n      })\n    } else if (elemRect.top + elemHeight > viewPortRect.bottom - margin) {\n      // scroll up\n      jump(elem, {\n        container: refContents,\n        offset: -(viewPortRect.height - elemHeight - margin),\n        duration: 0\n      })\n    }\n  }\n\n  function emitOnChange(previousContent: Content, patchResult: JSONPatchResult | null) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (previousContent.json === undefined && previousContent?.text === undefined) {\n      // initialization -> do not fire an onChange event\n      return\n    }\n\n    // make sure we cannot send an invalid contents like having both\n    // json and text defined, or having none defined\n    if (text !== undefined) {\n      const content = { text, json: undefined }\n      onChange?.(content, previousContent, {\n        contentErrors: validate(),\n        patchResult\n      })\n    } else if (json !== undefined) {\n      const content = { text: undefined, json }\n      onChange?.(content, previousContent, {\n        contentErrors: validate(),\n        patchResult\n      })\n    }\n  }\n\n  function handlePatch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    if (readOnly) {\n      // this should never happen in practice\n      return {\n        json,\n        previousJson: json,\n        undo: [],\n        redo: []\n      }\n    }\n\n    debug('handlePatch', operations, afterPatch)\n\n    return patch(operations, afterPatch)\n  }\n\n  function handleReplaceJson(updatedJson: unknown, afterPatch?: AfterPatchCallback) {\n    const previousState = documentState\n    const previousJson = json\n    const previousText = text\n    const previousContent = { json, text }\n    const previousTextIsRepaired = textIsRepaired\n\n    const updatedState = expandWithCallback(json, documentState, [], expandMinimal)\n\n    const callback =\n      typeof afterPatch === 'function' ? afterPatch(updatedJson, updatedState) : undefined\n\n    json = callback && callback.json !== undefined ? callback.json : updatedJson\n    documentState = callback && callback.state !== undefined ? callback.state : updatedState\n    text = undefined\n    textIsRepaired = false\n    parseError = undefined\n\n    // make sure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // do _not_ return a patchResult ever.\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function handleChangeText(updatedText: string, afterPatch?: AfterPatchCallback) {\n    debug('handleChangeText')\n\n    const previousState = documentState\n    const previousJson = json\n    const previousText = text\n    const previousContent = { json, text }\n    const previousTextIsRepaired = textIsRepaired\n\n    try {\n      json = parseMemoizeOne(updatedText)\n      documentState = expandWithCallback(json, documentState, [], expandMinimal)\n      text = undefined\n      textIsRepaired = false\n      parseError = undefined\n    } catch (err) {\n      try {\n        json = parseMemoizeOne(jsonrepair(updatedText))\n        documentState = expandWithCallback(json, documentState, [], expandMinimal)\n        text = updatedText\n        textIsRepaired = true\n        parseError = undefined\n      } catch (repairError) {\n        // no valid JSON, will show empty document or invalid json\n        json = undefined\n        documentState = createDocumentState({ json, expand: expandMinimal })\n        text = updatedText\n        textIsRepaired = false\n        parseError =\n          text !== ''\n            ? normalizeJsonParseError(text, (err as Error).message || String(err))\n            : undefined\n      }\n    }\n\n    if (typeof afterPatch === 'function') {\n      const callback = afterPatch(json, documentState)\n\n      json = callback && callback.json ? callback.json : json\n      documentState = callback && callback.state ? callback.state : documentState\n    }\n\n    // ensure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // no JSON patch actions available in text mode\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  /**\n   * Toggle expanded state of a node\n   * @param path The path to be expanded\n   * @param expanded  True to expand, false to collapse\n   * @param [recursive=false]  Only applicable when expanding\n   */\n  function handleExpand(path: JSONPath, expanded: boolean, recursive = false): void {\n    debug('expand', { path, expanded, recursive })\n\n    if (expanded) {\n      if (recursive) {\n        documentState = expandWithCallback(json, documentState, path, expandAll)\n      } else {\n        documentState = expandSingleItem(documentState, path)\n      }\n    } else {\n      documentState = collapsePath(documentState, path)\n    }\n\n    if (documentState.selection && !expanded) {\n      // check whether the selection is still visible and not collapsed\n      if (isSelectionInsidePath(documentState.selection, path)) {\n        // remove selection when not visible anymore\n        updateSelection(null)\n      }\n    }\n\n    // set focus to the hidden input, so we can capture quick keys like Ctrl+X, Ctrl+C, Ctrl+V\n    focus()\n  }\n\n  function handleExpandAll() {\n    handleExpand([], true, true)\n  }\n\n  function handleCollapseAll() {\n    handleExpand([], false, true)\n  }\n\n  function openFind(findAndReplace: boolean): void {\n    debug('openFind', { findAndReplace })\n\n    showSearch = false\n    showReplace = false\n\n    tick().then(() => {\n      // trick to make sure the focus goes to the search box\n      showSearch = true\n      showReplace = findAndReplace\n    })\n  }\n\n  function handleExpandSection(path: JSONPath, section: Section) {\n    debug('handleExpandSection', path, section)\n\n    const pointer = compileJSONPointer(path)\n    documentState = expandSection(json, documentState, pointer, section)\n  }\n\n  function handlePasteJson(newPastedJson: PastedJson) {\n    debug('pasted json as text', newPastedJson)\n\n    pastedJson = newPastedJson\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    const keepAnchorPath = event.shiftKey\n    debug('keydown', { combo, key: event.key })\n\n    if (combo === 'Ctrl+X') {\n      // cut formatted\n      event.preventDefault()\n      handleCut(true)\n    }\n    if (combo === 'Ctrl+Shift+X') {\n      // cut compact\n      event.preventDefault()\n      handleCut(false)\n    }\n    if (combo === 'Ctrl+C') {\n      // copy formatted\n      event.preventDefault()\n      handleCopy(true)\n    }\n    if (combo === 'Ctrl+Shift+C') {\n      // copy compact\n      event.preventDefault()\n      handleCopy(false)\n    }\n    // Note: Ctrl+V (paste) is handled by the on:paste event\n\n    if (combo === 'Ctrl+D') {\n      event.preventDefault()\n      handleDuplicate()\n    }\n    if (combo === 'Delete' || combo === 'Backspace') {\n      event.preventDefault()\n      handleRemove()\n    }\n    if (combo === 'Insert') {\n      event.preventDefault()\n      handleInsert('structure')\n    }\n    if (combo === 'Ctrl+A') {\n      event.preventDefault()\n      updateSelection(selectAll())\n    }\n\n    if (combo === 'Ctrl+Q') {\n      handleContextMenu(event)\n    }\n\n    if (combo === 'ArrowUp' || combo === 'Shift+ArrowUp') {\n      event.preventDefault()\n\n      const newSelection = documentState.selection\n        ? getSelectionUp(json, documentState, keepAnchorPath) || documentState.selection\n        : getInitialSelection(json, documentState)\n\n      updateSelection(newSelection)\n      scrollIntoView(getFocusPath(newSelection))\n    }\n    if (combo === 'ArrowDown' || combo === 'Shift+ArrowDown') {\n      event.preventDefault()\n\n      const newSelection = documentState.selection\n        ? getSelectionDown(json, documentState, keepAnchorPath) || documentState.selection\n        : getInitialSelection(json, documentState)\n\n      updateSelection(newSelection)\n      scrollIntoView(getFocusPath(newSelection))\n    }\n    if (combo === 'ArrowLeft' || combo === 'Shift+ArrowLeft') {\n      event.preventDefault()\n\n      const newSelection = documentState.selection\n        ? getSelectionLeft(json, documentState, keepAnchorPath, !readOnly) ||\n          documentState.selection\n        : getInitialSelection(json, documentState)\n\n      updateSelection(newSelection)\n      scrollIntoView(getFocusPath(newSelection))\n    }\n    if (combo === 'ArrowRight' || combo === 'Shift+ArrowRight') {\n      event.preventDefault()\n\n      const newSelection =\n        documentState.selection && json !== undefined\n          ? getSelectionRight(json, documentState, keepAnchorPath, !readOnly) ||\n            documentState.selection\n          : getInitialSelection(json, documentState)\n\n      updateSelection(newSelection)\n      scrollIntoView(getFocusPath(newSelection))\n    }\n\n    if (combo === 'Enter' && documentState.selection) {\n      // when the selection consists of a single Array item, change selection to editing its value\n      if (isMultiSelectionWithOneItem(documentState.selection)) {\n        const path = documentState.selection.focusPath\n        const parent = getIn(json, initial(path))\n        if (Array.isArray(parent)) {\n          // change into selection of the value\n          updateSelection(createValueSelection(path, false))\n        }\n      }\n\n      if (isKeySelection(documentState.selection)) {\n        // go to key edit mode\n        event.preventDefault()\n        updateSelection({ ...documentState.selection, edit: true })\n      }\n\n      if (isValueSelection(documentState.selection)) {\n        event.preventDefault()\n\n        const value = getIn(json, documentState.selection.path)\n        if (isObjectOrArray(value)) {\n          // expand object/array\n          handleExpand(documentState.selection.path, true)\n        } else {\n          // go to value edit mode\n          updateSelection({ ...documentState.selection, edit: true })\n        }\n      }\n    }\n\n    const normalizedCombo = combo.replace(/^Shift\\+/, '') // replace 'Shift+A' with 'A'\n    if (normalizedCombo.length === 1 && documentState.selection) {\n      // a regular key like a, A, _, etc is entered.\n      // Replace selected contents with a new value having this first character as text\n      event.preventDefault()\n      handleInsertCharacter(event.key)\n      return\n    }\n\n    if (\n      combo === 'Enter' &&\n      (isAfterSelection(documentState.selection) || isInsideSelection(documentState.selection))\n    ) {\n      // Enter on an insert area -> open the area in edit mode\n      event.preventDefault()\n      handleInsertCharacter('')\n      return\n    }\n\n    if (combo === 'Ctrl+Enter' && isValueSelection(documentState.selection)) {\n      const value = getIn(json, documentState.selection.path)\n\n      if (isUrl(value)) {\n        // open url in new page\n        window.open(String(value), '_blank')\n      }\n    }\n\n    if (combo === 'Escape' && documentState.selection) {\n      event.preventDefault()\n      updateSelection(null)\n    }\n\n    if (combo === 'Ctrl+F') {\n      event.preventDefault()\n      openFind(false)\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      openFind(true)\n    }\n\n    if (combo === 'Ctrl+Z') {\n      event.preventDefault()\n      handleUndo()\n    }\n\n    if (combo === 'Ctrl+Shift+Z') {\n      event.preventDefault()\n      handleRedo()\n    }\n  }\n\n  function handleMouseDown(event: Event) {\n    debug('handleMouseDown', event)\n\n    const target = event.target as HTMLElement\n\n    if (!isChildOfNodeName(target, 'BUTTON') && !target.isContentEditable) {\n      // for example when clicking on the empty area in the main menu\n      focus()\n\n      if (!documentState.selection && json === undefined && (text === '' || text === undefined)) {\n        createDefaultSelection()\n      }\n    }\n  }\n\n  function openContextMenu({\n    anchor,\n    left,\n    top,\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n    showTip\n  }: AbsolutePopupOptions) {\n    const props = {\n      json,\n      documentState: documentState,\n      parser,\n      showTip,\n\n      onEditKey: handleEditKey,\n      onEditValue: handleEditValue,\n      onToggleEnforceString: handleToggleEnforceString,\n\n      onCut: handleCut,\n      onCopy: handleCopy,\n      onPaste: handlePasteFromMenu,\n\n      onRemove: handleRemove,\n      onDuplicate: handleDuplicate,\n      onExtract: handleExtract,\n\n      onInsertBefore: handleInsertBefore,\n      onInsert: handleInsertFromContextMenu,\n      onConvert: handleConvert,\n      onInsertAfter: handleInsertAfter,\n\n      onSort: handleSortSelection,\n      onTransform: handleTransformSelection,\n\n      onRenderContextMenu,\n      onCloseContextMenu: function () {\n        closeAbsolutePopup(popupId)\n        focus()\n      }\n    }\n\n    modalOpen = true\n\n    const popupId = openAbsolutePopup(TreeContextMenu, props, {\n      left,\n      top,\n      offsetTop,\n      offsetLeft,\n      width,\n      height,\n      anchor,\n      closeOnOuterClick: true,\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    })\n  }\n\n  function handleContextMenu(event?: Event) {\n    if (readOnly || isEditingSelection(documentState.selection)) {\n      return\n    }\n\n    if (event) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n\n    if (event && event.type === 'contextmenu' && event.target !== refHiddenInput) {\n      // right mouse click to open context menu\n      openContextMenu({\n        left: (event as MouseEvent).clientX,\n        top: (event as MouseEvent).clientY,\n        width: CONTEXT_MENU_WIDTH,\n        height: CONTEXT_MENU_HEIGHT,\n        showTip: false\n      })\n    } else {\n      // type === 'keydown' (from the quick key Ctrl+Q)\n      // or target is hidden input -> context menu button on keyboard\n      const anchor = refContents?.querySelector('.jse-context-menu-pointer.jse-selected')\n      if (anchor) {\n        openContextMenu({\n          anchor,\n          offsetTop: 2,\n          width: CONTEXT_MENU_WIDTH,\n          height: CONTEXT_MENU_HEIGHT,\n          showTip: false\n        })\n      } else {\n        // fallback on just displaying the TreeContextMenu top left\n        const rect = refContents?.getBoundingClientRect()\n        if (rect) {\n          openContextMenu({\n            top: rect.top + 2,\n            left: rect.left + 2,\n            width: CONTEXT_MENU_WIDTH,\n            height: CONTEXT_MENU_HEIGHT,\n            showTip: false\n          })\n        }\n      }\n    }\n\n    return false\n  }\n\n  function handleContextMenuFromTreeMenu(event: MouseEvent) {\n    if (readOnly) {\n      return\n    }\n\n    openContextMenu({\n      anchor: findParentWithNodeName(event.target as HTMLElement, 'BUTTON'),\n      offsetTop: 0,\n      width: CONTEXT_MENU_WIDTH,\n      height: CONTEXT_MENU_HEIGHT,\n      showTip: true\n    })\n  }\n\n  async function handleParsePastedJson() {\n    debug('apply pasted json', pastedJson)\n    if (!pastedJson) {\n      return\n    }\n\n    const { path, contents } = pastedJson\n    pastedJson = undefined\n\n    // exit edit mode\n    const refEditableDiv = refContents?.querySelector('.jse-editable-div') || null\n    if (isEditableDivRef(refEditableDiv)) {\n      refEditableDiv.cancel()\n    }\n\n    // replace the value with the JSON object/array\n    const operations: JSONPatchDocument = [\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: contents\n      }\n    ]\n\n    handlePatch(operations, (patchedJson, patchedState) => {\n      return {\n        state: expandRecursive(patchedJson, patchedState, path)\n      }\n    })\n\n    // TODO: get rid of the setTimeout here\n    setTimeout(focus)\n  }\n\n  function handleClearPastedJson() {\n    debug('clear pasted json')\n    pastedJson = undefined\n    focus()\n  }\n\n  function handleRequestRepair() {\n    onChangeMode(Mode.text)\n  }\n\n  function handleNavigationBarSelect(newSelection: JSONSelection) {\n    updateSelection(newSelection)\n\n    focus()\n    scrollTo(getFocusPath(newSelection))\n  }\n\n  export function focus() {\n    debug('focus')\n    // with just .focus(), sometimes the input doesn't react on onpaste events\n    // in Chrome when having a large document open and then doing cut/paste.\n    // Calling both .focus() and .select() did solve this issue.\n    if (refHiddenInput) {\n      refHiddenInput.focus()\n      refHiddenInput.select()\n    }\n  }\n\n  function handleWindowMouseDown(event: MouseEvent & { currentTarget: EventTarget & Window }) {\n    const outsideEditor = !isChildOf(\n      event.target as Element,\n      (element) => element === refJsonEditor\n    )\n    if (outsideEditor) {\n      if (isEditingSelection(documentState.selection)) {\n        debug('click outside the editor, stop edit mode')\n        updateSelection((selection) => {\n          if (isKeySelection(selection)) {\n            return { ...selection, edit: false }\n          } else if (isValueSelection(selection)) {\n            return { ...selection, edit: false }\n          } else {\n            return selection\n          }\n        })\n\n        if (hasFocus && refHiddenInput) {\n          refHiddenInput.focus()\n          refHiddenInput.blur()\n        }\n\n        debug('blur (outside editor)')\n        if (refHiddenInput) {\n          refHiddenInput.blur()\n        }\n      }\n    }\n  }\n\n  function findNextInside(path: JSONPath): JSONSelection | null {\n    return getSelectionNextInside(json, documentState, path)\n  }\n\n  $: autoScrollHandler = refContents ? createAutoScrollHandler(refContents) : undefined\n\n  function handleDrag(event: MouseEvent) {\n    if (autoScrollHandler) {\n      autoScrollHandler.onDrag(event)\n    }\n  }\n\n  function handleDragEnd() {\n    if (autoScrollHandler) {\n      autoScrollHandler.onDragEnd()\n    }\n  }\n\n  // Note that we want the context to change as little as possible since it forces all nodes to re-render,\n  // it should only change when a config option like readOnly or onClassName is changed\n  let context: TreeModeContext\n  $: context = {\n    readOnly,\n    parser,\n    normalization,\n    getJson,\n    getDocumentState,\n    findElement,\n    findNextInside,\n    focus,\n    onPatch: handlePatch,\n    onInsert: handleInsert,\n    onExpand: handleExpand,\n    onSelect: updateSelection,\n    onFind: openFind,\n    onExpandSection: handleExpandSection,\n    onPasteJson: handlePasteJson,\n    onRenderValue,\n    onContextMenu: openContextMenu,\n    onClassName: onClassName || (() => undefined),\n    onDrag: handleDrag,\n    onDragEnd: handleDragEnd\n  }\n\n  $: debug('context changed', context)\n</script>\n\n<svelte:window on:mousedown={handleWindowMouseDown} />\n\n<div\n  role=\"tree\"\n  tabindex=\"-1\"\n  class=\"jse-tree-mode\"\n  class:no-main-menu={!mainMenuBar}\n  on:keydown={handleKeyDown}\n  on:mousedown={handleMouseDown}\n  on:contextmenu={handleContextMenu}\n  bind:this={refJsonEditor}\n>\n  {#if mainMenuBar}\n    <TreeMenu\n      {json}\n      selection={documentState.selection}\n      {readOnly}\n      {historyState}\n      bind:showSearch\n      onExpandAll={handleExpandAll}\n      onCollapseAll={handleCollapseAll}\n      onUndo={handleUndo}\n      onRedo={handleRedo}\n      onSort={handleSortAll}\n      onTransform={handleTransformAll}\n      onContextMenu={handleContextMenuFromTreeMenu}\n      onCopy={handleCopy}\n      {onRenderMenu}\n    />\n  {/if}\n\n  {#if navigationBar}\n    <NavigationBar\n      {json}\n      selection={documentState.selection}\n      onSelect={handleNavigationBarSelect}\n      {onError}\n      {pathParser}\n    />\n  {/if}\n\n  {#if !isSSR}\n    <label class=\"jse-hidden-input-label\">\n      <input\n        type=\"text\"\n        readonly={true}\n        tabindex=\"-1\"\n        class=\"jse-hidden-input\"\n        bind:this={refHiddenInput}\n        on:paste={handlePaste}\n      />\n    </label>\n    {#if json === undefined}\n      {#if text === '' || text === undefined}\n        <Welcome\n          {readOnly}\n          onCreateObject={() => {\n            focus()\n            handleInsertCharacter('{')\n          }}\n          onCreateArray={() => {\n            focus()\n            handleInsertCharacter('[')\n          }}\n          onClick={() => {\n            // FIXME: this is a workaround for the editor not putting the focus on refHiddenInput\n            //  when clicking in the welcome screen (only occurs in 'tree' mode,\n            //  so you cannot paste a document from clipboard.\n            focus()\n          }}\n        />\n      {:else}\n        <Message\n          type=\"error\"\n          message=\"The loaded JSON document is invalid and could not be repaired automatically.\"\n          actions={!readOnly\n            ? [\n                {\n                  icon: faCode,\n                  text: 'Repair manually',\n                  title: 'Open the document in \"code\" mode and repair it manually',\n                  onClick: handleRequestRepair\n                }\n              ]\n            : []}\n        />\n        <JSONPreview {text} {json} {indentation} {parser} />\n      {/if}\n    {:else}\n      <div class=\"jse-search-box-container\">\n        <SearchBox\n          show={showSearch}\n          resultCount={searchResult?.items?.length || 0}\n          activeIndex={searchResult?.activeIndex || 0}\n          {showReplace}\n          {searching}\n          {readOnly}\n          onChange={handleSearchText}\n          onNext={handleNextSearchResult}\n          onPrevious={handlePreviousSearchResult}\n          onReplace={handleReplace}\n          onReplaceAll={handleReplaceAll}\n          onClose={clearSearchResult}\n        />\n      </div>\n      <div class=\"jse-contents\" data-jsoneditor-scrollable-contents={true} bind:this={refContents}>\n        <JSONNode\n          value={json}\n          path={[]}\n          expandedMap={documentState.expandedMap}\n          enforceStringMap={documentState.enforceStringMap}\n          visibleSectionsMap={documentState.visibleSectionsMap}\n          {validationErrorsMap}\n          searchResultItemsMap={searchResult?.itemsMap}\n          selection={documentState.selection}\n          {context}\n          onDragSelectionStart={noop}\n        />\n      </div>\n\n      {#if pastedJson}\n        <Message\n          type=\"info\"\n          message={`You pasted a JSON ${\n            Array.isArray(pastedJson.contents) ? 'array' : 'object'\n          } as text`}\n          actions={[\n            {\n              icon: faWrench,\n              text: 'Paste as JSON instead',\n              title: 'Replace the value with the pasted JSON',\n              // We use mousedown here instead of click: this message pops up\n              // whilst the user is editing a value. When clicking this button,\n              // the actual value is applied and the event is not propagated\n              // and an onClick on this button never happens.\n              onMouseDown: handleParsePastedJson\n            },\n            {\n              text: 'Leave as is',\n              title: 'Keep the JSON embedded in the value',\n              onClick: handleClearPastedJson\n            }\n          ]}\n        />\n      {/if}\n\n      {#if textIsRepaired}\n        <Message\n          type=\"success\"\n          message=\"The loaded JSON document was invalid but is successfully repaired.\"\n          actions={!readOnly\n            ? [\n                {\n                  icon: faCheck,\n                  text: 'Ok',\n                  title: 'Accept the repaired document',\n                  onClick: acceptAutoRepair\n                },\n                {\n                  icon: faCode,\n                  text: 'Repair manually instead',\n                  title: 'Leave the document unchanged and repair it manually instead',\n                  onClick: handleRequestRepair\n                }\n              ]\n            : []}\n          onClose={focus}\n        />\n      {/if}\n\n      <ValidationErrorsOverview {validationErrors} selectError={handleSelectValidationError} />\n    {/if}\n  {:else}\n    <div class=\"jse-contents\">\n      <div class=\"jse-loading-space\" />\n      <div class=\"jse-loading\">loading...</div>\n    </div>\n  {/if}\n</div>\n\n<style src=\"./TreeMode.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { uniqueId } from '../../utils/uniqueId.js'\n  import { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons'\n  import { debounce, isEmpty, noop } from 'lodash-es'\n  import { getContext } from 'svelte'\n  import Icon from 'svelte-awesome'\n  import { DEBOUNCE_DELAY } from '../../constants.js'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, getIn } from 'immutable-json-patch'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import { transformModalStates, transformModalStateShared } from './transformModalStates.js'\n  import TransformWizard from './TransformWizard.svelte'\n  import TransformModalHeader from './TransformModalHeader.svelte'\n  import AbsolutePopup from './popup/AbsolutePopup.svelte'\n  import { createDebug } from '$lib/utils/debug.js'\n  import TreeMode from '../modes/treemode/TreeMode.svelte'\n  import type {\n    Content,\n    JSONParser,\n    JSONPathParser,\n    OnChangeQueryLanguage,\n    OnClassName,\n    OnPatch,\n    OnRenderContextMenuInternal,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    QueryLanguage,\n    QueryLanguageOptions\n  } from '$lib/types.js'\n  import { onEscape } from '$lib/actions/onEscape.js'\n  import type { Context } from 'svelte-simple-modal'\n\n  const debug = createDebug('jsoneditor:TransformModal')\n\n  export let id = 'transform-modal-' + uniqueId()\n  export let json: unknown\n  export let rootPath: JSONPath = []\n\n  export let indentation: number | string\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n\n  export let queryLanguages: QueryLanguage[]\n  export let queryLanguageId: string\n  export let onChangeQueryLanguage: OnChangeQueryLanguage\n\n  export let onRenderValue: OnRenderValue\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onClassName: OnClassName\n\n  export let onTransform: OnPatch\n\n  let selectedJson: unknown | undefined\n  $: selectedJson = getIn(json, rootPath)\n  let selectedContent: Content\n  $: selectedContent = selectedJson ? { json: selectedJson } : { text: '' }\n\n  const { close } = getContext<Context>('simple-modal')\n\n  const stateId = `${id}:${compileJSONPointer(rootPath)}`\n\n  const state = transformModalStates[stateId] || {}\n\n  // showWizard is not stored inside a stateId\n  let showWizard = transformModalStateShared.showWizard !== false\n  let showOriginal = transformModalStateShared.showOriginal !== false\n\n  let queryOptions = state.queryOptions || {}\n  let query =\n    queryLanguageId === state.queryLanguageId && state.query\n      ? state.query\n      : getSelectedQueryLanguage(queryLanguageId).createQuery(json, state.queryOptions || {})\n  let isManual = state.isManual || false\n\n  let previewError: string | undefined = undefined\n  let previewContent: Content = { text: '' }\n\n  function getSelectedQueryLanguage(queryLanguageId: string): QueryLanguage {\n    return queryLanguages.find((item) => item.id === queryLanguageId) || queryLanguages[0]\n  }\n\n  function updateQueryByWizard(newQueryOptions: QueryLanguageOptions) {\n    queryOptions = newQueryOptions\n    query = getSelectedQueryLanguage(queryLanguageId).createQuery(json, newQueryOptions)\n    isManual = false\n\n    debug('updateQueryByWizard', { queryOptions, query, isManual })\n  }\n\n  function handleChangeQuery(event: Event) {\n    query = (event.target as HTMLTextAreaElement).value\n    isManual = true\n    debug('handleChangeQuery', { query, isManual })\n  }\n\n  function previewTransform(json: unknown | undefined, query: string) {\n    if (json === undefined) {\n      previewContent = { text: '' }\n      previewError = 'Error: No JSON'\n      return\n    }\n\n    try {\n      debug('previewTransform', {\n        query\n      })\n\n      const jsonTransformed = getSelectedQueryLanguage(queryLanguageId).executeQuery(\n        json,\n        query,\n        parser\n      )\n\n      previewContent = { json: jsonTransformed }\n      previewError = undefined\n    } catch (err) {\n      previewContent = { text: '' }\n      previewError = String(err)\n    }\n  }\n\n  const previewTransformDebounced = debounce(previewTransform, DEBOUNCE_DELAY)\n\n  $: {\n    previewTransformDebounced(selectedJson, query)\n  }\n\n  $: {\n    // remember the selected values for the next time we open the SortModal\n    // just in memory, not persisted\n    transformModalStates[stateId] = {\n      queryOptions,\n      query,\n      queryLanguageId,\n      isManual\n    }\n\n    debug('store state in memory', stateId, transformModalStates[stateId])\n  }\n\n  function handleTransform() {\n    if (selectedJson === undefined) {\n      previewContent = { text: '' }\n      previewError = 'Error: No JSON'\n      return\n    }\n\n    try {\n      debug('handleTransform', { query })\n      const jsonTransformed = getSelectedQueryLanguage(queryLanguageId).executeQuery(\n        selectedJson,\n        query,\n        parser\n      )\n\n      onTransform([\n        {\n          op: 'replace',\n          path: compileJSONPointer(rootPath),\n          value: jsonTransformed\n        }\n      ])\n\n      close()\n    } catch (err) {\n      // this should never occur since we can only press the Transform\n      // button when creating a preview was successful\n      console.error(err)\n      previewContent = { text: '' }\n      previewError = String(err)\n    }\n  }\n\n  function toggleShowWizard() {\n    showWizard = !showWizard\n\n    // not stored inside a stateId\n    transformModalStateShared.showWizard = showWizard\n  }\n\n  function toggleShowOriginal() {\n    showOriginal = !showOriginal\n\n    // not stored inside a stateId\n    transformModalStateShared.showOriginal = showOriginal\n  }\n\n  function focus(element: HTMLElement) {\n    element.focus()\n  }\n\n  function handleChangeQueryLanguage(newQueryLanguageId: string) {\n    debug('handleChangeQueryLanguage', newQueryLanguageId)\n    queryLanguageId = newQueryLanguageId\n    onChangeQueryLanguage(newQueryLanguageId)\n\n    const newSelectedQueryLanguage = getSelectedQueryLanguage(queryLanguageId)\n    query = newSelectedQueryLanguage.createQuery(json, queryOptions)\n    isManual = false\n  }\n</script>\n\n<div class=\"jse-modal jse-transform\" use:onEscape={close}>\n  <AbsolutePopup>\n    <TransformModalHeader\n      {queryLanguages}\n      {queryLanguageId}\n      onChangeQueryLanguage={handleChangeQueryLanguage}\n    />\n    <div class=\"jse-modal-contents\">\n      <div class=\"jse-main-contents\">\n        <div class=\"jse-query-contents\">\n          <div class=\"jse-label\">\n            <div class=\"jse-label-inner\">Language</div>\n          </div>\n          <div class=\"jse-description\">\n            <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n            {@html getSelectedQueryLanguage(queryLanguageId).description}\n          </div>\n\n          <div class=\"jse-label\">\n            <div class=\"jse-label-inner\">Path</div>\n          </div>\n          <input\n            class=\"jse-path\"\n            type=\"text\"\n            readonly\n            title=\"Selected path\"\n            value={!isEmpty(rootPath) ? stringifyJSONPath(rootPath) : '(document root)'}\n          />\n\n          <div class=\"jse-label\">\n            <div class=\"jse-label-inner\">\n              <button type=\"button\" on:click={toggleShowWizard}>\n                <Icon data={showWizard ? faCaretDown : faCaretRight} />\n                Wizard\n              </button>\n            </div>\n          </div>\n          {#if showWizard}\n            {#if Array.isArray(selectedJson)}\n              <TransformWizard {queryOptions} json={selectedJson} onChange={updateQueryByWizard} />\n            {:else}\n              (Only available for arrays, not for objects)\n            {/if}\n          {/if}\n\n          <div class=\"jse-label\">\n            <div class=\"jse-label-inner\">Query</div>\n          </div>\n          <textarea class=\"jse-query\" spellcheck=\"false\" on:input={handleChangeQuery}\n            >{query}</textarea\n          >\n        </div>\n        <div class=\"jse-data-contents\" class:jse-hide-original-data={!showOriginal}>\n          <div class=\"jse-original-data\" class:jse-hide={!showOriginal}>\n            <div class=\"jse-label\">\n              <div class=\"jse-label-inner\">\n                <button type=\"button\" on:click={toggleShowOriginal}>\n                  <Icon data={showOriginal ? faCaretDown : faCaretRight} />\n                  Original\n                </button>\n              </div>\n            </div>\n            {#if showOriginal}\n              <TreeMode\n                externalContent={selectedContent}\n                externalSelection={null}\n                readOnly={true}\n                mainMenuBar={false}\n                navigationBar={false}\n                {indentation}\n                {escapeControlCharacters}\n                {escapeUnicodeCharacters}\n                {parser}\n                {parseMemoizeOne}\n                {onRenderValue}\n                {onRenderMenu}\n                {onRenderContextMenu}\n                onError={console.error}\n                onChange={noop}\n                onChangeMode={noop}\n                onSelect={noop}\n                onFocus={noop}\n                onBlur={noop}\n                onSortModal={noop}\n                onTransformModal={noop}\n                onJSONEditorModal={noop}\n                {onClassName}\n                validator={null}\n                {validationParser}\n                {pathParser}\n              />\n            {/if}\n          </div>\n          <div class=\"jse-preview-data\">\n            <div class=\"jse-label\">\n              <div class=\"jse-label-inner\">Preview</div>\n            </div>\n            {#if !previewError}\n              <TreeMode\n                externalContent={previewContent}\n                externalSelection={null}\n                readOnly={true}\n                mainMenuBar={false}\n                navigationBar={false}\n                {indentation}\n                {escapeControlCharacters}\n                {escapeUnicodeCharacters}\n                {parser}\n                {parseMemoizeOne}\n                {onRenderValue}\n                {onRenderMenu}\n                {onRenderContextMenu}\n                onError={console.error}\n                onChange={noop}\n                onChangeMode={noop}\n                onSelect={noop}\n                onFocus={noop}\n                onBlur={noop}\n                onSortModal={noop}\n                onTransformModal={noop}\n                onJSONEditorModal={noop}\n                {onClassName}\n                validator={null}\n                {validationParser}\n                {pathParser}\n              />\n            {:else}\n              <div class=\"jse-preview jse-error\">\n                {previewError}\n              </div>\n            {/if}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"jse-actions\">\n        <button\n          type=\"button\"\n          class=\"jse-primary\"\n          on:click={handleTransform}\n          use:focus\n          disabled={!!previewError}\n        >\n          Transform\n        </button>\n      </div>\n    </div>\n  </AbsolutePopup>\n</div>\n\n<style src=\"./TransformModal.scss\"></style>\n","import type { NumberOption, PathOption } from '$lib/types.js'\n\nexport interface SortModalState {\n  selectedProperty: PathOption\n  selectedDirection: NumberOption\n}\n\nexport const sortModalStates: Record<string, SortModalState> = {}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { isEmpty } from 'lodash-es'\n  import { getContext } from 'svelte'\n  import Select from 'svelte-select'\n  import Header from './Header.svelte'\n  import { getNestedPaths } from '$lib/utils/arrayUtils.js'\n  import { pathToOption, stringifyJSONPath } from '../../utils/pathUtils.js'\n  import { sortJson } from '$lib/logic/sort.js'\n  import { sortModalStates } from './sortModalStates'\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, getIn } from 'immutable-json-patch'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type { OnSort } from '$lib/types.js'\n  import { onEscape } from '$lib/actions/onEscape.js'\n  import type { Context } from 'svelte-simple-modal'\n\n  const debug = createDebug('jsoneditor:SortModal')\n\n  export let id: string\n  export let json: unknown // the whole document\n  export let rootPath: JSONPath\n  export let onSort: OnSort\n\n  const { close } = getContext<Context>('simple-modal')\n\n  const stateId = `${id}:${compileJSONPointer(rootPath)}`\n  const selectedJson = getIn(json, rootPath)\n  $: jsonIsArray = Array.isArray(selectedJson)\n  $: paths = jsonIsArray && selectedJson !== undefined ? getNestedPaths(selectedJson) : undefined\n  $: properties = paths ? paths.map(pathToOption) : undefined\n\n  const asc = {\n    value: 1,\n    label: 'ascending'\n  }\n  const desc = {\n    value: -1,\n    label: 'descending'\n  }\n  const directions = [asc, desc]\n\n  let selectedProperty = sortModalStates[stateId]?.selectedProperty\n  let selectedDirection = sortModalStates[stateId]?.selectedDirection || asc\n  let sortError: string | undefined = undefined\n\n  $: {\n    // remember the selected values for the next time we open the SortModal\n    // just in memory, not persisted\n    sortModalStates[stateId] = {\n      selectedProperty,\n      selectedDirection\n    }\n\n    debug('store state in memory', stateId, sortModalStates[stateId])\n  }\n\n  function handleSort() {\n    try {\n      sortError = undefined\n\n      const itemPath: JSONPath = selectedProperty?.value || properties?.[0]?.value || []\n      const direction = selectedDirection?.value\n      const operations = sortJson(json, rootPath, itemPath, direction)\n      onSort({ operations, rootPath, itemPath, direction })\n\n      close()\n    } catch (err) {\n      sortError = String(err)\n    }\n  }\n\n  function focus(element: HTMLElement) {\n    element.focus()\n  }\n</script>\n\n<div class=\"jse-modal jse-sort\" use:onEscape={close}>\n  <Header title={jsonIsArray ? 'Sort array items' : 'Sort object keys'} />\n\n  <div class=\"jse-modal-contents\">\n    <table>\n      <colgroup>\n        <col width=\"25%\" />\n        <col width=\"75%\" />\n      </colgroup>\n      <tbody>\n        <tr>\n          <th>Path</th>\n          <td>\n            <input\n              class=\"jse-path\"\n              type=\"text\"\n              readonly\n              title=\"Selected path\"\n              value={!isEmpty(rootPath) ? stringifyJSONPath(rootPath) : '(document root)'}\n            />\n          </td>\n        </tr>\n        {#if jsonIsArray && ((properties && properties?.length > 1) || selectedProperty === undefined)}\n          <tr>\n            <th>Property</th>\n            <td>\n              <Select showChevron items={properties} bind:value={selectedProperty} />\n            </td>\n          </tr>\n        {/if}\n        <tr>\n          <th>Direction</th>\n          <td>\n            <Select\n              showChevron\n              clearable={false}\n              items={directions}\n              bind:value={selectedDirection}\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"jse-space\">\n      {#if sortError}\n        <div class=\"jse-error\">\n          {sortError}\n        </div>\n      {/if}\n    </div>\n\n    <div class=\"jse-actions\">\n      <button\n        type=\"button\"\n        class=\"jse-primary\"\n        on:click={handleSort}\n        use:focus\n        disabled={jsonIsArray && properties && properties?.length > 1 ? !selectedProperty : false}\n      >\n        Sort\n      </button>\n    </div>\n  </div>\n</div>\n\n<style src=\"./SortModal.scss\"></style>\n","export function noop() {\n  return undefined\n}\n","/**\n * Return a human readable document size\n * For example formatSize(7570718) outputs '7.6 MB'\n * @param size\n * @param kilo Is 1000 by default, you can specify 1024 if you\n *                             want the output in KiB\n * @return Returns a human readable size\n */\nexport function formatSize(size: number, kilo = 1000): string {\n  if (size < 0.9 * kilo) {\n    return size.toFixed() + ' B'\n  }\n\n  const KB = size / kilo\n  if (KB < 0.9 * kilo) {\n    return KB.toFixed(1) + ' KB'\n  }\n\n  const MB = KB / kilo\n  if (MB < 0.9 * kilo) {\n    return MB.toFixed(1) + ' MB'\n  }\n\n  const GB = MB / kilo\n  if (GB < 0.9 * kilo) {\n    return GB.toFixed(1) + ' GB'\n  }\n\n  const TB = GB / kilo\n  return TB.toFixed(1) + ' TB'\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faFilter,\n    faRedo,\n    faSearch,\n    faSortAmountDownAlt,\n    faUndo\n  } from '@fortawesome/free-solid-svg-icons'\n  import { faJSONEditorCompact, faJSONEditorFormat } from '$lib/img/customFontawesomeIcons.js'\n  import Menu from '../../../controls/Menu.svelte'\n  import type { MenuItem, OnRenderMenuInternal } from '$lib/types'\n\n  export let readOnly = false\n  export let onFormat: () => boolean\n  export let onCompact: () => boolean\n  export let onSort: () => void\n  export let onTransform: () => void\n  export let onToggleSearch: () => void\n  export let onUndo: () => void\n  export let onRedo: () => void\n  export let canUndo: boolean\n  export let canRedo: boolean\n  export let canFormat: boolean\n  export let canCompact: boolean\n  export let canSort: boolean\n  export let canTransform: boolean\n  export let onRenderMenu: OnRenderMenuInternal\n\n  const searchItem: MenuItem = {\n    type: 'button',\n    icon: faSearch,\n    title: 'Search (Ctrl+F)',\n    className: 'jse-search',\n    onClick: onToggleSearch\n  }\n\n  let defaultItems: MenuItem[]\n  $: defaultItems = !readOnly\n    ? [\n        {\n          type: 'button',\n          icon: faJSONEditorFormat,\n          title: 'Format JSON: add proper indentation and new lines (Ctrl+I)',\n          className: 'jse-format',\n          onClick: onFormat,\n          disabled: readOnly || !canFormat\n        },\n        {\n          type: 'button',\n          icon: faJSONEditorCompact,\n          title: 'Compact JSON: remove all white spacing and new lines (Ctrl+Shift+I)',\n          className: 'jse-compact',\n          onClick: onCompact,\n          disabled: readOnly || !canCompact\n        },\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faSortAmountDownAlt,\n          title: 'Sort',\n          className: 'jse-sort',\n          onClick: onSort,\n          disabled: readOnly || !canSort\n        },\n        {\n          type: 'button',\n          icon: faFilter,\n          title: 'Transform contents (filter, sort, project)',\n          className: 'jse-transform',\n          onClick: onTransform,\n          disabled: readOnly || !canTransform\n        },\n        searchItem,\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faUndo,\n          title: 'Undo (Ctrl+Z)',\n          className: 'jse-undo',\n          onClick: onUndo,\n          disabled: !canUndo\n        },\n        {\n          type: 'button',\n          icon: faRedo,\n          title: 'Redo (Ctrl+Shift+Z)',\n          className: 'jse-redo',\n          onClick: onRedo,\n          disabled: !canRedo\n        },\n        {\n          type: 'space'\n        }\n      ]\n    : [\n        searchItem,\n        {\n          type: 'space'\n        }\n      ]\n\n  $: items = onRenderMenu(defaultItems) || defaultItems\n</script>\n\n<Menu {items} />\n","<script lang=\"ts\">\n  import type { EditorState, Line } from '@codemirror/state'\n\n  export let editorState: EditorState | undefined\n\n  let pos: number | undefined\n  $: pos = editorState?.selection?.main?.head\n\n  let line: Line | undefined\n  $: line = pos ? editorState?.doc?.lineAt(pos) : undefined\n\n  let lineNumber: number | undefined\n  $: lineNumber = line ? line.number : undefined\n\n  let columnNumber: number | undefined\n  $: columnNumber = line !== undefined && pos !== undefined ? pos - line.from + 1 : undefined\n\n  let charCount: number | undefined\n  $: charCount = editorState?.selection?.ranges?.reduce((count, range) => {\n    return count + range.to - range.from\n  }, 0)\n</script>\n\n<div class=\"jse-status-bar\">\n  {#if lineNumber !== undefined}\n    <div class=\"jse-status-bar-info\">Line: {lineNumber}</div>\n  {/if}\n\n  {#if columnNumber !== undefined}\n    <div class=\"jse-status-bar-info\">Column: {columnNumber}</div>\n  {/if}\n\n  {#if charCount !== undefined && charCount > 0}\n    <div class=\"jse-status-bar-info\">Selection: {charCount} characters</div>\n  {/if}\n</div>\n\n<style src=\"./StatusBar.scss\"></style>\n","/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node.parent; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traveral. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (this.nextSibling())\n                    break;\n                if (!depth)\n                    return;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context—a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this.node, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    let buffer = node.context.buffer;\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let base = cursor.tree, i = base.children.indexOf(buffer);\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    /**\n    Define a new tag. If `parent` is given, the tag is treated as a\n    sub-tag of that parent, and\n    [highlighters](#highlight.tagHighlighter) that don't mention\n    this tag will try to fall back to the parent tag (or grandparent\n    tag, etc).\n    */\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Mode.Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Mode.Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Mode.Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Mode.Opaque */; }\n    get inherit() { return this.mode == 1 /* Mode.Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Mode.Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter). Often, the higher-level\n[`highlightCode`](#highlight.highlightCode) function is easier to\nuse.\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\n/**\nHighlight the given tree with the given highlighter, calling\n`putText` for every piece of text, either with a set of classes or\nwith the empty string when unstyled, and `putBreak` for every line\nbreak.\n*/\nfunction highlightCode(code, tree, highlighter, putText, putBreak, from = 0, to = code.length) {\n    let pos = from;\n    function writeTo(p, classes) {\n        if (p <= pos)\n            return;\n        for (let text = code.slice(pos, p), i = 0;;) {\n            let nextBreak = text.indexOf(\"\\n\", i);\n            let upto = nextBreak < 0 ? text.length : nextBreak;\n            if (upto > i)\n                putText(text.slice(i, upto), classes);\n            if (nextBreak < 0)\n                break;\n            putBreak();\n            i = nextBreak + 1;\n        }\n        pos = p;\n    }\n    highlightTree(tree, highlighter, (from, to, classes) => {\n        writeTo(from, \"\");\n        writeTo(to, classes);\n    }, from, to);\n    writeTo(to, \"\");\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Mode.Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(Math.max(from, start), cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), \"\", innerHighlighters);\n                    this.startSpan(Math.min(to, pos), cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            if (mounted)\n                inheritedClass = \"\";\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier()\n};\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightCode, highlightTree, styleTags, tagHighlighter, tags };\n","import { HighlightStyle, syntaxHighlighting } from '@codemirror/language'\nimport { tags } from '@lezer/highlight'\n\nconst highlightStyle = HighlightStyle.define([\n  { tag: tags.propertyName, color: 'var(--internal-key-color)' }, // keys\n  { tag: tags.number, color: 'var(--internal-value-color-number)' },\n  { tag: tags.bool, color: 'var(--internal-value-color-boolean)' },\n  { tag: tags.string, color: 'var(--internal-value-color-string)' },\n  { tag: tags.keyword, color: 'var(--internal-value-color-null)' } // null\n])\n\nexport const highlighter = syntaxHighlighting(highlightStyle)\n\n// TODO: remove workaround when not needed anymore\n// Workaround for the error \"CodeMirror plugin crashed: TypeError: tags3 is undefined\"\n// thrown when using the json() language from '@codemirror/lang-json'\n//\n// Note that a plain CodeSandbox with parcel and code mirror v6.0.0,\n// so it is maybe related to Vite\n//\n// See https://discuss.codemirror.net/t/highlighting-that-seems-ignored-in-cm6/4320/15\nconst originalStyle = highlightStyle.style\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// noinspection JSConstantReassignment\nhighlightStyle.style = (tags) => originalStyle(tags || [])\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faExclamationTriangle,\n    faEye,\n    faTimes,\n    faWrench\n  } from '@fortawesome/free-solid-svg-icons'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { immutableJSONPatch, revertJSONPatch } from 'immutable-json-patch'\n  import { jsonrepair } from 'jsonrepair'\n  import { debounce, isEqual, uniqueId } from 'lodash-es'\n  import { onDestroy, onMount, tick } from 'svelte'\n  import {\n    JSON_STATUS_INVALID,\n    JSON_STATUS_REPAIRABLE,\n    JSON_STATUS_VALID,\n    MAX_CHARACTERS_TEXT_PREVIEW,\n    MAX_DOCUMENT_SIZE_TEXT_MODE,\n    TEXT_MODE_ONCHANGE_DELAY\n  } from '$lib/constants.js'\n  import {\n    activeElementIsChildOf,\n    createNormalizationFunctions,\n    getWindow\n  } from '$lib/utils/domUtils.js'\n  import { formatSize } from '$lib/utils/fileUtils.js'\n  import { findTextLocation, getText, needsFormatting } from '$lib/utils/jsonUtils.js'\n  import { createFocusTracker } from '../../controls/createFocusTracker.js'\n  import Message from '../../controls/Message.svelte'\n  import ValidationErrorsOverview from '../../controls/ValidationErrorsOverview.svelte'\n  import TextMenu from './menu/TextMenu.svelte'\n  import { Compartment, EditorSelection, EditorState, type Extension } from '@codemirror/state'\n  import {\n    crosshairCursor,\n    drawSelection,\n    dropCursor,\n    EditorView,\n    highlightActiveLine,\n    highlightActiveLineGutter,\n    highlightSpecialChars,\n    keymap,\n    lineNumbers,\n    rectangularSelection\n  } from '@codemirror/view'\n  import {\n    defaultKeymap,\n    history,\n    historyKeymap,\n    indentWithTab,\n    redo,\n    redoDepth,\n    undo,\n    undoDepth\n  } from '@codemirror/commands'\n  import type { Diagnostic } from '@codemirror/lint'\n  import { linter, lintGutter, lintKeymap } from '@codemirror/lint'\n  import { json as jsonLang } from '@codemirror/lang-json'\n  import {\n    bracketMatching,\n    defaultHighlightStyle,\n    foldGutter,\n    foldKeymap,\n    indentOnInput,\n    indentUnit,\n    syntaxHighlighting\n  } from '@codemirror/language'\n  import {\n    closeSearchPanel,\n    highlightSelectionMatches,\n    openSearchPanel,\n    search,\n    searchKeymap\n  } from '@codemirror/search'\n  import {\n    autocompletion,\n    closeBrackets,\n    closeBracketsKeymap,\n    completionKeymap\n  } from '@codemirror/autocomplete'\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  import jsonSourceMap from 'json-source-map'\n  import StatusBar from './StatusBar.svelte'\n  import { highlighter } from './codemirror/codemirror-theme.js'\n  import type {\n    Content,\n    ContentErrors,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnError,\n    OnFocus,\n    OnRenderMenuInternal,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    ParseError,\n    RichValidationError,\n    TransformModalOptions,\n    ValidationError,\n    Validator\n  } from '$lib/types.js'\n  import { Mode, SelectionType, ValidationSeverity } from '$lib/types.js'\n  import { isContentParseError, isContentValidationErrors } from '$lib/typeguards.js'\n  import memoizeOne from 'memoize-one'\n  import { validateText } from '$lib/logic/validation.js'\n  import { truncate } from '$lib/utils/stringUtils.js'\n  import { faJSONEditorFormat } from '$lib/img/customFontawesomeIcons.js'\n  import { indentationMarkers } from '@replit/codemirror-indentation-markers'\n  import { isTextSelection } from '$lib/logic/selection.js'\n  import { wrappedLineIndent } from 'codemirror-wrapped-line-indent'\n\n  export let readOnly: boolean\n  export let mainMenuBar: boolean\n  export let statusBar: boolean\n  export let askToFormat: boolean\n  export let externalContent: Content\n  export let externalSelection: JSONEditorSelection | null\n  export let indentation: number | string\n  export let tabSize: number\n  export let escapeUnicodeCharacters: boolean\n  export let parser: JSONParser\n  export let validator: Validator | null\n  export let validationParser: JSONParser\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onError: OnError\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n\n  const debug = createDebug('jsoneditor:TextMode')\n\n  const formatCompactKeyBinding = {\n    key: 'Mod-i',\n    run: handleFormat,\n    shift: handleCompact,\n    preventDefault: true\n  }\n\n  const isSSR = typeof window === 'undefined'\n  debug('isSSR:', isSSR)\n\n  let codeMirrorRef: HTMLDivElement\n  let domTextMode: HTMLDivElement\n  let codeMirrorView: EditorView\n  let editorState: EditorState\n\n  let onChangeDisabled = false\n  let acceptTooLarge = false\n\n  let validationErrors: ValidationError[] = []\n  const linterCompartment = new Compartment()\n  const readOnlyCompartment = new Compartment()\n  const indentUnitCompartment = new Compartment()\n  const tabSizeCompartment = new Compartment()\n  const themeCompartment = new Compartment()\n\n  let content: Content = externalContent\n  let text = getText(content, indentation, parser) // text is just a cached version of content.text or parsed content.json\n\n  $: normalization = createNormalizationFunctions({\n    escapeControlCharacters: false,\n    escapeUnicodeCharacters\n  })\n\n  $: setCodeMirrorContent(externalContent)\n  $: applyExternalSelection(externalSelection)\n  $: updateLinter(validator)\n  $: updateIndentation(indentation)\n  $: updateTabSize(tabSize)\n  $: updateReadOnly(readOnly)\n\n  // force updating the text when escapeUnicodeCharacters changes\n  let previousEscapeUnicodeCharacters = escapeUnicodeCharacters\n  $: {\n    if (previousEscapeUnicodeCharacters !== escapeUnicodeCharacters) {\n      previousEscapeUnicodeCharacters = escapeUnicodeCharacters\n      forceUpdateText()\n    }\n  }\n\n  onMount(async () => {\n    if (isSSR) {\n      return\n    }\n\n    try {\n      codeMirrorView = createCodeMirrorView({\n        target: codeMirrorRef,\n        initialText: !disableTextEditor(text, acceptTooLarge)\n          ? normalization.escapeValue(text)\n          : '',\n        readOnly,\n        indentation\n      })\n    } catch (err) {\n      // TODO: report error to the user\n      console.error(err)\n    }\n  })\n\n  onDestroy(() => {\n    if (codeMirrorView) {\n      debug('Destroy CodeMirror editor')\n      codeMirrorView.destroy()\n    }\n  })\n\n  let canUndo = false\n  let canRedo = false\n\n  const sortModalId = uniqueId()\n  const transformModalId = uniqueId()\n\n  export function focus() {\n    if (codeMirrorView) {\n      debug('focus')\n      codeMirrorView.focus()\n    }\n  }\n\n  // modalOpen is true when one of the modals is open.\n  // This is used to track whether the editor still has focus\n  let modalOpen = false\n\n  onDestroy(() => {\n    flush()\n  })\n\n  createFocusTracker({\n    onMount,\n    onDestroy,\n    getWindow: () => getWindow(domTextMode),\n    hasFocus: () => (modalOpen && document.hasFocus()) || activeElementIsChildOf(domTextMode),\n    onFocus,\n    onBlur: () => {\n      flush()\n      onBlur()\n    }\n  })\n\n  export function patch(operations: JSONPatchDocument): JSONPatchResult {\n    debug('patch', operations)\n\n    const previousJson = parser.parse(text)\n    const updatedJson = immutableJSONPatch(previousJson, operations)\n    const undo = revertJSONPatch(previousJson, operations)\n    setCodeMirrorContent({\n      text: parser.stringify(updatedJson, null, indentation) as string\n    })\n\n    return {\n      json: updatedJson,\n      previousJson,\n      undo,\n      redo: operations\n    }\n  }\n\n  function handleFormat(): boolean {\n    debug('format')\n\n    if (readOnly) {\n      return false\n    }\n\n    try {\n      const json = parser.parse(text)\n      setCodeMirrorContent({\n        text: parser.stringify(json, null, indentation) as string\n      })\n      askToFormat = true\n\n      return true\n    } catch (err) {\n      onError(err as Error)\n    }\n\n    return false\n  }\n\n  function handleCompact(): boolean {\n    debug('compact')\n\n    if (readOnly) {\n      return false\n    }\n\n    try {\n      const json = parser.parse(text)\n      setCodeMirrorContent({\n        text: parser.stringify(json) as string\n      })\n      askToFormat = false\n\n      return true\n    } catch (err) {\n      onError(err as Error)\n    }\n\n    return false\n  }\n\n  function handleRepair() {\n    debug('repair')\n\n    if (readOnly) {\n      return\n    }\n\n    try {\n      setCodeMirrorContent({\n        text: jsonrepair(text)\n      })\n      jsonStatus = JSON_STATUS_VALID\n      jsonParseError = null\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  function handleSort() {\n    if (readOnly) {\n      return\n    }\n\n    try {\n      const json = parser.parse(text)\n\n      modalOpen = true\n\n      onSortModal({\n        id: sortModalId,\n        json,\n        rootPath: [],\n        onSort: async ({ operations }) => {\n          debug('onSort', operations)\n          patch(operations)\n        },\n        onClose: () => {\n          modalOpen = false\n          focus()\n        }\n      })\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  /**\n   * This method is exposed via JSONEditor.transform\n   */\n  export function openTransformModal({\n    id,\n    rootPath,\n    onTransform,\n    onClose\n  }: TransformModalOptions) {\n    try {\n      const json = parser.parse(text)\n\n      modalOpen = true\n\n      onTransformModal({\n        id: id || transformModalId,\n        json,\n        rootPath: rootPath || [],\n        onTransform: (operations) => {\n          if (onTransform) {\n            onTransform({\n              operations,\n              json,\n              transformedJson: immutableJSONPatch(json, operations)\n            })\n          } else {\n            debug('onTransform', operations)\n            patch(operations)\n          }\n        },\n        onClose: () => {\n          modalOpen = false\n          focus()\n          if (onClose) {\n            onClose()\n          }\n        }\n      })\n    } catch (err) {\n      onError(err as Error)\n    }\n  }\n\n  function handleTransform() {\n    if (readOnly) {\n      return\n    }\n\n    openTransformModal({\n      rootPath: []\n    })\n  }\n\n  function handleToggleSearch() {\n    if (codeMirrorView) {\n      // TODO: figure out the proper way to detect whether the search panel is open\n      if (codeMirrorRef && codeMirrorRef.querySelector('.cm-search')) {\n        closeSearchPanel(codeMirrorView)\n      } else {\n        openSearchPanel(codeMirrorView)\n      }\n    }\n  }\n\n  function handleUndo() {\n    if (readOnly) {\n      return\n    }\n\n    if (codeMirrorView) {\n      undo(codeMirrorView)\n      focus()\n    }\n  }\n\n  function handleRedo() {\n    if (readOnly) {\n      return\n    }\n\n    if (codeMirrorView) {\n      redo(codeMirrorView)\n      focus()\n    }\n  }\n\n  function handleAcceptTooLarge() {\n    acceptTooLarge = true\n    setCodeMirrorContent(externalContent, true)\n  }\n\n  function handleSwitchToTreeMode() {\n    onChangeMode(Mode.tree)\n  }\n\n  function cancelLoadTooLarge() {\n    // copy the latest contents of the text editor again into text\n    onChangeCodeMirrorValue()\n  }\n\n  function handleSelectValidationError(validationError: ValidationError) {\n    debug('select validation error', validationError)\n\n    const { from, to } = toRichValidationError(validationError)\n    if (from === null || to === null) {\n      return\n    }\n\n    // we take \"to\" as head, not as anchor, because the scrollIntoView will\n    // move to the head, and when a large whole object is selected as a whole,\n    // we want to scroll to the start of the object and not the end\n    setSelection(from, to)\n\n    focus()\n  }\n\n  function handleSelectParseError(parseError: ParseError) {\n    debug('select parse error', parseError)\n\n    const richParseError = toRichParseError(parseError, false)\n    const from = richParseError.from != null ? richParseError.from : 0\n    const to = richParseError.to != null ? richParseError.to : 0\n\n    // we take \"to\" as head, not as anchor, because the scrollIntoView will\n    // move to the head, and when a large whole object is selected as a whole,\n    // we want to scroll to the start of the object and not the end\n    setSelection(from, to)\n\n    focus()\n  }\n\n  function setSelection(anchor: number, head: number) {\n    debug('setSelection', { anchor, head })\n\n    if (codeMirrorView) {\n      codeMirrorView.dispatch(\n        codeMirrorView.state.update({\n          selection: { anchor, head },\n          scrollIntoView: true\n        })\n      )\n    }\n  }\n\n  function handleDoubleClick(event: MouseEvent, view: EditorView) {\n    // When the user double-clicked right from a bracket [ or {,\n    // select the contents of the array or object\n    if (view.state.selection.ranges.length === 1) {\n      const range = view.state.selection.ranges[0]\n      const selectedText = text.slice(range.from, range.to)\n      if (selectedText === '{' || selectedText === '[') {\n        const jsmap = jsonSourceMap.parse(text)\n        const path = Object.keys(jsmap.pointers).find((path) => {\n          const pointer = jsmap.pointers[path]\n          return pointer.value?.pos === range.from\n        })\n        const pointer = jsmap.pointers[path]\n\n        if (path && pointer && pointer.value && pointer.valueEnd) {\n          debug('pointer found, selecting inner contents of path:', path, pointer)\n          const anchor = pointer.value.pos + 1\n          const head = pointer.valueEnd.pos - 1\n          setSelection(anchor, head)\n        }\n      }\n    }\n  }\n\n  function createLinter() {\n    return linter(linterCallback, { delay: TEXT_MODE_ONCHANGE_DELAY })\n  }\n\n  function createCodeMirrorView({\n    target,\n    initialText,\n    readOnly,\n    indentation\n  }: {\n    target: HTMLDivElement\n    initialText: string\n    readOnly: boolean\n    indentation: number | string\n  }): EditorView {\n    debug('Create CodeMirror editor', { readOnly, indentation })\n\n    const state = EditorState.create({\n      doc: initialText,\n      selection: toCodeMirrorSelection(externalSelection),\n      extensions: [\n        keymap.of([indentWithTab, formatCompactKeyBinding]),\n        linterCompartment.of(createLinter()),\n        lintGutter(),\n        lineNumbers(),\n        highlightActiveLineGutter(),\n        highlightSpecialChars(),\n        history(),\n        foldGutter(),\n        drawSelection(),\n        dropCursor(),\n        EditorState.allowMultipleSelections.of(true),\n        indentOnInput(),\n        syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n        bracketMatching(),\n        closeBrackets(),\n        autocompletion(),\n        rectangularSelection(),\n        crosshairCursor(),\n        highlightActiveLine(),\n        highlightSelectionMatches(),\n        keymap.of([\n          ...closeBracketsKeymap,\n          ...defaultKeymap,\n          ...searchKeymap,\n          ...historyKeymap,\n          ...foldKeymap,\n          ...completionKeymap,\n          ...lintKeymap\n        ]),\n        highlighter,\n        indentationMarkers({ hideFirstIndent: true }),\n        EditorView.domEventHandlers({\n          dblclick: handleDoubleClick\n        }),\n        EditorView.updateListener.of((update) => {\n          editorState = update.state\n\n          if (update.docChanged) {\n            onChangeCodeMirrorValueDebounced()\n          } else if (update.selectionSet) {\n            // note that emitOnSelect is invoked in onChangeCodeMirrorValue too,\n            // right after firing onChange. Hence, the else if here, we do not want to fire it twice.\n            emitOnSelect()\n          }\n        }),\n        jsonLang(),\n        search({\n          top: true\n        }),\n        readOnlyCompartment.of(EditorState.readOnly.of(readOnly)),\n        tabSizeCompartment.of(EditorState.tabSize.of(tabSize)),\n        indentUnitCompartment.of(createIndentUnit(indentation)),\n        themeCompartment.of(EditorView.theme({}, { dark: hasDarkTheme() })),\n        EditorView.lineWrapping,\n        wrappedLineIndent\n      ]\n    })\n\n    codeMirrorView = new EditorView({\n      state,\n      parent: target\n    })\n\n    return codeMirrorView\n  }\n\n  function getCodeMirrorValue() {\n    return codeMirrorView ? normalization.unescapeValue(codeMirrorView.state.doc.toString()) : ''\n  }\n\n  function hasDarkTheme() {\n    return codeMirrorRef\n      ? getComputedStyle(codeMirrorRef).getPropertyValue('--jse-theme').includes('dark')\n      : false\n  }\n\n  function toRichValidationError(validationError: ValidationError): RichValidationError {\n    const { path, message } = validationError\n    const { line, column, from, to } = findTextLocation(normalization.escapeValue(text), path)\n\n    return {\n      path,\n      line,\n      column,\n      from,\n      to,\n      message,\n      severity: ValidationSeverity.warning,\n      actions: []\n    }\n  }\n\n  function toRichParseError(parseError: ParseError, isRepairable: boolean): RichValidationError {\n    const { line, column, position, message } = parseError\n\n    return {\n      path: [] as JSONPath,\n      line,\n      column,\n      from: position,\n      to: position,\n      severity: ValidationSeverity.error,\n      message,\n      actions:\n        isRepairable && !readOnly\n          ? [\n              {\n                name: 'Auto repair',\n                apply: () => handleRepair()\n              }\n            ]\n          : null\n    }\n  }\n\n  function toDiagnostic(error: RichValidationError): Diagnostic {\n    return {\n      from: error.from || 0,\n      to: error.to || 0,\n      message: error.message || '',\n      actions: error.actions as Diagnostic['actions'],\n      severity: error.severity\n    }\n  }\n\n  function setCodeMirrorContent(newContent: Content, forceUpdate = false) {\n    const newText = getText(newContent, indentation, parser)\n    const isChanged = !isEqual(newContent, content)\n    const previousContent = content\n    content = newContent\n    text = newText\n\n    debug('setCodeMirrorContent', { isChanged, forceUpdate })\n\n    if (!codeMirrorView || (!isChanged && !forceUpdate)) {\n      return\n    }\n\n    if (!disableTextEditor(text, acceptTooLarge)) {\n      // keep state\n      // to reset state: codeMirrorView.setState(EditorState.create({doc: text, extensions: ...}))\n      codeMirrorView.dispatch({\n        changes: {\n          from: 0,\n          to: codeMirrorView.state.doc.length,\n          insert: normalization.escapeValue(text)\n        }\n      })\n    }\n\n    updateCanUndoRedo()\n    if (isChanged) {\n      emitOnChange(content, previousContent)\n    }\n  }\n\n  function applyExternalSelection(externalSelection: JSONEditorSelection | null) {\n    if (!isTextSelection(externalSelection)) {\n      return\n    }\n\n    const selection = toCodeMirrorSelection(externalSelection)\n    if (codeMirrorView && selection && (!editorState || !editorState.selection.eq(selection))) {\n      debug('applyExternalSelection', selection)\n\n      // note that we cannot clear the selection (we could maybe set the cursor to 0 but that's not really what we want)\n      codeMirrorView.dispatch({ selection })\n    }\n  }\n\n  function toCodeMirrorSelection(\n    selection: JSONEditorSelection | null\n  ): EditorSelection | undefined {\n    return isTextSelection(selection) ? EditorSelection.fromJSON(selection) : undefined\n  }\n\n  /**\n   * Force refreshing the editor, for example after changing the font size\n   * to update the positioning of the line numbers in the gutter\n   */\n  export async function refresh(): Promise<void> {\n    debug('refresh')\n\n    // update the theme (light/dark), but also, as a side effect,\n    // refresh the font size of the line numbers in the gutter\n    await updateTheme()\n  }\n\n  function forceUpdateText() {\n    debug('forceUpdateText', { escapeUnicodeCharacters })\n\n    if (codeMirrorView) {\n      codeMirrorView.dispatch({\n        changes: {\n          from: 0,\n          to: codeMirrorView.state.doc.length,\n          insert: normalization.escapeValue(text)\n        }\n      })\n    }\n  }\n\n  function onChangeCodeMirrorValue() {\n    if (onChangeDisabled || !codeMirrorView) {\n      return\n    }\n\n    const codeMirrorText = getCodeMirrorValue()\n\n    const isChanged = codeMirrorText !== text\n    debug('onChangeCodeMirrorValue', { isChanged })\n    if (!isChanged) {\n      return\n    }\n\n    const previousContent = content\n    text = codeMirrorText\n    content = { text }\n\n    updateCanUndoRedo()\n    emitOnChange(content, previousContent)\n\n    // We emit OnSelect on the next tick to cater for the case where\n    // the user changes the content directly inside the OnChange callback.\n    // This change will be dispatched by Svelte on the next tick. Before\n    // that tick, emitOnSelect would be fired based on the \"old\" contents,\n    // which may be out of range when the replacement by the user is shorter.\n    tick().then(emitOnSelect)\n  }\n\n  function updateLinter(validator: Validator | null) {\n    debug('updateLinter', validator)\n\n    if (!codeMirrorView) {\n      return\n    }\n\n    codeMirrorView.dispatch({\n      effects: linterCompartment.reconfigure(createLinter())\n    })\n  }\n\n  function updateIndentation(indentation: number | string) {\n    if (codeMirrorView) {\n      debug('updateIndentation', indentation)\n\n      codeMirrorView.dispatch({\n        effects: indentUnitCompartment.reconfigure(createIndentUnit(indentation))\n      })\n    }\n  }\n\n  function updateTabSize(tabSize: number) {\n    if (codeMirrorView) {\n      debug('updateTabSize', tabSize)\n\n      codeMirrorView.dispatch({\n        effects: tabSizeCompartment.reconfigure(EditorState.tabSize.of(tabSize))\n      })\n    }\n  }\n\n  function updateReadOnly(readOnly: boolean) {\n    if (codeMirrorView) {\n      debug('updateReadOnly', readOnly)\n\n      codeMirrorView.dispatch({\n        effects: [readOnlyCompartment.reconfigure(EditorState.readOnly.of(readOnly))]\n      })\n    }\n  }\n\n  async function updateTheme(): Promise<void> {\n    // we check the theme on the next tick, to make sure the page\n    // is re-rendered with (possibly) changed CSS variables\n    await tick()\n\n    if (codeMirrorView) {\n      const dark = hasDarkTheme()\n      debug('updateTheme', { dark })\n\n      codeMirrorView.dispatch({\n        effects: [themeCompartment.reconfigure(EditorView.theme({}, { dark }))]\n      })\n    }\n  }\n\n  function createIndentUnit(indentation: number | string): Extension {\n    return indentUnit.of(typeof indentation === 'number' ? ' '.repeat(indentation) : indentation)\n  }\n\n  function updateCanUndoRedo() {\n    canUndo = undoDepth(codeMirrorView.state) > 0\n    canRedo = redoDepth(codeMirrorView.state) > 0\n\n    debug({ canUndo, canRedo })\n  }\n\n  // debounce the input: when pressing Enter at the end of a line, two change\n  // events are fired: one with the new Return character, and a second with\n  // indentation added on the new line. This causes a race condition when used\n  // for example in React. Debouncing the onChange events also results in not\n  // firing a change event with every character that a user types, but only as\n  // soon as the user stops typing.\n  const onChangeCodeMirrorValueDebounced = debounce(\n    onChangeCodeMirrorValue,\n    TEXT_MODE_ONCHANGE_DELAY\n  )\n\n  function flush() {\n    onChangeCodeMirrorValueDebounced.flush()\n  }\n\n  function emitOnChange(content: Content, previousContent: Content) {\n    if (onChange) {\n      onChange(content, previousContent, {\n        contentErrors: validate(),\n        patchResult: null\n      })\n    }\n  }\n\n  function emitOnSelect() {\n    onSelect({\n      type: SelectionType.text,\n      ...editorState.selection.toJSON()\n    })\n  }\n\n  function disableTextEditor(text: string, acceptTooLarge: boolean): boolean {\n    const tooLarge = text ? text.length > MAX_DOCUMENT_SIZE_TEXT_MODE : false\n    return tooLarge && !acceptTooLarge\n  }\n\n  let jsonStatus = JSON_STATUS_VALID\n\n  let jsonParseError: ParseError | null = null\n\n  function linterCallback(): Diagnostic[] {\n    if (disableTextEditor(text, acceptTooLarge)) {\n      return []\n    }\n\n    const contentErrors = validate()\n\n    if (isContentParseError(contentErrors)) {\n      const { parseError, isRepairable } = contentErrors\n\n      return [toDiagnostic(toRichParseError(parseError, isRepairable))]\n    }\n\n    if (isContentValidationErrors(contentErrors)) {\n      return contentErrors.validationErrors.map(toRichValidationError).map(toDiagnostic)\n    }\n\n    return []\n  }\n\n  export function validate(): ContentErrors | null {\n    debug('validate:start')\n\n    flush()\n\n    const contentErrors = memoizedValidateText(\n      normalization.escapeValue(text),\n      validator,\n      parser,\n      validationParser\n    )\n\n    if (isContentParseError(contentErrors)) {\n      jsonStatus = contentErrors.isRepairable ? JSON_STATUS_REPAIRABLE : JSON_STATUS_INVALID\n      jsonParseError = contentErrors.parseError\n      validationErrors = []\n    } else {\n      jsonStatus = JSON_STATUS_VALID\n      jsonParseError = null\n      validationErrors = contentErrors?.validationErrors || []\n    }\n\n    debug('validate:end')\n\n    return contentErrors\n  }\n\n  // because onChange returns the validation errors and there is also a separate listener,\n  // we would execute validation twice. Memoizing the last result solves this.\n  const memoizedValidateText = memoizeOne(validateText)\n\n  function handleShowMe() {\n    if (jsonParseError) {\n      handleSelectParseError(jsonParseError)\n    }\n  }\n\n  const repairActionShowMe = {\n    icon: faEye,\n    text: 'Show me',\n    title: 'Move to the parse error location',\n    onClick: handleShowMe\n  }\n\n  $: repairActions =\n    jsonStatus === JSON_STATUS_REPAIRABLE && !readOnly\n      ? [\n          {\n            icon: faWrench,\n            text: 'Auto repair',\n            title: 'Automatically repair JSON',\n            onClick: handleRepair\n          },\n          repairActionShowMe\n        ]\n      : [repairActionShowMe]\n</script>\n\n<div class=\"jse-text-mode\" class:no-main-menu={!mainMenuBar} bind:this={domTextMode}>\n  {#if mainMenuBar}\n    {@const isNewDocument = text.length === 0}\n\n    <TextMenu\n      {readOnly}\n      onFormat={handleFormat}\n      onCompact={handleCompact}\n      onSort={handleSort}\n      onTransform={handleTransform}\n      onToggleSearch={handleToggleSearch}\n      onUndo={handleUndo}\n      onRedo={handleRedo}\n      canFormat={!isNewDocument}\n      canCompact={!isNewDocument}\n      canSort={!isNewDocument}\n      canTransform={!isNewDocument}\n      {canUndo}\n      {canRedo}\n      {onRenderMenu}\n    />\n  {/if}\n\n  {#if !isSSR}\n    {@const editorDisabled = disableTextEditor(text, acceptTooLarge)}\n\n    <div class=\"jse-contents\" class:jse-hidden={editorDisabled} bind:this={codeMirrorRef} />\n\n    {#if editorDisabled}\n      <Message\n        icon={faExclamationTriangle}\n        type=\"error\"\n        message={`The JSON document is larger than ${formatSize(\n          MAX_DOCUMENT_SIZE_TEXT_MODE,\n          1024\n        )}, ` +\n          `and may crash your browser when loading it in text mode. Actual size: ${formatSize(\n            text.length,\n            1024\n          )}.`}\n        actions={[\n          {\n            text: 'Open anyway',\n            title: 'Open the document in text mode. This may freeze or crash your browser.',\n            onClick: handleAcceptTooLarge\n          },\n          {\n            text: 'Open in tree mode',\n            title: 'Open the document in tree mode. Tree mode can handle large documents.',\n            onClick: handleSwitchToTreeMode\n          },\n          {\n            text: 'Cancel',\n            title: 'Cancel opening this large document.',\n            onClick: cancelLoadTooLarge\n          }\n        ]}\n        onClose={focus}\n      />\n\n      <div class=\"jse-contents jse-preview\">\n        {truncate(text || '', MAX_CHARACTERS_TEXT_PREVIEW)}\n      </div>\n    {/if}\n\n    {#if !editorDisabled}\n      {#if statusBar}\n        <StatusBar {editorState} />\n      {/if}\n\n      {#if jsonParseError}\n        <Message\n          type=\"error\"\n          icon={faExclamationTriangle}\n          message={jsonParseError.message}\n          actions={repairActions}\n          onClick={handleShowMe}\n          onClose={focus}\n        />\n      {/if}\n\n      {#if !jsonParseError && askToFormat && needsFormatting(text)}\n        <Message\n          type=\"success\"\n          message=\"Do you want to format the JSON?\"\n          actions={[\n            {\n              icon: faJSONEditorFormat,\n              text: 'Format',\n              title: 'Format JSON: add proper indentation and new lines (Ctrl+I)',\n              onClick: handleFormat\n            },\n            {\n              icon: faTimes,\n              text: 'No thanks',\n              title: 'Close this message',\n              onClick: () => (askToFormat = false)\n            }\n          ]}\n          onClose={focus}\n        />\n      {/if}\n\n      <ValidationErrorsOverview {validationErrors} selectError={handleSelectValidationError} />\n    {/if}\n  {:else}\n    <div class=\"jse-contents\">\n      <div class=\"jse-loading-space\" />\n      <div class=\"jse-loading\">loading...</div>\n    </div>\n  {/if}\n</div>\n\n<style src=\"./TextMode.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { MenuItem, OnRenderMenuInternal } from '$lib/types'\n  import Menu from '../../../controls/Menu.svelte'\n  import {\n    faEllipsisV,\n    faFilter,\n    faRedo,\n    faSortAmountDownAlt,\n    faUndo\n  } from '@fortawesome/free-solid-svg-icons'\n  import type { HistoryState } from '$lib/logic/history'\n  import { CONTEXT_MENU_EXPLANATION } from '$lib/constants.js'\n\n  export let json: unknown | undefined\n  export let readOnly: boolean\n  export let historyState: HistoryState\n  export let onSort: () => void\n  export let onTransform: () => void\n  export let onContextMenu: (event: MouseEvent) => void\n  export let onUndo: () => void\n  export let onRedo: () => void\n  export let onRenderMenu: OnRenderMenuInternal\n\n  let defaultItems: MenuItem[]\n  $: defaultItems = !readOnly\n    ? [\n        {\n          type: 'button',\n          icon: faSortAmountDownAlt,\n          title: 'Sort',\n          className: 'jse-sort',\n          onClick: onSort,\n          disabled: readOnly || json === undefined\n        },\n        {\n          type: 'button',\n          icon: faFilter,\n          title: 'Transform contents (filter, sort, project)',\n          className: 'jse-transform',\n          onClick: onTransform,\n          disabled: readOnly || json === undefined\n        },\n        {\n          type: 'button',\n          icon: faEllipsisV,\n          title: CONTEXT_MENU_EXPLANATION,\n          className: 'jse-contextmenu',\n          onClick: onContextMenu\n        },\n        {\n          type: 'separator'\n        },\n        {\n          type: 'button',\n          icon: faUndo,\n          title: 'Undo (Ctrl+Z)',\n          className: 'jse-undo',\n          onClick: onUndo,\n          disabled: !historyState.canUndo\n        },\n        {\n          type: 'button',\n          icon: faRedo,\n          title: 'Redo (Ctrl+Shift+Z)',\n          className: 'jse-redo',\n          onClick: onRedo,\n          disabled: !historyState.canRedo\n        },\n        {\n          type: 'space'\n        }\n      ]\n    : [\n        {\n          type: 'space'\n        }\n      ]\n\n  let items: MenuItem[]\n  $: items = onRenderMenu(defaultItems)\n</script>\n\n<Menu {items} />\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type {\n    AfterPatchCallback,\n    JSONEditorContext,\n    JSONSelection,\n    SearchResultItem\n  } from '$lib/types'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { isEditingSelection, isValueSelection } from '$lib/logic/selection.js'\n  import { createNestedValueOperations } from '$lib/logic/operations.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let context: JSONEditorContext\n  export let enforceString: boolean\n  export let selection: JSONSelection | null\n  export let searchResultItems: SearchResultItem[] | undefined\n\n  function handlePatch(operations: JSONPatchDocument, afterPatch?: AfterPatchCallback) {\n    // When having flattened table columns, it is possible that we edit a nested value of which\n    // the parent object is not existing. Therefore, we call replaceNestedValue to create\n    // the parent object(s) first.\n    return context.onPatch(createNestedValueOperations(operations, context.getJson()), afterPatch)\n  }\n\n  $: isEditing = !context.readOnly && isValueSelection(selection) && isEditingSelection(selection)\n\n  $: renderers = context.onRenderValue({\n    path,\n    value,\n    readOnly: context.readOnly,\n    enforceString,\n    isEditing,\n    parser: context.parser,\n    normalization: context.normalization,\n    selection,\n    searchResultItems,\n    onPatch: handlePatch,\n    onPasteJson: context.onPasteJson,\n    onSelect: context.onSelect,\n    onFind: context.onFind,\n    findNextInside: context.findNextInside,\n    focus: context.focus\n  })\n</script>\n\n{#each renderers as renderer}\n  {#key renderer.component}\n    <svelte:component this={renderer.component} {...renderer.props} />\n  {/key}\n{/each}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import type { JSONParser } from '$lib/types'\n  import { truncate } from '$lib/utils/stringUtils.js'\n  import { MAX_INLINE_OBJECT_CHARS } from '$lib/constants.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let parser: JSONParser\n  export let isSelected: boolean\n  export let onEdit: (path: JSONPath) => void\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-inline-value\"\n  class:jse-selected={isSelected}\n  on:dblclick={() => onEdit(path)}\n>\n  {truncate(parser.stringify(value) ?? '', MAX_INLINE_OBJECT_CHARS)}\n</button>\n\n<style src=\"./InlineValue.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import type { SortedColumn } from '$lib/types.js'\n  import { SortDirection } from '$lib/types.js'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import Icon from 'svelte-awesome'\n  import { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons'\n  import { isEmpty, isEqual } from 'lodash-es'\n  import { MAX_HEADER_NAME_CHARACTERS, SORT_DIRECTION_NAMES } from '$lib/constants.js'\n  import { truncate } from '$lib/utils/stringUtils.js'\n\n  export let path: JSONPath\n  export let sortedColumn: SortedColumn | null\n  export let readOnly: boolean\n  export let onSort: (sortedColumn: SortedColumn) => void\n\n  // TODO: improve truncating of long column names when they are a deeply nested path: the last item from the path should be visible, and halfway the path is least interesting\n  $: columnName = !isEmpty(path) ? stringifyJSONPath(path) : 'values'\n\n  $: sortDirection =\n    sortedColumn && isEqual(path, sortedColumn?.path) ? sortedColumn.sortDirection : undefined\n  $: sortDirectionName = sortDirection ? SORT_DIRECTION_NAMES[sortDirection] : undefined\n\n  function handleSort() {\n    if (readOnly) {\n      return\n    }\n\n    onSort({\n      path,\n      sortDirection: sortDirection === SortDirection.asc ? SortDirection.desc : SortDirection.asc\n    })\n  }\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-column-header\"\n  class:jse-readonly={readOnly}\n  on:click={handleSort}\n  title={!readOnly ? columnName + ' (Click to sort the data by this column)' : columnName}\n>\n  <span class=\"jse-column-name\">\n    {truncate(columnName, MAX_HEADER_NAME_CHARACTERS)}\n  </span>\n  {#if sortDirection !== undefined}\n    <span class=\"jse-column-sort-icon\" title={`Currently sorted in ${sortDirectionName} order`}>\n      <Icon data={sortDirection === SortDirection.asc ? faCaretDown : faCaretUp} />\n    </span>\n  {/if}\n</button>\n\n<style src=\"./ColumnHeader.scss\"></style>\n","// source: https://github.com/sveltejs/svelte/issues/7583\n\nlet observer: ResizeObserver\nlet callbacks: WeakMap<Element, (element: Element) => void>\n\n/**\n * Example usage:\n *\n *   <script lang=\"ts\">\n *      let clientWidth = 0\n *   </script>\n *\n *   <div use:resizeObserver={element => clientWidth = element.clientWidth}>\n *      My width is: {clientWidth}\n *   </div>\n */\nexport function resizeObserver(element: Element, onResize: (element: Element) => void) {\n  if (!observer) {\n    callbacks = new WeakMap()\n    observer = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const onResize = callbacks.get(entry.target)\n        if (onResize) {\n          onResize(entry.target)\n        }\n      }\n    })\n  }\n\n  callbacks.set(element, onResize)\n  observer.observe(element)\n\n  return {\n    destroy: () => {\n      callbacks.delete(element)\n      observer.unobserve(element)\n    }\n  }\n}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import {\n    faClone,\n    faCopy,\n    faCut,\n    faPaste,\n    faPen,\n    faPlus,\n    faTrashCan\n  } from '@fortawesome/free-solid-svg-icons'\n  import { compileJSONPointer, getIn } from 'immutable-json-patch'\n  import {\n    getFocusPath,\n    isKeySelection,\n    isMultiSelection,\n    isValueSelection,\n    singleItemSelected\n  } from '$lib/logic/selection.js'\n  import { isObjectOrArray } from '$lib/utils/typeUtils.js'\n  import { faCheckSquare, faSquare } from '@fortawesome/free-regular-svg-icons'\n  import type {\n    ContextMenuItem,\n    DocumentState,\n    JSONParser,\n    OnRenderContextMenuInternal\n  } from '$lib/types'\n  import { getEnforceString } from '$lib/logic/documentState.js'\n  import ContextMenu from '../../../../components/controls/contextmenu/ContextMenu.svelte'\n\n  export let json: unknown | undefined\n  export let documentState: DocumentState\n  export let parser: JSONParser\n\n  export let showTip: boolean\n\n  export let onCloseContextMenu: () => void\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onEditValue: () => void\n  export let onEditRow: () => void\n  export let onToggleEnforceString: () => void\n  export let onCut: (indent: boolean) => void\n  export let onCopy: (indent: boolean) => void\n  export let onPaste: () => void\n  export let onRemove: () => void\n  export let onDuplicateRow: () => void\n  export let onInsertBeforeRow: () => void\n  export let onInsertAfterRow: () => void\n  export let onRemoveRow: () => void\n\n  $: selection = documentState.selection\n\n  $: hasJson = json !== undefined\n  $: hasSelection = !!selection\n  $: focusValue = json !== undefined && selection ? getIn(json, getFocusPath(selection)) : undefined\n\n  $: hasSelectionContents =\n    hasJson &&\n    (isMultiSelection(selection) || isKeySelection(selection) || isValueSelection(selection))\n\n  $: canEditValue = hasJson && selection != null && singleItemSelected(selection)\n  $: canEnforceString = canEditValue && !isObjectOrArray(focusValue)\n\n  $: enforceString =\n    selection != null && focusValue !== undefined\n      ? getEnforceString(\n          focusValue,\n          documentState.enforceStringMap,\n          compileJSONPointer(getFocusPath(selection)),\n          parser\n        )\n      : false\n\n  let defaultItems: ContextMenuItem[]\n  $: defaultItems = [\n    { type: 'separator' },\n    {\n      type: 'row',\n      items: [\n        {\n          type: 'column',\n          items: [\n            { type: 'label', text: 'Table cell:' },\n            {\n              type: 'dropdown-button',\n              main: {\n                type: 'button',\n                onClick: () => onEditValue(),\n                icon: faPen,\n                text: 'Edit',\n                title: 'Edit the value (Double-click on the value)',\n                disabled: !canEditValue\n              },\n              width: '11em',\n              items: [\n                {\n                  type: 'button',\n                  icon: faPen,\n                  text: 'Edit',\n                  title: 'Edit the value (Double-click on the value)',\n                  onClick: () => onEditValue(),\n                  disabled: !canEditValue\n                },\n                {\n                  type: 'button',\n                  icon: enforceString ? faCheckSquare : faSquare,\n                  text: 'Enforce string',\n                  title: 'Enforce keeping the value as string when it contains a numeric value',\n                  onClick: () => onToggleEnforceString(),\n                  disabled: !canEnforceString\n                }\n              ]\n            },\n            {\n              type: 'dropdown-button',\n              main: {\n                type: 'button',\n                onClick: () => onCut(true),\n                icon: faCut,\n                text: 'Cut',\n                title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n                disabled: !hasSelectionContents\n              },\n              width: '10em',\n              items: [\n                {\n                  type: 'button',\n                  icon: faCut,\n                  text: 'Cut formatted',\n                  title: 'Cut selected contents, formatted with indentation (Ctrl+X)',\n                  onClick: () => onCut(true),\n                  disabled: !hasSelectionContents\n                },\n                {\n                  type: 'button',\n                  icon: faCut,\n                  text: 'Cut compacted',\n                  title: 'Cut selected contents, without indentation (Ctrl+Shift+X)',\n                  onClick: () => onCut(false),\n                  disabled: !hasSelectionContents\n                }\n              ]\n            },\n            {\n              type: 'dropdown-button',\n              main: {\n                type: 'button',\n                onClick: () => onCopy(true),\n                icon: faCopy,\n                text: 'Copy',\n                title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n                disabled: !hasSelectionContents\n              },\n              width: '12em',\n              items: [\n                {\n                  type: 'button',\n                  icon: faCopy,\n                  text: 'Copy formatted',\n                  title: 'Copy selected contents, formatted with indentation (Ctrl+C)',\n                  onClick: () => onCopy(false),\n                  disabled: !hasSelectionContents\n                },\n                {\n                  type: 'button',\n                  icon: faCopy,\n                  text: 'Copy compacted',\n                  title: 'Copy selected contents, without indentation (Ctrl+Shift+C)',\n                  onClick: () => onCopy(false),\n                  disabled: !hasSelectionContents\n                }\n              ]\n            },\n            {\n              type: 'button',\n              onClick: () => onPaste(),\n              icon: faPaste,\n              text: 'Paste',\n              title: 'Paste clipboard contents (Ctrl+V)',\n              disabled: !hasSelection\n            },\n            {\n              type: 'button',\n              onClick: () => onRemove(),\n              icon: faTrashCan,\n              text: 'Remove',\n              title: 'Remove selected contents (Delete)',\n              disabled: !hasSelectionContents\n            }\n          ]\n        },\n        {\n          type: 'column',\n          items: [\n            { type: 'label', text: 'Table row:' },\n            {\n              type: 'button',\n              onClick: () => onEditRow(),\n              icon: faPen,\n              text: 'Edit row',\n              title: 'Edit the current row',\n              disabled: !hasSelectionContents\n            },\n            {\n              type: 'button',\n              onClick: () => onDuplicateRow(),\n              icon: faClone,\n              text: 'Duplicate row',\n              title: 'Duplicate the current row',\n              disabled: !hasSelection\n            },\n            {\n              type: 'button',\n              onClick: () => onInsertBeforeRow(),\n              icon: faPlus,\n              text: 'Insert before',\n              title: 'Insert a row before the current row',\n              disabled: !hasSelection\n            },\n            {\n              type: 'button',\n              onClick: () => onInsertAfterRow(),\n              icon: faPlus,\n              text: 'Insert after',\n              title: 'Insert a row after the current row',\n              disabled: !hasSelection\n            },\n            {\n              type: 'button',\n              onClick: () => onRemoveRow(),\n              icon: faTrashCan,\n              text: 'Remove row',\n              title: 'Remove current row',\n              disabled: !hasSelection\n            }\n          ]\n        }\n      ]\n    }\n  ]\n\n  $: items = onRenderContextMenu(defaultItems)\n</script>\n\n<ContextMenu\n  {items}\n  {onCloseContextMenu}\n  tip={showTip ? 'Tip: you can open this context menu via right-click or with Ctrl+Q' : undefined}\n/>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { getIn, isJSONArray, isJSONObject } from 'immutable-json-patch'\n  import type { JSONParser, OnChangeMode } from '$lib/types.js'\n  import { Mode } from '$lib/types.js'\n  import { valueType } from '$lib/utils/typeUtils.js'\n  import { findNestedArrays } from '$lib/logic/table.js'\n  import { isEmpty } from 'lodash-es'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n\n  export let text: string | undefined\n  export let json: unknown | undefined\n  export let readOnly: boolean\n  export let parser: JSONParser\n  export let openJSONEditorModal: (path: JSONPath) => void\n  export let onChangeMode: OnChangeMode\n\n  $: action = readOnly ? 'View' : 'Edit'\n\n  let nestedArrayPaths: JSONPath[]\n  $: nestedArrayPaths = json\n    ? findNestedArrays(json)\n        .slice(0, 99)\n        .filter((path) => path.length > 0)\n    : []\n  $: hasNestedArrays = !isEmpty(nestedArrayPaths)\n  $: isEmptyDocument = json === undefined && (text === '' || text === undefined)\n\n  $: documentType = hasNestedArrays\n    ? 'Object with nested arrays'\n    : isEmptyDocument\n      ? 'An empty document'\n      : isJSONObject(json)\n        ? 'An object'\n        : isJSONArray(json)\n          ? 'An empty array' // note: can also be an array with objects but without properties\n          : `A ${valueType(json, parser)}`\n\n  function countItems(nestedArrayPath: JSONPath): number {\n    return (getIn(json, nestedArrayPath) as JSONPath).length\n  }\n</script>\n\n<div class=\"jse-table-mode-welcome\">\n  <div class=\"jse-space jse-before\" />\n\n  <div class=\"jse-nested-arrays\">\n    <div class=\"jse-nested-arrays-title\">{documentType}</div>\n    <div class=\"jse-nested-arrays-info\">\n      {#if hasNestedArrays}\n        An object cannot be opened in table mode. You can open a nested array instead, or open the\n        document in tree mode.\n      {:else}\n        {documentType} cannot be opened in table mode.\n      {/if}\n      {#if isEmptyDocument && !readOnly}\n        You can open the document in tree mode instead, or paste a JSON Array using <b>Ctrl+V</b>.\n      {:else}\n        You can open the document in tree mode instead.\n      {/if}\n    </div>\n    {#each nestedArrayPaths as nestedArrayPath}\n      {@const count = countItems(nestedArrayPath)}\n\n      <button\n        type=\"button\"\n        class=\"jse-nested-array-action\"\n        on:click={() => openJSONEditorModal(nestedArrayPath)}\n      >\n        {action} \"{stringifyJSONPath(nestedArrayPath)}\"\n        <span class=\"jse-nested-array-count\">({count} {count !== 1 ? 'items' : 'item'})</span>\n      </button>\n    {/each}\n    <button type=\"button\" class=\"jse-nested-array-action\" on:click={() => onChangeMode(Mode.tree)}>\n      {action} in tree mode\n    </button>\n  </div>\n\n  <div class=\"jse-space jse-after\" />\n</div>\n\n<style src=\"./TableModeWelcome.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import Icon from 'svelte-awesome'\n  import { faRotate } from '@fortawesome/free-solid-svg-icons'\n\n  export let count: number\n  export let maxSampleCount: number\n  export let onRefresh: () => void\n</script>\n\n<button\n  type=\"button\"\n  class=\"jse-column-header\"\n  title={`The Columns are created by sampling ${maxSampleCount} items out of ${count}. ` +\n    \"If you're missing a column, click here to sample all of the items instead of a subset. \" +\n    'This is slower.'}\n  on:click={() => onRefresh()}\n>\n  <Icon data={faRotate} />\n</button>\n\n<style src=\"./RefreshColumnHeader.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type {\n    AbsolutePopupContext,\n    AbsolutePopupOptions,\n    AfterPatchCallback,\n    Content,\n    ContentErrors,\n    DocumentState,\n    ExtendedSearchResultItem,\n    HistoryItem,\n    JSONEditorContext,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONSelection,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnFocus,\n    OnJSONEditorModal,\n    OnRenderContextMenuInternal,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    ParseError,\n    PastedJson,\n    SortedColumn,\n    TransformModalOptions,\n    ValidationError,\n    Validator,\n    ValueNormalization\n  } from '$lib/types'\n  import { Mode, SortDirection, ValidationSeverity } from '$lib/types.js'\n  import TableMenu from './menu/TableMenu.svelte'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import {\n    compileJSONPointer,\n    existsIn,\n    getIn,\n    immutableJSONPatch,\n    isJSONArray\n  } from 'immutable-json-patch'\n  import {\n    isTextContent,\n    normalizeJsonParseError,\n    parseAndRepair,\n    parsePartialJson,\n    repairPartialJson\n  } from '../../../utils/jsonUtils.js'\n  import {\n    calculateAbsolutePosition,\n    calculateVisibleSection,\n    clearSortedColumnWhenAffectedByOperations,\n    getColumns,\n    groupValidationErrors,\n    maintainColumnOrder,\n    mergeValidationErrors,\n    selectNextColumn,\n    selectNextRow,\n    selectPreviousColumn,\n    selectPreviousRow,\n    toTableCellPosition\n  } from '$lib/logic/table.js'\n  import { isEmpty, isEqual, uniqueId } from 'lodash-es'\n  import JSONValueComponent from './JSONValue.svelte'\n  import {\n    activeElementIsChildOf,\n    createNormalizationFunctions,\n    encodeDataPath,\n    findParentWithNodeName,\n    getDataPathFromTarget,\n    getWindow,\n    isChildOfNodeName,\n    isEditableDivRef\n  } from '$lib/utils/domUtils.js'\n  import { createDebug } from '$lib/utils/debug.js'\n  import {\n    createDocumentState,\n    documentStatePatch,\n    expandMinimal,\n    expandWithCallback,\n    getEnforceString,\n    setEnforceString\n  } from '$lib/logic/documentState.js'\n  import { isObjectOrArray, isUrl, stringConvert } from '$lib/utils/typeUtils.js'\n  import InlineValue from './tag/InlineValue.svelte'\n  import { revertJSONPatchWithMoveOperations } from '$lib/logic/operations.js'\n  import {\n    createValueSelection,\n    getAnchorPath,\n    getFocusPath,\n    isEditingSelection,\n    isJSONSelection,\n    isValueSelection,\n    pathInSelection,\n    pathStartsWith,\n    removeEditModeFromSelection\n  } from '$lib/logic/selection.js'\n  import { createHistory } from '$lib/logic/history.js'\n  import ColumnHeader from './ColumnHeader.svelte'\n  import { sortJson } from '$lib/logic/sort.js'\n  import { keyComboFromEvent } from '$lib/utils/keyBindings.js'\n  import { createFocusTracker } from '$lib/components/controls/createFocusTracker.js'\n  import { getContext, onDestroy, onMount, tick } from 'svelte'\n  import { jsonrepair } from 'jsonrepair'\n  import Message from '../../controls/Message.svelte'\n  import { faCheck, faCode, faWrench } from '@fortawesome/free-solid-svg-icons'\n  import { measure } from '$lib/utils/timeUtils.js'\n  import memoizeOne from 'memoize-one'\n  import { validateJSON } from '$lib/logic/validation.js'\n  import ValidationErrorsOverview from '../../controls/ValidationErrorsOverview.svelte'\n  import {\n    CONTEXT_MENU_HEIGHT,\n    CONTEXT_MENU_WIDTH,\n    SCROLL_DURATION,\n    SIMPLE_MODAL_OPTIONS\n  } from '$lib/constants.js'\n  import { noop } from '$lib/utils/noop.js'\n  import { createJump } from '$lib/assets/jump.js/src/jump.js'\n  import ValidationErrorIcon from '../treemode/ValidationErrorIcon.svelte'\n  import {\n    onCopy,\n    onCut,\n    onDuplicateRow,\n    onInsertAfterRow,\n    onInsertBeforeRow,\n    onInsertCharacter,\n    onPaste,\n    onRemove,\n    onRemoveRow\n  } from '$lib/logic/actions.js'\n  import JSONRepairModal from '../../modals/JSONRepairModal.svelte'\n  import { resizeObserver } from '$lib/actions/resizeObserver.js'\n  import TableContextMenu from '../../../components/modes/tablemode/contextmenu/TableContextMenu.svelte'\n  import CopyPasteModal from '../../../components/modals/CopyPasteModal.svelte'\n  import ContextMenuPointer from '../../../components/controls/contextmenu/ContextMenuPointer.svelte'\n  import TableModeWelcome from './TableModeWelcome.svelte'\n  import JSONPreview from '../../controls/JSONPreview.svelte'\n  import RefreshColumnHeader from './RefreshColumnHeader.svelte'\n  import type { Context } from 'svelte-simple-modal'\n\n  const debug = createDebug('jsoneditor:TableMode')\n  const { open } = getContext<Context>('simple-modal')\n  const { openAbsolutePopup, closeAbsolutePopup } =\n    getContext<AbsolutePopupContext>('absolute-popup')\n  const jump = createJump()\n  const sortModalId = uniqueId()\n  const transformModalId = uniqueId()\n\n  const isSSR = typeof window === 'undefined'\n  debug('isSSR:', isSSR)\n\n  export let readOnly: boolean\n  export let externalContent: Content\n  export let externalSelection: JSONEditorSelection | null\n  export let mainMenuBar: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let flattenColumns: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validator: Validator | null\n  export let validationParser: JSONParser\n  export let indentation: number | string\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onRenderValue: OnRenderValue\n  export let onRenderMenu: OnRenderMenuInternal\n  export let onRenderContextMenu: OnRenderContextMenuInternal\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n  export let onJSONEditorModal: OnJSONEditorModal\n\n  let normalization: ValueNormalization\n  $: normalization = createNormalizationFunctions({\n    escapeControlCharacters,\n    escapeUnicodeCharacters\n  })\n\n  let refJsonEditor: HTMLDivElement\n  let refContents: HTMLDivElement | undefined\n  let refHiddenInput: HTMLInputElement\n\n  createFocusTracker({\n    onMount,\n    onDestroy,\n    getWindow: () => getWindow(refJsonEditor),\n    hasFocus: () => (modalOpen && document.hasFocus()) || activeElementIsChildOf(refJsonEditor),\n    onFocus: () => {\n      hasFocus = true\n      if (onFocus) {\n        onFocus()\n      }\n    },\n    onBlur: () => {\n      hasFocus = false\n      if (onBlur) {\n        onBlur()\n      }\n    }\n  })\n\n  let json: unknown | undefined\n  let text: string | undefined\n  let parseError: ParseError | undefined = undefined\n\n  let pastedJson: PastedJson\n\n  $: applyExternalContent(externalContent)\n  $: applyExternalSelection(externalSelection)\n\n  let maxSampleCount = 10_000\n  let columns: JSONPath[] = []\n  $: columns = isJSONArray(json)\n    ? maintainColumnOrder(getColumns(json, flattenColumns, maxSampleCount), columns)\n    : []\n\n  $: containsValidArray = json && !isEmpty(columns)\n  $: showRefreshButton = Array.isArray(json) && json.length > maxSampleCount\n\n  // modalOpen is true when one of the modals is open.\n  // This is used to track whether the editor still has focus\n  let modalOpen = false\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let hasFocus = false\n\n  let itemHeightsCache: Record<number, number> = {}\n\n  let viewPortHeight = 600\n  let scrollTop = 0\n  let defaultItemHeight = 18 // px\n\n  $: visibleSection = calculateVisibleSection(\n    scrollTop,\n    viewPortHeight,\n    json,\n    itemHeightsCache, // warning: itemHeightsCache is mutated and is not responsive itself\n    defaultItemHeight\n  )\n\n  $: refreshScrollTop(json)\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function refreshScrollTop(_json: unknown | undefined) {\n    // When the contents go from lots of items and scrollable contents to only a few items and\n    // no vertical scroll, the actual scrollTop changes to 0 but there is no on:scroll event\n    // triggered, so the internal scrollTop variable is not up-to-date.\n    // This is a workaround to update the scrollTop by triggering an on:scroll event\n    if (refContents) {\n      refContents.scrollTo({\n        top: refContents.scrollTop,\n        left: refContents.scrollLeft\n      })\n    }\n  }\n\n  function clearSortedColumn() {\n    if (documentState.sortedColumn) {\n      documentState = {\n        ...documentState,\n        sortedColumn: null\n      }\n    }\n  }\n\n  function updateSelection(\n    selection:\n      | JSONSelection\n      | null\n      | ((selection: JSONSelection | null) => JSONSelection | null | void | undefined)\n  ) {\n    debug('updateSelection', selection)\n\n    const updatedSelection =\n      typeof selection === 'function' ? selection(documentState.selection) || null : selection\n\n    if (!isEqual(updatedSelection, documentState.selection)) {\n      documentState = {\n        ...documentState,\n        selection: updatedSelection\n      }\n\n      onSelect(updatedSelection)\n    }\n  }\n\n  function clearSelectionWhenNotExisting(json: unknown | undefined) {\n    if (!documentState.selection || json === undefined) {\n      return\n    }\n\n    if (\n      existsIn(json, getAnchorPath(documentState.selection)) &&\n      existsIn(json, getFocusPath(documentState.selection))\n    ) {\n      return\n    }\n\n    debug('clearing selection: path does not exist anymore', documentState.selection)\n    documentState = {\n      ...documentState,\n      selection: null // TODO: try find the closest cell that still exists (similar to getInitialSelection)\n    }\n  }\n\n  let documentState = createDocumentState()\n  let textIsRepaired = false\n  const searchResultItems: ExtendedSearchResultItem[] | undefined = undefined // TODO: implement support for search and replace\n\n  function onSortByHeader(newSortedColumn: SortedColumn) {\n    if (readOnly) {\n      return\n    }\n\n    debug('onSortByHeader', newSortedColumn)\n\n    const rootPath: JSONPath = []\n    const direction = newSortedColumn.sortDirection === SortDirection.desc ? -1 : 1\n    const operations = sortJson(json, rootPath, newSortedColumn.path, direction)\n    handlePatch(operations, (patchedJson, patchedState) => {\n      return {\n        state: {\n          ...patchedState,\n          sortedColumn: newSortedColumn\n        }\n      }\n    })\n  }\n\n  const history = createHistory<HistoryItem>({\n    onChange: (state) => {\n      historyState = state\n    }\n  })\n  let historyState = history.getState()\n\n  let context: JSONEditorContext\n  $: context = {\n    readOnly,\n    parser,\n    normalization,\n    getJson: () => json,\n    getDocumentState: () => documentState,\n    findElement,\n    findNextInside,\n    focus,\n    onPatch: handlePatch,\n    onSelect: updateSelection,\n    onFind: handleFind,\n    onPasteJson: handlePasteJson,\n    onRenderValue\n  }\n\n  function applyExternalContent(content: Content) {\n    const currentContent = { json }\n    const isChanged = isTextContent(content)\n      ? content.text !== text\n      : !isEqual(currentContent.json, content.json)\n\n    debug('update external content', { isChanged })\n\n    if (!isChanged) {\n      // no actual change, don't do anything\n      return\n    }\n\n    const previousContent = { json, text }\n    const previousJson = json\n    const previousState = documentState\n    const previousText = text\n    const previousTextIsRepaired = textIsRepaired\n\n    if (isTextContent(content)) {\n      try {\n        json = parseMemoizeOne(content.text)\n        text = content.text\n        textIsRepaired = false\n        parseError = undefined\n      } catch (err) {\n        try {\n          json = parseMemoizeOne(jsonrepair(content.text))\n          text = content.text\n          textIsRepaired = true\n          parseError = undefined\n        } catch (repairError) {\n          // no valid JSON, will show empty document or invalid json\n          json = undefined\n          text = content.text\n          textIsRepaired = false\n          parseError =\n            text !== ''\n              ? normalizeJsonParseError(text, (err as Error).message || String(err))\n              : undefined\n        }\n      }\n    } else {\n      json = content.json\n      text = undefined\n      textIsRepaired = false\n      parseError = undefined\n    }\n\n    // make sure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    // reset the sorting order (we don't know...)\n    clearSortedColumn()\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // let the function applyExternalContent _not_ return a patchResult ever.\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function applyExternalSelection(externalSelection: JSONEditorSelection | null) {\n    if (!isEqual(documentState.selection, externalSelection)) {\n      debug('applyExternalSelection', externalSelection)\n\n      if (isJSONSelection(externalSelection) || externalSelection === null) {\n        updateSelection(externalSelection)\n      }\n    }\n  }\n\n  // TODO: addHistoryItem is a duplicate of addHistoryItem in TreeMode.svelte. Can we extract and reuse this logic?\n  function addHistoryItem({\n    previousJson,\n    previousState,\n    previousText,\n    previousTextIsRepaired\n  }: {\n    previousJson: unknown | undefined\n    previousText: string | undefined\n    previousState: DocumentState\n    previousTextIsRepaired: boolean\n  }) {\n    if (previousJson === undefined && previousText === undefined) {\n      // initialization -> do not create a history item\n      return\n    }\n\n    if (json !== undefined) {\n      if (previousJson !== undefined) {\n        // regular undo/redo with JSON patch\n        history.add({\n          undo: {\n            patch: [{ op: 'replace', path: '', value: previousJson }],\n            state: removeEditModeFromSelection(previousState),\n            json: undefined,\n            text: previousText,\n            textIsRepaired: previousTextIsRepaired\n          },\n          redo: {\n            patch: [{ op: 'replace', path: '', value: json }],\n            state: removeEditModeFromSelection(documentState),\n            json: undefined,\n            text,\n            textIsRepaired\n          }\n        })\n      } else {\n        history.add({\n          undo: {\n            patch: undefined,\n            json: undefined,\n            text: previousText,\n            state: removeEditModeFromSelection(previousState),\n            textIsRepaired: previousTextIsRepaired\n          },\n          redo: {\n            patch: undefined,\n            json,\n            state: removeEditModeFromSelection(documentState),\n            text,\n            textIsRepaired\n          }\n        })\n      }\n    } else {\n      if (previousJson !== undefined) {\n        history.add({\n          undo: {\n            patch: undefined,\n            json: previousJson,\n            state: removeEditModeFromSelection(previousState),\n            text: previousText,\n            textIsRepaired: previousTextIsRepaired\n          },\n          redo: {\n            patch: undefined,\n            json: undefined,\n            text,\n            textIsRepaired,\n            state: removeEditModeFromSelection(documentState)\n          }\n        })\n      } else {\n        // this cannot happen. Nothing to do, no change\n      }\n    }\n  }\n\n  let validationErrors: ValidationError[] = []\n  $: updateValidationErrors(json, validator, parser, validationParser)\n  $: groupedValidationErrors = groupValidationErrors(validationErrors, columns)\n\n  // because onChange returns the validation errors and there is also a separate listener,\n  // we would execute validation twice. Memoizing the last result solves this.\n  const memoizedValidate = memoizeOne(validateJSON)\n\n  function updateValidationErrors(\n    json: unknown,\n    validator: Validator | null,\n    parser: JSONParser,\n    validationParser: JSONParser\n  ) {\n    measure(\n      () => {\n        let newValidationErrors: ValidationError[]\n        try {\n          newValidationErrors = memoizedValidate(json, validator, parser, validationParser)\n        } catch (err) {\n          newValidationErrors = [\n            {\n              path: [],\n              message: 'Failed to validate: ' + (err as Error).message,\n              severity: ValidationSeverity.warning\n            }\n          ]\n        }\n\n        if (!isEqual(newValidationErrors, validationErrors)) {\n          debug('validationErrors changed:', newValidationErrors)\n          validationErrors = newValidationErrors\n        }\n      },\n      (duration) => debug(`validationErrors updated in ${duration} ms`)\n    )\n  }\n\n  export function validate(): ContentErrors | null {\n    debug('validate')\n\n    if (parseError) {\n      return {\n        parseError,\n        isRepairable: false // not applicable, if repairable, we will not have a parseError\n      }\n    }\n\n    // make sure the validation results are up-to-date\n    // normally, they are only updated on the next tick after the json is changed\n    updateValidationErrors(json, validator, parser, validationParser)\n    return !isEmpty(validationErrors) ? { validationErrors } : null\n  }\n\n  export function patch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    debug('patch', operations, afterPatch)\n\n    if (json === undefined) {\n      throw new Error('Cannot apply patch: no JSON')\n    }\n\n    const previousContent: Content = { json }\n    const previousJson = json\n    const previousState = documentState\n    const previousTextIsRepaired = textIsRepaired\n\n    // execute the patch operations\n    const undo: JSONPatchDocument = revertJSONPatchWithMoveOperations(\n      json,\n      operations\n    ) as JSONPatchDocument\n    const patched = documentStatePatch(json, documentState, operations)\n\n    // Clear the sorted column when needed. We need to do this before `afterPatch`,\n    // else we clear any changed made in the callback. It is a bit odd that\n    // afterPatch does not receive the actual previousDocumentState. Better ideas?\n    const patchedJson = patched.json\n    const patchedDocumentState = clearSortedColumnWhenAffectedByOperations(\n      documentState,\n      operations,\n      columns\n    )\n\n    const callback =\n      typeof afterPatch === 'function' ? afterPatch(patchedJson, patchedDocumentState) : undefined\n\n    json = callback && callback.json !== undefined ? callback.json : patchedJson\n    const newState =\n      callback && callback.state !== undefined ? callback.state : patchedDocumentState\n    documentState = newState\n    text = undefined\n    textIsRepaired = false\n    pastedJson = undefined\n    parseError = undefined\n\n    history.add({\n      undo: {\n        patch: undo,\n        json: undefined,\n        text: undefined,\n        state: removeEditModeFromSelection(previousState),\n        textIsRepaired: previousTextIsRepaired\n      },\n      redo: {\n        patch: operations,\n        json: undefined,\n        state: removeEditModeFromSelection(newState),\n        text: undefined,\n        textIsRepaired\n      }\n    })\n\n    const patchResult = {\n      json,\n      previousJson,\n      undo,\n      redo: operations\n    }\n\n    emitOnChange(previousContent, patchResult)\n\n    return patchResult\n  }\n\n  function handlePatch(\n    operations: JSONPatchDocument,\n    afterPatch?: AfterPatchCallback\n  ): JSONPatchResult {\n    if (readOnly) {\n      // this should never happen in practice\n      return {\n        json,\n        previousJson: json,\n        redo: [],\n        undo: []\n      }\n    }\n\n    return patch(operations, afterPatch)\n  }\n\n  function emitOnChange(previousContent: Content, patchResult: JSONPatchResult | null) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (previousContent.json === undefined && previousContent?.text === undefined) {\n      // initialization -> do not fire an onChange event\n      return\n    }\n\n    // make sure we cannot send an invalid contents like having both\n    // json and text defined, or having none defined\n    if (onChange) {\n      if (text !== undefined) {\n        const content = { text, json: undefined }\n        onChange(content, previousContent, {\n          contentErrors: validate(),\n          patchResult\n        })\n      } else if (json !== undefined) {\n        const content = { text: undefined, json }\n        onChange(content, previousContent, {\n          contentErrors: validate(),\n          patchResult\n        })\n      }\n    }\n  }\n\n  function handleFind(findAndReplace: boolean) {\n    debug('handleFind', findAndReplace)\n\n    // TODO: implement handleFind\n  }\n\n  function handlePasteJson(newPastedJson: PastedJson) {\n    debug('pasted json as text', newPastedJson)\n\n    pastedJson = newPastedJson\n  }\n\n  function findNextInside(path: JSONPath): JSONSelection {\n    const index = parseInt(path[0], 10)\n    const nextPath = [String(index + 1), ...path.slice(1)]\n\n    return existsIn(json, nextPath)\n      ? createValueSelection(nextPath, false)\n      : createValueSelection(path, false)\n  }\n\n  export function focus() {\n    debug('focus')\n    // with just .focus(), sometimes the input doesn't react on onpaste events\n    // in Chrome when having a large document open and then doing cut/paste.\n    // Calling both .focus() and .select() did solve this issue.\n    if (refHiddenInput) {\n      refHiddenInput.focus()\n      refHiddenInput.select()\n    }\n  }\n\n  function handleScroll(event: Event) {\n    scrollTop = (event.target as HTMLElement)['scrollTop']\n  }\n\n  function handleMouseDown(event: MouseEvent) {\n    const target = event.target as HTMLElement\n    const path = getDataPathFromTarget(target)\n    if (path) {\n      // when clicking inside the current selection, editing a value, do nothing\n      if (\n        isEditingSelection(documentState.selection) &&\n        pathInSelection(json, documentState.selection, path)\n      ) {\n        return\n      }\n\n      updateSelection(createValueSelection(path, false))\n\n      event.preventDefault()\n    }\n\n    // for example when clicking on the empty area in the main menu\n    if (!isChildOfNodeName(target, 'BUTTON') && !target.isContentEditable) {\n      focus()\n    }\n  }\n\n  function createDefaultSelection(): JSONSelection | null {\n    if (isJSONArray(json) && !isEmpty(json) && !isEmpty(columns)) {\n      // Select the first row, first column\n      const path = ['0', ...columns[0]]\n\n      return createValueSelection(path, false)\n    } else {\n      return null\n    }\n  }\n\n  function createDefaultSelectionWhenUndefined() {\n    if (!documentState.selection) {\n      updateSelection(createDefaultSelection())\n    }\n  }\n\n  export function acceptAutoRepair() {\n    if (textIsRepaired && json !== undefined) {\n      const previousState = documentState\n      const previousJson = json\n      const previousText = text\n      const previousContent = { json, text }\n      const previousTextIsRepaired = textIsRepaired\n\n      // json stays as is\n      text = undefined\n      textIsRepaired = false\n\n      clearSelectionWhenNotExisting(json)\n\n      addHistoryItem({\n        previousJson,\n        previousState,\n        previousText,\n        previousTextIsRepaired\n      })\n\n      // we could work out a patchResult, or use patch(), but only when the previous and new\n      // contents are both json and not text. We go for simplicity and consistency here and\n      // do _not_ return a patchResult ever.\n      const patchResult = null\n\n      emitOnChange(previousContent, patchResult)\n    }\n\n    return { json, text }\n  }\n\n  /**\n   * Scroll the window vertically to the node with given path.\n   * Expand the path when needed.\n   */\n  export function scrollTo(path: JSONPath, scrollToWhenVisible = true): Promise<void> {\n    const top = calculateAbsolutePosition(path, columns, itemHeightsCache, defaultItemHeight)\n    const roughDistance = top - scrollTop\n    const elem = findElement(path)\n\n    debug('scrollTo', { path, top, scrollTop, elem })\n\n    if (!refContents) {\n      return Promise.resolve()\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    if (elem && !scrollToWhenVisible) {\n      const elemRect = elem.getBoundingClientRect()\n      if (elemRect.bottom > viewPortRect.top && elemRect.top < viewPortRect.bottom) {\n        // element is fully or partially visible, don't scroll to it\n        return Promise.resolve()\n      }\n    }\n\n    const offset = -(viewPortRect.height / 4)\n\n    // FIXME: scroll horizontally when needed\n    // FIXME: scroll to the exact element (rough distance can be inexact)\n\n    if (elem) {\n      return new Promise((resolve) => {\n        jump(elem, {\n          container: refContents,\n          offset,\n          duration: SCROLL_DURATION,\n          callback: () => {\n            // TODO: improve horizontal scrolling: animate and integrate with the vertical scrolling (jump)\n            scrollToHorizontal(path)\n            resolve()\n          }\n        })\n      })\n    } else {\n      return new Promise((resolve) => {\n        jump(roughDistance, {\n          container: refContents,\n          offset,\n          duration: SCROLL_DURATION,\n          callback: async () => {\n            await tick()\n\n            const newTop = calculateAbsolutePosition(\n              path,\n              columns,\n              itemHeightsCache,\n              defaultItemHeight\n            )\n\n            if (newTop !== top) {\n              await scrollTo(path, scrollToWhenVisible)\n            } else {\n              // TODO: improve horizontal scrolling: animate and integrate with the vertical scrolling (jump)\n              scrollToHorizontal(path)\n            }\n\n            resolve()\n          }\n        })\n      })\n    }\n  }\n\n  function scrollToVertical(path: JSONPath) {\n    if (!refContents) {\n      return\n    }\n\n    const { rowIndex } = toTableCellPosition(path, columns)\n    const top = calculateAbsolutePosition(path, columns, itemHeightsCache, defaultItemHeight)\n    const bottom = top + (itemHeightsCache[rowIndex] || defaultItemHeight)\n\n    const headerHeight = defaultItemHeight\n    const viewPortRect = refContents.getBoundingClientRect()\n    const viewPortTop = scrollTop\n    const viewPortBottom = scrollTop + viewPortRect.height - headerHeight\n\n    if (bottom > viewPortBottom) {\n      const diff = bottom - viewPortBottom\n      refContents.scrollTop += diff\n    }\n\n    if (top < viewPortTop) {\n      const diff = viewPortTop - top\n      refContents.scrollTop -= diff\n    }\n  }\n\n  function scrollToHorizontal(path: JSONPath) {\n    const elem = findElement(path)\n    if (!elem || !refContents) {\n      return\n    }\n\n    const viewPortRect = refContents.getBoundingClientRect()\n    const elemRect = elem.getBoundingClientRect() // TODO: scroll to column instead of item (is always rendered)\n\n    if (elemRect.right > viewPortRect.right) {\n      const diff = elemRect.right - viewPortRect.right\n      refContents.scrollLeft += diff\n    }\n\n    if (elemRect.left < viewPortRect.left) {\n      const diff = viewPortRect.left - elemRect.left\n      refContents.scrollLeft -= diff\n    }\n  }\n\n  function scrollIntoView(path: JSONPath) {\n    scrollToVertical(path)\n    scrollToHorizontal(path)\n  }\n\n  /**\n   * Find the DOM element of a given path.\n   * Note that the path can only be found when the node is expanded.\n   */\n  export function findElement(path: JSONPath): Element | null {\n    return refContents ? refContents.querySelector(`td[data-path=\"${encodeDataPath(path)}\"]`) : null\n  }\n\n  function openContextMenu({\n    anchor,\n    left,\n    top,\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n    showTip\n  }: AbsolutePopupOptions) {\n    const props = {\n      json,\n      documentState: documentState,\n      parser,\n      showTip,\n\n      onEditValue: handleEditValue,\n      onEditRow: handleEditRow,\n      onToggleEnforceString: handleToggleEnforceString,\n      onCut: handleCut,\n      onCopy: handleCopy,\n      onPaste: handlePasteFromMenu,\n      onRemove: handleRemove,\n      onDuplicateRow: handleDuplicateRow,\n      onInsertBeforeRow: handleInsertBeforeRow,\n      onInsertAfterRow: handleInsertAfterRow,\n      onRemoveRow: handleRemoveRow,\n\n      onRenderContextMenu,\n      onCloseContextMenu: function () {\n        closeAbsolutePopup(popupId)\n        focus()\n      }\n    }\n\n    modalOpen = true\n\n    const popupId = openAbsolutePopup(TableContextMenu, props, {\n      left,\n      top,\n      offsetTop,\n      offsetLeft,\n      width,\n      height,\n      anchor,\n      closeOnOuterClick: true,\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    })\n  }\n\n  function handleContextMenu(event: Event) {\n    if (readOnly || isEditingSelection(documentState.selection)) {\n      return\n    }\n\n    if (event) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n\n    if (event && event.type === 'contextmenu' && event.target !== refHiddenInput) {\n      // right mouse click to open context menu\n      openContextMenu({\n        left: (event as MouseEvent).clientX,\n        top: (event as MouseEvent).clientY,\n        width: CONTEXT_MENU_WIDTH,\n        height: CONTEXT_MENU_HEIGHT,\n        showTip: false\n      })\n    } else {\n      // type === 'keydown' (from the quick key Ctrl+Q)\n      // or target is hidden input -> context menu button on keyboard\n      const anchor = refContents?.querySelector('.jse-table-cell.jse-selected-value')\n      if (anchor) {\n        openContextMenu({\n          anchor,\n          offsetTop: 2,\n          width: CONTEXT_MENU_WIDTH,\n          height: CONTEXT_MENU_HEIGHT,\n          showTip: false\n        })\n      } else {\n        // fallback on just displaying the TreeContextMenu top left\n        const rect = refContents?.getBoundingClientRect()\n        if (rect) {\n          openContextMenu({\n            top: rect.top + 2,\n            left: rect.left + 2,\n            width: CONTEXT_MENU_WIDTH,\n            height: CONTEXT_MENU_HEIGHT,\n            showTip: false\n          })\n        }\n      }\n    }\n\n    return false\n  }\n\n  function handleContextMenuFromTableMenu(event: MouseEvent) {\n    if (readOnly) {\n      return\n    }\n\n    openContextMenu({\n      anchor: findParentWithNodeName(event.target as HTMLElement, 'BUTTON'),\n      offsetTop: 0,\n      width: CONTEXT_MENU_WIDTH,\n      height: CONTEXT_MENU_HEIGHT,\n      showTip: true\n    })\n  }\n\n  function handleEditValue() {\n    if (readOnly || !documentState.selection) {\n      return\n    }\n\n    const path = getFocusPath(documentState.selection)\n    const value = getIn(json, path)\n    if (isObjectOrArray(value)) {\n      openJSONEditorModal(path)\n    } else {\n      updateSelection(createValueSelection(path, true))\n    }\n  }\n\n  function handleEditRow() {\n    if (readOnly || !documentState.selection) {\n      return\n    }\n\n    const path = getFocusPath(documentState.selection)\n    const pathRow = path.slice(0, 1)\n    openJSONEditorModal(pathRow)\n  }\n\n  function handleToggleEnforceString() {\n    if (readOnly || !isValueSelection(documentState.selection)) {\n      return\n    }\n\n    const path = documentState.selection.path\n    const pointer = compileJSONPointer(path)\n    const value = getIn(json, path)\n    const enforceString = !getEnforceString(value, documentState.enforceStringMap, pointer, parser)\n    const updatedValue = enforceString ? String(value) : stringConvert(String(value), parser)\n\n    debug('handleToggleEnforceString', { enforceString, value, updatedValue })\n\n    handlePatch(\n      [\n        {\n          op: 'replace',\n          path: pointer,\n          value: updatedValue\n        }\n      ],\n      (patchedJson, patchedState) => {\n        return {\n          state: setEnforceString(patchedState, pointer, enforceString)\n        }\n      }\n    )\n  }\n\n  async function handleParsePastedJson() {\n    debug('apply pasted json', pastedJson)\n    if (!pastedJson) {\n      return\n    }\n\n    const { path, contents } = pastedJson\n\n    // exit edit mode\n    const refEditableDiv = refContents?.querySelector('.jse-editable-div') || null\n    if (isEditableDivRef(refEditableDiv)) {\n      refEditableDiv.cancel()\n    }\n\n    // replace the value with the JSON object/array\n    const operations: JSONPatchDocument = [\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: contents\n      }\n    ]\n\n    handlePatch(operations)\n\n    // TODO: get rid of the setTimeout here\n    setTimeout(focus)\n  }\n\n  function handlePasteFromMenu() {\n    open(\n      CopyPasteModal,\n      {},\n      {\n        ...SIMPLE_MODAL_OPTIONS,\n        styleWindow: {\n          width: '450px'\n        }\n      },\n      {\n        onClose: () => focus()\n      }\n    )\n  }\n\n  function handleClearPastedJson() {\n    debug('clear pasted json')\n    pastedJson = undefined\n    focus()\n  }\n\n  function handleRequestRepair() {\n    onChangeMode(Mode.text)\n  }\n\n  async function handleCut(indent: boolean) {\n    await onCut({\n      json,\n      documentState,\n      indentation: indent ? indentation : undefined,\n      readOnly,\n      parser,\n      onPatch: handlePatch\n    })\n  }\n\n  async function handleCopy(indent = true) {\n    if (json === undefined) {\n      return\n    }\n\n    await onCopy({\n      json,\n      documentState,\n      indentation: indent ? indentation : undefined,\n      parser\n    })\n  }\n\n  function handleRemove() {\n    onRemove({\n      json,\n      text,\n      documentState,\n      keepSelection: true,\n      readOnly,\n      onChange,\n      onPatch: handlePatch\n    })\n  }\n\n  function handleDuplicateRow() {\n    onDuplicateRow({ json, documentState, columns, readOnly, onPatch: handlePatch })\n  }\n\n  function handleInsertBeforeRow() {\n    onInsertBeforeRow({ json, documentState, columns, readOnly, onPatch: handlePatch })\n  }\n\n  function handleInsertAfterRow() {\n    onInsertAfterRow({ json, documentState, columns, readOnly, onPatch: handlePatch })\n  }\n\n  function handleRemoveRow() {\n    onRemoveRow({ json, documentState, columns, readOnly, onPatch: handlePatch })\n  }\n\n  async function handleInsertCharacter(char: string) {\n    await onInsertCharacter({\n      char,\n      selectInside: false,\n      refJsonEditor,\n      json,\n      selection: documentState.selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onReplaceJson: handleReplaceJson,\n      onSelect: updateSelection\n    })\n  }\n\n  function handleKeyDown(event: KeyboardEvent) {\n    const combo = keyComboFromEvent(event)\n    debug('keydown', { combo, key: event.key })\n\n    if (combo === 'Ctrl+X') {\n      // cut formatted\n      event.preventDefault()\n      handleCut(true)\n    }\n    if (combo === 'Ctrl+Shift+X') {\n      // cut compact\n      event.preventDefault()\n      handleCut(false)\n    }\n    if (combo === 'Ctrl+C') {\n      // copy formatted\n      event.preventDefault()\n      handleCopy(true)\n    }\n    if (combo === 'Ctrl+Shift+C') {\n      // copy compact\n      event.preventDefault()\n      handleCopy(false)\n    }\n    // Note: Ctrl+V (paste) is handled by the on:paste event\n\n    if (combo === 'Ctrl+D') {\n      event.preventDefault()\n      // handleDuplicate()\n      // TODO: implement duplicate\n    }\n    if (combo === 'Delete' || combo === 'Backspace') {\n      event.preventDefault()\n      handleRemove()\n    }\n    if (combo === 'Insert') {\n      event.preventDefault()\n      // TODO: implement insert\n    }\n    if (combo === 'Ctrl+A') {\n      event.preventDefault()\n      // updateSelection(selectAll())\n      // TODO: implement select all\n    }\n\n    if (combo === 'Ctrl+Q') {\n      handleContextMenu(event)\n    }\n\n    if (combo === 'ArrowLeft') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (documentState.selection) {\n        const newSelection = selectPreviousColumn(columns, documentState.selection)\n        updateSelection(newSelection)\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'ArrowRight') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (documentState.selection) {\n        const newSelection = selectNextColumn(columns, documentState.selection)\n        updateSelection(newSelection)\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'ArrowUp') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (documentState.selection) {\n        const newSelection = selectPreviousRow(columns, documentState.selection)\n        updateSelection(newSelection)\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'ArrowDown') {\n      event.preventDefault()\n\n      createDefaultSelectionWhenUndefined()\n\n      if (documentState.selection) {\n        const newSelection = selectNextRow(json, columns, documentState.selection)\n        updateSelection(newSelection)\n        scrollIntoView(getFocusPath(newSelection))\n      }\n    }\n\n    if (combo === 'Enter' && documentState.selection) {\n      if (isValueSelection(documentState.selection)) {\n        event.preventDefault()\n\n        const path = documentState.selection.path\n        const value = getIn(json, path)\n        if (isObjectOrArray(value)) {\n          // edit nested object/array\n          openJSONEditorModal(path)\n        } else {\n          if (!readOnly) {\n            // go to value edit mode\n            updateSelection({ ...documentState.selection, edit: true })\n          }\n        }\n      }\n    }\n\n    const normalizedCombo = combo.replace(/^Shift\\+/, '') // replace 'Shift+A' with 'A'\n    if (normalizedCombo.length === 1 && documentState.selection) {\n      // a regular key like a, A, _, etc is entered.\n      // Replace selected contents with a new value having this first character as text\n      event.preventDefault()\n      handleInsertCharacter(event.key)\n      return\n    }\n\n    if (combo === 'Ctrl+Enter' && isValueSelection(documentState.selection)) {\n      const value = getIn(json, documentState.selection.path)\n\n      if (isUrl(value)) {\n        // open url in new page\n        window.open(String(value), '_blank')\n      }\n    }\n\n    if (combo === 'Escape' && documentState.selection) {\n      event.preventDefault()\n      updateSelection(null)\n    }\n\n    if (combo === 'Ctrl+F') {\n      event.preventDefault()\n      // openFind(false)\n      // TODO: implement find\n    }\n\n    if (combo === 'Ctrl+H') {\n      event.preventDefault()\n      // openFind(true)\n      // TODO: implement find and replace\n    }\n\n    if (combo === 'Ctrl+Z') {\n      event.preventDefault()\n\n      handleUndo()\n    }\n\n    if (combo === 'Ctrl+Shift+Z') {\n      event.preventDefault()\n\n      handleRedo()\n    }\n  }\n\n  function handlePaste(event: ClipboardEvent) {\n    event.preventDefault()\n\n    const clipboardText = event.clipboardData?.getData('text/plain') as string | undefined\n    if (clipboardText === undefined) {\n      return\n    }\n\n    onPaste({\n      clipboardText,\n      json,\n      selection: documentState.selection,\n      readOnly,\n      parser,\n      onPatch: handlePatch,\n      onChangeText: handleChangeText,\n      openRepairModal\n    })\n  }\n\n  // TODO: this function is duplicated from TreeMode. See if we can reuse the code instead\n  function handleReplaceJson(updatedJson: unknown, afterPatch?: AfterPatchCallback) {\n    const previousState = documentState\n    const previousJson = json\n    const previousText = text\n    const previousContent = { json, text }\n    const previousTextIsRepaired = textIsRepaired\n\n    const updatedState = expandWithCallback(json, documentState, [], expandMinimal)\n\n    const callback =\n      typeof afterPatch === 'function' ? afterPatch(updatedJson, updatedState) : undefined\n\n    json = callback && callback.json !== undefined ? callback.json : updatedJson\n    documentState = callback && callback.state !== undefined ? callback.state : updatedState\n    text = undefined\n    textIsRepaired = false\n    parseError = undefined\n\n    // make sure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // we could work out a patchResult, or use patch(), but only when the previous and new\n    // contents are both json and not text. We go for simplicity and consistency here and\n    // do _not_ return a patchResult ever.\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  // TODO: this function is duplicated from TreeMode. See if we can reuse the code instead\n  function handleChangeText(updatedText: string, afterPatch?: AfterPatchCallback) {\n    debug('handleChangeText')\n\n    const previousState = documentState\n    const previousJson = json\n    const previousText = text\n    const previousContent = { json, text }\n    const previousTextIsRepaired = textIsRepaired\n\n    try {\n      json = parseMemoizeOne(updatedText)\n      documentState = expandWithCallback(json, documentState, [], expandMinimal)\n      text = undefined\n      textIsRepaired = false\n      parseError = undefined\n    } catch (err) {\n      try {\n        json = parseMemoizeOne(jsonrepair(updatedText))\n        documentState = expandWithCallback(json, documentState, [], expandMinimal)\n        text = updatedText\n        textIsRepaired = true\n        parseError = undefined\n      } catch (repairError) {\n        // no valid JSON, will show empty document or invalid json\n        json = undefined\n        documentState = createDocumentState({ json, expand: expandMinimal })\n        text = updatedText\n        textIsRepaired = false\n        parseError =\n          text !== ''\n            ? normalizeJsonParseError(text, (err as Error).message || String(err))\n            : undefined\n      }\n    }\n\n    if (typeof afterPatch === 'function') {\n      const callback = afterPatch(json, documentState)\n\n      json = callback && callback.json ? callback.json : json\n      documentState = callback && callback.state ? callback.state : documentState\n    }\n\n    // ensure the selection is valid\n    clearSelectionWhenNotExisting(json)\n\n    addHistoryItem({\n      previousJson,\n      previousState,\n      previousText,\n      previousTextIsRepaired\n    })\n\n    // no JSON patch actions available in text mode\n    const patchResult = null\n\n    emitOnChange(previousContent, patchResult)\n  }\n\n  function handleSelectValidationError(error: ValidationError) {\n    debug('select validation error', error)\n\n    updateSelection(createValueSelection(error.path, false))\n\n    scrollTo(error.path)\n  }\n\n  function openSortModal(rootPath: JSONPath) {\n    if (readOnly || json === undefined) {\n      return\n    }\n\n    modalOpen = true\n\n    onSortModal({\n      id: sortModalId,\n      json,\n      rootPath,\n      onSort: ({ operations, itemPath, direction }) => {\n        debug('onSort', operations, rootPath, itemPath, direction)\n\n        handlePatch(operations, (patchedJson, patchedState) => {\n          return {\n            state: {\n              ...patchedState,\n              sortedColumn: {\n                path: itemPath,\n                sortDirection: direction === -1 ? SortDirection.desc : SortDirection.asc\n              }\n            }\n          }\n        })\n      },\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    })\n  }\n\n  /**\n   * This method is exposed via JSONEditor.transform\n   */\n  export function openTransformModal(options: TransformModalOptions) {\n    if (json === undefined) {\n      return\n    }\n\n    const { id, onTransform, onClose } = options\n    const rootPath = options.rootPath || []\n\n    modalOpen = true\n\n    onTransformModal({\n      id: id || transformModalId,\n      json,\n      rootPath: rootPath || [],\n      onTransform: (operations) => {\n        if (onTransform) {\n          onTransform({\n            operations,\n            json: json,\n            transformedJson: immutableJSONPatch(json, operations)\n          })\n        } else {\n          debug('onTransform', rootPath, operations)\n\n          handlePatch(operations)\n        }\n      },\n      onClose: () => {\n        modalOpen = false\n        focus()\n        if (onClose) {\n          onClose()\n        }\n      }\n    })\n  }\n\n  function openJSONEditorModal(path: JSONPath) {\n    debug('openJSONEditorModal', { path })\n\n    modalOpen = true\n\n    // open a popup where you can edit the nested object/array\n    onJSONEditorModal({\n      content: {\n        json: getIn(json, path)\n      },\n      path,\n      onPatch: context.onPatch,\n      onClose: () => {\n        modalOpen = false\n        focus()\n      }\n    })\n  }\n\n  function openRepairModal(text: string, onApply: (repairedText: string) => void) {\n    open(\n      JSONRepairModal,\n      {\n        text,\n        onParse: (text: string) => parsePartialJson(text, (t) => parseAndRepair(t, parser)),\n        onRepair: repairPartialJson,\n        onApply\n      },\n      {\n        ...SIMPLE_MODAL_OPTIONS,\n        styleWindow: {\n          width: '600px',\n          height: '500px'\n        },\n        styleContent: {\n          padding: 0,\n          height: '100%'\n        }\n      },\n      {\n        onClose: () => focus()\n      }\n    )\n  }\n\n  function handleSortAll() {\n    const rootPath: JSONPath = []\n    openSortModal(rootPath)\n  }\n\n  function handleTransformAll() {\n    openTransformModal({\n      rootPath: []\n    })\n  }\n\n  function handleUndo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canUndo) {\n      return\n    }\n\n    const item = history.undo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.undo.patch ? immutableJSONPatch(json, item.undo.patch) : item.undo.json\n    documentState = item.undo.state\n    text = item.undo.text\n    textIsRepaired = item.undo.textIsRepaired\n    parseError = undefined\n\n    debug('undo', { item, json })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.undo.patch,\n            undo: item.redo.patch\n          }\n        : null\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (documentState.selection) {\n      scrollTo(getFocusPath(documentState.selection), false)\n    }\n  }\n\n  function handleRedo() {\n    if (readOnly) {\n      return\n    }\n\n    if (!history.getState().canRedo) {\n      return\n    }\n\n    const item = history.redo()\n    if (!item) {\n      return\n    }\n\n    const previousContent = { json, text }\n\n    json = item.redo.patch ? immutableJSONPatch(json, item.redo.patch) : item.redo.json\n    documentState = item.redo.state\n    text = item.redo.text\n    textIsRepaired = item.redo.textIsRepaired\n    parseError = undefined\n\n    debug('redo', { item, json })\n\n    const patchResult =\n      item.undo.patch && item.redo.patch\n        ? {\n            json,\n            previousJson: previousContent.json,\n            redo: item.redo.patch,\n            undo: item.undo.patch\n          }\n        : null\n\n    emitOnChange(previousContent, patchResult)\n\n    focus()\n    if (documentState.selection) {\n      scrollTo(getFocusPath(documentState.selection), false)\n    }\n  }\n\n  function handleResizeContents(element: Element) {\n    viewPortHeight = element.getBoundingClientRect().height\n  }\n\n  function handleResizeRow(element: Element, rowIndex: number) {\n    itemHeightsCache[rowIndex] = element.getBoundingClientRect().height\n  }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n<div\n  role=\"table\"\n  class=\"jse-table-mode\"\n  class:no-main-menu={!mainMenuBar}\n  on:mousedown={handleMouseDown}\n  on:keydown={handleKeyDown}\n  on:contextmenu={handleContextMenu}\n  bind:this={refJsonEditor}\n>\n  {#if mainMenuBar}\n    <TableMenu\n      {json}\n      {readOnly}\n      {historyState}\n      onSort={handleSortAll}\n      onTransform={handleTransformAll}\n      onUndo={handleUndo}\n      onRedo={handleRedo}\n      onContextMenu={handleContextMenuFromTableMenu}\n      {onRenderMenu}\n    />\n  {/if}\n\n  {#if !isSSR}\n    <label class=\"jse-hidden-input-label\">\n      <input\n        type=\"text\"\n        readonly={true}\n        tabindex=\"-1\"\n        class=\"jse-hidden-input\"\n        bind:this={refHiddenInput}\n        on:paste={handlePaste}\n      />\n    </label>\n    {#if containsValidArray}\n      <div\n        class=\"jse-contents\"\n        bind:this={refContents}\n        use:resizeObserver={handleResizeContents}\n        on:scroll={handleScroll}\n      >\n        <table class=\"jse-table-main\">\n          <tbody>\n            <tr class=\"jse-table-row jse-table-row-header\">\n              <th class=\"jse-table-cell jse-table-cell-header\">\n                {#if !isEmpty(groupedValidationErrors?.root)}\n                  {@const validationError = mergeValidationErrors(\n                    [],\n                    groupedValidationErrors?.root\n                  )}\n                  {#if validationError}\n                    <div class=\"jse-table-root-error\">\n                      <ValidationErrorIcon {validationError} onExpand={noop} />\n                    </div>\n                  {/if}\n                {/if}\n              </th>\n              {#each columns as column}\n                <th class=\"jse-table-cell jse-table-cell-header\">\n                  <ColumnHeader\n                    path={column}\n                    sortedColumn={documentState.sortedColumn}\n                    {readOnly}\n                    onSort={onSortByHeader}\n                  />\n                </th>\n              {/each}\n              {#if showRefreshButton}\n                <th class=\"jse-table-cell jse-table-cell-header\">\n                  <RefreshColumnHeader\n                    count={Array.isArray(json) ? json.length : 0}\n                    {maxSampleCount}\n                    onRefresh={() => (maxSampleCount = Infinity)}\n                  />\n                </th>\n              {/if}\n            </tr>\n            <tr class=\"jse-table-invisible-start-section\">\n              <td style:height={visibleSection.startHeight + 'px'} colspan={columns.length} />\n            </tr>\n            {#each visibleSection.visibleItems as item, visibleIndex}\n              {@const rowIndex = visibleSection.startIndex + visibleIndex}\n              {@const validationErrorsByRow = groupedValidationErrors.rows[rowIndex]}\n              {@const validationError = mergeValidationErrors(\n                [String(rowIndex)],\n                validationErrorsByRow?.row\n              )}\n              <tr class=\"jse-table-row\">\n                {#key rowIndex}\n                  <th\n                    class=\"jse-table-cell jse-table-cell-gutter\"\n                    use:resizeObserver={(element) => handleResizeRow(element, rowIndex)}\n                  >\n                    {rowIndex}\n                    {#if validationError}\n                      <ValidationErrorIcon {validationError} onExpand={noop} />\n                    {/if}\n                  </th>\n                {/key}\n                {#each columns as column, columnIndex}\n                  {@const path = [String(rowIndex)].concat(column)}\n                  {@const value = getIn(item, column)}\n                  {@const isSelected =\n                    isValueSelection(documentState.selection) &&\n                    pathStartsWith(documentState.selection.path, path)}\n                  {@const validationErrorsByColumn = validationErrorsByRow?.columns[columnIndex]}\n                  {@const validationError = mergeValidationErrors(path, validationErrorsByColumn)}\n                  <td\n                    class=\"jse-table-cell\"\n                    data-path={encodeDataPath(path)}\n                    class:jse-selected-value={isSelected}\n                  >\n                    {#if isObjectOrArray(value)}\n                      <InlineValue\n                        {path}\n                        {value}\n                        {parser}\n                        {isSelected}\n                        onEdit={openJSONEditorModal}\n                      />{:else}\n                      <JSONValueComponent\n                        {path}\n                        value={value !== undefined ? value : ''}\n                        enforceString={getEnforceString(\n                          value,\n                          documentState.enforceStringMap,\n                          compileJSONPointer(path),\n                          context.parser\n                        )}\n                        selection={isSelected ? documentState.selection : null}\n                        {searchResultItems}\n                        {context}\n                      />{/if}{#if !readOnly && isSelected && !isEditingSelection(documentState.selection)}\n                      <div class=\"jse-context-menu-anchor\">\n                        <ContextMenuPointer selected={true} onContextMenu={openContextMenu} />\n                      </div>\n                    {/if}{#if validationError}\n                      <ValidationErrorIcon {validationError} onExpand={noop} />\n                    {/if}\n                  </td>\n                {/each}\n                {#if showRefreshButton}\n                  <td class=\"jse-table-cell\" />\n                {/if}\n              </tr>\n            {/each}\n\n            <tr class=\"jse-table-invisible-end-section\">\n              <td style:height={visibleSection.endHeight + 'px'} colspan={columns.length} />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      {#if pastedJson}\n        <Message\n          type=\"info\"\n          message={`You pasted a JSON ${\n            Array.isArray(pastedJson.contents) ? 'array' : 'object'\n          } as text`}\n          actions={[\n            {\n              icon: faWrench,\n              text: 'Paste as JSON instead',\n              title: 'Paste the text as JSON instead of a single value',\n              // We use mousedown here instead of click: this message pops up\n              // whilst the user is editing a value. When clicking this button,\n              // the actual value is applied and the event is not propagated\n              // and an onClick on this button never happens.\n              onMouseDown: handleParsePastedJson\n            },\n            {\n              text: 'Leave as is',\n              title: 'Keep the pasted content as a single value',\n              onClick: handleClearPastedJson\n            }\n          ]}\n        />\n      {/if}\n\n      {#if textIsRepaired}\n        <Message\n          type=\"success\"\n          message=\"The loaded JSON document was invalid but is successfully repaired.\"\n          actions={!readOnly\n            ? [\n                {\n                  icon: faCheck,\n                  text: 'Ok',\n                  title: 'Accept the repaired document',\n                  onClick: acceptAutoRepair\n                },\n                {\n                  icon: faCode,\n                  text: 'Repair manually instead',\n                  title: 'Leave the document unchanged and repair it manually instead',\n                  onClick: handleRequestRepair\n                }\n              ]\n            : []}\n          onClose={focus}\n        />\n      {/if}\n\n      <ValidationErrorsOverview {validationErrors} selectError={handleSelectValidationError} />\n    {:else if parseError && text !== undefined && text !== ''}\n      <Message\n        type=\"error\"\n        message=\"The loaded JSON document is invalid and could not be repaired automatically.\"\n        actions={!readOnly\n          ? [\n              {\n                icon: faCode,\n                text: 'Repair manually',\n                title: 'Open the document in \"code\" mode and repair it manually',\n                onClick: handleRequestRepair\n              }\n            ]\n          : []}\n      />\n      <JSONPreview {text} {json} {indentation} {parser} />\n    {:else}\n      <TableModeWelcome {text} {json} {readOnly} {parser} {openJSONEditorModal} {onChangeMode} />\n    {/if}\n  {:else}\n    <div class=\"jse-contents jse-contents-loading\">\n      <div class=\"jse-loading-space\" />\n      <div class=\"jse-loading\">loading...</div>\n    </div>\n  {/if}\n</div>\n\n<style src=\"./TableMode.scss\"></style>\n","<script lang=\"ts\">\n  import type {\n    Content,\n    ContentErrors,\n    ContextMenuItem,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONPathParser,\n    MenuItem,\n    MenuSeparator,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnClassName,\n    OnError,\n    OnExpand,\n    OnFocus,\n    OnJSONEditorModal,\n    OnRenderContextMenu,\n    OnRenderContextMenuInternal,\n    OnRenderMenu,\n    OnRenderMenuInternal,\n    OnRenderValue,\n    OnSelect,\n    OnSortModal,\n    OnTransformModal,\n    TransformModalOptions,\n    Validator\n  } from '$lib/types'\n  import { Mode } from '$lib/types.js'\n  import TextMode from './textmode/TextMode.svelte'\n  import TableMode from './tablemode/TableMode.svelte'\n  import TreeMode from './treemode/TreeMode.svelte'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { isMenuSpace } from '$lib/typeguards.js'\n\n  export let content: Content\n  export let selection: JSONEditorSelection | null\n\n  export let readOnly: boolean\n  export let indentation: number | string\n  export let tabSize: number\n  export let mode: Mode\n  export let mainMenuBar: boolean\n  export let navigationBar: boolean\n  export let statusBar: boolean\n  export let askToFormat: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let flattenColumns: boolean\n  export let parser: JSONParser\n  export let parseMemoizeOne: JSONParser['parse']\n  export let validator: Validator | null\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n  export let insideModal: boolean\n\n  export let onChange: OnChange\n  export let onChangeMode: OnChangeMode\n  export let onSelect: OnSelect\n  export let onRenderValue: OnRenderValue\n  export let onClassName: OnClassName\n  export let onRenderMenu: OnRenderMenu\n  export let onRenderContextMenu: OnRenderContextMenu\n  export let onError: OnError\n  export let onFocus: OnFocus\n  export let onBlur: OnBlur\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n  export let onJSONEditorModal: OnJSONEditorModal\n\n  let refTreeMode: TreeMode | undefined\n  let refTableMode: TableMode | undefined\n  let refTextMode: TextMode | undefined\n\n  let modeMenuItems: MenuItem[]\n  $: modeMenuItems = [\n    {\n      type: 'button',\n      text: 'text',\n      title: `Switch to text mode (current mode: ${mode})`,\n      // check for 'code' mode is here for backward compatibility (deprecated since v0.4.0)\n      className:\n        'jse-group-button jse-first' +\n        (mode === Mode.text || (mode as string) === 'code' ? ' jse-selected' : ''),\n      onClick: () => onChangeMode(Mode.text)\n    },\n    {\n      type: 'button',\n      text: 'tree',\n      title: `Switch to tree mode (current mode: ${mode})`,\n      className: 'jse-group-button ' + (mode === Mode.tree ? ' jse-selected' : ''),\n      onClick: () => onChangeMode(Mode.tree)\n    },\n    {\n      type: 'button',\n      text: 'table',\n      title: `Switch to table mode (current mode: ${mode})`,\n      className: 'jse-group-button jse-last' + (mode === Mode.table ? ' jse-selected' : ''),\n      onClick: () => onChangeMode(Mode.table)\n    }\n  ]\n\n  const separatorMenuItem: MenuSeparator = {\n    type: 'separator'\n  }\n\n  let handleRenderMenu: OnRenderMenuInternal\n  $: handleRenderMenu = (items: MenuItem[]) => {\n    const updatedItems = isMenuSpace(items[0])\n      ? modeMenuItems.concat(items) // menu is empty, readOnly mode\n      : modeMenuItems.concat(separatorMenuItem, items)\n\n    return onRenderMenu(updatedItems, { mode, modal: insideModal }) || updatedItems\n  }\n\n  let handleRenderContextMenu: OnRenderContextMenuInternal\n  $: handleRenderContextMenu = (items: ContextMenuItem[]) => {\n    return onRenderContextMenu(items, { mode, modal: insideModal }) || items\n  }\n\n  export function patch(operations: JSONPatchDocument): JSONPatchResult {\n    if (refTreeMode) {\n      // Note that tree mode has an optional afterPatch callback.\n      // right now we don's support this in the public API.\n      return refTreeMode.patch(operations)\n    }\n\n    if (refTableMode) {\n      // Note that tree mode has an optional afterPatch callback.\n      // right now we don's support this in the public API.\n      return refTableMode.patch(operations)\n    }\n\n    if (refTextMode) {\n      return refTextMode.patch(operations)\n    }\n\n    throw new Error(`Method patch is not available in mode \"${mode}\"`)\n  }\n\n  export function expand(callback?: OnExpand): void {\n    if (refTreeMode) {\n      return refTreeMode.expand(callback)\n    } else {\n      throw new Error(`Method expand is not available in mode \"${mode}\"`)\n    }\n  }\n\n  /**\n   * Open the transform modal\n   */\n  export function transform(options: TransformModalOptions): void {\n    if (refTextMode) {\n      refTextMode.openTransformModal(options)\n    } else if (refTreeMode) {\n      refTreeMode.openTransformModal(options)\n    } else if (refTableMode) {\n      refTableMode.openTransformModal(options)\n    } else {\n      throw new Error(`Method transform is not available in mode \"${mode}\"`)\n    }\n  }\n\n  /**\n   * Validate the contents of the editor using the configured validator.\n   * Returns a parse error or a list with validation warnings\n   */\n  export function validate(): ContentErrors | null {\n    if (refTextMode) {\n      return refTextMode.validate()\n    } else if (refTreeMode) {\n      return refTreeMode.validate()\n    } else if (refTableMode) {\n      return refTableMode.validate()\n    } else {\n      throw new Error(`Method validate is not available in mode \"${mode}\"`)\n    }\n  }\n\n  /**\n   * In tree mode, invalid JSON is automatically repaired when loaded. When the\n   * repair was successful, the repaired contents are rendered but not yet\n   * applied to the document itself until the user clicks \"Ok\" or starts editing\n   * the data. Instead of accepting the repair, the user can also click\n   * \"Repair manually instead\". Invoking `.acceptAutoRepair()` will\n   * programmatically accept the repair. This will trigger an update,\n   * and the method itself also returns the updated contents. In case of text\n   * mode or when the editor is not in an \"accept auto repair\" status, nothing\n   * will happen, and the contents will be returned as is.\n   */\n  export function acceptAutoRepair(): Content {\n    if (refTreeMode) {\n      return refTreeMode.acceptAutoRepair()\n    } else {\n      return content\n    }\n  }\n\n  export function scrollTo(path: JSONPath): Promise<void> {\n    if (refTreeMode) {\n      return refTreeMode.scrollTo(path)\n    } else if (refTableMode) {\n      return refTableMode.scrollTo(path)\n    } else {\n      // TODO: implement scrollTo for text mode\n      throw new Error(`Method scrollTo is not available in mode \"${mode}\"`)\n    }\n  }\n\n  export function findElement(path: JSONPath): Element | null {\n    if (refTreeMode) {\n      return refTreeMode.findElement(path)\n    } else if (refTableMode) {\n      return refTableMode.findElement(path)\n    } else {\n      throw new Error(`Method findElement is not available in mode \"${mode}\"`)\n    }\n  }\n\n  export function focus() {\n    if (refTextMode) {\n      refTextMode.focus()\n    } else if (refTreeMode) {\n      refTreeMode.focus()\n    } else if (refTableMode) {\n      refTableMode.focus()\n    }\n  }\n\n  export async function refresh(): Promise<void> {\n    if (refTextMode) {\n      await refTextMode.refresh()\n    } else {\n      // nothing to do in tree or table mode (also: don't throw an exception or so,\n      // that annoying having to reckon with that when using .refresh()).\n    }\n  }\n</script>\n\n{#if mode === Mode.text || String(mode) === 'code'}\n  <TextMode\n    bind:this={refTextMode}\n    externalContent={content}\n    externalSelection={selection}\n    {readOnly}\n    {indentation}\n    {tabSize}\n    {mainMenuBar}\n    {statusBar}\n    {askToFormat}\n    {escapeUnicodeCharacters}\n    {parser}\n    {validator}\n    {validationParser}\n    {onChange}\n    {onSelect}\n    {onChangeMode}\n    {onError}\n    {onFocus}\n    {onBlur}\n    onRenderMenu={handleRenderMenu}\n    {onSortModal}\n    {onTransformModal}\n  />\n{:else if mode === Mode.table}\n  <TableMode\n    bind:this={refTableMode}\n    externalContent={content}\n    externalSelection={selection}\n    {readOnly}\n    {mainMenuBar}\n    {escapeControlCharacters}\n    {escapeUnicodeCharacters}\n    {flattenColumns}\n    {parser}\n    {parseMemoizeOne}\n    {validator}\n    {validationParser}\n    {indentation}\n    {onChange}\n    {onChangeMode}\n    {onSelect}\n    {onRenderValue}\n    {onFocus}\n    {onBlur}\n    onRenderMenu={handleRenderMenu}\n    onRenderContextMenu={handleRenderContextMenu}\n    {onSortModal}\n    {onTransformModal}\n    {onJSONEditorModal}\n  />\n{:else}\n  <!-- mode === Mode.tree -->\n  <TreeMode\n    bind:this={refTreeMode}\n    externalContent={content}\n    externalSelection={selection}\n    {readOnly}\n    {indentation}\n    {mainMenuBar}\n    {navigationBar}\n    {escapeControlCharacters}\n    {escapeUnicodeCharacters}\n    {parser}\n    {parseMemoizeOne}\n    {validator}\n    {validationParser}\n    {pathParser}\n    {onError}\n    {onChange}\n    {onChangeMode}\n    {onSelect}\n    {onRenderValue}\n    {onClassName}\n    {onFocus}\n    {onBlur}\n    onRenderMenu={handleRenderMenu}\n    onRenderContextMenu={handleRenderContextMenu}\n    {onSortModal}\n    {onTransformModal}\n    {onJSONEditorModal}\n  />\n{/if}\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import { getContext, tick } from 'svelte'\n  import Header from './Header.svelte'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer, immutableJSONPatch, isJSONArray } from 'immutable-json-patch'\n  import { createDebug } from '$lib/utils/debug.js'\n  import type {\n    Content,\n    JSONEditorModalCallback,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPathParser,\n    OnClassName,\n    OnPatch,\n    OnRenderContextMenu,\n    OnRenderMenu,\n    OnRenderValue,\n    OnSortModal,\n    OnTransformModal,\n    Validator\n  } from '$lib/types'\n  import { Mode } from '$lib/types.js'\n  import JSONEditorRoot from '../modes/JSONEditorRoot.svelte'\n  import { noop } from '$lib/utils/noop.js'\n  import { stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import { initial, isEmpty, last } from 'lodash-es'\n  import { isJSONContent, toJSONContent } from '$lib/utils/jsonUtils.js'\n  import Icon from 'svelte-awesome'\n  import { faCaretLeft } from '@fortawesome/free-solid-svg-icons'\n  import memoizeOne from 'memoize-one'\n  import { onEscape } from '$lib/actions/onEscape.js'\n  import { getFocusPath, isJSONSelection } from '$lib/logic/selection.js'\n  import type { Context } from 'svelte-simple-modal'\n\n  const debug = createDebug('jsoneditor:JSONEditorModal')\n\n  export let content: Content // the nested document\n  export let path: JSONPath\n  export let onPatch: OnPatch\n\n  export let readOnly: boolean\n  export let indentation: number | string\n  export let tabSize: number\n  export let mainMenuBar: boolean\n  export let navigationBar: boolean\n  export let statusBar: boolean\n  export let askToFormat: boolean\n  export let escapeControlCharacters: boolean\n  export let escapeUnicodeCharacters: boolean\n  export let flattenColumns: boolean\n  export let parser: JSONParser\n  export let validator: Validator | null\n  export let validationParser: JSONParser\n  export let pathParser: JSONPathParser\n\n  export let onRenderValue: OnRenderValue\n  export let onClassName: OnClassName\n  export let onRenderMenu: OnRenderMenu\n  export let onRenderContextMenu: OnRenderContextMenu\n\n  export let onSortModal: OnSortModal\n  export let onTransformModal: OnTransformModal\n\n  const { close } = getContext<Context>('simple-modal')\n\n  interface ModalState {\n    mode: Mode\n    content: Content\n    selection: JSONEditorSelection | null\n    relativePath: JSONPath\n  }\n\n  let refEditor: JSONEditorRoot\n\n  const rootState: ModalState = {\n    mode: determineMode(content),\n    content,\n    selection: null,\n    relativePath: path\n  }\n  let stack: ModalState[] = [rootState]\n\n  $: currentState = last(stack) || rootState\n  $: absolutePath = stack.flatMap((state) => state.relativePath)\n  $: pathDescription = !isEmpty(absolutePath) ? stringifyJSONPath(absolutePath) : '(document root)'\n\n  // not relevant in this Modal setting, but well\n  $: parseMemoizeOne = memoizeOne(parser.parse)\n\n  let error: string | undefined = undefined\n\n  function determineMode(content: Content): Mode {\n    return isJSONContent(content) && isJSONArray(content.json) ? Mode.table : Mode.tree\n  }\n\n  function scrollToSelection() {\n    const selection: JSONEditorSelection | null = last(stack)?.selection || null\n    if (isJSONSelection(selection)) {\n      refEditor.scrollTo(getFocusPath(selection))\n    }\n  }\n\n  function handleApply() {\n    debug('handleApply')\n\n    if (readOnly) {\n      return\n    }\n\n    try {\n      error = undefined\n\n      const path = currentState.relativePath\n      const content = currentState.content\n      const operations: JSONPatchDocument = [\n        {\n          op: 'replace',\n          path: compileJSONPointer(path),\n          value: toJSONContent(content, parser).json // this can throw an error\n        }\n      ]\n\n      if (stack.length > 1) {\n        const parentContent = stack[stack.length - 2].content\n        const parentJson = toJSONContent(parentContent, parser).json\n        const updatedParentContent = {\n          json: immutableJSONPatch(parentJson, operations)\n        }\n\n        // after successfully updated, remove from the stack and apply the change to the parent\n        const parentState = stack[stack.length - 2] || rootState\n        const updatedParentState: ModalState = { ...parentState, content: updatedParentContent }\n        stack = [...stack.slice(0, stack.length - 2), updatedParentState]\n        tick().then(scrollToSelection)\n      } else {\n        onPatch(operations)\n\n        close()\n      }\n    } catch (err) {\n      error = String(err)\n    }\n  }\n\n  function handleClose() {\n    debug('handleClose')\n\n    if (stack.length > 1) {\n      // remove the last item from the stack\n      stack = initial(stack)\n      tick().then(scrollToSelection)\n\n      // clear any error from the just closed state\n      error = undefined\n    } else {\n      // this is the first modal, the root state, close the modal\n      close()\n    }\n  }\n\n  function handleChange(updatedContent: Content) {\n    debug('handleChange', updatedContent)\n\n    const updatedState = {\n      ...currentState,\n      content: updatedContent\n    }\n\n    stack = [...initial(stack), updatedState]\n  }\n\n  function handleChangeSelection(newSelection: JSONEditorSelection | null) {\n    debug('handleChangeSelection', newSelection)\n\n    const updatedState = {\n      ...currentState,\n      selection: newSelection\n    }\n\n    stack = [...initial(stack), updatedState]\n  }\n\n  function handleChangeMode(newMode: Mode) {\n    debug('handleChangeMode', newMode)\n\n    const updatedState = {\n      ...currentState,\n      mode: newMode\n    }\n\n    stack = [...initial(stack), updatedState]\n  }\n\n  function handleError(newError: Error) {\n    error = newError.toString()\n    console.error(newError)\n  }\n\n  function handleJSONEditorModal({ content, path }: JSONEditorModalCallback) {\n    debug('handleJSONEditorModal', { content, path })\n\n    const nestedModalState = {\n      mode: determineMode(content),\n      content,\n      selection: null,\n      relativePath: path\n    }\n    stack = [...stack, nestedModalState]\n  }\n\n  function focus(element: HTMLElement) {\n    element.focus()\n  }\n</script>\n\n<div class=\"jse-modal jse-jsoneditor-modal\" use:onEscape={handleClose}>\n  <Header\n    title=\"Edit nested content {stack.length > 1 ? ` (${stack.length})` : ''}\"\n    onClose={handleClose}\n  />\n\n  <div class=\"jse-modal-contents\">\n    <div class=\"jse-label\">\n      <div class=\"jse-label-inner\">Path</div>\n    </div>\n    <input class=\"jse-path\" type=\"text\" readonly title=\"Selected path\" value={pathDescription} />\n\n    <div class=\"jse-label\">\n      <div class=\"jse-label-inner\">Contents</div>\n    </div>\n\n    <div class=\"jse-modal-inline-editor\">\n      <JSONEditorRoot\n        bind:this={refEditor}\n        mode={currentState.mode}\n        content={currentState.content}\n        selection={currentState.selection}\n        {readOnly}\n        {indentation}\n        {tabSize}\n        {statusBar}\n        {askToFormat}\n        {mainMenuBar}\n        {navigationBar}\n        {escapeControlCharacters}\n        {escapeUnicodeCharacters}\n        {flattenColumns}\n        {parser}\n        {parseMemoizeOne}\n        {validator}\n        {validationParser}\n        {pathParser}\n        insideModal={true}\n        onError={handleError}\n        onChange={handleChange}\n        onChangeMode={handleChangeMode}\n        onSelect={handleChangeSelection}\n        {onRenderValue}\n        {onClassName}\n        onFocus={noop}\n        onBlur={noop}\n        {onRenderMenu}\n        {onRenderContextMenu}\n        {onSortModal}\n        {onTransformModal}\n        onJSONEditorModal={handleJSONEditorModal}\n      />\n    </div>\n\n    <div class=\"jse-actions\">\n      {#if error}\n        <div class=\"jse-error\">\n          {error}\n        </div>\n      {/if}\n\n      {#if stack.length > 1}\n        <button type=\"button\" class=\"jse-secondary\" on:click={handleClose}>\n          <Icon data={faCaretLeft} /> Back\n        </button>\n      {/if}\n      {#if !readOnly}\n        <button type=\"button\" class=\"jse-primary\" on:click={handleApply} use:focus> Apply </button>\n      {:else}\n        <button type=\"button\" class=\"jse-primary\" on:click={handleClose} use:focus> Close </button>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style src=\"./JSONEditorModal.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  // This component is to get a reference to the simple-modal context\n  // containing open and close. Usage:\n  //\n  // <script>\n  //   export let open\n  //   export let close\n  // < /script>\n  //\n  // <ModalRef bind:open bind:close />\n  //\n  import { getContext } from 'svelte'\n  import type { Context } from 'svelte-simple-modal'\n\n  const context = getContext<Context>('simple-modal')\n\n  export const open = context.open\n  export const close = context.close\n</script>\n","<svelte:options accessors={false} immutable={true} />\n\n<script lang=\"ts\">\n  import { createDebug } from '../utils/debug.js'\n  import Modal, { bind } from 'svelte-simple-modal'\n  import {\n    JSONEDITOR_MODAL_OPTIONS,\n    SORT_MODAL_OPTIONS,\n    TRANSFORM_MODAL_OPTIONS\n  } from '../constants.js'\n  import { uniqueId } from '../utils/uniqueId.js'\n  import {\n    isEqualParser,\n    isJSONContent,\n    isTextContent,\n    validateContentType\n  } from '../utils/jsonUtils.js'\n  import AbsolutePopup from './modals/popup/AbsolutePopup.svelte'\n  import { javascriptQueryLanguage } from '$lib/plugins/query/javascriptQueryLanguage.js'\n  import { renderValue } from '$lib/plugins/value/renderValue.js'\n  import { tick } from 'svelte'\n  import TransformModal from './modals/TransformModal.svelte'\n  import SortModal from './modals/SortModal.svelte'\n  import type {\n    Content,\n    ContentErrors,\n    JSONEditorModalCallback,\n    JSONEditorPropsOptional,\n    JSONEditorSelection,\n    JSONParser,\n    JSONPatchResult,\n    JSONPathParser,\n    OnBlur,\n    OnChange,\n    OnChangeMode,\n    OnChangeQueryLanguage,\n    OnChangeStatus,\n    OnClassName,\n    OnError,\n    OnExpand,\n    OnFocus,\n    OnRenderMenu,\n    OnRenderValue,\n    OnSelect,\n    QueryLanguage,\n    SortModalCallback,\n    TransformModalCallback,\n    TransformModalOptions,\n    Validator\n  } from '$lib/types'\n  import { Mode } from '$lib/types.js'\n  import type { JSONPatchDocument, JSONPath } from 'immutable-json-patch'\n  import { noop } from '../utils/noop.js'\n  import { parseJSONPath, stringifyJSONPath } from '$lib/utils/pathUtils.js'\n  import JSONEditorRoot from './modes/JSONEditorRoot.svelte'\n  import JSONEditorModal from './modals/JSONEditorModal.svelte'\n  import memoizeOne from 'memoize-one'\n  import ModalRef from '../components/modals/ModalRef.svelte'\n  import type { Open, Callbacks, Component } from 'svelte-simple-modal'\n  import type { OnRenderContextMenu } from '$lib/types.js'\n\n  // TODO: document how to enable debugging in the readme: localStorage.debug=\"jsoneditor:*\", then reload\n  const debug = createDebug('jsoneditor:JSONEditor')\n\n  export let content: Content = { text: '' }\n  export let selection: JSONEditorSelection | null = null\n\n  export let readOnly = false\n  export let indentation: number | string = 2\n  export let tabSize = 4\n  export let mode: Mode = Mode.tree\n  export let mainMenuBar = true\n  export let navigationBar = true\n  export let statusBar = true\n  export let askToFormat = true\n  export let escapeControlCharacters = false\n  export let escapeUnicodeCharacters = false\n  export let flattenColumns = true\n  export let parser: JSONParser = JSON\n  export let validator: Validator | null = null\n  export let validationParser: JSONParser = JSON\n  export let pathParser: JSONPathParser = {\n    parse: parseJSONPath,\n    stringify: stringifyJSONPath\n  }\n\n  export let queryLanguages: QueryLanguage[] = [javascriptQueryLanguage]\n  export let queryLanguageId: string = queryLanguages[0].id\n\n  export let onChangeQueryLanguage: OnChangeQueryLanguage = noop\n  export let onChange: OnChange = null\n  export let onSelect: OnSelect = noop\n  export let onRenderValue: OnRenderValue = renderValue\n  export let onClassName: OnClassName = () => undefined\n  export let onRenderMenu: OnRenderMenu = noop\n  export let onRenderContextMenu: OnRenderContextMenu = noop\n  export let onChangeMode: OnChangeMode = noop\n  export let onError: OnError = (err) => {\n    console.error(err)\n    alert(err.toString()) // TODO: create a nice alert modal\n  }\n  export let onFocus: OnFocus = noop\n  export let onBlur: OnBlur = noop\n\n  let instanceId = uniqueId()\n  let hasFocus = false\n  let refJSONEditorRoot: JSONEditorRoot\n  let open: Open // svelte-simple-modal context open(...)\n  let jsoneditorModalState: {\n    component: Component\n    callbacks: Partial<Callbacks>\n  } | null = null\n\n  $: {\n    const contentError = validateContentType(content)\n    if (contentError) {\n      console.error('Error: ' + contentError)\n    }\n  }\n\n  // We memoize the last parse result for the case when the content is text and very large.\n  // In that case parsing takes a few seconds. When the user switches between tree and table mode,\n  // without having made a change, we do not want to parse the text again.\n  $: parseMemoizeOne = memoizeOne(parser.parse)\n\n  // rerender the full editor when the parser changes. This is needed because\n  // numeric state is hold at many places in the editor.\n  let previousParser = parser\n  $: {\n    if (!isEqualParser(parser, previousParser)) {\n      debug('parser changed, recreate editor')\n\n      if (isJSONContent(content)) {\n        const text = previousParser.stringify(content.json)\n        content = {\n          json: text !== undefined ? parser.parse(text) : undefined\n        }\n      }\n\n      previousParser = parser\n\n      // new editor id -> will re-create the editor\n      instanceId = uniqueId()\n    }\n  }\n\n  export function get(): Content {\n    return content\n  }\n\n  export async function set(newContent: Content): Promise<void> {\n    debug('set')\n\n    const contentError = validateContentType(newContent)\n    if (contentError) {\n      throw new Error(contentError)\n    }\n\n    // new editor id -> will re-create the editor\n    instanceId = uniqueId()\n\n    await tick() // await re-render (creating the new editor)\n\n    // update content *after* re-render, so that the new editor will trigger an onChange event\n    content = newContent\n  }\n\n  export async function update(updatedContent: Content): Promise<void> {\n    debug('update')\n\n    const contentError = validateContentType(updatedContent)\n    if (contentError) {\n      throw new Error(contentError)\n    }\n\n    content = updatedContent\n\n    await tick() // await rerender\n  }\n\n  export async function patch(operations: JSONPatchDocument): Promise<JSONPatchResult> {\n    if (isTextContent(content)) {\n      try {\n        content = {\n          json: parser.parse(content.text),\n          text: undefined\n        }\n      } catch (err) {\n        throw new Error('Cannot apply patch: current document contains invalid JSON')\n      }\n    }\n\n    // Note that patch has an optional afterPatch callback.\n    // right now we don's support this in the public API.\n    const result = refJSONEditorRoot.patch(operations)\n\n    await tick() // await rerender\n\n    return result\n  }\n\n  export async function select(newSelection: JSONEditorSelection | null) {\n    selection = newSelection\n\n    await tick() // await rerender\n  }\n\n  export async function expand(callback?: OnExpand): Promise<void> {\n    refJSONEditorRoot.expand(callback)\n\n    await tick() // await rerender\n  }\n\n  /**\n   * Open the transform modal\n   */\n  export function transform(options: TransformModalOptions): void {\n    refJSONEditorRoot.transform(options)\n  }\n\n  /**\n   * Validate the contents of the editor using the configured validator.\n   * Returns a parse error or a list with validation warnings\n   */\n  export function validate(): ContentErrors | null {\n    return refJSONEditorRoot.validate()\n  }\n\n  /**\n   * In tree mode, invalid JSON is automatically repaired when loaded. When the\n   * repair was successful, the repaired contents are rendered but not yet\n   * applied to the document itself until the user clicks \"Ok\" or starts editing\n   * the data. Instead of accepting the repair, the user can also click\n   * \"Repair manually instead\". Invoking `.acceptAutoRepair()` will\n   * programmatically accept the repair. This will trigger an update,\n   * and the method itself also returns the updated contents. In case of text\n   * mode or when the editor is not in an \"accept auto repair\" status, nothing\n   * will happen, and the contents will be returned as is.\n   */\n  export async function acceptAutoRepair(): Promise<Content> {\n    const content = refJSONEditorRoot.acceptAutoRepair()\n\n    await tick() // await rerender\n\n    return content\n  }\n\n  export async function scrollTo(path: JSONPath): Promise<void> {\n    await refJSONEditorRoot.scrollTo(path)\n  }\n\n  export function findElement(path: JSONPath): Element | null {\n    return refJSONEditorRoot.findElement(path)\n  }\n\n  export async function focus(): Promise<void> {\n    refJSONEditorRoot.focus()\n\n    await tick() // await rerender\n  }\n\n  export async function refresh(): Promise<void> {\n    await refJSONEditorRoot.refresh()\n  }\n\n  export async function updateProps(props: JSONEditorPropsOptional): Promise<void> {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.$set(props)\n\n    await tick() // await rerender\n  }\n\n  export async function destroy() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.$destroy()\n\n    await tick() // await destroying\n  }\n\n  function handleChange(updatedContent: Content, previousContent: Content, status: OnChangeStatus) {\n    content = updatedContent\n\n    if (onChange) {\n      onChange(updatedContent, previousContent, status)\n    }\n  }\n\n  function handleSelect(updatedSelection: JSONEditorSelection | null) {\n    selection = updatedSelection\n\n    onSelect(updatedSelection)\n  }\n\n  function handleFocus() {\n    hasFocus = true\n    if (onFocus) {\n      onFocus()\n    }\n  }\n\n  function handleBlur() {\n    hasFocus = false\n    if (onBlur) {\n      onBlur()\n    }\n  }\n\n  async function toggleMode(newMode: Mode) {\n    if (mode === newMode) {\n      return\n    }\n\n    mode = newMode\n\n    await tick()\n    await focus()\n\n    onChangeMode(newMode)\n  }\n\n  function handleChangeQueryLanguage(newQueryLanguageId: string) {\n    debug('handleChangeQueryLanguage', newQueryLanguageId)\n    queryLanguageId = newQueryLanguageId\n    onChangeQueryLanguage(newQueryLanguageId)\n  }\n\n  // The onTransformModal method is located in JSONEditor to prevent circular references:\n  //     TreeMode -> TransformModal -> TreeMode\n  function onTransformModal({ id, json, rootPath, onTransform, onClose }: TransformModalCallback) {\n    if (readOnly) {\n      return\n    }\n\n    open(\n      TransformModal,\n      {\n        id,\n        json,\n        rootPath,\n        indentation,\n        escapeControlCharacters,\n        escapeUnicodeCharacters,\n        parser,\n        parseMemoizeOne,\n        validationParser,\n        pathParser,\n        queryLanguages,\n        queryLanguageId,\n        onChangeQueryLanguage: handleChangeQueryLanguage,\n        onRenderValue,\n        onRenderMenu,\n        onRenderContextMenu,\n        onClassName,\n        onTransform\n      },\n      TRANSFORM_MODAL_OPTIONS,\n      {\n        onClose\n      }\n    )\n  }\n\n  // The onSortModal is positioned here for consistency with TransformModal\n  function onSortModal({ id, json, rootPath, onSort, onClose }: SortModalCallback) {\n    if (readOnly) {\n      return\n    }\n\n    open(\n      SortModal,\n      {\n        id,\n        json,\n        rootPath,\n        onSort\n      },\n      SORT_MODAL_OPTIONS,\n      {\n        onClose\n      }\n    )\n  }\n\n  // The onJSONEditorModal method is located in JSONEditor to prevent circular references:\n  //     JSONEditor -> TableMode -> JSONEditorModal -> JSONEditor\n  function onJSONEditorModal({ content, path, onPatch, onClose }: JSONEditorModalCallback) {\n    debug('onJSONEditorModal', { content, path })\n\n    jsoneditorModalState = {\n      component: bind(JSONEditorModal, {\n        content,\n        path,\n        onPatch,\n\n        readOnly,\n        indentation,\n        tabSize,\n        mainMenuBar,\n        navigationBar,\n        statusBar,\n        askToFormat,\n        escapeControlCharacters,\n        escapeUnicodeCharacters,\n        flattenColumns,\n        parser,\n        validator: undefined, // TODO: support partial JSON validation?\n        validationParser,\n        pathParser,\n        onRenderValue,\n        onClassName,\n        onRenderMenu,\n        onRenderContextMenu,\n        onSortModal,\n        onTransformModal\n      }),\n      callbacks: {\n        onClose\n      }\n    }\n  }\n\n  function closeJSONEditorModal() {\n    jsoneditorModalState?.callbacks?.onClose?.()\n    jsoneditorModalState = null\n  }\n\n  $: {\n    debug('mode changed to', mode)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    if (mode === 'code') {\n      // check for 'code' is here for backward compatibility (deprecated since v0.4.0)\n      console.warn(\n        'Deprecation warning: \"code\" mode is renamed to \"text\". Please use mode=\"text\" instead.'\n      )\n    }\n  }\n</script>\n\n<AbsolutePopup>\n  <Modal\n    show={jsoneditorModalState?.component}\n    {...JSONEDITOR_MODAL_OPTIONS}\n    closeOnEsc={false}\n    on:close={closeJSONEditorModal}\n  >\n    <Modal closeOnEsc={false}>\n      <ModalRef bind:open />\n      <div class=\"jse-main\" class:jse-focus={hasFocus}>\n        {#key instanceId}\n          <JSONEditorRoot\n            bind:this={refJSONEditorRoot}\n            {mode}\n            {content}\n            {selection}\n            {readOnly}\n            {indentation}\n            {tabSize}\n            {statusBar}\n            {askToFormat}\n            {mainMenuBar}\n            {navigationBar}\n            {escapeControlCharacters}\n            {escapeUnicodeCharacters}\n            {flattenColumns}\n            {parser}\n            {parseMemoizeOne}\n            {validator}\n            {validationParser}\n            {pathParser}\n            insideModal={false}\n            {onError}\n            onChange={handleChange}\n            onChangeMode={toggleMode}\n            onSelect={handleSelect}\n            {onRenderValue}\n            {onClassName}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            {onRenderMenu}\n            {onRenderContextMenu}\n            {onSortModal}\n            {onTransformModal}\n            {onJSONEditorModal}\n          />\n        {/key}\n      </div>\n    </Modal>\n  </Modal>\n</AbsolutePopup>\n\n<style src=\"./JSONEditor.scss\"></style>\n","<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n  import type { JSONPath } from 'immutable-json-patch'\n  import { compileJSONPointer } from 'immutable-json-patch'\n  import { getValueClass } from '$lib/plugins/value/components/utils/getValueClass.js'\n  import type { JSONParser, JSONSelection, OnPatch } from '$lib/types.js'\n  import { isValueSelection } from '$lib/logic/selection.js'\n\n  export let path: JSONPath\n  export let value: unknown\n  export let parser: JSONParser\n  export let readOnly: boolean\n  export let selection: JSONSelection | null\n  export let onPatch: OnPatch\n\n  export let options: Array<{ value: unknown; text: string }>\n\n  let refSelect: HTMLSelectElement | undefined\n\n  let bindValue: unknown = value\n  $: bindValue = value\n\n  function applyFocus(selection: JSONSelection | null) {\n    if (selection) {\n      if (refSelect) {\n        refSelect.focus()\n      }\n    }\n  }\n\n  $: applyFocus(selection)\n\n  function handleSelect(event: Event) {\n    event.stopPropagation()\n\n    if (readOnly) {\n      return\n    }\n\n    onPatch([\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: bindValue\n      }\n    ])\n  }\n\n  function handleMouseDown(event: MouseEvent) {\n    // stop propagation to prevent selecting the whole line\n    event.stopPropagation()\n  }\n</script>\n\n<select\n  class={`jse-enum-value ${getValueClass(bindValue, parser)}`}\n  class:jse-selected={isValueSelection(selection)}\n  bind:value={bindValue}\n  bind:this={refSelect}\n  on:change={handleSelect}\n  on:mousedown={handleMouseDown}\n>\n  {#each options as option}\n    <option value={option.value}>{option.text}</option>\n  {/each}\n</select>\n\n<style src=\"./EnumValue.scss\"></style>\n","import type { JSONPath } from 'immutable-json-patch'\nimport type { JSONSchema, JSONSchemaDefinitions, JSONSchemaEnum } from '$lib/types'\n\n/**\n * Find enum options for given path in a JSONSchema\n */\nexport function getJSONSchemaOptions(\n  schema: JSONSchema,\n  schemaDefinitions: JSONSchemaDefinitions | undefined,\n  path: JSONPath\n): JSONSchemaEnum | null {\n  const schemaForPath = findSchema(schema, schemaDefinitions || {}, path)\n\n  return schemaForPath ? findEnum(schemaForPath) : null\n}\n\n/**\n * find an enum definition in a JSON schema, as property `enum` or inside\n * one of the schemas composites (`oneOf`, `anyOf`, `allOf`)\n *\n * Source: https://github.com/josdejong/jsoneditor/blob/develop/src/js/Node.js\n */\nexport function findEnum(schema: JSONSchema): JSONSchemaEnum | null {\n  if (Array.isArray(schema['enum'])) {\n    return schema['enum']\n  }\n\n  const composite = schema['oneOf'] || schema['anyOf'] || schema['allOf']\n  if (Array.isArray(composite)) {\n    const match = composite.filter((entry) => entry.enum)\n    if (match.length > 0) {\n      return match[0].enum\n    }\n  }\n\n  return null\n}\n\n/**\n * Return the part of a JSON schema matching given path.\n *\n * Source: https://github.com/josdejong/jsoneditor/blob/develop/src/js/Node.js\n */\nexport function findSchema(\n  topLevelSchema: JSONSchema,\n  schemaDefinitions: JSONSchemaDefinitions,\n  path: JSONPath,\n  currentSchema = topLevelSchema\n): JSONSchema | null {\n  const nextPath = path.slice(1, path.length)\n  const nextKey = path[0]\n\n  let possibleSchemas = [currentSchema]\n  for (const subSchemas of [currentSchema.oneOf, currentSchema.anyOf, currentSchema.allOf]) {\n    if (Array.isArray(subSchemas)) {\n      possibleSchemas = possibleSchemas.concat(subSchemas)\n    }\n  }\n\n  for (const schema of possibleSchemas) {\n    currentSchema = schema\n\n    if ('$ref' in currentSchema && typeof currentSchema.$ref === 'string') {\n      const ref = currentSchema.$ref\n      if (ref in schemaDefinitions) {\n        currentSchema = schemaDefinitions[ref]\n      } else if (ref.startsWith('#/')) {\n        const refPath = ref.substring(2).split('/')\n        currentSchema = topLevelSchema\n        for (const segment of refPath) {\n          if (segment in currentSchema) {\n            currentSchema = currentSchema[segment] as JSONSchema\n          } else {\n            throw Error(`Unable to resolve reference ${ref}`)\n          }\n        }\n      } else if (ref.match(/#\\//g)?.length === 1) {\n        const [schemaUrl, relativePath] = ref.split('#/')\n        if (schemaUrl in schemaDefinitions) {\n          const referencedSchema = schemaDefinitions[schemaUrl]\n          const reference = { $ref: '#/'.concat(relativePath) }\n          const auxNextPath = []\n          auxNextPath.push(nextKey)\n          if (nextPath.length > 0) {\n            auxNextPath.push(...nextPath)\n          }\n          return findSchema(referencedSchema, schemaDefinitions, auxNextPath, reference)\n        } else {\n          throw Error(`Unable to resolve reference ${ref}`)\n        }\n      } else {\n        throw Error(`Unable to resolve reference ${ref}`)\n      }\n    }\n\n    // We have no more path segments to resolve, return the currently found schema\n    // We do this here, after resolving references, in case of the leaf schema beeing a reference\n    if (nextKey === undefined) {\n      return currentSchema\n    }\n\n    if (\n      typeof currentSchema.properties === 'object' &&\n      currentSchema.properties !== null &&\n      nextKey in currentSchema.properties\n    ) {\n      currentSchema = (currentSchema.properties as Record<string, JSONSchema>)[nextKey]\n      return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n    }\n\n    if (\n      typeof currentSchema.patternProperties === 'object' &&\n      currentSchema.patternProperties !== null\n    ) {\n      for (const prop in currentSchema.patternProperties) {\n        if (nextKey.match(prop)) {\n          currentSchema = (currentSchema.patternProperties as Record<string, JSONSchema>)[prop]\n          return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n        }\n      }\n    }\n\n    if (typeof currentSchema.additionalProperties === 'object') {\n      currentSchema = currentSchema.additionalProperties as JSONSchema\n      return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n    }\n\n    if (typeof currentSchema.items === 'object' && currentSchema.items !== null) {\n      currentSchema = currentSchema.items as JSONSchema\n      return findSchema(topLevelSchema, schemaDefinitions, nextPath, currentSchema)\n    }\n  }\n\n  return null\n}\n","import EnumValue from './components/EnumValue.svelte'\nimport { getJSONSchemaOptions } from '$lib/utils/jsonSchemaUtils.js'\nimport type {\n  JSONSchema,\n  JSONSchemaDefinitions,\n  RenderValueComponentDescription,\n  RenderValueProps\n} from '$lib/types'\n\n/**\n * Search the JSON schema for enums defined at given props.path. If found,\n * return an EnumValue renderer. If not found, return null. In that case you\n * have to fallback on the default valueRender function\n */\nexport function renderJSONSchemaEnum(\n  props: RenderValueProps,\n  schema: JSONSchema,\n  schemaDefinitions?: JSONSchemaDefinitions\n): RenderValueComponentDescription[] | null {\n  const enumValues = getJSONSchemaOptions(schema, schemaDefinitions, props.path)\n\n  if (enumValues) {\n    const { value, path, selection, parser, readOnly, onPatch } = props\n\n    const options = enumValues.map((enumValue) => ({\n      value: enumValue,\n      text: enumValue\n    }))\n\n    // make sure the current value is also added as one of the options,\n    // else it would look as if the first option is the current value\n    const optionsWithValue = enumValues.includes(props.value)\n      ? options\n      : [{ value: value as unknown, text: value as unknown }].concat(options)\n\n    return [\n      {\n        component: EnumValue,\n        props: {\n          value,\n          path,\n          selection,\n          parser,\n          readOnly,\n          onPatch,\n          options: optionsWithValue\n        }\n      }\n    ]\n  }\n\n  return null\n}\n","import type Ajv from 'ajv'\nimport type { Options, Schema, ErrorObject } from 'ajv'\nimport AjvDist from 'ajv'\nimport { parsePath } from 'immutable-json-patch'\nimport type { JSONSchema, JSONSchemaDefinitions, ValidationError, Validator } from '$lib/types'\nimport { ValidationSeverity } from '$lib/types.js'\n\nexport interface AjvValidatorOptions {\n  schema: JSONSchema\n  schemaDefinitions?: JSONSchemaDefinitions\n  ajvOptions?: Options\n  onCreateAjv?: (ajv: Ajv) => Ajv | void\n}\n\n/**\n * Create a JSON Schema validator powered by Ajv.\n * @param options\n * @property schema\n *                    The JSON schema to validate (required).\n * @property [schemaDefinitions=undefined]\n *                    An object containing JSON Schema definitions\n *                    which can be referenced using $ref\n * @property [ajvOptions=undefined]\n *                    Optional extra options for Ajv\n * @property [onCreateAjv=undefined]\n *                    An optional callback function allowing to apply additional\n *                    configuration on the provided Ajv instance, or return\n *                    your own Ajv instance and ignore the provided one.\n * @return Returns a validation function\n */\nexport function createAjvValidator(options: AjvValidatorOptions): Validator {\n  // Deprecation error for the API of v0.9.2 and older\n  if (options.schema === undefined) {\n    throw new Error(\n      'Deprecation warning: ' +\n        'the signature of createAjvValidator is changed from ' +\n        'createAjvValidator(schema, schemaDefinitions, ajvOptions) ' +\n        'to ' +\n        'createAjvValidator({ schema, schemaDefinitions, ajvOptions }). ' +\n        'Please pass the arguments as an object instead of unnamed arguments.'\n    )\n  }\n\n  let ajv = createAjvInstance(options)\n  if (options.onCreateAjv !== undefined) {\n    ajv = options.onCreateAjv(ajv) || ajv\n\n    // validate whether ajv is configured correctly (this is needed to enhance error messages)\n    if (ajv.opts.verbose === false) {\n      throw new Error('Ajv must be configured with the option verbose=true')\n    }\n  }\n\n  const validateAjv = ajv.compile(options.schema as Schema)\n\n  if (validateAjv.errors) {\n    throw validateAjv.errors[0]\n  }\n\n  return function validate(json: unknown): ValidationError[] {\n    validateAjv(json)\n    const ajvErrors = validateAjv.errors || []\n\n    return ajvErrors.map(improveAjvError).map((error) => normalizeAjvError(json, error))\n  }\n}\n\nfunction createAjvInstance(options: AjvValidatorOptions): Ajv {\n  const { schemaDefinitions, ajvOptions } = options\n\n  const ajv = new AjvDist({\n    allErrors: true,\n    verbose: true,\n    $data: true,\n    ...ajvOptions\n  })\n\n  if (schemaDefinitions) {\n    Object.keys(schemaDefinitions).forEach((ref) => {\n      ajv.addSchema(schemaDefinitions[ref] as Schema, ref)\n    })\n  }\n\n  return ajv\n}\n\nfunction normalizeAjvError(json: unknown, ajvError: ErrorObject): ValidationError {\n  return {\n    path: parsePath(json, ajvError.instancePath),\n    message: ajvError.message || 'Unknown error',\n    severity: ValidationSeverity.warning\n  }\n}\n\n/**\n * Improve the error message of a JSON schema error,\n * for example list the available values of an enum.\n *\n * @param {Object} ajvError\n * @return {Object} Returns the error with improved message\n */\nfunction improveAjvError(ajvError: ErrorObject) {\n  if (ajvError.keyword === 'enum' && Array.isArray(ajvError.schema)) {\n    let enums = ajvError.schema\n    if (enums) {\n      enums = enums.map((value) => JSON.stringify(value))\n\n      if (enums.length > 5) {\n        const more = ['(' + (enums.length - 5) + ' more...)']\n        enums = enums.slice(0, 5)\n        enums.push(more)\n      }\n      ajvError.message = 'should be equal to one of: ' + enums.join(', ')\n    }\n  }\n\n  if (ajvError.keyword === 'additionalProperties') {\n    ajvError.message = 'should NOT have additional property: ' + ajvError.params.additionalProperty\n  }\n\n  return ajvError\n}\n","import * as _ from 'lodash-es'\nimport { last } from 'lodash-es'\nimport { createLodashPropertySelector, createPropertySelector } from '../../utils/pathUtils.js'\nimport { parseString } from '../../utils/stringUtils.js'\nimport type { QueryLanguage, QueryLanguageOptions } from '../../types.js'\nimport { isInteger } from '../../utils/typeUtils.js'\n\nconst description = `\n<p>\n  Enter a JavaScript function to filter, sort, or transform the data.\n  You can use <a href=\"https://lodash.com\" target=\"_blank\" rel=\"noopener noreferrer\">Lodash</a>\n  functions like <code>_.map</code>, <code>_.filter</code>,\n  <code>_.orderBy</code>, <code>_.sortBy</code>, <code>_.groupBy</code>,\n  <code>_.pick</code>, <code>_.uniq</code>, <code>_.get</code>, etcetera.\n</p>\n`\n\nexport const lodashQueryLanguage: QueryLanguage = {\n  id: 'lodash',\n  name: 'Lodash',\n  description,\n  createQuery,\n  executeQuery\n}\n\nfunction createQuery(json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { filter, sort, projection } = queryOptions\n  const queryParts = ['  return _.chain(data)\\n']\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    // Note that the comparisons embrace type coercion,\n    // so a filter value like '5' (text) will match numbers like 5 too.\n    const actualValueGetter = `item => item${createPropertySelector(filter.path)}`\n\n    const filterValue = parseString(filter.value)\n    const filterValueStr =\n      typeof filterValue === 'string'\n        ? `'${filter.value}'`\n        : isInteger(filter.value) && !Number.isSafeInteger(filterValue)\n          ? `${filter.value}n` // bigint\n          : filter.value\n\n    queryParts.push(`    .filter(${actualValueGetter} ${filter.relation} ${filterValueStr})\\n`)\n  }\n\n  if (sort && sort.path && sort.direction) {\n    queryParts.push(\n      `    .orderBy([${createLodashPropertySelector(sort.path)}], ['${sort.direction}'])\\n`\n    )\n  }\n\n  if (projection && projection.paths) {\n    // It is possible to make a util function \"pickFlat\"\n    // and use that when building the query to make it more readable.\n    if (projection.paths.length > 1) {\n      // Note that we do not use _.pick() here because this function doesn't flatten the results\n      const paths = projection.paths.map((path) => {\n        const name = last(path) || 'item' // 'item' in case of having selected the item root\n        return `      ${JSON.stringify(name)}: item${createPropertySelector(path)}`\n      })\n      queryParts.push(`    .map(item => ({\\n${paths.join(',\\n')}\\n    }))\\n`)\n    } else {\n      const path = projection.paths[0]\n      queryParts.push(`    .map(item => item${createPropertySelector(path)})\\n`)\n    }\n  }\n\n  queryParts.push('    .value()\\n')\n\n  return `function query (data) {\\n${queryParts.join('')}}`\n}\n\nfunction executeQuery(json: unknown, query: string): unknown {\n  validate(query)\n\n  // FIXME: replace unsafe new Function with a JS based query language\n  //  As long as we don't persist or fetch queries, there is no security risk.\n  // TODO: only import the most relevant subset of lodash instead of the full library?\n  // eslint-disable-next-line no-new-func\n  const queryFn = new Function(\n    '_',\n    '\"use strict\";\\n' +\n      '\\n' +\n      query +\n      '\\n' +\n      '\\n' +\n      'if (typeof query !== \"function\") {\\n' +\n      '  throw new Error(\"Cannot execute query: expecting a function named \\'query\\' but is undefined\")\\n' +\n      '}\\n' +\n      '\\n' +\n      'return query;\\n'\n  )(_)\n\n  const output = queryFn(json)\n  return output !== undefined ? output : null\n}\n\nfunction validate(query: string) {\n  // It is very common to forget to end a lodash chain with .value()\n  // This lets the JSON Editor crash though.\n  // Therefore, we do a simple validation (not a guarantee)\n  const chainCount = query.match(/_\\.chain\\(/g)?.length\n  const valueCount = query.match(/\\.value\\(\\)/g)?.length\n\n  if (chainCount !== valueCount) {\n    throw new Error('Cannot execute query: Lodash _.chain(...) must end with .value()')\n  }\n}\n","import jmespath from 'jmespath'\nimport type { JSONPath } from 'immutable-json-patch'\nimport { getIn } from 'immutable-json-patch'\nimport { parseString } from '$lib/utils/stringUtils.js'\nimport type { JSONParser, QueryLanguage, QueryLanguageOptions } from '$lib/types'\nimport { isEqualParser } from '$lib/utils/jsonUtils.js'\n\nconst description = `\n<p>\n  Enter a <a href=\"https://jmespath.org\" target=\"_blank\" rel=\"noopener noreferrer\">JMESPath</a> query \n  to filter, sort, or transform the JSON data.\n To learn JMESPath, go to <a href=\"https://jmespath.org/tutorial.html\" target=\"_blank\" rel=\"noopener noreferrer\">the interactive tutorial</a>.\n</p>\n`\n\nexport const jmespathQueryLanguage: QueryLanguage = {\n  id: 'jmespath',\n  name: 'JMESPath',\n  description: description,\n  createQuery,\n  executeQuery\n}\n\n/**\n * Build a JMESPath query based on query options coming from the wizard\n * @param json   The JSON document for which to build the query.\n *                      Used for context information like determining\n *                      the type of values (string or number)\n * @param queryOptions\n * @return Returns a query (as string)\n */\nfunction createQuery(json: unknown, queryOptions: QueryLanguageOptions): string {\n  const { sort, filter, projection } = queryOptions\n  let query = ''\n\n  if (filter && filter.path && filter.relation && filter.value) {\n    const examplePath = ['0'].concat(filter.path)\n    const exampleValue = getIn(json, examplePath)\n    const filterValue = parseString(filter.value)\n    const filterValueStr =\n      typeof exampleValue === 'string' && filterValue !== null && filterValue !== undefined\n        ? `\"${filter.value}\"`\n        : filterValue\n\n    query +=\n      '[? ' +\n      stringifyPathForJmespath(filter.path) +\n      ' ' +\n      filter.relation +\n      ' ' +\n      '`' +\n      filterValueStr +\n      '`' +\n      ']'\n  } else {\n    query += Array.isArray(json) ? '[*]' : '@'\n  }\n\n  if (sort && sort.path && sort.direction) {\n    if (sort.direction === 'desc') {\n      query += ' | reverse(sort_by(@, &' + stringifyPathForJmespath(sort.path) + '))'\n    } else {\n      query += ' | sort_by(@, &' + stringifyPathForJmespath(sort.path) + ')'\n    }\n  }\n\n  if (projection && projection.paths) {\n    if (query[query.length - 1] !== ']') {\n      query += ' | [*]'\n    }\n\n    if (projection.paths.length === 1) {\n      const path = projection.paths[0]\n\n      query +=\n        path.length === 0\n          ? '' // edge case, selecting projection of the item root\n          : '.' + stringifyPathForJmespath(path)\n    } else if (projection.paths.length > 1) {\n      query +=\n        '.{' +\n        projection.paths\n          .map((path) => {\n            const name = path[path.length - 1]\n            return stringifyProp(name) + ': ' + stringifyPathForJmespath(path)\n          })\n          .join(', ') +\n        '}'\n    } else {\n      // values.length === 0\n      // ignore\n    }\n  }\n\n  return query\n}\n\n/**\n * Execute a JMESPath query, returns the transformed JSON\n */\nfunction executeQuery(json: unknown, query: string, parser: JSONParser): unknown {\n  // JMESPath cannot handle non-native JSON data types like LosslessNumber\n\n  function stringifyAndParse(json: unknown) {\n    const text = parser.stringify(json)\n    return text !== undefined ? JSON.parse(text) : undefined\n  }\n\n  const preprocessedJson = isEqualParser(parser, JSON) ? json : stringifyAndParse(json)\n\n  return jmespath.search(preprocessedJson, query)\n}\n\n// TODO: unit test stringifyPathForJmespath\n// TODO: Isn't there a helper function exposed by the JMESPath library?\nexport function stringifyPathForJmespath(path: JSONPath): string {\n  if (path.length === 0) {\n    return '@'\n  }\n\n  const str = path\n    .map((prop) => {\n      if (typeof prop === 'number') {\n        return '[' + prop + ']'\n      } else {\n        return '.' + stringifyProp(String(prop))\n      }\n    })\n    .join('')\n\n  return str[0] === '.'\n    ? str.slice(1) // remove first dot\n    : str\n}\n\nfunction stringifyProp(prop: string): string {\n  return prop.match(/^[A-Za-z\\d_$]+$/) ? prop : JSON.stringify(prop)\n}\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","_typeof","not_equal","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","value","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","f","size","globals","globalThis","global","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","get_root_for_style","getElementById","style","element","id","textContent","append_stylesheet","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","sheet","head","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","stop_propagation","stopPropagation","attr","attribute","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","cssText","set","indexOf","set_svg_attributes","set_data","set_input_value","input","set_style","important","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","toggle_class","toggle","classList","custom_event","type","detail","_ref2","arguments","_ref2$bubbles","bubbles","_ref2$cancelable","cancelable","CustomEvent","construct_svelte_component","component","current_component","managed_styles","Map","active","create_rule","duration","delay","ease","uid","step","keyframes","t","concat","rule","str","hash","charCodeAt","doc","_ref3","get","info","stylesheet","rules","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","deleted","join","ownerNode","clear","set_current_component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","_ref4$cancelable","callbacks","defaultPrevented","setContext","context","getContext","bubble","_this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","promise","seen_callbacks","flushidx","saved_component","update","e","pop","callback","add","fragment","before_update","after_update","dispatch","direction","kind","dispatchEvent","outros","outroing","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","original_inert_value","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","_ref5","_ref5$delay","_ref5$duration","_ref5$easing","easing","linear","_ref5$tick","css","inert","fulfill","ensure_array_like","array_like_or_iterator","Array","from","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","updates","_loop","child_ctx","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","to_null_out","accounted_for","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","_component$$$","_component$$$$on_dest","new_on_destroy","map","apply","_toConsumableArray","destroy_component","filtered","targets","instance","create_fragment","parent_component","on_disconnect","skip_bound","ready","ret","fill","make_dirty","hydrate","nodes","childNodes","children","l","SvelteComponent","_classCallCheck","_defineProperty","_createClass","$destroy","splice","obj","$$set","createDebug","namespace","enabled","debug","localStorage","error","tryReadLocalStorage","endsWith","startsWith","enableDebug","color","colors","selectColor","_len","_console","args","_key4","console","log","__svelte","v","fade","_ref6","_ref6$delay","_ref6$duration","_ref6$easing","getComputedStyle","opacity","if_block","closeButton","create_if_block_1","div0","div0_class_value","classContent","div1","div1_class_value","classWindow","div1_aria_label_value","ariaLabelledBy","ariaLabel","div2","div2_class_value","classWindowWrap","div3","div3_id_value","div3_class_value","classBg","current","div1_transition","transitionWindowProps","div3_transition","transitionBgProps","button_class_value","classCloseButton","button","switch_value","create_if_block","Component","_objectSpread","background","wrap","modalWindow","scrollY","cssBg","cssWindowWrap","cssWindow","cssContent","cssCloseButton","currentTransitionBg","currentTransitionWindow","prevBodyPosition","prevBodyOverflow","prevBodyWidth","outerClickTarget","baseSetContext","svelte.setContext","_$$props$isTabbable","$$props","isTabbable","tabIndex","hidden","disabled","display","Boolean","offsetWidth","offsetHeight","getClientRects","_$$props$show","show","_$$props$id","_$$props$key","_$$props$ariaLabel","_$$props$ariaLabelled","_$$props$closeButton","_$$props$closeOnEsc","closeOnEsc","_$$props$closeOnOuter","closeOnOuterClick","styleBg","_$$props$styleBg","styleWindowWrap","_$$props$styleWindowW","styleWindow","_$$props$styleWindow","styleContent","_$$props$styleContent","styleCloseButton","_$$props$styleCloseBu","_$$props$classBg","_$$props$classWindowW","_$$props$classWindow","_$$props$classContent","_$$props$classCloseBu","_$$props$unstyled","unstyled","_$$props$setContext","_$$props$transitionBg","transitionBg","_$$props$transitionBg2","_$$props$transitionWi","transitionWindow","_$$props$transitionWi2","_$$props$disableFocus","disableFocusTrap","defaultState","state","toCssString","reduce","replace","toLowerCase","camelCaseToDash","isFunction","constructor","toVoid","onOpen","onClose","onOpened","onClosed","open","NewComponent","$$invalidate","width","innerWidth","height","innerHeight","disableScroll","close","enableScroll","body","position","overflow","top","scrollTo","left","behavior","isMounted","svelte.onDestroy","svelte.onMount","querySelectorAll","tabbable","sort","activeElement","shiftKey","focus","$$value","Mode","SelectionType","CaretType","ValidationSeverity","SearchField","SortDirection","UpdateSelectionAfterChange","AUTO_SCROLL_INTERVAL","AUTO_SCROLL_SPEED_SLOW","AUTO_SCROLL_SPEED_NORMAL","AUTO_SCROLL_SPEED_FAST","MAX_SEARCH_RESULTS","ARRAY_SECTION_SIZE","MAX_VALIDATION_ERRORS","MAX_CHARACTERS_TEXT_PREVIEW","DEFAULT_VISIBLE_SECTIONS","MAX_VALIDATABLE_SIZE","MAX_AUTO_REPAIRABLE_SIZE","MAX_DOCUMENT_SIZE_TEXT_MODE","MAX_DOCUMENT_SIZE_EXPAND_ALL","SIMPLE_MODAL_OPTIONS","SORT_MODAL_OPTIONS","TRANSFORM_MODAL_OPTIONS","JSONEDITOR_MODAL_OPTIONS","INSERT_EXPLANATION","CONTEXT_MENU_EXPLANATION","HOVER_INSERT_INSIDE","HOVER_INSERT_AFTER","HOVER_COLLECTION","JSON_STATUS_VALID","JSON_STATUS_REPAIRABLE","CONTEXT_MENU_HEIGHT","CONTEXT_MENU_WIDTH","SORT_DIRECTION_NAMES","asc","desc","uniqueId","int","parseInt","isNumber","NUMBER_REGEX","test","isObject","isObjectOrArray","isTimestamp","isFinite","floor","isNaN","valueOf","Number","err","getColorCSS","div","applied","valueType","parser","isArray","valueStr","stringify","isUrlRegex","isUrl","stringConvert","strTrim","trim","parse","isInteger","INTEGER_REGEX","MAX_ITEM_PATHS_COLLECTION","ROOT_PATH","getNestedPaths","array","includeObjects","pointersMap","TypeError","recurseNestedPaths","path","compileJSONPointer","min","parseJSONPointer","forEachIndex","iteratee","limit","arrayToObject","objectToArray","object","values","moveItems","count","offset","copy","moving","parseAndRepair","jsonText","jsonrepair","parseAndRepairOrUndefined","partialJson","parsePartialJson","END_WITH_COMMA_AND_OPTIONAL_WHITESPACES_REGEX","repairPartialJson","repaired","substring","normalizeJsonParseError","parseErrorMessage","positionMatch","POSITION_REGEX","exec","line","character","charAt","countCharacterOccurrences","column","lastIndexOf","message","lineMatch","LINE_REGEX","lineOneBased","columnMatch","COLUMN_REGEX","columnOneBased","calculatePosition","validateContentType","content","json","isContent","isTextContent","isJSONContent","toTextContent","indentation","JSON","toJSONContent","getText","isLargeContent","maxSize","estimateSerializedSize","Infinity","estimatedSize","recurse","String","isEqualParser","needsFormatting","NEEDS_FORMATTING_REGEX","createNormalizationFunctions","_ref7","escapeControlCharacters","escapeUnicodeCharacters","normalizeControlAndUnicode","normalizeControl","normalizeUnicode","normalizeNothing","escapeValue","jsonEscapeUnicode","jsonEscapeControl","unescapeValue","jsonUnescapeControl","jsonUnescapeUnicode","_x$codePointAt","codePointAt","toString","unescaped","controlCharacters","escapedControlCharacters","addNewLineSuffix","isChildOfNodeName","nodeName","isChildOf","toUpperCase","isChildOfAttribute","hasAttribute","predicate","findParent","setCursorToEnd","firstChild","range","createRange","selection","getSelection","setStart","collapse","removeAllRanges","addRange","insertActiveElementContents","container","replaceContents","onActiveElement","getWindow","isContentEditable","defaultView","activeElementIsChildOf","findParentWithNodeName","getSelectionTypeFromTarget","inside","after","multi","encodeDataPath","encodeURIComponent","getDataPathFromTarget","parent","dataPath","decodeURIComponent","findNearestElement","_ref8","allElements","currentElement","_ref8$hasPrio","hasPrio","_ref8$margin","margin","all","rect","getBoundingClientRect","calculateCenter","y","distance","weightY","diffX","diffY","sqrt","distanceToCurrent","candidate","candidatesLeft","right","candidatesLeftOnRow","nearest","minBy","candidates","prioCandidates","isEditableDivRef","refresh","cancel","keyComboFromEvent","separator","combi","ctrlKey","metaKey","altKey","keyName","metaKeys","Ctrl","Command","Control","Alt","Option","Shift","switch_instance_spread_levels","switch_instance_props","div_style_value","calculateStyle","handleMouseDownInside","refRootPopup","rootRect","_calculatePosition","_options$width","_options$height","_options$offsetTop","offsetTop","_options$offsetLeft","offsetLeft","_anchor$getBoundingCl","bottom","positionAbove","positionLeft","_options$width2","_options$height2","refHiddenInput","popup","closeAbsolutePopup","closeWhenOutside","each_blocks","popups","popupId","popupIndex","findIndex","openAbsolutePopup","stringifyJSONPath","integerNumberRegex","parseJSONPath","pathStr","parseProp","eatCharacter","isEnd","unescape","prop","char","SyntaxError","pathToOption","label","isEmpty","stringifyLodashProperty","javaScriptPropertyRegex","propStr","createPropertySelector","findUniqueName","keysSet","nameWithoutCopySuffix","validName","truncate","maxLength","maxTextLength","ellipsis","parseString","lower","num","numFloat","parseFloat","javascriptQueryLanguage","queryOptions","projection","queryParts","relation","actualValueGetter","filterValue","filterValueStr","isSafeInteger","paths","item","query","output","Function","queryFn","g","cursor","raw","getRaw","rawData","ids","match","rawId","_","pointerId","svg","class","svg_class_value","role","svg_role_value","_$$props2$class","className","_$$props5$box","box","_$$props6$spin","spin","_$$props7$inverse","inverse","_$$props8$pulse","pulse","_$$props9$flip","flip","_$$props10$style","_$$props11$label","if_block0","create_if_block_3","if_block1","polygons","create_if_block_2","if_block2","each_value_1","path_1","each_value","polygon_1","iconData","combinedStyle","_$$props13$class","_$$props15$scale","scale","_$$props16$spin","_$$props17$inverse","_$$props18$pulse","_$$props19$flip","_$$props20$label","_$$props21$style","normalisedScale","numScale","warn","calculateRatio","iconName","_data$icon","_slicedToArray","icon","normaliseData","combined","faCheckSquare","faSquare","div_aria_checked_value","icon_changes","readOnly","onPatch","op","ref","onChange","showOnTop","destroyColorPicker","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$import","VanillaPicker","colorPicker","_context","prev","t1","sent","t0","t2","onDone","hex","rgba","_getWindow$1$innerHei","_getWindow$","windowHeight","ColorPickerPopup","mergeSections","sections","sortedSections","sortBy","section","mergedSections","sortedIndex","mergedIndex","inVisibleSection","some","nextRoundNumber","currentRoundNumber","createDocumentState","documentState","expandedMap","enforceStringMap","visibleSectionsMap","sortedColumn","expand","expandWithCallback","getVisibleSections","pointer","forEachVisibleIndex","jsonArray","visibleSections","_ref24","expandPath","partialPath","partialPointer","getIn","newSection","expandedCallback","currentPath","pathIndex","_iterator","_step","_createForOfIteratorHelper","s","done","collapsePath","deletePath","setEnforceString","enforceString","updatedEnforceString","documentStatePatch","operations","updatedJson","immutableJSONPatch","updatedDocumentState","updatingState","operation","isJSONPatchAdd","documentStateAdd","isJSONPatchRemove","documentStateRemove","isJSONPatchReplace","cleanupNonExistingPaths","isJSONObject","isJSONArray","documentStateReplace","isJSONPatchCopy","isJSONPatchMove","renamePointer","expandedMapCopy","movePath","filterPath","enforceStringMapCopy","visibleSectionsMapCopy","updatedState","mergePaths","documentStateMoveOrCopy","parsePath","parentPath","initial","parentPointer","last","shiftPath","updateInPathsMap","shiftVisibleSections","updatedMap","itemPointer","startsWithJSONPointer","filteredMap","changePointer","movedMap","oldPointer","newPointer","indexPathPos","matches","_i12","_Object$keys","itemPath","existsIn","updatedValue","isEqual","mergeAdjacentSections","getEnforceString","isStringContainingPrimitiveValue","getNextKeys","includeKey","getVisiblePaths","_recurse","getVisibleCaretPositions","includeInside","propertyPath","getNextVisiblePath","visiblePaths","expandRecursive","expandContents","expandAll","expandMinimal","isAfterSelection","isInsideSelection","isKeySelection","isValueSelection","isMultiSelection","isMultiSelectionWithOneItem","focusPath","anchorPath","isJSONSelection","isTextSelection","getSelectionPaths","getAnchorPath","getFocusPath","sharedPath","findSharedPath","createMultiSelection","startPath","getStartPath","endPath","getEndPath","startIndex","getChildIndex","endIndex","iterateOverSelection","getParentPath","anchorIndex","getSelectionUp","keepAnchorPath","previousPath","visiblePathPointers","pathPointer","getPreviousVisiblePath","createValueSelection","createKeySelection","findCaretAndSiblings","caret","visibleCaretPositions","getInitialSelection","createSelectionFromOperations","every","firstOp","otherOps","path1","path2","singleItemSelected","findRootPath","pathStartsWith","removeEditModeFromSelection","edit","createInsideSelection","createAfterSelection","isParent","selectionToPartialJson","_parser$stringify","_parser$stringify2","_parser$stringify3","isEditingSelection","hasSelectionContents","canConvert","fromCaretPosition","caretPosition","fromSelectionType","selectionType","selectionIfOverlapping","pathInSelection","classnames","classes","_len2","_key5","_i14","_args2","arg","hasOwnProperty","getValueClass","div_class_value","domValue","valueClass","_$$props$shortText","shortText","onCancel","onFind","_$$props$onPaste","onPaste","_$$props$onValueClass","onValueClass","closed","getDomValue","removeNewLineSuffix","innerText","setDomValue","handleValueInput","newValue","handleCancel","no","combo","nextInside","clipboardData","clipboardText","getData","hasFocus","self","normalization","onPasteJson","onSelect","findNextInside","convert","updateSelection","patchedJson","patchedState","pastedText","pastedJson","contents","entry","afterKey","nextKeys","newProp","moveDown","rename","oldKey","newKey","newKeyUnique","duplicate","lastPath","beforeKey","clipboard","newValues","clipboardToValues","firstPath","removeAll","removeKeys","filteredKeys","nextKey","firstKey","reverse","textIsObject","textIsArray","clipboardOriginal","clipboardRepaired","createRemoveOperations","newSelection","previousKey","revertJSONPatchWithMoveOperations","revertJSONPatch","before","revertOperations","createRevertMoveOperations","searchNext","searchResult","nextActiveIndex","activeIndex","items","nextActiveItem","itemsMap","groupBy","activeItem","searchPrevious","previousActiveIndex","previousActiveItem","search","searchText","maxResults","results","onMatch","searchRecursive","searchTextLowerCase","level","_i15","_keys4","findCaseInsensitiveMatches","field","textLower","fieldIndex","replaceText","replacementText","replaceAllText","occurrences","updatedText","forEachRight","occurrence","createSearchAndReplaceOperations","searchResultItem","currentValue","currentValueText","createSearchAndReplaceAllOperations","searchResultItems","deduplicatedMatches","previousItem","allOperations","lastNewSelection","getSearchResultPath","filterKeySearchResults","_map$pointer","filterValueSearchResults","_map$pointer2","span","t_value","parts","_step2","previousEnd","_iterator2","precedingText","matchingText","lastMatch","splitValue","valueIsUrl","tooltip","_ref35","handleMouseEnter","Tooltip","handleMouseLeave","faClock","absolutePopupContext","renderValue","_ref38","isEditing","renderers","isBoolean","BooleanToggle","isColor","ColorPicker","EditableValue","ReadonlyValue","TimestampTag","transformModalStates","transformModalStateShared","showWizard","showOriginal","round","createCoords","oppositeSideMap","oppositeAlignmentMap","clamp","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getOppositeAxisPlacements","flipAlignment","side","isStart","lr","rl","getSideList","getPaddingObject","padding","expandPaddingObject","rectToClientRect","computeCoordsFromPlacement","_ref","coords","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","computePosition","_ref39","_callee2","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","_validMiddleware$i","_name","_yield$fn","nextX","nextY","reset","_computeCoordsFromPla2","_context2","isRTL","getElementRects","initialPlacement","elements","abrupt","stop","_x","_x2","_x3","detectOverflow","_x4","_x5","_detectOverflow","_callee45","_await$platform$isEle","_evaluate3","_evaluate3$boundary","boundary","_evaluate3$rootBounda","rootBoundary","_evaluate3$elementCon","elementContext","_evaluate3$altBoundar","altBoundary","_evaluate3$padding","paddingObject","altContext","clippingClientRect","offsetParent","offsetScale","elementClientRect","_context45","isElement","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","_callee3","_middlewareData$arrow","_middlewareData$flip","_evaluate","_evaluate$mainAxis","checkMainAxis","_evaluate$crossAxis","checkCrossAxis","specifiedFallbackPlacements","_evaluate$fallbackStr","fallbackStrategy","_evaluate$fallbackAxi","fallbackAxisSideDirection","_evaluate$flipAlignme","detectOverflowOptions","isBasePlacement","fallbackPlacements","placements","overflows","overflowsData","sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","_overflowsData$map$so","_placement","_callee3$","_context3","mainAxis","crossAxis","_objectWithoutProperties","_excluded","arrow","alignmentOffset","acc","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee46","mainAxisMulti","crossAxisMulti","rawValue","_ref149","_callee46$","_context46","shift","_callee5","_evaluate2","_evaluate2$mainAxis","_evaluate2$crossAxis","_evaluate2$limiter","limiter","mainAxisCoord","crossAxisCoord","maxSide","_min","_max","_maxSide","_min2","_max2","limitedCoords","_callee5$","_context5","_excluded2","getNodeName","isNode","_node$ownerDocument","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","_getComputedStyle$","overflowX","overflowY","isTableElement","isContainingBlock","webkit","isWebKit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","assignedSlot","getNearestOverflowAncestor","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","hasOffset","shouldFallback","$","unwrapElement","domElement","_getCssDimensions","noOffsets","getVisualOffsets","includeScale","isFixedStrategy","clientRect","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","elementClippingAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","_ref40","_callee6","getOffsetParentFn","getDimensionsFn","_context6","getDimensions","_x8","autoUpdate","_options","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","ResizeObserver","_options$layoutShift","layoutShift","IntersectionObserver","_options$animationFra","animationFrame","referenceEl","ancestors","passive","frameId","cleanupIo","onMove","timeoutId","io","cleanup","clearTimeout","disconnect","skip","threshold","_element$getBoundingC","rootMargin","isFirstUpdate","handleObserve","observe","entries","ratio","intersectionRatio","setTimeout","observeMove","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","prevRefRect","frameLoop","nextRefRect","mergedOptions","platformWithCache","computePosition$1","_ref43","loadOptions","filterText","multiple","itemId","filterSelectedItems","itemFilter","convertStringItemsToObjects","filterGroupedItems","filterResults","matchesFilter","getItems","_x9","_getItems","_callee47","_ref44","res","_context47","details","cancelled","filteredItems","loading","focused","listOpen","circle","create_if_block_13","create_if_block_9","_ctx$","_ctx$2","groupHeader","groupItem","_ctx$3","selectable","listDom","_ctx$4","span0","span1","ClearIcon","create_if_block_6","create_if_block_8","create_if_block_7","create_if_block_4","input_1","if_block6","input_1_readonly_value","_items","timeout","activeValue","prev_value","prev_filterText","prev_multiple","_inputAttributes","slots","_$$props$justValue","justValue","_$$props$filter","_filter","_$$props$getItems","_$$props$id2","_$$props$name","_$$props$container","_$$props$input","_$$props$multiple","_$$props$multiFullIte","multiFullItemClearable","_$$props$disabled","_$$props$focused","_$$props$value","_$$props$filterText","_$$props$placeholder","placeholder","_$$props$placeholderA","placeholderAlwaysShow","_$$props$items","_$$props$label","_$$props$itemFilter","_$$props$groupBy","groupFilter","_$$props$groupFilter","groups","_$$props$groupHeaderS","groupHeaderSelectable","_$$props$itemId","_$$props$loadOptions","_$$props$containerSty","containerStyles","_$$props$hasError","hasError","_$$props$filterSelect","_$$props$required","required","_$$props$closeListOnC","closeListOnChange","_$$props$clearFilterT","clearFilterTextOnBlur","createGroupHeaderItem","_$$props$createGroupH","groupValue","_$$props$searchable","searchable","_$$props$inputStyles","inputStyles","_$$props$clearable","clearable","_$$props$loading","_$$props$listOpen","_$$props$debounce","debounce","wait","_$$props$debounceWait","debounceWait","_$$props$hideEmptySta","hideEmptyState","inputAttributes","_$$props$inputAttribu","_$$props$listAutoWidt","listAutoWidth","_$$props$showChevron","showChevron","_$$props$listOffset","listOffset","_$$props$hoverItemInd","hoverItemIndex","floatingConfig","_$$props$floatingConf","_$$props$class","containerClasses","groupValues","sortedGroupedItems","checkHoverSelectable","startingIndex","ignoreGroup","setHoverIndex","checkValueForDuplicates","noDuplicates","uniqueValues","val","findItem","matchTo","find","handleMultiItemClear","_x10","_handleMultiItemClear","_callee9","itemToRemove","_context9","handleFocus","_document","_input","handleBlur","_x11","_handleBlur","_callee10","_input2","_context10","isScrolling","closeList","blur","_callee8","_context8","_$$props$ariaValues","ariaValues","ariaListOpen","_$$props$ariaListOpen","ariaFocused","_$$props$ariaFocused","isScrollingTimer","handleListScroll","_list2","remove","handleSelect","itemSelected","handleHover","handleItemClick","isItemSelectable","increment","hasOwn","hover","activeScroll","scrollAction","hoverScroll","scrollIntoView","_floatingConfig","_callee4","_middlewareData$offse","diffCoords","_context4","_createFloatingAction","initOptions","referenceElement","floatingElement","defaultOptions","getOptions","mixin","updatePosition","updateOptions","_options2","onComputed","setupVirtualElementObserver","subscribe","$node","contentOptions","autoUpdateDestroy","destroyAutoUpdate","initAutoUpdate","_autoUpdate","createFloatingActions","_createFloatingAction2","floatingRef","floatingContent","floatingUpdate","prefloat","setValue","autocapitalize","autocomplete","autocorrect","spellcheck","tabindex","_context7","hasValue","hideSelectedItem","showClear","placeholderText","_value4","ariaSelection","ariaContext","_item","handleAriaContent","updateValueDisplay","handleFilterEvent","_floatingConfig2","listMounted","scrollToHoverItem","hoverItem","_list","contains","table","tr0","th0","td0","tr1","th1","td1","tr2","th2","td2","_$$props$queryOptions","filterRelationOptions","sortDirectionOptions","_queryOptions","filterRelation","_queryOptions2","_queryOptions$filter","_queryOptions3","sortPath","_queryOptions4","sortDirection","_queryOptions5","_queryOptions$sort","_queryOptions6","_queryOptions7","_queryOptions8","_queryOptions10","jsonIsArray","pathsIncludingObjects","fieldOptions","projectionOptions","projectionPaths","_queryOptions12","_filterPath","setIn","_filterRelation","_queryOptions9","changeSortPath","_sortPath","_sortDirection","_queryOptions11","changeProjectionPaths","t1_value","button_title_value","queryLanguages","queryLanguageId","onChangeQueryLanguage","handleChangeQueryLanguage","newQueryLanguageId","queryLanguage","faCog","faTimes","refConfigButton","_getContext3","SelectQueryLanguage","easeInOutQuad","createJump","a11y","timeStart","timeElapsed","scrolling","loop","timeCurrent","querySelector","MAX_HISTORY_ITEMS","createHistory","maxItems","canUndo","canRedo","getState","handleChange","undo","redo","measure","onDuration","validateJSON","validator","validationParser","validateText","validationErrors","severity","convertedJSON","isRepairable","canAutoRepair","parseError","createFocusTracker","_ref55","blurTimeoutHandle","onFocus","onBlur","handleFocusIn","newFocus","handleFocusOut","icon_1","Icon","icon_1_changes","title","button_disabled_value","_$$props$type","_$$props$icon","_$$props$message","actions","_$$props$actions","_$$props$onClick","onClick","_$$props$onClose","action","onMouseDown","faExclamationTriangle","faAngleRight","tbody","tr","faAngleDown","t3_value","td3","show_if","selectError","expanded","validationError","IS_MAC","navigator","_$$props$title","_$$props$onClose2","div10","div9","div7","div4","div6","div5","div8","isMenuSpace","isMenuSeparator","isMenuLabel","isMenuButton","isMenuDropDownButton","isContextMenuRow","isContextMenuColumn","isContentParseError","contentErrors","isContentValidationErrors","isValidationError","isNestedValidationError","isChildError","unknownMenuItem","show_if_1","show_if_2","_$$props$items2","message_changes","textarea","domTextArea","_$$props$text","_$$props$readOnly","onParse","onRepair","_$$props$onChange","onApply","handleApply","getErrorMessage","repairable","errorActions","gotoAction","repairAction","successActions","faCheck","faArrowDown","setSelectionRange","faWrench","handleKeyDown","onEscape","repairedText","_$$props$className","onCloseContextMenu","li","faCaretDown","ul","_$$props$items3","_$$props$title2","_$$props$width","visible","handleClick","allItemsDisabled","wasVisible","main","dropdownbutton_changes","_$$props$className2","each_value_2","show_if_3","faLightbulb","refContextMenu","tip","firstEnabledButton","directionByCombo","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","defaultItems","showTip","onRenderContextMenu","onEditKey","onEditValue","onToggleEnforceString","onCut","onCopy","onRemove","onDuplicate","onExtract","onInsertBefore","onInsert","onConvert","onInsertAfter","onSort","onTransform","handleInsertOrConvert","hasJson","hasSelection","rootSelected","focusValue","editValueText","canDuplicate","canExtract","canEditKey","canEditValue","canEnforceString","convertMode","insertOrConvertText","canInsertOrConvertStructure","canInsertOrConvertObject","canInsertOrConvertArray","canInsertOrConvertValue","faPen","faCut","faCopy","faPaste","faClone","faCropAlt","faSortAmountDownAlt","faFilter","faTrashCan","faArrowRightArrowLeft","faPlus","faCaretSquareUp","faCaretSquareDown","handleMouseMove","sectionIndex","total","onExpandSection","visibleSection","getJson","expandItemsSections","section1","start2","section2","currentIndex","previousIndex","section3","showSection2","getExpandItemsSections","expandItemsSection","onContextMenu","buttonElem","editablediv_changes","searchresulthighlighter_changes","contextmenupointer_changes","onUpdateKey","isKeySelected","isEditingKey","updatedKey","updatedPath","previous_key","onRenderValue","singleton","selecting","selectionAnchor","selectionAnchorType","selectionFocus","dragging","onMoveSelection","_ref84","deltaY","updatedSelection","dragInsideAction","_ref85","initialPath","initialIndex","prevHeight","_items2","cumulativeHeight","beforePath","findSwapPathUp","_ref86","_items$beforeIndex","nextHeight","_items3","findSwapPathDown","startKey","endKey","toKey","toIndex","times","moveInsideParent","_ref87","_items4","_items5","createUpdatedArraySelection","filterPointerOrUndefined","_i77","_Object$keys2","filterMapOrUndefined","onExpand","create_if_block_26","create_if_block_24","create_if_block_23","jsonvalue_changes","create_if_block_21","create_if_block_20","if_block4","create_if_block_18","create_if_block_16","create_if_block_17","create_if_block_10","faCaretRight","t2_value","t4_value","create_if_block_14","keySearchResultItemsMap","jsonkey_changes","validationErrorsMap","searchResultItemsMap","valueSearchResultItemsMap","jsonnode_changes","collapseditems_changes","onClassName","div_data_path_value","isNodeSelected","onDragSelectionStart","hoverTimer","memoizePath","memoize","handleMouseMoveGlobal","onDrag","handleMouseUpGlobal","onDragEnd","findContentTop","_context$findElement","findElement","calculateDeltaY","contentOffset","initialContentTop","clientY","initialClientY","handleDragSelection","getDocumentState","didMoveItems","handleDragSelectionEnd","_onMoveSelection3","initialTarget","keyPath","keyPointer","appendToJSONPointer","selectionStartIndex","selectionItemsCount","originalIndexes","recursive","contentEditable","isContentEditableDiv","which","anchorType","fullSelection","lastCaretPosition","selectionParentPath","addHeight","currentSection","getVisibleItemsWithHeights","contextMenuProps","faJSONEditorExpand","prefix","faJSONEditorCollapse","faJSONEditorFormat","faJSONEditorCompact","expandMenuItem","collapseMenuItem","searchMenuItem","_$$props$showSearch","showSearch","historyState","onExpandAll","onCollapseAll","onUndo","onRedo","onRenderMenu","handleToggleSearch","faSearch","faEllipsisV","faUndo","faRedo","button0","button1","onCreateArray","onCreateObject","caseInsensitiveNaturalCompare","aLower","bLower","naturalCompare","sortJson","rootPath","comparator","valueA","valueB","createObjectComparator","sortArray","sortedKeys","keyA","keyB","sortObjectKeys","MAX_ITEM_CHARACTERS","MAX_ITEMS","selectedItem","refNavigationBarItem","_getContext7","handleSelectItem","NavigationBarDropdown","copyToClipBoard","_document$queryComman","_document2","writeText","queryCommandSupported","execCommand","inputRef","inputPath","pathParser","onError","pathExists","validationActive","copiedTimer","copied","parseAndValidate","validatePathExists","inputValidationError","currentTarget","navigationbaritem_changes","faClose","faEdit","refNavigationBar","editing","handleCloseEditor","hasNextItem","faChevronDown","faChevronUp","form","button2","faCircleNotch","initSearchInput","_$$props$show2","searching","_$$props$resultCount","resultCount","_$$props$activeIndex","_$$props$showReplace","showReplace","_$$props$readOnly2","_$$props$onChange2","_$$props$onPrevious","onPrevious","_$$props$onNext","onNext","_$$props$onReplace","onReplace","_$$props$onReplaceAll","onReplaceAll","_$$props$onClose3","previousText","toggleShowReplace","handleReplace","formattedResultCount","onChangeDebounced","endOfPath","Symbol","getColumns","flatten","maxSampleCount","forEachSample","_recurseObject","_collectPaths","valueMerged","calculateVisibleSection","viewPortHeight","itemHeights","defaultItemHeight","itemCount","averageItemHeight","calculateAverageItemHeight","viewPortTop","viewPortBottom","getItemHeight","startHeight","visibleHeight","endHeight","visibleItems","calculateAbsolutePosition","columns","rowIndex","toTableCellPosition","_path5","columnIndex","fromTableCellPosition","groupValidationErrors","_partition2","partition","arrayErrors","rootErrors","errorsByRow","findRowIndex","groupedErrorsByRow","mapValues","errors","groupByRow","row","findColumnIndex","rows","mergeValidationErrors","warning","clearSortedColumnWhenAffectedByOperations","columms","_toTableCellPosition6","selectedColumnIndex","operationAffectsSortedColumn","_x12","_onCut","_callee48","_ref104","_createRemoveOperatio2","_callee48$","_context48","copyToClipboard","_x13","_onCopy","_callee49","_ref105","_context49","_ref106","onChangeText","openRepairModal","doPaste","selectionNonNull","_ref107","keepSelection","removeSelection","patchResult","_createRemoveOperatio","onDuplicateRow","_ref108","_toTableCellPosition7","rowPath","onInsertBeforeRow","_ref109","onInsertAfterRow","_ref110","_toTableCellPosition9","nextRowIndex","nextRowPath","onRemoveRow","_ref111","_toTableCellPosition10","newRowIndex","_ref112","insertType","selectInside","refJsonEditor","onReplaceJson","jsonExample","cloneDeepWith","createNewValue","tick2","refreshEditableDiv","onInsertCharacter","_x14","_onInsertCharacter","_callee50","_ref113","_char4","_replaceContents","_callee50$","_context50","onInsertValueWithCharacter","_x15","_onInsertValueWithCharacter","_callee51","_ref114","_char5","_context51","truncated","treemenu_changes","navigationbar_changes","_ctx$5","_ctx$6","_ctx$7","searchbox_changes","_ctx$8","_ctx$9","_ctx$10","faCode","create_if_block_5","isSSR","refContents","sortModalId","transformModalId","_getContext9","jump","externalContent","externalSelection","mainMenuBar","navigationBar","parseMemoizeOne","onChangeMode","onSortModal","onTransformModal","onJSONEditorModal","modalOpen","documentStateInitialized","handleSearchText","_x16","_handleSearchText","_callee12","_callee12$","_context12","focusActiveSearchResult","_handleNextSearchResult","_context13","_callee13","_handlePreviousSearchResult","_context14","_callee14","_handleReplace","_searchResult","_createSearchAndRepla","_context15","handlePatch","_callee15","_handleReplaceAll","_createSearchAndRepla2","_context16","_callee16","_focusActiveSearchResult","_searchResult2","_context17","_callee17","history","applySearchThrottled","throttle","newResultItems","previousResult","activePath","matchingActiveIndex","updateSearchResult","textIsRepaired","memoizedValidate","memoizeOne","updateValidationErrors","newValidationErrors","validate","applyExternalContent","updatedContent","isChanged","currentlyText","previousContent","previousState","previousJson","previousTextIsRepaired","expandWhenNotInitialized","clearSelectionWhenNotExisting","addHistoryItem","emitOnChange","applyExternalJson","repairError","applyExternalText","getDefaultExpand","_ref21","patch","afterPatch","patched","patchedDocumentState","updateSelectionInDocumentState","newState","handleEditKey","handleEditValue","openJSONEditorModal","handleToggleEnforceString","handleCut","_handleCut","indent","_args9","_context18","handleCopy","_handleCopy","_args10","_context19","handlePasteFromMenu","CopyPasteModal","JSONRepairModal","handleRemove","handleDuplicate","handleExtract","extract","handleInsert","handleReplaceJson","handleInsertFromContextMenu","handleConvert","convertedValue","parsedValue","convertValue","handleInsertBefore","selectionBefore","handleContextMenu","handleInsertAfter","handleInsertCharacter","_x21","_handleInsertCharacter","_callee20","_context20","handleUndo","handleRedo","openSortModal","_onSort","_ref45","handleSortSelection","openTransformModal","transformedJson","handleTransformSelection","_x23","_scrollTo","_callee21","scrollToWhenVisible","elem","viewPortRect","elemRect","_args12","_context21","elemHeight","_onChange","_onChange2","handleChangeText","handleExpand","expandSingleItem","isSelectionInsidePath","openFind","findAndReplace","handleExpandSection","expandSection","handlePasteJson","newPastedJson","openContextMenu","_ref46","TreeContextMenu","clientX","_refContents","_refContents2","_handleParsePastedJson","_context22","_pastedJson","refEditableDiv","_refContents3","_callee22","childPath","nextPathInside","getSelectionNextInside","handleDrag","autoScrollHandler","handleDragEnd","applyExternalSelection","mapValidationErrors","scrollableElement","autoScrollSpeed","autoScrollTimer","calculateSpeed","diff","autoScrollCallback","startAutoScroll","speed","stopAutoScroll","setInterval","clearInterval","_scrollableElement$ge","createAutoScrollHandler","_x17","_x18","_x19","_x20","_event$clipboardData","collapsedState","nextPath","nextPathAfter","getSelectionDown","_findCaretAndSiblings","getSelectionLeft","_findCaretAndSiblings2","getSelectionRight","outsideEditor","cleanDocumentState","description","input_value_value","div19","div17","div16","div12","div11","div15","div14","div18","innerHTML","raw_value","selectedJson","selectedContent","_$$props$id3","_$$props$rootPath","stateId","getSelectedQueryLanguage","createQuery","isManual","previewError","previewContent","previewTransformDebounced","jsonTransformed","executeQuery","newQueryOptions","newSelectedQueryLanguage","sortModalStates","th","td","_ctx$11","_ctx$12","colgroup","_ctx$13","_ctx$14","directions","selectedProperty","_sortModalStates$stat","selectedDirection","_sortModalStates$stat2","sortError","properties","_selectedProperty","_properties","_selectedDirection","formatSize","kilo","toFixed","KB","MB","GB","_$$props$readOnly3","onFormat","onCompact","onToggleSearch","canFormat","canCompact","canSort","canTransform","searchItem","pos","lineNumber","columnNumber","charCount","editorState","_editorState","_editorState2","lineAt","number","_editorState3","ranges","to","nextPropID","NodeProp","perNode","deserialize","_this55","RangeError","NodeType","closedBy","openedBy","contextHash","lookAhead","mounted","MountedTree","tree","overlay","noProps","flags","spec","skipped","_step5","_iterator5","direct","_iterator6","_step6","found","none","IterMode","CachedNode","WeakMap","CachedInnerNode","Tree","positions","_step7","_iterator7","_step7$value","_step8","_iterator8","isError","mode","TreeCursor","topNode","scope","moveTo","_tree","TreeNode","resolveNode","inner","resolveInner","layers","scan","mount","iterStack","stackIterator","enter","leave","_spec$from","_spec$to","anon","IncludeAnonymous","entered","isAnonymous","nextSibling","_this56","balanceRange","propValues","makeTree","buildTree","FlatBufferCursor","buffer","TreeBuffer","childString","types","dir","pick","checkSide","startI","endI","Uint16Array","j","overlays","_a","IgnoreOverlays","BaseNode","getChildren","matchNodeContext","childBefore","lastChild","prevSibling","_BaseNode","_inherits","_super54","_createSuper","_parent","_this57","_parent$_tree","ExcludeBuffers","findChild","BufferNode","BufferContext","hasChild","IgnoreMounts","nextChild","_step9","rPos","_iterator9","_step9$value","nextSignificantParent","cur","is","_BaseNode2","_super55","_this58","child","externalSibling","parentStart","heads","picked","newHeads","StackIterator","stack","bufferNode","yieldNode","unshift","yieldBuf","_this$buffer","enterChild","sibling","_this$_tree","_parent5","atLastNode","move","depth","mustLeave","ch","nodeSet","_data$maxBufferLength","maxBufferLength","_data$reused","reused","_data$minRepeatType","minRepeatType","takeNode","minPos","inRepeat","lookAheadAtStart","startPos","fork","minStart","nodeSize","localSkipped","nodeStart","findBufferSize","endPos","copyToBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","takeFlatNode","make","lookAheadProp","lastI","makeBalanced","nodeCount","stopAt","base","pair","bufferStart","topID","nodeSizeCache","balanceType","_step10","_iterator10","mkTop","mkTree","maxChild","ceil","divide","groupFrom","groupStart","groupSize","nextSize","only","nextTagID","Tag","modified","tag","_iterator11","_step11","mod","Modifier","nextModifierID","instances","mods","exists","_step12","_iterator12","_step13","configs","sets","powerSet","_iterator13","_step14","_iterator14","define","comment","typeName","propertyName","literal","string","heading","keyword","operator","punctuation","bracket","meta","tags","lineComment","blockComment","docComment","variableName","tagName","attributeName","labelName","macroName","docString","attributeValue","integer","float","bool","regexp","escape","url","null","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","moduleKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","quote","emphasis","strong","link","monospace","strikethrough","inserted","changed","invalid","documentMeta","annotation","processingInstruction","defineModifier","constant","function","standard","special","_step15","_iterator15","_step18","_iterator18","_ref121","_ref121$all","tagHighlighter","highlightStyle","HighlightStyle","highlighter","syntaxHighlighting","originalStyle","get_if_ctx_1","toDiagnostic","codeMirrorRef","domTextMode","codeMirrorView","statusBar","askToFormat","tabSize","formatCompactKeyBinding","handleFormat","handleCompact","acceptTooLarge","linterCompartment","Compartment","readOnlyCompartment","indentUnitCompartment","tabSizeCompartment","themeCompartment","previousEscapeUnicodeCharacters","_callee23","_context23","createCodeMirrorView","initialText","disableTextEditor","setCodeMirrorContent","handleRepair","jsonStatus","jsonParseError","_ref124","setSelection","handleDoubleClick","view","selectedText","jsmap","jsonSourceMap","pointers","_pointer$value","valueEnd","createLinter","linter","linterCallback","_ref125","EditorState","toCodeMirrorSelection","extensions","keymap","of","indentWithTab","lintGutter","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","foldGutter","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","defaultHighlightStyle","fallback","bracketMatching","closeBrackets","autocompletion","rectangularSelection","crosshairCursor","highlightActiveLine","highlightSelectionMatches","closeBracketsKeymap","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","indentationMarkers","hideFirstIndent","EditorView","domEventHandlers","dblclick","updateListener","docChanged","onChangeCodeMirrorValueDebounced","selectionSet","emitOnSelect","jsonLang","createIndentUnit","theme","dark","hasDarkTheme","lineWrapping","wrappedLineIndent","getPropertyValue","toRichValidationError","_findTextLocation","pointerName","keyEnd","findTextLocation","toRichParseError","newContent","forceUpdate","newText","changes","updateCanUndoRedo","EditorSelection","fromJSON","_refresh","updateTheme","_context25","_callee25","onChangeCodeMirrorValue","codeMirrorText","_updateTheme","effects","reconfigure","indentUnit","repeat","undoDepth","redoDepth","toJSON","memoizedValidateText","handleShowMe","richParseError","handleSelectParseError","repairActionShowMe","faEye","eq","updateLinter","updateIndentation","updateTabSize","updateReadOnly","repairActions","_onSort2","_ref123","_context24","_callee24","closeSearchPanel","openSearchPanel","_toRichValidationErro","flatMap","extendedOperations","createNestedValueOperations","_ctx$2$stringify","_ctx$2$stringify2","isSelected","onEdit","faCaretUp","t0_value","columnName","_sortedColumn","sortDirectionName","observer","onResize","_step19","_iterator19","onEditRow","constants_0","t7_value","t5_value","nestedArrayPaths","maxLevel","findNestedArrays","hasNestedArrays","isEmptyDocument","documentType","nestedArrayPath","faRotate","onRefresh","constants_2","_child_ctx$","_child_ctx$2","_child_ctx$3","_ctx$15","td0_colspan_value","td1_colspan_value","_ctx$16","each_blocks_1","create_if_block_11","columnheader_changes","jsonvaluecomponent_changes","td_data_path_value","_getContext13","flattenColumns","itemHeightsCache","currentContent","_ref140","handleFind","createDefaultSelectionWhenUndefined","roughDistance","scrollToHorizontal","_callback","_callee27","_callee27$","_context27","newTop","scrollToVertical","_ref141","TableContextMenu","handleEditRow","handleDuplicateRow","handleInsertBeforeRow","handleInsertAfterRow","handleRemoveRow","_refContents4","_refContents5","_handleParsePastedJson2","_context28","_pastedJson2","_refContents6","_callee28","_x25","_handleCut2","_callee29","_context29","_handleCopy2","_args21","_context30","_handleInsertCharacter2","_callee31","_context31","handleResizeRow","newColumns","previousColumns","_step3","orderedColumns","newColumnsSet","_iterator3","_step4","_iterator4","maintainColumnOrder","containsValidArray","showRefreshButton","groupedValidationErrors","newSortedColumn","_toTableCellPosition4","selectPreviousColumn","_toTableCellPosition5","selectNextColumn","_toTableCellPosition2","selectPreviousRow","_toTableCellPosition3","selectNextRow","_x26","_event$clipboardData2","_ref142","refTreeMode","refTableMode","refTextMode","modeMenuItems","handleRenderMenu","handleRenderContextMenu","insideModal","separatorMenuItem","_refresh2","_context32","_callee32","updatedItems","modal","acceptAutoRepair","faCaretLeft","jsoneditorroot_changes","refEditor","rootState","determineMode","relativePath","scrollToSelection","_last2","currentState","absolutePath","pathDescription","parentJson","updatedParentContent","updatedParentState","parentState","newMode","newError","_ref143","nestedModalState","_ctx$17","_ctx$18","refJSONEditorRoot","_$$props$content","_$$props$selection","_$$props$readOnly4","_$$props$indentation","_$$props$tabSize","_$$props$mode","_$$props$mainMenuBar","_$$props$navigationBa","_$$props$statusBar","_$$props$askToFormat","_$$props$escapeContro","_$$props$escapeUnicod","_$$props$flattenColum","_$$props$parser","_$$props$validator","_$$props$validationPa","_$$props$pathParser","_$$props$queryLanguag","_$$props$queryLanguag2","_$$props$onChangeQuer","_$$props$onChange3","_$$props$onSelect","_$$props$onRenderValu","_$$props$onClassName","_$$props$onRenderMenu","_$$props$onRenderCont","_$$props$onChangeMode","_$$props$onError","alert","_$$props$onFocus","_$$props$onBlur","instanceId","jsoneditorModalState","previousParser","_set","_callee33","contentError","_callee33$","_context33","_update","_callee34","_context34","_patch","_callee35","_context35","_select","_callee36","_context36","_expand","_callee37","_context37","_acceptAutoRepair","_context38","_callee38","_scrollTo2","_callee39","_callee39$","_context39","_focus","_context40","_callee40","_refresh3","_context41","_callee41","_updateProps","_callee42","_callee42$","_context42","$set","_destroy","_context43","_callee43","_toggleMode","_callee44","_callee44$","_context44","_ref144","TransformModal","_ref145","SortModal","status","_x34","_ref146","JSONEditorModal","_jsoneditorModalState","_jsoneditorModalState2","_x27","_x28","_x29","_x30","_x31","_x32","_x33","option_1","option_1_value_value","handleMouseDown","refSelect","bindValue","applyFocus","selected_option","getJSONSchemaOptions","schema","schemaDefinitions","schemaForPath","findSchema","composite","findEnum","topLevelSchema","currentSchema","possibleSchemas","_i130","_arr","oneOf","anyOf","allOf","subSchemas","_step20","_iterator20","$ref","_ref$match","_ref$split2","schemaUrl","referencedSchema","auxNextPath","refPath","_step21","_iterator21","segment","patternProperties","additionalProperties","renderJSONSchemaEnum","enumValues","enumValue","optionsWithValue","EnumValue","createAjvValidator","ajv","ajvOptions","AjvDist","allErrors","verbose","$data","addSchema","createAjvInstance","onCreateAjv","opts","validateAjv","compile","improveAjvError","ajvError","instancePath","normalizeAjvError","enums","more","additionalProperty","lodashQueryLanguage","createLodashPropertySelector","_query$match","_query$match2","chainCount","valueCount","jmespathQueryLanguage","examplePath","exampleValue","stringifyPathForJmespath","stringifyProp","preprocessedJson","stringifyAndParse","jmespath"],"mappings":"49dACO,SAASA,KAAS,CAElB,IAAMC,GAAW,SAACC,GAAC,OAAKA,CAE/B,EAOO,SAASC,GAAOC,EAAKC,GAE3B,IAAK,IAAMC,KAAKD,EAAKD,EAAIE,GAAKD,EAAIC,GAClC,OAA6BF,CAC9B,CAuBO,SAASG,GAAIC,GACnB,OAAOA,GACR,CAEO,SAASC,KACf,OAAOC,OAAOC,OAAO,KACtB,CAMO,SAASC,GAAQC,GACvBA,EAAIC,QAAQP,GACb,CAMO,SAASQ,GAAYC,GAC3B,MAAwB,mBAAVA,CACf,CAGO,SAASC,GAAeC,EAAGC,GACjC,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAMD,GAAkB,WAAbE,EAAOF,IAAgC,mBAANA,CAC5E,CAiDO,SAASG,GAAUH,EAAGC,GAC5B,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,CAChC,CA4CO,SAASG,GAAYC,EAAYC,EAAKC,EAASjB,GACrD,GAAIe,EAAY,CACf,IAAMG,EAAWC,GAAiBJ,EAAYC,EAAKC,EAASjB,GAC5D,OAAOe,EAAW,GAAGG,EACrB,CACF,CAEA,SAASC,GAAiBJ,EAAYC,EAAKC,EAASjB,GACnD,OAAOe,EAAW,IAAMf,EAAKL,GAAOsB,EAAQD,IAAII,QAASL,EAAW,GAAGf,EAAGgB,KAASC,EAAQD,GAC5F,CAEO,SAASK,GAAiBN,EAAYE,EAASK,EAAOtB,GAC5D,GAAIe,EAAW,IAAMf,EAAI,CACxB,IAAMuB,EAAOR,EAAW,GAAGf,EAAGsB,IAC9B,QAAsBE,IAAlBP,EAAQK,MACX,OAAOC,EAER,GAAoB,WAAhBX,EAAOW,GAAmB,CAG7B,IAFA,IAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIX,EAAQK,MAAMO,OAAQN,EAAKM,QACvCC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC7BL,EAAOK,GAAKb,EAAQK,MAAMQ,GAAKP,EAAKO,GAErC,OAAOL,CACP,CACD,OAAOR,EAAQK,MAAQC,CACvB,CACD,OAAON,EAAQK,KAChB,CAGO,SAASS,GACfC,EACAC,EACAjB,EACAC,EACAiB,EACAC,GAEA,GAAID,EAAc,CACjB,IAAME,EAAejB,GAAiBc,EAAiBjB,EAAKC,EAASkB,GACrEH,EAAKK,EAAED,EAAcF,EACrB,CACF,CAiBO,SAASI,GAAyBrB,GACxC,GAAIA,EAAQD,IAAIa,OAAS,GAAI,CAG5B,IAFA,IAAMP,EAAQ,GACRO,EAASZ,EAAQD,IAAIa,OAAS,GAC3BC,EAAI,EAAGA,EAAID,EAAQC,IAC3BR,EAAMQ,IAAM,EAEb,OAAOR,CACP,CACD,OAAQ,CACT,CAGO,SAASiB,GAAuBC,GACtC,IAAMC,EAAS,CAAA,EACf,IAAK,IAAM3C,KAAK0C,EAAoB,MAAT1C,EAAE,KAAY2C,EAAO3C,GAAK0C,EAAM1C,IAC3D,OAAO2C,CACR,CAGO,SAASC,GAAmBF,EAAOG,GACzC,IAAMC,EAAO,CAAA,EAEb,IAAK,IAAM9C,KADX6C,EAAO,IAAIE,IAAIF,GACCH,EAAYG,EAAKG,IAAIhD,IAAe,MAATA,EAAE,KAAY8C,EAAK9C,GAAK0C,EAAM1C,IACzE,OAAO8C,CACR,CAqBO,SAASG,GAAcC,GAC7B,OAAgB,MAATA,EAAgB,GAAKA,CAC7B,CASO,SAASC,GAAiBC,GAChC,OAAOA,GAAiB3C,GAAY2C,EAAcC,SAAWD,EAAcC,QAAU3D,EACtF,CCtRO,IAAM4D,GAA8B,oBAAXC,OAGrBC,GAAMF,GAAY,WAAA,OAAMC,OAAOE,YAAYD,OAAQ,WAAM,OAAAE,KAAKF,OAE9DG,GAAML,GAAY,SAACM,GAAO,OAAAC,sBAAsBD,EAAMlE,EAAAA,GCL3DoE,GAAQ,IAAIf,IAMlB,SAASgB,GAAUP,GAClBM,GAAMtD,SAAQ,SAACwD,GACTA,EAAKC,EAAET,KACXM,UAAaE,GACbA,EAAKE,IAER,IACoB,IAAfJ,GAAMK,MAAYR,GAAII,GAC3B,CCfO,IAAMK,GACM,oBAAXb,OACJA,OACsB,oBAAfc,WACPA,WAEAC,OCuIG,SAASC,GAAOC,EAAQC,GAC9BD,EAAOE,YAAYD,EACpB,CAQO,SAASE,GAAcH,EAAQI,EAAgBC,GACrD,IAAMC,EAAmBC,GAAmBP,GAC5C,IAAKM,EAAiBE,eAAeJ,GAAiB,CACrD,IAAMK,EAAQC,GAAQ,SACtBD,EAAME,GAAKP,EACXK,EAAMG,YAAcP,EACpBQ,GAAkBP,EAAkBG,EACpC,CACF,CAMO,SAASF,GAAmBN,GAClC,IAAKA,EAAM,OAAOa,SAClB,IAAMC,EAAOd,EAAKe,YAAcf,EAAKe,cAAgBf,EAAKgB,cAC1D,OAAIF,GAAmCA,EAAMG,KACVH,EAE5Bd,EAAKgB,aACb,CAMO,SAASE,GAAwBlB,GACvC,IAAMmB,EAAgBV,GAAQ,SAQ9B,OAFAU,EAAcR,YAAc,cAC5BC,GAAkBN,GAAmBN,GAAOmB,GACrCA,EAAcC,KACtB,CAOA,SAASR,GAAkBZ,EAAMQ,GAEhC,OADAV,GAAgCE,EAAMqB,MAAQrB,EAAMQ,GAC7CA,EAAMY,KACd,CAuCO,SAASE,GAAOvB,EAAQC,EAAMuB,GACpCxB,EAAOyB,aAAaxB,EAAMuB,GAAU,KACrC,CAoBO,SAASE,GAAOzB,GAClBA,EAAK0B,YACR1B,EAAK0B,WAAWC,YAAY3B,EAE9B,CAIO,SAAS4B,GAAaC,EAAYC,GACxC,IAAK,IAAIvE,EAAI,EAAGA,EAAIsE,EAAWvE,OAAQC,GAAK,EACvCsE,EAAWtE,IAAIsE,EAAWtE,GAAGwE,EAAED,EAErC,CAOO,SAASrB,GAAQuB,GACvB,OAAOnB,SAASoB,cAAcD,EAC/B,CAuCO,SAASE,GAAYF,GAC3B,OAAOnB,SAASsB,gBAAgB,6BAA8BH,EAC/D,CAMO,SAASI,GAAKC,GACpB,OAAOxB,SAASyB,eAAeD,EAChC,CAIO,SAASE,KACf,OAAOH,GAAK,IACb,CAIO,SAASI,KACf,OAAOJ,GAAK,GACb,CAiBO,SAASK,GAAOzC,EAAM0C,EAAOC,EAASC,GAE5C,OADA5C,EAAK6C,iBAAiBH,EAAOC,EAASC,GAC/B,WAAA,OAAM5C,EAAK8C,oBAAoBJ,EAAOC,EAASC,GACvD,CAIO,SAASG,GAAgBtH,GAC/B,OAAiBiH,SAAAA,GAGhB,OAFAA,EAAMM,iBAECvH,EAAGwH,KAAKC,KAAMR,EACvB,CACA,CAIO,SAASS,GAAiB1H,GAChC,OAAiBiH,SAAAA,GAGhB,OAFAA,EAAMU,kBAEC3H,EAAGwH,KAAKC,KAAMR,EACvB,CACA,CAoCO,SAASW,GAAKrD,EAAMsD,EAAW7E,GACxB,MAATA,EAAeuB,EAAKuD,gBAAgBD,GAC/BtD,EAAKwD,aAAaF,KAAe7E,GAAOuB,EAAKyD,aAAaH,EAAW7E,EAC/E,CAQA,IAAMiF,GAAmC,CAAC,QAAS,UAO5C,SAASC,GAAe3D,EAAM4D,GAEpC,IAAMC,EAAclI,OAAOmI,0BAA0B9D,EAAK+D,WAC1D,IAAK,IAAMC,KAAOJ,EACM,MAAnBA,EAAWI,GACdhE,EAAKuD,gBAAgBS,GACH,UAARA,EACVhE,EAAKQ,MAAMyD,QAAUL,EAAWI,GACd,YAARA,EACUhE,EAAMvB,MAAQuB,EAAKgE,GAAOJ,EAAWI,GAEzDH,EAAYG,IACZH,EAAYG,GAAKE,MACkC,IAAnDR,GAAiCS,QAAQH,GAEzChE,EAAKgE,GAAOJ,EAAWI,GAEvBX,GAAKrD,EAAMgE,EAAKJ,EAAWI,GAG9B,CAOO,SAASI,GAAmBpE,EAAM4D,GACxC,IAAK,IAAMI,KAAOJ,EACjBP,GAAKrD,EAAMgE,EAAKJ,EAAWI,GAE7B,CAqWO,SAASK,GAASjC,EAAMC,GAC9BA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IAClBD,EAAKC,KAA8BA,EACpC,CA6BO,SAASiC,GAAgBC,EAAO9F,GACtC8F,EAAM9F,MAAiB,MAATA,EAAgB,GAAKA,CACpC,CAcO,SAAS+F,GAAUxE,EAAMgE,EAAKvF,EAAOgG,GAC9B,MAAThG,EACHuB,EAAKQ,MAAMkE,eAAeV,GAE1BhE,EAAKQ,MAAMmE,YAAYX,EAAKvF,EAAOgG,EAAY,YAAc,GAE/D,CAIO,SAASG,GAAcC,EAAQpG,EAAOqG,GAC5C,IAAK,IAAIvH,EAAI,EAAGA,EAAIsH,EAAOjC,QAAQtF,OAAQC,GAAK,EAAG,CAClD,IAAMwH,EAASF,EAAOjC,QAAQrF,GAC9B,GAAIwH,EAAOC,UAAYvG,EAEtB,YADAsG,EAAOE,UAAW,EAGnB,CACIH,QAAsB7H,IAAVwB,IAChBoG,EAAOK,eAAiB,EAE1B,CA2GO,SAASC,GAAa1E,EAASuB,EAAMoD,GAE3C3E,EAAQ4E,UAAUD,OAAOpD,IAAQoD,EAClC,CASO,SAASE,GAAaC,EAAMC,GAAsDC,IAAAA,EAAAC,UAAApI,OAAAoI,QAAAzI,IAAAyI,aAAAA,UAAJ,GAAA,GAAEC,EAAAF,EAA1CG,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAAJ,EAAEK,WAC7D,OAAW,IAAAC,YAAYR,EAAM,CAAEC,OAAAA,EAAQI,QAAAA,EAASE,gBAD0B,IAAHD,GAAQA,GAEhF,CAmNO,SAASG,GAA2BC,EAAWhI,GACrD,WAAWgI,EAAUhI,EACtB,CCtsCA,ICJWiI,GDILC,GAAiB,IAAIC,IAEvBC,GAAS,EAoCN,SAASC,GAAYtG,EAAM7D,EAAGC,EAAGmK,EAAUC,EAAOC,EAAMhL,GAG9D,IAHkE,IAAAiL,EAAGhB,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,EAClEiB,EAAO,OAASJ,EAClBK,EAAY,MACP9I,EAAI,EAAGA,GAAK,EAAGA,GAAK6I,EAAM,CAClC,IAAME,EAAI1K,GAAKC,EAAID,GAAKsK,EAAK3I,GAC7B8I,GAAiB,IAAJ9I,EAAO,KAAAgJ,OAAQrL,EAAGoL,EAAG,EAAIA,GAAO,MAC7C,CACD,IAAME,EAAOH,EAASE,SAAAA,OAAYrL,EAAGW,EAAG,EAAIA,GAAE,QACxC4F,EAAI8E,YAAAA,OArCX,SAAcE,GAGb,IAFA,IAAIC,EAAO,KACP1J,EAAIyJ,EAAI1J,OACLC,KAAK0J,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAW3J,GACzD,OAAO0J,IAAS,CACjB,CAgC0BA,CAAKF,GAAKD,KAAAA,OAAIJ,GACjCS,EAAM7G,GAAmBN,GAC/BoH,EAA8BjB,GAAekB,IAAIF,IA3BlD,SAAkCA,EAAKnH,GACtC,IAAMsH,EAAO,CAAEC,WAAYrG,GAAwBlB,GAAOwH,MAAO,CAAA,GAEjE,OADArB,GAAejC,IAAIiD,EAAKG,GACjBA,CACR,CAuB0DG,CAAyBN,EAAKnH,GAA/EuH,EAAUH,EAAVG,WAAYC,EAAKJ,EAALI,MACfA,EAAMxF,KACVwF,EAAMxF,IAAQ,EACduF,EAAWG,yBAAUZ,OAAe9E,EAAI,KAAA8E,OAAIC,GAAQQ,EAAWI,SAASrK,SAEzE,IAAMsK,EAAY5H,EAAKQ,MAAMoH,WAAa,GAK1C,OAJA5H,EAAKQ,MAAMoH,UAAS,GAAAd,OACnBc,EAAS,GAAAd,OAAMc,EAAS,MAAO,IAAEd,OAC/B9E,EAAI,KAAA8E,OAAIP,EAAQ,cAAAO,OAAaN,EAAK,aACrCH,IAAU,EACHrE,CACR,CAOO,SAAS6F,GAAY7H,EAAMgC,GACjC,IAAM8F,GAAY9H,EAAKQ,MAAMoH,WAAa,IAAIG,MAAM,MAC9CC,EAAOF,EAASG,OACrBjG,EACG,SAACkG,GAAI,OAAKA,EAAK/D,QAAQnC,GAAQ,CAAC,EAChC,SAACkG,GAAS,OAA8B,IAA9BA,EAAK/D,QAAQ,WAAkB,GAEvCgE,EAAUL,EAASxK,OAAS0K,EAAK1K,OACnC6K,IACHnI,EAAKQ,MAAMoH,UAAYI,EAAKI,KAAK,OACjC/B,IAAU8B,IAOXjJ,IAAI,WACCmH,KACJF,GAAepK,SAAQ,SAACuL,GACvB,IAAQe,EAAcf,EAAKC,WAAnBc,UAEJA,GAAW5G,GAAO4G,EACzB,IACElC,GAAemC,QACjB,IAZA,CChFO,SAASC,GAAsBtC,GACrCC,GAAoBD,CACrB,CAEO,SAASuC,KACf,IAAKtC,GAAmB,MAAM,IAAIuC,MAAM,oDACxC,OAAOvC,EACR,CA6BO,SAASwC,GAAQjN,GACvB+M,KAAwBG,GAAGC,SAASC,KAAKpN,EAC1C,CAyBO,SAASqN,GAAUrN,GACzB+M,KAAwBG,GAAGI,WAAWF,KAAKpN,EAC5C,CAyBO,SAASuN,KACf,IAAM/C,EAAYuC,KAClB,OAAQjD,SAAAA,EAAMC,GAAwC,IAALyD,GAAKvD,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAP,IAAvBI,WAAAA,OAAa,IAAHmD,GAAQA,EACnCC,EAAYjD,EAAU0C,GAAGO,UAAU3D,GACzC,GAAI2D,EAAW,CAGd,IAAMxG,EAAQ4C,GAAoCC,EAAOC,EAAQ,CAAEM,WAAAA,IAInE,OAHAoD,EAAUrM,QAAQd,SAAQ,SAACN,GAC1BA,EAAGwH,KAAKgD,EAAWvD,EACvB,KACWA,EAAMyG,gBACd,CACD,OAAW,CACb,CACA,CAeO,SAASC,GAAWpF,EAAKqF,GAE/B,OADAb,KAAwBG,GAAGU,QAAQnF,IAAIF,EAAKqF,GACrCA,CACR,CAWO,SAASC,GAAWtF,GAC1B,OAAOwE,KAAwBG,GAAGU,QAAQhC,IAAIrD,EAC/C,CAmCO,SAASuF,GAAOtD,EAAWvD,GAAO8G,IAAAA,EACxCtG,KAAMgG,EAAYjD,EAAU0C,GAAGO,UAAUxG,EAAM6C,MAC3C2D,GAEHA,EAAUrM,QAAQd,SAAQ,SAACN,GAAE,OAAKA,EAAGwH,KAAKuG,EAAM9G,EAAO,GAEzD,CCnLO,IAAM+G,GAAmB,GAEnBC,GAAoB,GAE7BC,GAAmB,GAEjBC,GAAkB,GAElBC,GAAmCC,QAAQC,UAE7CC,IAAmB,EAGhB,SAASC,KACVD,KACJA,IAAmB,EACnBH,GAAiBK,KAAKC,IAExB,CAGO,SAASC,KAEf,OADAH,KACOJ,EACR,CAGO,SAASQ,GAAoB5O,GACnCkO,GAAiBd,KAAKpN,EACvB,CAGO,SAAS6O,GAAmB7O,GAClCmO,GAAgBf,KAAKpN,EACtB,CAoBA,IC/CI8O,GD+CEC,GAAiB,IAAIlM,IAEvBmM,GAAW,EAGR,SAASN,KAIf,GAAiB,IAAbM,GAAJ,CAGA,IAAMC,EAAkBxE,GACxB,EAAG,CAGF,IACC,KAAOuE,GAAWhB,GAAiBnM,QAAQ,CAC1C,IAAM2I,EAAYwD,GAAiBgB,IACnCA,KACAlC,GAAsBtC,GACtB0E,GAAO1E,EAAU0C,GACjB,CACD,CAAC,MAAOiC,GAIR,MAFAnB,GAAiBnM,OAAS,EAC1BmN,GAAW,EACLG,CACN,CAID,IAHArC,GAAsB,MACtBkB,GAAiBnM,OAAS,EAC1BmN,GAAW,EACJf,GAAkBpM,QAAQoM,GAAkBmB,KAAlBnB,GAIjC,IAAK,IAAInM,EAAI,EAAGA,EAAIoM,GAAiBrM,OAAQC,GAAK,EAAG,CACpD,IAAMuN,EAAWnB,GAAiBpM,GAC7BiN,GAAejM,IAAIuM,KAEvBN,GAAeO,IAAID,GACnBA,IAED,CACDnB,GAAiBrM,OAAS,CAC5B,OAAUmM,GAAiBnM,QAC1B,KAAOsM,GAAgBtM,QACtBsM,GAAgBiB,KAAhBjB,GAEDI,IAAmB,EACnBQ,GAAelC,QACfC,GAAsBmC,EAxCrB,CAyCF,CAGA,SAASC,GAAOhC,GACf,GAAoB,OAAhBA,EAAGqC,SAAmB,CACzBrC,EAAGgC,SACH9O,GAAQ8M,EAAGsC,eACX,IAAMlO,EAAQ4L,EAAG5L,MACjB4L,EAAG5L,MAAQ,EAAE,GACb4L,EAAGqC,UAAYrC,EAAGqC,SAASlN,EAAE6K,EAAGlM,IAAKM,GACrC4L,EAAGuC,aAAanP,QAAQsO,GACxB,CACF,CC1FA,SAASc,GAASnL,EAAMoL,EAAWC,GAClCrL,EAAKsL,cAAchG,GAAYwB,GAAAA,OAAIsE,EAAY,QAAU,SAAOtE,OAAGuE,IACpE,CAEA,IAKIE,GALEC,GAAW,IAAIlN,IASd,SAASmN,KACfF,GAAS,CACRG,EAAG,EACHlM,EAAG,GACH1B,EAAGyN,GAEL,CAIO,SAASI,KACVJ,GAAOG,GACX7P,GAAQ0P,GAAO/L,GAEhB+L,GAASA,GAAOzN,CACjB,CAOO,SAAS8N,GAAcC,EAAOC,GAChCD,GAASA,EAAMtO,IAClBiO,GAAQ,OAAQK,GAChBA,EAAMtO,EAAEuO,GAEV,CASO,SAASC,GAAeF,EAAOC,EAAOrK,EAAQqJ,GACpD,GAAIe,GAASA,EAAMG,EAAG,CACrB,GAAIR,GAASjN,IAAIsN,GAAQ,OACzBL,GAAST,IAAIc,GACbN,GAAO/L,EAAEqJ,MAAK,WACb2C,GAAe,OAACK,GACZf,IACCrJ,GAAQoK,EAAM9J,EAAE,GACpB+I,IAEJ,IACEe,EAAMG,EAAEF,EACR,MAAUhB,GACVA,GAEF,CAKA,IAAMmB,GAAkB,CAAE1F,SAAU,GA+K7B,SAAS2F,GAAgClM,EAAMvE,EAAI0Q,EAAQC,GAGjE,IAcIC,EAbAC,EAAS7Q,EAAGuE,EAAMmM,EADN,CAAEf,UAAW,SAEzBvE,EAAIuF,EAAQ,EAAI,EAIhBG,EAAkB,KAIlBC,EAAkB,KAClBC,EAAiB,KAOrB,SAASC,IACJD,GAAgB5E,GAAY7H,EAAMyM,EACtC,CAOD,SAASE,EAAKC,EAASrG,GACtB,IAAMxE,EAAiC6K,EAAQxQ,EAAIyK,EAEnD,OADAN,GAAYnJ,KAAKyP,IAAI9K,GACd,CACN5F,EAAG0K,EACHzK,EAAGwQ,EAAQxQ,EACX2F,EAAAA,EACAwE,SAAAA,EACAuG,MAAOF,EAAQE,MACfC,IAAKH,EAAQE,MAAQvG,EACrByG,MAAOJ,EAAQI,MAEhB,CAMD,SAASC,EAAG7Q,GACX,INpSmB0O,EMoSnBoC,EAMIZ,GAAUL,GAAekB,EAAAD,EAL5B1G,MAAAA,OAAK,IAAA2G,EAAG,EAACA,EAAAC,EAAAF,EACT3G,SAAAA,OAAW,IAAH6G,EAAG,IAAGA,EAAAC,EAAAH,EACdI,OAAAA,OAAM,IAAAD,EAAGE,GAAMF,EAAAG,EAAAN,EACf9C,KAAAA,OAAOnP,IAAHuS,EAAGvS,GAAIuS,EACXC,EAAGP,EAAHO,IAKKb,EAAU,CACfE,MAAO/N,KAAQyH,EACfpK,EAAAA,GAGIA,IAEJwQ,EAAQI,MAAQzB,GAChBA,GAAOG,GAAK,GAGT,UAAW1L,IACV5D,OAC0Ba,IAAzBoP,IAEHrM,EAAK0N,MAAQrB,IAGdA,EAAmDrM,EAAM0N,MACzD1N,EAAK0N,OAAQ,IAIXnB,GAAmBC,EACtBA,EAAkBI,GAIda,IACHf,IACAD,EAAiBnG,GAAYtG,EAAM6G,EAAGzK,EAAGmK,EAAUC,EAAO8G,EAAQG,IAE/DrR,GAAGgO,EAAK,EAAG,GACfmC,EAAkBI,EAAKC,EAASrG,GAChC8D,IAAoB,WAAM,OAAAc,GAASnL,EAAM5D,EAAG,YNhV1B0O,EMiVb,SAAC/L,GAkBL,GAjBIyN,GAAmBzN,EAAMyN,EAAgBM,QAC5CP,EAAkBI,EAAKH,EAAiBjG,GACxCiG,EAAkB,KAClBrB,GAASnL,EAAMuM,EAAgBnQ,EAAG,SAC9BqR,IACHf,IACAD,EAAiBnG,GAChBtG,EACA6G,EACA0F,EAAgBnQ,EAChBmQ,EAAgBhG,SAChB,EACA+G,EACAhB,EAAOmB,OAINlB,EACH,GAAIxN,GAAOwN,EAAgBQ,IAC1B3C,EAAMvD,EAAI0F,EAAgBnQ,EAAI,EAAIyK,GAClCsE,GAASnL,EAAMuM,EAAgBnQ,EAAG,OAC7BoQ,IAEAD,EAAgBnQ,EAEnBsQ,MAGOH,EAAgBS,MAAMtB,GAAG7P,GAAQ0Q,EAAgBS,MAAMxN,IAGhE+M,EAAkB,UACRxN,GAAAA,GAAOwN,EAAgBO,MAAO,CACxC,IAAMhP,EAAIiB,EAAMwN,EAAgBO,MAChCjG,EAAI0F,EAAgBpQ,EAAIoQ,EAAgBxK,EAAIuL,EAAOxP,EAAIyO,EAAgBhG,UACvE6D,EAAKvD,EAAG,EAAIA,EACZ,CAEF,SAAU0F,IAAmBC,EACjC,ENtXoB,IAAfnN,GAAMK,MAAYR,GAAII,IAEhB,IAAIwK,SAAQ,SAAC6D,GACrBtO,GAAM0L,IAAY,CAAEvL,EAAGsL,EAAUrL,EAAGkO,GACvC,IMoXE,CACD,MAAO,CACNnS,IAAG,SAACY,GACCJ,GAAYsQ,IA9Yb/B,KACJA,GAAUT,QAAQC,WACVG,MAAK,WACZK,GAAU,IACb,IAEQA,IAyYGL,MAAK,WAGXoC,EAASA,EAFI,CAAElB,UAAWhP,EAAI,KAAO,QAGrC6Q,EAAG7Q,EACR,IAEI6Q,EAAG7Q,EAEJ,EACD2Q,eACCL,IACAH,EAAkBC,EAAkB,IACpC,EAEH,CCzaO,SAASoB,GAAkBC,GACjC,YAA0C5Q,KAAnC4Q,aAAAA,EAAAA,EAAwBvQ,QAC5BuQ,EACAC,MAAMC,KAAKF,EACf,CAKO,SAASG,GAAcnC,EAAOoC,GACpCpC,EAAM9J,EAAE,GACRkM,EAAa,OAACpC,EAAM7H,IACrB,CAGO,SAASkK,GAAwBrC,EAAOoC,GAC9ClC,GAAeF,EAAO,EAAG,GAAG,WAC3BoC,EAAM,OAAQpC,EAAM7H,IACtB,GACA,CAeO,SAASmK,GACfC,EACArR,EACAsR,EACAC,EACA7R,EACA8R,EACAN,EACAjO,EACApB,EACA4P,EACAxG,EACAyG,GAMA,IAJA,IAAIzC,EAAIoC,EAAW9Q,OACfoR,EAAIH,EAAKjR,OACTC,EAAIyO,EACF2C,EAAc,CAAA,EACbpR,KAAKoR,EAAYP,EAAW7Q,GAAGyG,KAAOzG,EAC7C,IAAMqR,EAAa,GACbC,EAAa,IAAIzI,IACjB0I,EAAS,IAAI1I,IACb2I,EAAU,GAChBxR,EAAImR,EACJ,IADM,IAAAM,EAAA,WAEL,IAAMC,EAAYR,EAAYhS,EAAK8R,EAAMhR,GACnCyG,EAAMqK,EAAQY,GAChBpD,EAAQoC,EAAO5G,IAAIrD,GAClB6H,EAGMyC,GAEVS,EAAQlG,MAAK,kBAAMgD,EAAM/N,EAAEmR,EAAWlS,EAAM,KAJ5C8O,EAAQ2C,EAAkBxK,EAAKiL,IACzBzP,IAKPqP,EAAW3K,IAAIF,EAAM4K,EAAWrR,GAAKsO,GACjC7H,KAAO2K,GAAaG,EAAO5K,IAAIF,EAAK5G,KAAKyP,IAAItP,EAAIoR,EAAY3K,IACjE,EAbMzG,KAAGyR,IAcV,IAAME,EAAY,IAAI5Q,IAChB6Q,EAAW,IAAI7Q,IAErB,SAASgD,EAAOuK,GACfD,GAAcC,EAAO,GACrBA,EAAMuD,EAAEpP,EAAMgI,GACdiG,EAAO/J,IAAI2H,EAAM7H,IAAK6H,GACtB7D,EAAO6D,EAAMwD,MACbX,GACA,CACD,KAAO1C,GAAK0C,GAAG,CACd,IAAMY,EAAYV,EAAWF,EAAI,GAC3Ba,EAAYnB,EAAWpC,EAAI,GAC3BwD,EAAUF,EAAUtL,IACpByL,EAAUF,EAAUvL,IACtBsL,IAAcC,GAEjBvH,EAAOsH,EAAUD,MACjBrD,IACA0C,KACWG,EAAWtQ,IAAIkR,IAIfxB,EAAO1P,IAAIiR,IAAYN,EAAU3Q,IAAIiR,GAChDlO,EAAOgO,GACGH,EAAS5Q,IAAIkR,GACvBzD,IACU8C,EAAOzH,IAAImI,GAAWV,EAAOzH,IAAIoI,IAC3CN,EAASpE,IAAIyE,GACblO,EAAOgO,KAEPJ,EAAUnE,IAAI0E,GACdzD,MAXApN,EAAQ2Q,EAAWtB,GACnBjC,IAYD,CACD,KAAOA,KAAK,CACX,IAAMuD,EAAYnB,EAAWpC,GACxB6C,EAAWtQ,IAAIgR,EAAUvL,MAAMpF,EAAQ2Q,EAAWtB,EACvD,CACD,KAAOS,GAAGpN,EAAOsN,EAAWF,EAAI,IAEhC,OADA7S,GAAQkT,GACDH,CACR,CCvHO,SAASc,GAAkBC,EAAQZ,GAKzC,IAJA,IAAMpE,EAAS,CAAA,EACTiF,EAAc,CAAA,EACdC,EAAgB,CAAEnT,QAAS,GAC7Ba,EAAIoS,EAAOrS,OACRC,KAAK,CACX,IAAMyO,EAAI2D,EAAOpS,GACXmR,EAAIK,EAAQxR,GAClB,GAAImR,EAAG,CACN,IAAK,IAAM1K,KAAOgI,EACXhI,KAAO0K,IAAIkB,EAAY5L,GAAO,GAErC,IAAK,IAAMA,KAAO0K,EACZmB,EAAc7L,KAClB2G,EAAO3G,GAAO0K,EAAE1K,GAChB6L,EAAc7L,GAAO,GAGvB2L,EAAOpS,GAAKmR,CACf,MACG,IAAK,IAAM1K,KAAOgI,EACjB6D,EAAc7L,GAAO,CAGvB,CACD,IAAK,IAAMA,KAAO4L,EACX5L,KAAO2G,IAASA,EAAO3G,QAAO/G,GAErC,OAAO0N,CACR,CAEO,SAASmF,GAAkBC,GACjC,MAA+B,WAAxB1T,EAAO0T,IAA8C,OAAjBA,EAAwBA,EAAe,EACnF,CCZO,SAASC,GAAK/J,EAAWjE,EAAM8I,GACrC,IAAMmF,EAAQhK,EAAU0C,GAAG1K,MAAM+D,QACnB/E,IAAVgT,IACHhK,EAAU0C,GAAGuH,MAAMD,GAASnF,EAC5BA,EAAS7E,EAAU0C,GAAGlM,IAAIwT,IAE5B,CAGO,SAASE,GAAiBtE,GAChCA,GAASA,EAAMrM,GAChB,CAQO,SAAS4Q,GAAgBnK,EAAWlG,EAAQwB,GAClD,IAAA8O,EAAmCpK,EAAU0C,GAArCqC,EAAQqF,EAARrF,SAAUE,EAAYmF,EAAZnF,aAClBF,GAAYA,EAASoE,EAAErP,EAAQwB,GAE/B8I,IAAoB,WACnB,IAI6BiG,EAJvBC,EAAiBtK,EAAU0C,GAAGC,SAAS4H,IAAIhV,IAAKyM,OAAOjM,IAIzDiK,EAAU0C,GAAGI,YAChBuH,EAAArK,EAAU0C,GAAGI,YAAWF,KAAI4H,MAAAH,EAAAI,EAAIH,IAIhC1U,GAAQ0U,GAETtK,EAAU0C,GAAGC,SAAW,EAC1B,IACCsC,EAAanP,QAAQsO,GACtB,CAGO,SAASsG,GAAkB1K,EAAWnE,GAC5C,IJgEsChG,EAChC8U,EACAC,EIlEAlI,EAAK1C,EAAU0C,GACD,OAAhBA,EAAGqC,WJ+D+BlP,EI9Dd6M,EAAGuC,aJ+DrB0F,EAAW,GACXC,EAAU,GAChBlH,GAAiB5N,SAAQ,SAACyD,GAAO,OAAoB,IAApB1D,EAAIqI,QAAQ3E,GAAYoR,EAAS/H,KAAKrJ,GAAKqR,EAAQhI,KAAKrJ,MACzFqR,EAAQ9U,SAAQ,SAACyD,UAAMA,OACvBmK,GAAmBiH,EIlElB/U,GAAQ8M,EAAGI,YACXJ,EAAGqC,UAAYrC,EAAGqC,SAASjJ,EAAED,GAG7B6G,EAAGI,WAAaJ,EAAGqC,SAAW,KAC9BrC,EAAGlM,IAAM,GAEX,CAuBO,SAASkQ,GACf1G,EACArD,EACAkO,EACAC,EACAzU,EACA2B,GACA,IAAAiC,EAAawF,UAAApI,OAAAoI,QAAAzI,IAAAyI,aAAAA,UAAA,GAAG,KAChB3I,EAAK2I,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAG,GAAA,EAAE,GAEJsL,EAAmB9K,GACzBqC,GAAsBtC,GAEtB,IAAM0C,EAAM1C,EAAU0C,GAAK,CAC1BqC,SAAU,KACVvO,IAAK,GAELwB,MAAAA,EACA0M,OAAQ1P,GACRqB,UAAAA,EACA4T,MAAOxU,KAEPkN,SAAU,GACVG,WAAY,GACZkI,cAAe,GACfhG,cAAe,GACfC,aAAc,GACd7B,QAAS,IAAIjD,IAAIxD,EAAQyG,UAAY2H,EAAmBA,EAAiBrI,GAAGU,QAAU,KAEtFH,UAAWxN,KACXqB,MAAAA,EACAmU,YAAY,EACZpQ,KAAM8B,EAAQ7C,QAAUiR,EAAiBrI,GAAG7H,MAE7CZ,GAAiBA,EAAcyI,EAAG7H,MAClC,IAAIqQ,GAAQ,EAgBZ,GAfAxI,EAAGlM,IAAMqU,EACNA,EAAS7K,EAAWrD,EAAQ3E,OAAS,CAAE,GAAE,SAACV,EAAG6T,GAC7C,IAAM3S,IAAQiH,UAAApI,QAAAoI,IAAAA,UAAApI,SAAAoI,UAAApI,QAAAL,OAAAA,EAAAyI,UAAA,GAAwB0L,EAKtC,OAJIzI,EAAGlM,KAAOH,EAAUqM,EAAGlM,IAAIc,GAAKoL,EAAGlM,IAAIc,GAAKkB,MAC1CkK,EAAGuI,YAAcvI,EAAGuH,MAAM3S,IAAIoL,EAAGuH,MAAM3S,GAAGkB,GAC3C0S,GA7DT,SAAoBlL,EAAW1I,IACC,IAA3B0I,EAAU0C,GAAG5L,MAAM,KACtB0M,GAAiBZ,KAAK5C,GACtBgE,KACAhE,EAAU0C,GAAG5L,MAAMsU,KAAK,IAEzBpL,EAAU0C,GAAG5L,MAAOQ,EAAI,GAAM,IAAM,GAAKA,EAAI,EAC9C,CAsDgB+T,CAAWrL,EAAW1I,IAE3B6T,CACX,IACI,GACHzI,EAAGgC,SACHwG,GAAQ,EACRtV,GAAQ8M,EAAGsC,eAEXtC,EAAGqC,WAAW+F,GAAkBA,EAAgBpI,EAAGlM,KAC/CmG,EAAQ7C,OAAQ,CACnB,GAAI6C,EAAQ2O,QAAS,CAIpB,IAAMC,EP4cF,SAAkB/Q,GACxB,OAAOqN,MAAMC,KAAKtN,EAAQgR,WAC3B,CO9ciBC,CAAS9O,EAAQ7C,QAC/B4I,EAAGqC,UAAYrC,EAAGqC,SAAS2G,EAAEH,GAC7BA,EAAMzV,QAAQ0F,GACjB,MAEGkH,EAAGqC,UAAYrC,EAAGqC,SAASxL,IAExBoD,EAAQwJ,OAAOR,GAAc3F,EAAU0C,GAAGqC,UAC9CoF,GAAgBnK,EAAWrD,EAAQ7C,OAAQ6C,EAAQrB,QAEnD4I,IACA,CACD5B,GAAsByI,EACvB,CA6RA,IAMaY,GAAe,WAAA,SAAAA,IAAAC,EAAAD,KAAAA,GAC5BE,EAOM7U,KAAAA,UAAAA,GACN6U,EAAA5O,KAAA,aAOSjG,EAAS,CAoChB2U,OApCgBG,EAAAH,EAAA,CAAA,CAAA5N,IAAA,WAAAvF,MAGjB,WACCkS,GAAkBzN,KAAM,GACxBA,KAAK8O,SAAW/W,EAChB,IAEF+I,IAAA,MAAAvF,MAMC,SAAI8G,EAAMuF,GACT,IAAK9O,GAAY8O,GAChB,OAAO7P,GAER,IAAMiO,EAAYhG,KAAKyF,GAAGO,UAAU3D,KAAUrC,KAAKyF,GAAGO,UAAU3D,GAAQ,IAExE,OADA2D,EAAUL,KAAKiC,cAEd,IAAMmF,EAAQ/G,EAAU/E,QAAQ2G,IACjB,IAAXmF,GAAc/G,EAAU+I,OAAOhC,EAAO,EAC7C,CACE,GAEF,CAAAjM,IAAAvF,OAAAA,MAIC,SAAKR,GX/XC,IAAkBiU,EWgYnBhP,KAAKiP,QXhYcD,EWgYKjU,EX/XM,IAA5BtC,OAAOyC,KAAK8T,GAAK5U,UWgYtB4F,KAAKyF,GAAGuI,YAAa,EACrBhO,KAAKiP,MAAMlU,GACXiF,KAAKyF,GAAGuI,YAAa,EAEtB,KAAAU,CAGF,CAvD4B,GC9atB,SAAUQ,GACdC,GACA,IAAAC,EAAO5M,UAAApI,OAAAoI,QAAAzI,IAAAyI,aAAAA,UAAA,GAaT,SAAqB2M,GACnB,IAAME,EAYR,SAA6BvO,GAC3B,IACE,GAAsB,oBAAXlF,aAAyD,IAAxBA,OAAO0T,aAEjD,OAAO1T,OAAO0T,aAAaxO,EAE9B,CAAC,MAAOyO,IAGX,CArBgBC,CAAoB,SAElC,OAAOH,SAAAA,EAAOI,SAAS,KAAON,EAAUO,WAAWL,EAAM1V,MAAM,GAAI,IAAMwV,IAAcE,CACzF,CAjBYM,CAAYR,GAEtB,IAAKC,EACH,OAAOrX,GAGT,IAAM6X,EAuCR,SAAqBT,GAGnB,IAFA,IAAIpL,EAAO,EAEF1J,EAAI,EAAGA,EAAI8U,EAAU/U,OAAQC,IACpC0J,GAAQA,GAAQ,GAAKA,EAAOoL,EAAUnL,WAAW3J,GACjD0J,GAAQ,EAGV,OAAO8L,GAAO3V,KAAKyP,IAAI5F,GAAQ8L,GAAOzV,OACxC,CAhDgB0V,CAAYX,GAE1B,OAAO,WAAsBY,IAAA,IAAAC,EAAAD,EAAAvN,UAAApI,OAAJ6V,EAAIrF,IAAAA,MAAAmF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,GAAA1N,UAAA0N,IAC3BF,EAAAG,SAAQC,IAAG7C,MAAAyC,EAAApM,CAAAA,KAAAA,OAAMuL,GAAS,SAAAvL,OAAagM,IAAKhM,OAAOqM,GACrD,CACF,CAQA,SAASlY,MC9Ca,oBAAX6D,SAETA,OAAOyU,WAAazU,OAAOyU,SAAW,CAAEC,EAAG,IAAIlV,OAAUkV,EAAEzI,ICK/B,KF4E9B,IAAMgI,GAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WG7DK,SAASU,GAAKzT,GAA2D0T,IAAAA,EAAAhO,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAJ,GAAA,GAAEiO,EAAAD,EAAjDlN,MAAAA,OAAQ,IAAHmN,EAAG,EAACA,EAAAC,EAAAF,EAAEnN,SAAAA,WAAQqN,EAAG,IAAGA,EAAAC,EAAAH,EAAEpG,OAAAA,OAAM,IAAAuG,EAAGtG,GAAMsG,EAChE7H,GAAK8H,iBAAiB9T,GAAM+T,QAClC,MAAO,CACNvN,MAAAA,EACAD,SAAAA,EACA+G,OAAAA,EACAG,IAAK,SAAC5G,qBAACC,OAAiBD,EAAImF,EAAC,EAE/B,0iECycagI,EAAAvX,KAAMwX,aAAWC,GAAAzX,KAmBIA,EAAS,6HAJ1B4G,GAAA8Q,EAAA,QAAAC,EAAA5V,GAAA/B,KAAM4X,cAAY,+BAElB5X,EAAU,oBADDA,EAAQ,IA9BnB4G,GAAAiR,EAAA,QAAAC,EAAA/V,GAAA/B,KAAM+X,aAAW,kEAIZnR,GAAAiR,EAAA,aAAAG,EAAAhY,KAAMiY,eAAiB,KAAOjY,EAAK,GAACkY,WAAa,+BAC5ClY,EAAK,GAACiY,gBAAkB,mBAOlCjY,EAAS,mBAXDA,EAAQ,IAPlB4G,GAAAuR,EAAA,QAAAC,EAAArW,GAAA/B,KAAMqY,iBAAe,+BAGrBrY,EAAa,iBAFPA,EAAQ,+BAXnB4G,GAAA0R,EAAA,KAAAC,EAAAvY,KAAMiE,IACH2C,GAAA0R,EAAA,QAAAE,EAAAzW,GAAA/B,KAAMyY,SAAO,+BAMbzY,EAAK,eALDA,EAAQ,qBAJrB6E,GAuDKvB,EAAAgV,EAAAxT,GA5CHzB,GA2CKiV,EAAAH,GArCH9U,GAoCK8U,EAAAN,0BAPHxU,GAMKwU,EAAAH,wFA1BUnY,GAAAS,QAAAA,EAAM,IAAAgU,MAAAvN,KAAAwC,4CACN1J,GAAAS,QAAAA,EAAO,IAAAgU,MAAAvN,KAAAwC,0CACT1J,GAAAS,QAAAA,EAAQ,IAAAgU,MAAAvN,KAAAwC,0CACR1J,GAAAS,QAAAA,EAAQ,IAAAgU,MAAAvN,KAAAwC,+BAxBXjJ,EAAoB,oBACtBA,EAAkB,yCA0BfwX,uIAmBexX,EAAS,IAAA,gJAJ1B0Y,GAAA,EAAApY,EAAA,IAAAqX,KAAAA,EAAA5V,GAAA/B,KAAM4X,cAAY,iEAElB5X,EAAU,kCADDA,EAAQ,MA9BnB0Y,GAAA,EAAApY,EAAA,IAAAwX,KAAAA,EAAA/V,GAAA/B,KAAM+X,aAAW,sCAIZW,GAAA,EAAApY,EAAA,IAAA0X,KAAAA,EAAAhY,KAAMiY,eAAiB,KAAOjY,EAAK,GAACkY,WAAa,iDAC5ClY,EAAK,GAACiY,gBAAkB,+DAOlCjY,EAAS,iCAXDA,EAAQ,MAPlB0Y,GAAA,EAAApY,EAAA,IAAA8X,KAAAA,EAAArW,GAAA/B,KAAMqY,iBAAe,iEAGrBrY,EAAa,+BAFPA,EAAQ,MAXnB0Y,GAAA,EAAApY,EAAA,IAAAiY,KAAAA,EAAAvY,KAAMiE,qBACHyU,GAAA,EAAApY,EAAA,IAAAkY,KAAAA,EAAAzW,GAAA/B,KAAMyY,SAAO,gEAMbzY,EAAK,6BALDA,EAAQ,0EAqBqB2Y,IAAAA,EAAAlJ,GAAAoI,EAAA7X,EAAA,IAAAA,KAAM4Y,uBAAqB,uCAjBnCC,IAAAA,EAAApJ,GAAA6I,EAAAtY,EAAA,IAAAA,KAAM8Y,mBAAiB,uEAiBfH,IAAAA,EAAAlJ,GAAAoI,EAAA7X,EAAA,IAAAA,KAAM4Y,uBAAqB,kBAjBnCC,IAAAA,EAAApJ,GAAA6I,EAAAtY,EAAA,IAAAA,KAAM8Y,mBAAiB,4OAyB5C9Y,EAAU,IAACA,EAAK,GAACwX,ubAIX5Q,kBAAA,QAAAmS,EAAAhX,GAAA/B,KAAMgZ,kBAAgB,gEAItBhZ,EAAc,yCAHPA,EAAQ,qBAFxB6E,GAOCvB,EAAA2V,EAAAnU,sBAHW9E,EAAK,4BAHR,EAAAM,EAAA,IAAAyY,KAAAA,EAAAhX,GAAA/B,KAAMgZ,kBAAgB,2DAItBhZ,EAAc,2BAHPA,EAAQ,0EAJAkZ,EAAAlZ,KAAMwX,kDAAsBxX,EAAK,uIAAjC,GAAA,EAAAM,EAAA,IAAA4Y,KAAAA,EAAAlZ,KAAMwX,aAAW,sTAnChDxX,EAAS,IAAAmZ,GAAAnZ,mKAFaA,EAAa,4BAEnCA,EAAS,kVA9bIuT,GAAK6F,OAAW5X,EAAKyH,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAA,GACnB,OAAA,SAAe9C,cAClBiT,EAASC,EAAAA,EAAA,CAAA,EACflT,GAAO,CAAA,EAAA,CACV3E,MAAK6X,EAAAA,EAAA,CAAA,EACA7X,GACA2E,EAAQ3E,kCA8Nf8X,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,4CAhOE1L,EAAWnC,KAEX8N,EAAiBC,GAmBZC,EAA2BC,EAA3BC,WAAAA,OAAU,IAAAF,EAdG,SAAAhX,GAAI,OAC1BA,EAAKmX,UAAY,IAChBnX,EAAKoX,SACLpX,EAAKqX,UACiB,SAAvBrX,EAAKQ,MAAM8W,SACG,WAAdtX,EAAKuF,MACLgS,QACEvX,EAAKwX,aAAexX,EAAKyX,cAAgBzX,EAAK0X,iBAAiBpa,OAOxD,EAA2B0Z,EAM3BW,EAAWV,EAAXW,KAAAA,OAAO,IAAHD,EAAG,KAAIA,EAMXE,EAASZ,EAATvW,GAAAA,OAAE,IAAAmX,EAAG,KAAIA,EAMTC,EAAoBb,EAApBjT,IAAAA,OAAM,IAAH8T,EAAG,eAAcA,EAOpBC,EAAgBd,EAAhBtC,UAAAA,OAAS,IAAAoD,EAAG,KAAIA,EAOhBC,EAAqBf,EAArBvC,eAAAA,WAAcsD,EAAG,KAAIA,EAMrBC,EAAkBhB,EAAlBhD,YAAAA,OAAc,IAAHgE,GAAOA,EAMlBC,EAAiBjB,EAAjBkB,WAAAA,OAAU,IAAAD,GAAOA,EAMjBE,EAAwBnB,EAAxBoB,kBAAAA,OAAoB,IAAHD,GAAOA,IAMjBnB,EAAPqB,QAAAA,OAAO,IAAAC,EAAA,GAAAA,IAMQtB,EAAfuB,gBAAAA,OAAe,IAAAC,EAAA,GAAAA,IAMJxB,EAAXyB,YAAAA,OAAW,IAAAC,EAAA,GAAAA,IAMC1B,EAAZ2B,aAAAA,OAAY,IAAAC,EAAA,GAAAA,IAMI5B,EAAhB6B,iBAAAA,OAAgB,IAAAC,EAAA,GAAAA,EAMhBC,EAAc/B,EAAd/B,QAAAA,WAAO8D,EAAG,KAAIA,EAMdC,GAAsBhC,EAAtBnC,gBAAAA,QAAkB,IAAHmE,GAAG,KAAIA,GAMtBC,GAAkBjC,EAAlBzC,YAAAA,QAAW,IAAA0E,GAAG,KAAIA,GAMlBC,GAAmBlC,EAAnB5C,aAAAA,QAAe,IAAH8E,GAAG,KAAIA,GAMnBC,GAAuBnC,EAAvBxB,iBAAAA,QAAgB,IAAA2D,GAAG,KAAIA,GAMvBC,GAAgBpC,EAAhBqC,SAAAA,QAAW,IAAHD,IAAQA,GAUhBE,GAA2BtC,aAA3B7N,QAAU,IAAAmQ,GAAGzC,EAAcyC,GAO3BC,GAAmBvC,EAAnBwC,aAAAA,YAAYD,GAAG/F,GAAI+F,MAMgBvC,EAAnC1B,kBAAAA,QAAiB,IAAAmE,GAAA,CAAKnT,SAAU,KAAGmT,GAOnCC,GAA+B1C,EAA/B2C,iBAAAA,QAAgB,IAAAD,GAAGF,GAAYE,GAM/BE,GAAyC5C,EAAzC5B,sBAAAA,QAAwBE,IAAHsE,GAAGtE,GAAiBsE,GAMzCC,GAAwB7C,EAAxB8C,iBAAAA,YAAgBD,IAAQA,GAE7BE,GAAY,CAChBtZ,GAAAA,EACAiU,UAAAA,EACAD,eAAAA,EACAT,YAAAA,EACAkE,WAAAA,EACAE,kBAAAA,EACAC,QAAAA,EACAE,gBAAAA,EACAE,YAAAA,EACAE,aAAAA,EACAE,iBAAAA,EACA5D,QAAAA,EACAJ,gBAAAA,GACAN,YAAAA,GACAH,aAAAA,GACAoB,iBAAAA,GACAgE,aAAAA,GACAlE,kBAAAA,GACAqE,iBAAAA,GACAvE,sBAAAA,GACA0E,iBAAAA,GACA7C,WAAAA,EACAoC,SAAAA,IAEEW,GAAKnE,EAAQkE,CAAAA,EAAAA,IAEbnE,GAAY,KAqBVqE,GAAe,SAAAjc,GAAK,OACxBA,EACItC,OAAOyC,KAAKH,GAAOkc,QAAM,SACtBnT,EAAKhD,GAAG8C,MAAAA,GAAAA,OAAQE,QAAGF,OANH,SAAAE,GACvB,OAAAA,EAAIoT,QAAQ,uBAAwB,OAAOC,cAKZC,CAAgBtW,gBAAS/F,EAAM+F,MACxD,IAEF,EAAE,EAEFuW,GAAc,SAAA9a,GAAC,SAAQA,GAAKA,EAAE+a,aAAe/a,EAAEwD,MAAQxD,EAAEgR,QAqBzDgK,GAAM,aACRC,GAASD,GACTE,GAAUF,GACVG,GAAWH,GACXI,GAAWJ,GAQTK,YAAQC,GAAoD,IAAvBnY,EAAO8C,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,gBAAOwD,EAASxD,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAA,GAChEsV,EAAA,EAAAnF,GAAY7F,GAAK+K,EADiBrV,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAO,CAAA,QAEzCuU,GAAKnE,EAAAA,EAAQkE,CAAAA,EAAAA,IAAiBpX,IAhC9BoY,EAAA,EAAA7E,EAAQ+D,GACNve,OAAOP,WAGH6f,MAAOnc,OAAOoc,WACdC,OAAQrc,OAAOsc,aAEjBnB,GAAM3B,WAGV0C,EAAA,EAAA5E,EAAgB8D,GAAYD,GAAMzB,kBAClCwC,EAAA,EAAA3E,EAAY6D,GAAYD,GAAMvB,cAC9BsC,EAAA,EAAA1E,EAAa4D,GAAYD,GAAMrB,eAC/BoC,EAAA,GAAAzE,EAAiB2D,GAAYD,GAAMnB,wBACnCtC,EAAsByD,GAAMR,mBAC5BhD,EAA0BwD,GAAML,kBAmBhCyB,KACAL,EAAA,GAAAN,GAAU,SAAAhY,GACJwG,EAAUwR,QAAQxR,EAAUwR,OAAOhY,GAKvCyI,EAAS,QAMTA,EAAS,aAEX6P,EAAA,GAAAL,GAAW,SAAAjY,GACLwG,EAAUyR,SAASzR,EAAUyR,QAAQjY,GAKzCyI,EAAS,SAMTA,EAAS,aAEX6P,EAAA,GAAAJ,GAAY,SAAAlY,GACNwG,EAAU0R,UAAU1R,EAAU0R,SAASlY,GAK3CyI,EAAS,YAEX6P,EAAA,GAAAH,GAAY,SAAAnY,GACNwG,EAAU2R,UAAU3R,EAAU2R,SAASnY,GAK3CyI,EAAS,aAUPmQ,cAAS,IAAApS,EAASxD,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAA,GACjBmQ,KACLmF,EAAA,GAAAL,GAAUzR,EAAUyR,SAAWA,IAC/BK,EAAA,GAAAH,GAAW3R,EAAU2R,UAAYA,IACjCG,EAAA,EAAAnF,GAAY,MACZ0F,OA0CIF,GAAa,WACjBnF,EAAUpX,OAAOoX,QACjBQ,EAAmB7V,SAAS2a,KAAKhb,MAAMib,SACvC9E,EAAmB9V,SAAS2a,KAAKhb,MAAMkb,SACvC9E,EAAgB/V,SAAS2a,KAAKhb,MAAMya,MACpCpa,SAAS2a,KAAKhb,MAAMib,SAAW,QAC/B5a,SAAS2a,KAAKhb,MAAMmb,IAAG7U,IAAAA,OAAOoP,EAAO,MACrCrV,SAAS2a,KAAKhb,MAAMkb,SAAW,SAC/B7a,SAAS2a,KAAKhb,MAAMya,MAAQ,QAGxBM,GAAY,WAChB1a,SAAS2a,KAAKhb,MAAMib,SAAW/E,GAAoB,GACnD7V,SAAS2a,KAAKhb,MAAMmb,IAAM,GAC1B9a,SAAS2a,KAAKhb,MAAMkb,SAAW/E,GAAoB,GACnD9V,SAAS2a,KAAKhb,MAAMya,MAAQrE,GAAiB,GAC7C9X,OAAO8c,SAAQ,CACbD,IAAKzF,EACL2F,KAAM,EACNC,SAAU,aAUd1S,GAAWpF,EAFE,CAAK8W,KAAAA,GAAMQ,MAAAA,KAIpB,IAAAS,IAAY,SAYhBC,IAAgB,WACVD,IAAWT,QAGjBW,IAAc,WACZjB,EAAA,GAAAe,IAAY,ktCAdRA,KACExB,GAAW3C,GACbkD,GAAKlD,GAEL0D,uDA7EiB,SAAA5Y,MACjBuX,GAAM9B,YAActC,IAA2B,WAAdnT,EAAMsB,MACzCtB,EAAMM,iBACNsY,MAGEzF,IAA2B,QAAdnT,EAAMsB,MAAkBiW,GAAMF,iBAAgB,CAEvD,IAAAvI,EAAQyE,EAAYiG,iBAAiB,KACrCC,EAAWrO,MAAMC,KAAKyD,GACzBvJ,OAAOgS,GAAM/C,YACbkF,MAAI,SAAEjgB,EAAGC,GAAM,OAAAD,EAAEgb,SAAW/a,EAAE+a,QAAQ,IAErClH,EAAQkM,EAAShY,QAAQtD,SAASwb,gBACvB,IAAXpM,GAAgBvN,EAAM4Z,WAAUrM,EAAQ,GAE5CA,GAASkM,EAAS7e,QAAUoF,EAAM4Z,UAAY,EAAI,GAGlDH,EAFAlM,GAASkM,EAAS7e,QAEFif,QAChB7Z,EAAMM,mBAIoB,SAAAN,IAE1BuX,GAAM5B,mBACL3V,EAAM3C,SAAWgW,GAAcrT,EAAM3C,SAAWiW,IAEjDa,EAAmBnU,EAAM3C,SAGD,SAAA2C,GACtBuX,GAAM5B,mBAAqB3V,EAAM3C,SAAW8W,IAC9CnU,EAAMM,iBACNsY,6HAmFarF,EAAWuG,0DAVbxG,EAAIwG,0DAPNzG,EAAUyG,YCrbbC,GAMAC,GASAC,GA8IAC,GAuIAC,GAyPAC,GAKAC,kiBAliBZ,SAAYN,GACVA,EAAA,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,MAAA,OACD,CAJD,CAAYA,KAAAA,GAIX,CAAA,IAED,SAAYC,GACVA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAa,KAAA,MACd,CAPD,CAAYA,KAAAA,GAOX,CAAA,IAED,SAAYC,GACVA,EAAA,MAAA,QACAA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,OAAA,QACD,CALD,CAAYA,KAAAA,GAKX,CAAA,IAyID,SAAYC,GACVA,EAAA,KAAA,OACAA,EAAA,QAAA,UACAA,EAAA,MAAA,OACD,CAJD,CAAYA,KAAAA,GAIX,CAAA,IAmID,SAAYC,GACVA,EAAA,IAAA,MACAA,EAAA,MAAA,OACD,CAHD,CAAYA,KAAAA,GAGX,CAAA,IAsPD,SAAYC,GACVA,EAAA,IAAA,MACAA,EAAA,KAAA,MACD,CAHD,CAAYA,KAAAA,GAGX,CAAA,IAED,SAAYC,GACVA,EAAA,GAAA,KACAA,EAAA,KAAA,OACAA,EAAA,WAAA,YACD,CAJD,CAAYA,KAAAA,GAIX,CAAA,IC1kBM,IAIMC,GAAuB,GACvBC,GAAyB,IACzBC,GAA2B,IAC3BC,GAAyB,KACzBC,GAAqB,IACrBC,GAAqB,IACrBC,GAAwB,IACxBC,GAA8B,IAG9BC,GAAsC,CAAC,CAAE1Q,MAAO,EAAGC,IAAKsQ,KACxDI,GAAuB,UACvBC,GAA2B,QAC3BC,GAA8B,SAC9BC,GAA+B,MAE/BC,GAAuB,CAClC5J,aAAa,EACbiB,QAAS,eACTV,YAAa,mBACbM,gBAAiB,wBACjBT,aAAc,uBAGHyJ,GAAkBhI,EAAAA,EAAA,CAAA,EAC1B+H,IAAoB,CAAA,EAAA,CACvBrJ,YAAa,2CAGFuJ,GAAuBjI,EAAAA,EAC/B+H,CAAAA,EAAAA,IACHrJ,CAAAA,EAAAA,CAAAA,YAAa,gDAGFwJ,GAAwBlI,EAAAA,EAChC+H,CAAAA,EAAAA,IACHrJ,CAAAA,EAAAA,CAAAA,YAAa,iDAGFyJ,GACX,8HAKWC,GACX,yGAKWC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAmB,mBAEnBC,GAAoB,QACpBC,GAAyB,aAIzBC,GAAsB,IACtBC,GAAqB,IAErBC,GAAoB5M,EAAAA,EAAA,CAAA,EAC9BgL,GAAc6B,IAAM,aACpB7B,GAAc8B,KAAO,cCxEpBle,GAAK,WAEOme,KAEd,QADAne,EAEF,CCLM,SAAUoe,GAAIrgB,GAClB,OAAOsgB,SAAStgB,EAAO,GACzB,CASM,SAAUugB,GAASvgB,GACvB,OAAOwgB,GAAaC,KAAKzgB,EAC3B,CAEA,IAAMwgB,GAAe,gDCPf,SAAUE,GAAS1gB,GAGvB,MAAwB,WAAjBpC,EAAOoC,IAAgC,OAAVA,GAA6C,WAA3BA,EAAM+b,YAAYxY,IAC1E,CAMM,SAAUod,GAAgB3gB,GAG9B,MACmB,WAAjBpC,EAAOoC,IACG,OAAVA,IAC4B,WAA3BA,EAAM+b,YAAYxY,MAAgD,UAA3BvD,EAAM+b,YAAYxY,KAE9D,CAeM,SAAUqd,GAAY5gB,GAG1B,GAAqB,iBAAVA,EACT,OACEA,EAJc,WAKd6gB,SAAS7gB,IACTrB,KAAKmiB,MAAM9gB,KAAWA,IACrB+gB,MAAM,IAAIvgB,KAAKR,GAAOghB,WAI3B,GAAqB,iBAAVhhB,EACT,OAAO4gB,GAAYK,OAAOjhB,IAI5B,IACE,IAAMghB,EAAUhhB,EAAQA,EAAMghB,UAAYhhB,EAC1C,GAAIghB,IAAYhhB,EACd,OAAO4gB,GAAYI,EAEtB,CAAC,MAAOE,GACP,OAAY,CACb,CAED,OAAO,CACT,CAYM,SAAUC,GAAY9M,GAC1B,IAAM+M,EAAM/gB,OAAO+B,SAASoB,cAAc,OAE1C4d,EAAIrf,MAAMsS,MAAQA,EAElB,IAAMgN,EAAUD,EAAIrf,MAAMsS,MAC1B,MAAmB,KAAZgN,EAAiBA,EAAQ1F,QAAQ,OAAQ,IAAIC,cAAgB,IACtE,CAagB,SAAA0F,GAAUthB,EAAgBuhB,GAExC,GACmB,iBAAVvhB,GACU,iBAAVA,GACU,kBAAVA,QACU,IAAVA,EAEP,OAAApC,EAAcoC,GAEhB,GAAqB,iBAAVA,EACT,MAAO,SAET,GAAc,OAAVA,EACF,MAAO,OAGT,GAAIqP,MAAMmS,QAAQxhB,GAChB,MAAO,QAET,GAAI0gB,GAAS1gB,GAEX,MAAO,SAIT,IAAMyhB,EAAWF,EAAOG,UAAU1hB,GAClC,OAAIyhB,GAAYlB,GAASkB,GAChB,SAEQ,SAAbA,GAAoC,UAAbA,EAClB,UAEQ,SAAbA,EACK,OAGF,SACT,CAMA,IAAME,GAAa,mBACb,SAAUC,GAAMje,GACpB,MAAuB,iBAATA,GAAqBge,GAAWlB,KAAK9c,EACrD,CAMgB,SAAAke,GAActZ,EAAagZ,GACzC,GAAY,KAARhZ,EACF,MAAO,GAGT,IAAMuZ,EAAUvZ,EAAIwZ,OAEpB,MAAgB,SAAZD,EACK,KAGO,SAAZA,GAIY,UAAZA,IAIAvB,GAASuB,GACJP,EAAOS,MAAMF,GAGfvZ,EACT,CAaM,SAAU0Z,GAAUjiB,GACxB,OAAOkiB,GAAczB,KAAKzgB,EAC5B,CAEA,IAAMkiB,GAAgB,aC7LhBC,GAA4B,IAC5BC,GAAsB,YA4DZC,GAAeC,GAAsC,IAAtBC,EAActb,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,IAAAyI,UAAA,GACrDub,EAAuC,CAAA,EAE7C,IAAKnT,MAAMmS,QAAQc,GACjB,MAAU,IAAAG,UAAU,kBAGtB,SAASC,EAAmBjP,EAAckP,KACvBtT,MAAMmS,QAAQ/N,KAASiN,GAASjN,IAEjC8O,GAAkBI,EAAK9jB,OAAS,KAC9C2jB,EAAYI,EAAmBD,KAAS,GAGtCjC,GAASjN,IACXvW,OAAOyC,KAAK8T,GAAKnW,SAAQ,SAACiI,GACxBmd,EAAmBjP,EAAIlO,GAAMod,EAAKta,OAAO9C,GAC3C,GAEH,CAGD,IADA,IAAM3G,EAAMD,KAAKkkB,IAAIP,EAAMzjB,OAAQsjB,IAC1BrjB,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAE5B4jB,EADaJ,EAAMxjB,GACMsjB,GAC1B,CAID,OAFmBllB,OAAOyC,KAAK6iB,GAAa7E,OAE1B5L,IAAI+Q,EACxB,UASgBC,GAAa1U,EAAeC,EAAa0U,GACvD,KAAI1U,GAAOD,GAIX,IAAK,IAAImD,EAAQnD,EAAOmD,EAAQlD,EAAKkD,IACnCwR,EAASxR,EAEb,CAMgB,SAAAyR,GAASX,EAAiB1jB,GACxC,OAAO0jB,EAAMzjB,OAASD,EAAM0jB,EAAMlkB,MAAM,EAAGQ,GAAO0jB,CACpD,CAKM,SAAUY,GAAiBZ,GAC/B,OAAAjL,EAAA,CAAA,EACKiL,EAEP,CAKM,SAAUa,GAAiBC,GAC/B,OAAOlmB,OAAOmmB,OAAOD,EACvB,CAsBM,SAAUE,GAAahB,EAAY9Q,EAAe+R,EAAeC,GAErE,IAAMC,EAAOnB,EAAMlkB,MAAM,GACnBslB,EAAcD,EAAKjQ,OAAOhC,EAAO+R,GAIvC,OADAE,EAAKjQ,OAAOxB,MAAMyR,EAAOjS,CAAAA,EAAQgS,EAAQ,GAACnb,OAAA4J,EAAKyR,KACxCD,CACT,CCjJgB,SAAAE,GAAeC,EAAkBrC,GAC/C,IACE,OAAOA,EAAOS,MAAM4B,EACrB,CAAC,MAAO1C,GAEP,OAAOK,EAAOS,MAAM6B,EAAWD,GAChC,CACH,CAMgB,SAAAE,GACdC,EACAxC,GAEA,IACE,OAAOoC,GAAeI,EAAaxC,EACpC,CAAC,MAAOL,GACP,MACD,CACH,CAGgB,SAAA8C,GAAiBD,EAAqB/B,GAIpD+B,EAAcA,EAAYpI,QAAQsI,GAA+C,IAEjF,IACE,OAAOjC,EAAM+B,EACd,CAAC,MAAO7C,IAIT,IACE,OAAOc,EAAM,IAAM+B,EAAc,IAClC,CAAC,MAAO7C,IAIT,IACE,OAAOc,EAAM,IAAM+B,EAAc,IAClC,CAAC,MAAO7C,IAIT,UAAUlX,MAAM,+BAClB,CAKM,SAAUka,GAAkBH,GAIhCA,EAAcA,EAAYpI,QAAQsI,GAA+C,IAEjF,IACE,OAAOJ,EAAWE,EACnB,CAAC,MAAO7C,IAIT,IACE,IAAMiD,EAAWN,EAAW,IAAME,EAAc,KAChD,OAAOI,EAASC,UAAU,EAAGD,EAAStlB,OAAS,EAChD,CAAC,MAAOqiB,IAIT,IACE,IAAMiD,EAAWN,EAAW,IAAME,EAAc,KAChD,OAAOI,EAASC,UAAU,EAAGD,EAAStlB,OAAS,EAChD,CAAC,MAAOqiB,IAIT,UAAUlX,MAAM,gCAClB,CAGA,IAAMia,GAAgD,QAYtC,SAAAI,GAAwBT,EAAkBU,GACxD,IAAMC,EAAgBC,GAAeC,KAAKH,GAE1C,GAAIC,EAAe,CAEjB,IAAMvH,EAAWqD,GAAIkE,EAAc,IAE7BG,EAuDM,SACd/gB,EACAghB,GAMA,QALAtW,EAAKpH,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAG,EACRqH,EAAGrH,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,aAAGtD,EAAK9E,OAEP0kB,EAAQ,EAEHzkB,EAAIuP,EAAOvP,EAAIwP,EAAKxP,IACvB6E,EAAKihB,OAAO9lB,KAAO6lB,GACrBpB,IAIJ,OAAOA,CACT,CAtEiBsB,CAA0BjB,EAAU,KAAM,EAAG5G,GAEpD8H,EAAS9H,EADG4G,EAASmB,YAAY,KAAM/H,GACP,EAEtC,MAAO,CACLA,SAAAA,EACA0H,KAAAA,EACAI,OAAAA,EACAE,QAASV,EAAkB3I,QAAQ6I,IAAgB,WACjD,cAAAnc,OAAeqc,EAAO,cAACrc,OAAWyc,EAAS,EAC7C,IAEH,CAEC,IAAMG,EAAYC,GAAWT,KAAKH,GAC5Ba,EAAeF,EAAY5E,GAAI4E,EAAU,IAAM,KAC/CP,EAAwB,OAAjBS,EAAwBA,EAAe,EAAI,KAElDC,EAAcC,GAAaZ,KAAKH,GAChCgB,EAAiBF,EAAc/E,GAAI+E,EAAY,IAAM,KACrDN,EAA4B,OAAnBQ,EAA0BA,EAAiB,EAAI,KAExDtI,EACK,OAAT0H,GAA4B,OAAXI,WAkBWnhB,EAAc+gB,EAAcI,GAC5D,IAAItT,EAAQ7N,EAAK+B,QAAQ,MACrB5G,EAAI,EAER,KAAOA,EAAI4lB,IAAmB,IAAXlT,GACjBA,EAAQ7N,EAAK+B,QAAQ,KAAM8L,EAAQ,GACnC1S,IAGF,OAAkB,IAAX0S,EACHA,EAAQsT,EAAS,EACjB,IACN,CA9ByCS,CAAkB3B,EAAUc,EAAMI,GAAU,KAGjF,MAAO,CACL9H,SAAAA,EACA0H,KAAAA,EACAI,OAAAA,EACAE,QAASV,EAAkB3I,QAAQ,gBAAiB,IAAIA,QAAQ,qBAAsB,IAG5F,CAkKM,SAAU6J,GAAoBC,GAClC,OAAK/E,GAAS+E,QAIOjnB,IAAjBinB,EAAQC,UACWlnB,IAAjBinB,EAAQ9hB,KACH,kFAEI,UAGQnF,IAAjBinB,EAAQ9hB,KACH,qEAC0B,iBAAjB8hB,EAAQ9hB,KAEtB,6HAdG,2BAqBX,CAKM,SAAUgiB,GAAUF,GACxB,OACE/E,GAAS+E,UAAqC,IAAjBA,EAAQC,MAAgD,iBAAjBD,EAAQ9hB,KAEhF,CAKM,SAAUiiB,GAAcH,GAC5B,OAAO/E,GAAS+E,IAAoC,iBAAjBA,EAAQ9hB,IAC7C,CAKM,SAAUkiB,GAAcJ,GAC5B,OAAO/E,GAAS+E,SAAoC,IAAjBA,EAAQC,IAC7C,CAKM,SAAUI,GACdL,GACA,IAAAM,EAA2C9e,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,QAAAzI,EAC3C+iB,EAAAta,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAqB+e,KAErB,OAAOJ,GAAcH,GACjBA,EACA,CAAE9hB,KAAM4d,EAAOG,UAAU+D,EAAQC,KAAM,KAAMK,GACnD,UAMgBE,GAAcR,GAA2C,IAAzBlE,yDAAqByE,KACnE,OAAOH,GAAcJ,GAAWA,EAAU,CAAEC,KAAMnE,EAAOS,MAAMyD,EAAQ9hB,MACzE,UAKgBuiB,GAAQT,EAAkBM,EAA8BxE,GACtE,OAAOuE,GAAcL,EAASM,EAAaxE,GAAQ5d,IACrD,CAQgB,SAAAwiB,GAAeV,EAAkBW,GAC/C,OAAOC,GAAuBZ,EAASW,GAAWA,CACpD,UAUgBC,GAAuBZ,GAAkB,IAAAW,EAAOnf,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAGqf,GAAAA,IACjE,GAAIV,GAAcH,GAChB,OAAOA,EAAQ9hB,KAAK9E,OAGtB,IAAM6mB,EAAOD,EAAQC,KAEjBa,EAAgB,EA6CpB,OA3CA,SAASC,EAAQd,GACf,GAAIrW,MAAMmS,QAAQkE,GAAO,CAIvB,IAFAa,GAAsBb,EAAK7mB,OAAS,EAAnB,GAEGunB,EAClB,OAAOG,EAGT,IAAK,IAAIznB,EAAI,EAAGA,EAAI4mB,EAAK7mB,OAAQC,IAAK,CAKpC,GAFA0nB,EAFad,EAAK5mB,IAIdynB,EAAgBH,EAClB,OAAOG,CAEV,CACF,MAAU7F,GAAAA,GAASgF,GAAO,CACzB,IAAM/lB,EAAOzC,OAAOyC,KAAK+lB,GAGzBa,GAAiB,EAAI5mB,EAAKd,QAAUc,EAAKd,OAAS,GAElD,IAAK,IAAI/B,EAAI,EAAGA,EAAI6C,EAAKd,OAAQ/B,IAAK,CACpC,IAAMyI,EAAM5F,EAAK7C,GACXkD,EAAQ0lB,EAAKngB,GAGnBghB,GAAiBhhB,EAAI1G,OAAS,EAE9B2nB,EAAQxmB,EACT,CACF,MACCumB,GADyB,iBAATb,EACCA,EAAK7mB,OAAS,EAGd4nB,OAAOf,GAAM7mB,MAEjC,CAED2nB,CAAQd,GAEDa,CACT,CAEA,IAAM/B,GAAiB,wBACjBU,GAAa,aACbG,GAAe,eAML,SAAAqB,GAAchpB,EAAeC,GAC3C,OAAOD,EAAEskB,QAAUrkB,EAAEqkB,OAAStkB,EAAEgkB,YAAc/jB,EAAE+jB,SAClD,CAKM,SAAUiF,GAAgB/C,GAE9B,OAAOgD,GAAuBnG,KAAKmD,IAAaA,EAAS/kB,OAAS,CACpE,CAGA,IAAM+nB,GAAyB,mBCjefC,GAA4BC,GAM3C,IALCC,EAAuBD,EAAvBC,wBACAC,EAAuBF,EAAvBE,wBAKA,OAAID,EACEC,EACKC,GAEAC,GAGLF,EACKG,GAEAC,EAGb,CAEA,IAAMH,GAA6B,CACjCI,YAAa,SAACrnB,GAAmB,OAAAsnB,GAAkBC,GAAkBd,OAAOzmB,IAC5EwnB,EAAAA,cAAe,SAACxnB,GAAkB,OAAAynB,GAAoBC,GAAoB1nB,MAGtEknB,GAAmB,CACvBG,YAAa,SAACrnB,GAAmB,OAAAunB,GAAkBd,OAAOzmB,GAAO,EACjEwnB,cAAe,SAACxnB,UAAkBynB,GAAoBznB,KAGlDmnB,GAAmB,CACvBE,YAAa,SAACrnB,GAAc,OAAKsnB,GAAkBb,OAAOzmB,KAC1DwnB,cAAe,SAACxnB,UAAkB0nB,GAAoB1nB,KAGlDonB,GAAmB,CACvBC,YAAa,SAACrnB,UAAmBymB,OAAOzmB,IACxCwnB,cAAe,SAACxnB,UAAkBA,IAM9B,SAAUsnB,GAAkBtnB,GAChC,OAAOA,EAAM2b,QAAQ,iBAAiB,SAACjf,GAAKirB,IAAAA,EAC1C,MAAU,OAANjrB,GAAoB,OAANA,GAAoB,OAANA,GAAoB,OAANA,GAAoB,OAANA,EACnDA,EAGF,OAAS,OAAwB,QAAnBirB,EAAGjrB,EAAEkrB,YAAY,UAAE,IAAAD,OAAA,EAAhBA,EAAkBE,SAAS,MAAKzpB,OAAO,EACjE,GACF,CAEM,SAAUspB,GAAoB1nB,GAClC,OAAOA,EAAM2b,QAAQ,sBAAsB,SAACjf,GAC1C,IACE,IAAMorB,EAAoB9B,KAAKhE,MAAM,IAAMtlB,EAAI,KAK/C,OAAOqrB,GAAkBD,IAAcA,CACxC,CAAC,MAAO5G,GACP,OAAOxkB,CACR,CACH,GACF,CAEA,IAAMqrB,GAAoB,CACxB,IAAK,MACL,KAAM,OAEN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,OAIFC,GAA2B,CAC/B,MAAO,IACP,OAAQ,KAER,MAAO,IACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,MAIH,SAAUT,GAAkBvnB,GAChC,OAAOA,EAAM2b,QAAQ,oBAAoB,SAACjf,GAGxC,OAAOqrB,GAAkBrrB,IAAMA,CACjC,GACF,CAEM,SAAU+qB,GAAoBznB,GAClC,OAAOA,EAAM2b,QAAQ,iBAAiB,SAACjf,GAGrC,OAAOsrB,GAAyBtrB,IAAMA,CACxC,GACF,CAEM,SAAUurB,GAAiBjoB,GAC/B,MAAqB,iBAAVA,EACFymB,OAAOzmB,GAGZA,EAAMkU,SAAS,MAEVlU,EAAQ,KAGVA,CACT,CAkBgB,SAAAkoB,GAAkBlmB,EAAkBmmB,GAClD,OAAOC,GAAUpmB,GAAS,SAACmK,UAAMA,EAAEgc,SAASE,gBAAkBF,EAASE,aAAc,GACvF,UAEgBC,GAAmBtmB,EAAkBuB,EAAcvD,GACjE,OAAOooB,GAAUpmB,GAAS,SAACmK,GAAM,OAiBnC,SAAsBnK,EAAkBuB,EAAcvD,GACpD,MAAuC,mBAAzBgC,EAAQ+C,cAA+B/C,EAAQ+C,aAAaxB,KAAUvD,CACtF,CAnBmCuoB,CAAapc,EAAG5I,EAAMvD,EAAM,GAC/D,CAyBgB,SAAAooB,GAAUpmB,EAAkBwmB,GAC1C,QAASC,GAAWzmB,EAASwmB,EAC/B,CAUgB,SAAAC,GACdzmB,EACAwmB,GAIA,IAFA,IAAIrc,EAAoBnK,EAEjBmK,IAAMqc,EAAUrc,IACrBA,EAAIA,EAAElJ,WAGR,OAAOkJ,QAAK3N,CACd,CAOM,SAAUkqB,GAAe1mB,GAC7B,GAA0B,MAAtBA,EAAQ2mB,WAAZ,CAKA,IAAMC,EAAQxmB,SAASymB,cACjBC,EAAYzoB,OAAO0oB,eACzBH,EAAMI,SAAShnB,EAAS,GACxB4mB,EAAMK,UAAS,GACfH,SAAAA,EAAWI,kBACXJ,SAAAA,EAAWK,SAASP,EAPnB,MAFC5mB,EAAQ8b,OAUZ,CAKM,SAAUsL,GACdC,EACA1lB,EACA2lB,EACAC,GAEA,IAAMlpB,EAASmpB,GAAUH,GACzB,GAAKhpB,EAAL,CAIA,IAAMud,EAAoCvd,EAAO+B,SAASwb,cACrDvd,EAAO+B,SAASwb,cACjB,KAEAA,GAAiBA,EAAc6L,oBACjC7L,EAAc1b,YAAconB,EAAkB3lB,EAAOia,EAAc1b,YAAcyB,EACjF+kB,GAAe9K,GACX2L,GACFA,EAAgB3L,GAVnB,CAaH,CAMM,SAAU4L,GAAUxnB,GACxB,OAAOA,GAAWA,EAAQO,cAAgBP,EAAQO,cAAcmnB,YAAc,IAChF,CAEM,SAAUC,GAAuB3nB,GACrC,IAAM3B,EAASmpB,GAAUxnB,GACnB4b,EAAgBvd,eAAAA,EAAQ+B,SAASwb,cACvC,QAAOA,GAAgBwK,GAAUxK,GAAe,SAACzR,GAAC,OAAKA,IAAMnK,CAAO,GACtE,CAOgB,SAAA4nB,GAAuB5nB,EAAkBmmB,GACvD,OAAOM,GAAWzmB,GAAS,SAACmK,GAAM,OAAAA,EAAEgc,WAAaA,CAAQ,GAC3D,CAEM,SAAU0B,GAA2BvoB,GACzC,OAAIgnB,GAAmBhnB,EAAQ,YAAa,kBACnC2c,GAAc1Y,IAGnB+iB,GAAmBhnB,EAAQ,YAAa,oBACnC2c,GAAcje,MAGnBsoB,GAAmBhnB,EAAQ,YAAa,gCACnC2c,GAAc6L,OAGnBxB,GAAmBhnB,EAAQ,YAAa,+BACnC2c,GAAc8L,MAGhB9L,GAAc+L,KACvB,CAKM,SAAUC,GAAetH,GAC7B,OAAOuH,mBAAmBtH,EAAmBD,GAC/C,CAYM,SAAUwH,GAAsB7oB,GACpC,IAAM8oB,EAAS3B,GAAWnnB,GAAQ,SAACU,GACjC,QAAOA,UAAAA,EAASumB,eAAevmB,EAAQumB,aAAa,YACtD,IAEM8B,EAAWD,eAAAA,EAAQrlB,aAAa,aACtC,OAAOslB,EAZAvH,EAAiBwH,mBAYSD,IAAY,IAC/C,CAMM,SAAUE,GAAkBC,GAChC,IAAAC,EAAWD,EAAXC,YACAC,EAAcF,EAAdE,eACA/d,EAAS6d,EAAT7d,UAASge,EAAAH,EACTI,QAAAA,OAAU,IAAHD,EAAG,WAAA,QAAUA,EAAAA,EAAAE,EAAAL,EACpBM,OAAAA,WAAMD,EAAG,GAAEA,EAQLE,EAAMhZ,EAAI0Y,EAAYjhB,QAU5B,SAAmBxH,GACjB,IAAMgpB,EAAOhpB,EAAQipB,wBACrB,OAAOD,EAAKxO,MAAQ,GAAKwO,EAAKtO,OAAS,CACxC,IAb8CwO,GACzCxU,EAAUwU,EAAgBR,GAchC,SAASQ,EAAgBlpB,GACvB,IAAMgpB,EAAOhpB,EAAQipB,wBACrB,MAAO,CACLvuB,EAAGsuB,EAAK5N,KAAO4N,EAAKxO,MAAQ,EAC5B2O,EAAGH,EAAK9N,IAAM8N,EAAKtO,OAAS,EAC5BsO,KAAAA,EACAhpB,QAAAA,EAEH,CAQD,SAASopB,EAAS1tB,EAAmBC,GAA8B,IAAX0tB,EAAOpkB,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAG,EAC1DqkB,EAAQ5tB,EAAEhB,EAAIiB,EAAEjB,EAChB6uB,GAAS7tB,EAAEytB,EAAIxtB,EAAEwtB,GAAKE,EAC5B,OAAO1sB,KAAK6sB,KAAKF,EAAQA,EAAQC,EAAQA,EAC1C,CACD,IAAME,EAAoB,SAACC,GAAyB,OAAKN,EAASM,EAAWhV,EAC7E,EAEA,GAAkB,SAAd/J,GAAsC,UAAdA,EAAuB,CAGjD,IAAMgf,EACU,SAAdhf,EACIoe,EAAIvhB,QAAO,SAACyN,UAlBetZ,EAkBW+Y,EAARO,EAlBqB+T,KAAK5N,KAAO0N,EAASntB,EAAEqtB,KAAK5N,KAAxE,IAAoBzf,CAkBoB,IAC/CotB,EAAIvhB,QAAO,SAACyN,UAlBgBtZ,EAkBW+Y,EAARO,EAlBqB+T,KAAKY,MAAQjuB,EAAEqtB,KAAKY,MAAQd,EAAxE,IAAoBntB,CAkBmB,IAC/CkuB,EAAsBF,EAAeniB,QAAO,SAACyN,GAAW,OArB3CvZ,EAqBuDuZ,EArBpCtZ,EAqB4C+Y,EArBtB/X,KAAKyP,IAAI1Q,EAAEytB,EAAIxtB,EAAEwtB,GAAKL,EAAhE,IAACptB,EAAmBC,KAsBhCmuB,EACJC,EAAMF,EAAqBJ,IAC3BM,EAAMJ,GAZwB,SAACD,GAA8B,OAAAN,EAASM,EAAWhV,EAAS,GAE9F,IAYE,OAAOoV,aAAAA,EAAAA,EAAS9pB,OACjB,CAED,GAAkB,OAAd2K,GAAoC,SAAdA,EAAsB,CAG9C,IAAMqf,EACU,OAAdrf,EACIoe,EAAIvhB,QAAO,SAACyN,GAAM,OA/BUtZ,EA+BW+Y,EAARO,EA/BqBkU,EAAIL,EAASntB,EAAEwtB,EAA3D,IAAoBxtB,CA+BmB,IAC/CotB,EAAIvhB,QAAO,SAACyN,GAAM,OA/BUtZ,EA+BW+Y,EAARO,EA/BqBkU,EAAIxtB,EAAEwtB,EAAIL,EAAtD,IAAoBntB,CA+BmB,IAC/CsuB,EAAiBD,EAAWxiB,QAAO,SAACyN,GAAM,OAAK2T,EAAQ3T,EAAOjV,QAAQ,IACtE8pB,EAAUC,EAAME,EAAgBR,IAAsBM,EAAMC,EAAYP,GAE9E,OAAOK,aAAO,EAAPA,EAAS9pB,OACjB,CAGH,CAOM,SAAUkqB,GAAiBlqB,GAC/B,QACIA,GACmB,QAArBA,EAAQmmB,UAC2D,mBAA3DnmB,EAA+CmqB,SACW,mBAA1DnqB,EAA+CoqB,MAE3D,UCjZgBC,GAAkBpoB,GAAqC,IAAfqoB,EAASrlB,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,IAC5DslB,EAAQ,GAEVtoB,EAAMuoB,SAERD,EAAMniB,KAAK,QAETnG,EAAMwoB,SAERF,EAAMniB,KAAK,QAETnG,EAAMyoB,QAERH,EAAMniB,KAAK,OAETnG,EAAM4Z,UACR0O,EAAMniB,KAAK,SAGb,IAAMuiB,EAA+B,IAArB1oB,EAAMsB,IAAI1G,OAAeoF,EAAMsB,IAAI8iB,cAAgBpkB,EAAMsB,IAMzE,OALMonB,KAAWC,IAEfL,EAAMniB,KAAKuiB,GAGNJ,EAAM5iB,KAAK2iB,EACpB,CAEA,IAAMM,GAAW,CACfC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,KAAK,EACLC,QAAQ,EACRC,OAAO,odCmE0CC,EAAA,CAAAnvB,KAAMwB,OAA3B0X,EAAAlZ,KAAMwJ,sDAAe4lB,EAAAnc,GAAAkc,EAAA,CAAA9b,GAAArT,KAAMwB,sUARNoF,GAAAwc,EAAA,QAAAiM,EAAAC,GAAetvB,EAAc,GAAAA,KAAMmG,2BAAlFtB,GASKvB,EAAA8f,EAAAte,GARHzB,GAMC+f,EAAAtb,yDACuB,GAAA,EAAAxH,GAAA4Y,KAAAA,EAAAlZ,KAAMwJ,WAAS,uKAAMyJ,GAAAkc,EAAA,CAAA9b,GAAArT,KAAMwB,wBARNkX,GAAA,EAAApY,GAAA+uB,KAAAA,EAAAC,GAAetvB,EAAc,GAAAA,KAAMmG,kMAD/EnG,EAAY,IAAAmZ,GAAAnZ,mIAPnB6E,GAmBKvB,EAAA8f,EAAAte,wDAxBmB9E,EAAqB,IAAA,mBACvBA,EAAa,IAAA,iBACfA,EAAiB,IAAA,oBAOrBuvB,mBACFvvB,EAAa,4CAEpBA,EAAY,iOAnFR,SAAAuvB,GAAsBtpB,GAC7BA,EAAMU,2BAcC2oB,GAAeE,EAA8BrpB,OAkC9CspB,EAAWD,EAAavC,wBACtByC,aAjCF,GAAAvpB,EAAQrB,OAAM,CACR,IAAAA,EAA2EqB,EAA3ErB,OAAM6qB,EAAqExpB,EAAnEqY,MAAAA,OAAK,IAAAmR,EAAG,EAACA,EAAAC,EAA0DzpB,EAAxDuY,OAAAA,OAAS,IAAHkR,EAAG,EAACA,EAAAC,EAA8C1pB,EAA5C2pB,UAAAA,OAAY,IAAHD,EAAG,EAACA,EAAAE,EAA+B5pB,EAA7B6pB,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAAE/Q,EAAa7Y,EAAb6Y,WACjCla,EAAOmoB,wBAApC7N,EAAI6Q,EAAJ7Q,KAAMF,EAAG+Q,EAAH/Q,IAAKgR,EAAMD,EAANC,OAAQtC,EAAKqC,EAALrC,MAErBuC,EACS,QAAbnR,GAAuBE,EAAMR,EAASrc,OAAOsc,aAAeO,EAAMR,EAC9D0R,EACS,SAAbpR,GAAwBI,EAAOZ,EAAQnc,OAAOoc,YAAcW,EAAOZ,SAGnEY,KAAMgR,EAAexC,EAAQoC,EAAa5Q,EAAO4Q,EACjD9Q,IAAKiR,EAAgBjR,EAAM4Q,EAAYI,EAASJ,EAChDK,cAAAA,EACAC,aAAAA,MAE+B,iBAAjBjqB,EAAQiZ,MAA4C,iBAAhBjZ,EAAQ+Y,IAAgB,KACpEE,EAAqCjZ,EAArCiZ,KAAMF,EAA+B/Y,EAA/B+Y,IAAGmR,EAA4BlqB,EAA1BqY,MAAAA,WAAK6R,EAAG,EAACA,EAAAC,EAAiBnqB,EAAfuY,OAAAA,OAAS,IAAH4R,EAAG,EAACA,EAMtC,MAAA,CAAAlR,KAAAA,EACAF,IAAAA,EACAiR,cANoBjR,EAAMR,EAASrc,OAAOsc,aAAeO,EAAMR,EAO/D0R,aANmBhR,EAAOZ,EAAQnc,OAAOoc,YAAcW,EAAOZ,GAStD,MAAA,IAAAxS,MAAM,kEAK+Bub,GAA3CnI,EAAIsQ,EAAJtQ,KAAMF,EAAGwQ,EAAHxQ,IAAKiR,EAAaT,EAAbS,cAAeC,EAAYV,EAAZU,aAU3B,OARiBD,EAAA9lB,WAAAA,OACTolB,EAASvQ,IAAMA,EAAG7U,OAAAA,QAAAA,OACrB6U,EAAMuQ,EAASvQ,IAAG,SAEJkR,EAAA/lB,UAAAA,OACZolB,EAASrQ,KAAOA,EAAI,OAAA,SAAA/U,OACrB+U,EAAOqQ,EAASrQ,KAAI,+BA7E/BoQ,EACAe,EAJOC,EAAiBhW,EAAjBgW,MACAC,EAA6CjW,EAA7CiW,mBAOF,SAAAC,EAAiBzqB,GAEtBuqB,EAAMrqB,SACNqqB,EAAMrqB,QAAQyV,oBACbwO,GAAUnkB,EAAM3C,QAAwB,SAAA6K,UAAMA,IAAMqhB,CAAY,KAEjEiB,EAAmBD,EAAMvsB,WAR7BgI,eAgFMskB,GACFA,EAAezQ,yHArEV,SAAsB7Z,GAC7ByqB,EAAiBzqB,IAOV,SAAcA,GAEP,WADAooB,GAAkBpoB,IAE9BwqB,EAAmBD,EAAMvsB,KAIpB,SAAkBgC,GACzByqB,EAAiBzqB,yDA8EFsqB,EAAcxQ,0DAZpByP,EAAYzP,wjBCxDlB/f,EAAM,iBAAXa,OAAIC,GAAA,kVAACd,EAAM,YAAXa,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,sHAAJD,OAAIC,GAAA,2NAzCEgV,EAAQH,GAAY,4BAEtBib,EAAM,GAqBD,SAAAH,EAAmBI,OACpBC,EAAaF,EAAOG,WAAW,SAAAP,UAAUA,EAAMvsB,KAAO4sB,CAAO,IAE/D,IAAgB,IAAhBC,EAAiB,KACbN,EAAQI,EAAOE,GACjBN,EAAMrqB,QAAQ+X,SAChBsS,EAAMrqB,QAAQ+X,cAGhB0S,EAASA,EAAOplB,QAAQ,SAAAglB,GAAU,OAAAA,EAAMvsB,KAAO4sB,cAMnDlkB,GAAiC,iBAAoB,CAAAqkB,kBAlC5C,SACPxnB,EACAhI,EACA2E,GAEA2P,EAAM,UAAWtU,EAAO2E,OAElBqqB,EAAK,CACTvsB,GAAIme,KACO5Y,UAAAA,EACXhI,MAAOA,GAAK,CAAA,EACZ2E,QAASA,GAAO,CAAA,GAKX,WAFPyqB,EAAMvmB,GAAAA,OAAA4J,EAAO2c,GAAM,CAAEJ,KAEdA,EAAMvsB,IAkByDwsB,mBAAAA,8FAFrE3a,EAAM,SAAU8a,8ICnCf,SAAUK,GAAkBtM,GAChC,OAAOA,EACJ5Q,KAAI,SAAC1S,EAAGmS,GACP,OAAO0d,GAAmBzO,KAAKphB,GAC3B,IAAMA,EAAI,IACV,SAASohB,KAAKphB,IAAY,KAANA,EAClB,MAAoBA,EAOlBsc,QAAQ,KAAM,OAPS,OACxBnK,EAAQ,EAAI,IAAM,IAAMnS,CACjC,IACCsK,KAAK,GACV,CASM,SAAUwlB,GAAcC,GAI5B,IAHA,IAAMzM,EAAiB,GACnB7jB,EAAI,EAEDA,EAAIswB,EAAQvwB,QACE,MAAfuwB,EAAQtwB,IACVA,IAGiB,MAAfswB,EAAQtwB,IACVA,IAEmB,MAAfswB,EAAQtwB,IACVA,IACA6jB,EAAKvY,KAAKilB,GAAU,SAACtuB,GAAM,MAAM,MAANA,KAAW,IACtCuuB,EAAa,MAEb3M,EAAKvY,KAAKilB,GAAU,SAACtuB,GAAM,MAAM,MAANA,MAG7BuuB,EAAa,MAEb3M,EAAKvY,KAAKilB,GAAU,SAACtuB,GAAM,MAAM,MAANA,GAAmB,MAANA,CAAU,KAItD,SAASsuB,EAAUE,GAGjB,IAHmE,IAAhBC,EAAQvoB,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,IAAAyI,UAAA,GACvDwoB,EAAO,GAEJ3wB,EAAIswB,EAAQvwB,SAAW0wB,EAAMH,EAAQtwB,KACtC0wB,GAA2B,OAAfJ,EAAQtwB,IAAkC,MAAnBswB,EAAQtwB,EAAI,IAEjD2wB,GAAQ,IACR3wB,GAAK,IAEL2wB,GAAQL,EAAQtwB,GAChBA,KAIJ,OAAO2wB,CACR,CAED,SAASH,EAAaI,GACpB,GAAIN,EAAQtwB,KAAO4wB,EACjB,MAAU,IAAAC,YAAW,sBAAAtnB,OAAuBqnB,EAAIrnB,0BAAAA,OAAyBvJ,IAE3EA,GACD,CAED,OAAO6jB,CACT,CAKM,SAAUiN,GAAajN,GAC3B,MAAO,CACL3iB,MAAO2iB,EACPkN,MAAOC,EAAQnN,GAAQ,cAAgBsM,GAAkBtM,GAE7D,CAuBA,SAASoN,GAAwBN,GAC/B,GAAIP,GAAmBzO,KAAKgP,GAC1B,MAAO,IAAMA,EAAO,IACf,GAAIO,GAAwBvP,KAAKgP,GACtC,MAAO,IAAMA,EAEb,IAAMQ,EAAUjK,KAAKtE,UAAU+N,GAG/B,MAAO,KADaQ,EAAQ7L,UAAU,EAAG6L,EAAQpxB,OAAS,GAAG8c,QAAQ,OAAQ,KACjD,IAEhC,CAeM,SAAUuU,GAAuBvN,GACrC,OAAOA,EACJ5Q,KAAI,SAAC0d,GACJ,OAAIP,GAAmBzO,KAAKgP,GAE1B,MAAApnB,OAAaonB,EAAI,KACRO,GAAwBvP,KAAKgP,GAEtC,KAAApnB,OAAYonB,GAGZ,MAAApnB,OAAa2d,KAAKtE,UAAU+N,GAAK,IAErC,IACC9lB,KAAK,GACV,CAKA,IAAMqmB,GAA0B,4BAC1Bd,GAAqB,QC1JX,SAAAiB,GAAe5sB,EAAc5D,GAS3C,IARA,IAAMywB,EAAU,IAAIvwB,IAAIF,GAGlB0wB,EAAwB9sB,EAAKoY,QAAQ,oBAAqB,IAE5D2U,EAAY/sB,EACZzE,EAAI,EAEDsxB,EAAQtwB,IAAIwwB,IAAY,CAC7B,IAAM7M,EAAO,QAAU3kB,EAAI,EAAI,IAAMA,EAAI,IACzCwxB,EAAS,GAAAjoB,OAAMgoB,EAAqB,MAAAhoB,OAAKob,EAAO,KAChD3kB,GACD,CAED,OAAOwxB,CACT,CAiCgB,SAAAC,GAAS5sB,EAAc6sB,GACrC,IACMC,EAAgBD,EAAYE,EAElC,OAAO/sB,EAAK9E,OAAS2xB,EAAY7sB,EAAKygB,UAAU,EAAGqM,GAHlC,MAG8D9sB,CACjF,CAQM,SAAUgtB,GAAYpoB,GAC1B,GAAY,KAARA,EACF,MAAO,GAGT,IAAMqoB,EAAQroB,EAAIqT,cAClB,GAAc,SAAVgV,EACF,OAAO,KAET,GAAc,SAAVA,EACF,OAAO,EAET,GAAc,UAAVA,EACF,OAAO,EAET,GAAc,cAAVA,EAAJ,CAIA,IAAMC,EAAM5P,OAAO1Y,GACbuoB,EAAWC,WAAWxoB,GAC5B,OAAKwY,MAAM8P,IAAS9P,MAAM+P,GAInBvoB,EAHEsoB,CALR,CASH,CCzFA,IAMaG,GAAyC,CACpD/uB,GAAI,aACJsB,KAAM,yBAJP,mGAUD,SAAqBmiB,EAAeuL,GAClC,IAAQznB,EAA6BynB,EAA7BznB,OAAQmU,EAAqBsT,EAArBtT,KAAMuT,EAAeD,EAAfC,WAChBC,EAAa,CAAC,mBAEpB,GAAI3nB,GAAUA,EAAOmZ,MAAQnZ,EAAO4nB,UAAY5nB,EAAOxJ,MAAO,CAG5D,IAAMqxB,EAAiBhpB,eAAAA,OAAkB6nB,GAAuB1mB,EAAOmZ,OAEjE2O,EAAcX,GAAYnnB,EAAOxJ,OACjCuxB,EACmB,iBAAhBD,EAAwB,IAAAjpB,OACvBmB,EAAOxJ,MAAK,KAChBiiB,GAAUzY,EAAOxJ,SAAWihB,OAAOuQ,cAAcF,GAAYjpB,GAAAA,OACxDmB,EAAOxJ,MAAQ,KAClBwJ,EAAOxJ,MAEfmxB,EAAW/mB,KAAI,eAAA/B,OAAgBgpB,EAAiBhpB,KAAAA,OAAImB,EAAO4nB,SAAQ,KAAA/oB,OAAIkpB,EAAmB,OAC3F,CAEG5T,GAAQA,EAAKgF,MAAQhF,EAAKhR,YACL,SAAnBgR,EAAKhR,UACPwkB,EAAW/mB,KACT,kEAE8B/B,yBAAAA,OACH6nB,GAAuBvS,EAAKgF,YAASta,yBAAAA,OACrC6nB,GAAuBvS,EAAKgF,YAJvD,yEAUFwO,EAAW/mB,KACT,0FAE6B/B,OACF6nB,GAAuBvS,EAAKgF,MAAS,MAAA,yBAAAta,OACrC6nB,GAAuBvS,EAAKgF,MAAS,MAJhE,0EAWN,GAAIuO,GAAcA,EAAWO,MAG3B,GAAIP,EAAWO,MAAM5yB,OAAS,EAAG,CAC/B,IAAM4yB,EAAQP,EAAWO,MAAM1f,KAAI,SAAC4Q,GAClC,IAAMpf,EAAOof,EAAKA,EAAK9jB,OAAS,IAAM,OAChC6yB,EAAIrpB,OAAAA,OAAU6nB,GAAuBvN,IAC3C,MAAAta,SAAAA,OAAgB2d,KAAKtE,UAAUne,GAAK8E,MAAAA,OAAKqpB,EAC3C,IAEAP,EAAW/mB,6BAAI/B,OAAyBopB,EAAM9nB,KAAK,sBACpD,KAAM,CACL,IAAM+nB,EAAI,OAAArpB,OAAU6nB,GAAuBgB,EAAWO,MAAM,KAE5DN,EAAW/mB,KAAI/B,oBAAAA,OAAqBqpB,EAAI,OACzC,CAGH,MAAArpB,4BAAAA,OAAmC8oB,EAAWxnB,KAAK,IACrD,IAAA,eAEA,SAAsB+b,EAAeiM,GAKnC,IAaMC,EAbU,IAAIC,SAClB,oBAEEF,EAFF,iKADc,EAaDG,CAAQpM,GACvB,YAAkBlnB,IAAXozB,EAAuBA,EAAS,IACzC,uECzGA/uB,GAEGvB,EAAAywB,EAAAjvB,eADM9E,EAAG,8CAAHA,EAAG,2DAGA,IAAAg0B,EAAS,OAKjB,IAAAC,EAAM,GACCruB,EAAI4U,EAAJ5U,KACF,SAAAsuB,EAAOtuB,OACPA,IAASA,EAAKquB,UACR,OAEPE,EAAUvuB,EAAKquB,IACbG,EAAG,CAAA,SACTD,EAAUA,EAAQxW,QAAQ,mCAAiC,SAAG0W,EAAOpwB,GAC3D,IAAAme,gBAZV4R,GAAU,GACUnK,SAAS,YAYzBuK,EAAInwB,GAAMme,iBACKA,EAAQ,QAE3B+R,EAAUA,EAAQxW,QAAQ,yDAA0D,SAAA0W,EAAOC,EAAOC,EAAGC,OAC3FvwB,EAAKqwB,GAASE,SACfvwB,GAAOmwB,EAAInwB,GAGLoG,IAAAA,OAAA+pB,EAAInwB,IAFJowB,KAIRF,6FAER5V,EAAA,EAAA0V,EAAMC,EAAOtuB,qvBC7BE5F,EAAS,6CAQbA,EAAK,YACXA,EAAK,GAAG,MAAQ,yBACbA,EAAG,iBAERA,EAAW,2GAXAA,EAAI,oBACHA,EAAK,sBACHA,EAAO,IACC0I,GAAA+rB,EAAA,qBAAS,eAATz0B,MACF0I,GAAA+rB,EAAA,mBAAS,aAATz0B,iDAP1B6E,GAiBKvB,EAAAmxB,EAAA3vB,2LAfa9E,EAAS,MAAA,CAAA00B,MAAAC,+EAQb30B,EAAK,uBACXA,EAAK,GAAG,MAAQ,kBAAc,CAAA40B,KAAAC,uBAC3B70B,EAAG,sCAERA,EAAW,sBAXAA,EAAI,oBACHA,EAAK,sBACHA,EAAO,IACC0I,GAAA+rB,EAAA,qBAAS,eAATz0B,MACF0I,GAAA+rB,EAAA,mBAAS,aAATz0B,mSA0CA80B,EAAAta,EAAdua,MAAAA,OAAY,IAAHD,EAAG,GAAEA,EAEftW,EAAKhE,EAALgE,MACAE,EAAMlE,EAANkE,OACesW,EAAAxa,EAAfya,IAAAA,OAAG,IAAAD,EAAG,UAASA,EACHE,EAAA1a,EAAZ2a,KAAAA,OAAI,IAAAD,GAAQA,EACGE,EAAA5a,EAAf6a,QAAAA,OAAU,IAAHD,GAAQA,EACFE,EAAA9a,EAAb+a,MAAAA,OAAK,IAAAD,GAAQA,EACAE,EAAAhb,EAAbib,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAEHE,EAAAlb,EAAVzW,MAAAA,OAAK,IAAA2xB,EAAG,GAAEA,EACAC,EAAAnb,EAAVqX,MAAAA,OAAQ,IAAH8D,EAAG,GAAEA,gvBC7CVC,EAAA51B,KAASyzB,OAAKoC,GAAA71B,GAKd81B,EAAA91B,KAAS+1B,UAAQC,GAAAh2B,GAKjBi2B,EAAAj2B,KAASi0B,KAAGxc,GAAAzX,gLAVZA,KAASyzB,wEAKTzzB,KAAS+1B,2EAKT/1B,KAASi0B,iRATLiC,EAAA/kB,GAAAnR,KAASyzB,oBAAd5yB,OAAIC,GAAA,kMAACo1B,EAAA/kB,GAAAnR,KAASyzB,eAAd5yB,OAAIC,GAAA,EAAA,yHAAJD,sEACUb,EAAI,mGAAd6E,GAAiBvB,EAAA6yB,EAAArxB,uCAAP9E,EAAI,0DAITo2B,EAAAjlB,GAAAnR,KAAS+1B,uBAAdl1B,OAAIC,GAAA,kMAACs1B,EAAAjlB,GAAAnR,KAAS+1B,kBAAdl1B,OAAIC,GAAA,EAAA,yHAAJD,sEACab,EAAO,sGAApB6E,GAAuBvB,EAAA+yB,EAAAvxB,uCAAV9E,EAAO,sGAIE,IAARA,EAAQ,YAARA,EAAQ,sLAARA,EAAQ,+OAZvBA,EAAQ,IAAAmZ,GAAAnZ,oGAARA,EAAQ,ukBATRA,EAAa,+DAKbA,EAAS,IACZA,EAAW,0TANRA,EAAa,yFAKbA,EAAS,eACZA,EAAW,+LA2Bbs2B,EAeAC,EACAtB,qIAlBcuB,EAAAhc,EAAA,MAAdua,OAAS,IAAAyB,EAAG,GAAEA,EACP5wB,EAAI4U,EAAJ5U,KAES6wB,EAAAjc,EAATkc,MAAAA,OAAK,IAAAD,EAAG,EAACA,EACGE,EAAAnc,EAAZ2a,KAAAA,WAAIwB,GAAQA,EACGC,EAAApc,EAAf6a,QAAAA,OAAO,IAAAuB,GAAQA,EACFC,EAAArc,EAAb+a,MAAAA,OAAK,IAAAsB,GAAQA,EACGC,EAAAtc,EAAhBib,KAAAA,OAAOj1B,IAAHs2B,OAAGt2B,EAASs2B,EACNC,EAAAvc,EAAVqX,MAAAA,OAAQ,IAAHkF,EAAG,GAAEA,EACAC,EAAAxc,EAAVzW,MAAAA,OAAQ,IAAHizB,EAAG,GAAEA,EAMjBxY,EAAQ,GACRE,EAAS,YAyCJuY,IACD,IAAAC,EAAW,EAIX,YAHiB,IAAVR,IACPQ,EAAWjU,OAAOyT,IAElB3T,MAAMmU,IAAaA,GAAY,GAC/BtgB,QAAQugB,KAAK,yDAjDJ,KAoDND,WAQFE,WACAd,EAGE31B,KAAKC,IAAI01B,EAAS9X,MAAO8X,EAAS5X,QAAU,GAFxC,+YAwCX4X,EAjGK,SAAc1wB,OAEf0wB,KACC1wB,GAGI,KAAA,eAAgBA,GAAhB,CAIA,GAAA,aAAcA,GAAQ,SAAUA,EAAI,CAClCA,EAAKyxB,aAKLC,EAAAC,EAA2B3xB,EAAK4xB,KAAI,GAApChZ,EAAK8Y,EAAE5Y,GAAAA,EAAM4Y,KAAM3S,EAAI2S,EAAA,GAO9BhB,EAAQ,CACJ9X,MAAAA,EACAE,OAAAA,EACA+U,OATApiB,MAAMmS,QAAQmB,GACNA,GAGCA,IAKI5Q,KAAK,SAAA4Q,GACL,MAAA,CAAArf,EAAGqf,YAOpB2R,EAAW1wB,EADJ1G,OAAOyC,KAAKiE,GAAM,WAGtB0wB,EA7BH1f,QAAQZ,MAAM,0KA0FPyhB,CAAc7xB,IAGzB2Y,EAAA,EAAAC,EAnCI8X,EACQA,EAAS9X,MAAQ4Y,IAAoBH,IAEzC,GAiCR1Y,EAAA,EAAAG,EA3BI4X,EACQA,EAAS5X,OAAS0Y,IAAoBH,IAE1C,GAyBR1Y,EAAA,EAAAgY,aAtBI,IAAAmB,EAAW,GACD,OAAV3zB,IACA2zB,GAAY3zB,GAEZ,IAAAd,EAAOg0B,IACP,OAAS,IAATh0B,EACwB,IAApBy0B,EAAS72B,OACF,GAEJ62B,GAEM,KAAbA,GAAoBA,EAASxhB,SAAS,OACtCwhB,GAAY,MAENrtB,GAAAA,OAAAqtB,EAAQrtB,eAAAA,OAAcpH,SAQhBqsB,IAChB/Q,EAAA,GAAA0W,EArDIqB,EACc,OAAAjsB,OAAAisB,EAAS9X,MAAK,KAAAnU,OAAIisB,EAAS5X,QAE/BrU,OAAAA,OAAAmU,EAAKnU,KAAAA,OAAIqU,uDAlFH4X,EAAQt0B,6hBCiBlB4D,MAAU,IAAV5F,EAAU,GAAO23B,GAAgBC,gGAN/BhxB,GAAAwc,EAAA,eAAAyU,GAAU,IAAV73B,sEAINA,EAAQ,GAAuCqK,iBAAAA,OAAoBrK,EAAK,IAA7D,0DAFCA,EAAQ,qBAL9B6E,GAUKvB,EAAA8f,EAAAte,4CAJW9E,EAAkB,gDAGpB,EAAAM,IAAAw3B,EAAAlyB,MAAU,IAAV5F,EAAU,GAAO23B,GAAgBC,gBAN/Blf,GAAA,EAAApY,GAAAu3B,KAAAA,GAAU,IAAV73B,gDAINA,EAAQ,GAAuCqK,iBAAAA,OAAoBrK,EAAK,IAA7D,uFAFCA,EAAQ,yJA9BjB2kB,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACA+1B,EAAiBvd,EAAjBud,SACAC,EAAgBxd,EAAhBwd,QACAlY,EAAiBtF,EAAjBsF,2LAEF,SAAmB7Z,GAC1BA,EAAMU,kBAEFoxB,IAIJC,EAAO,EAEHC,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,OAAQA,KAIZ8d,w7CCWJjb,GAAqDvB,EAAA8f,EAAAte,sFAlC/CozB,EAJO7hB,EAAamE,EAAbnE,MACA8hB,EAAoC3d,EAApC2d,SACAC,EAAkB5d,EAAlB4d,UAGPC,EAAkB,oBAEtBpsB,GAAOqsB,EAAAC,IAAAC,MAAA,SAAAC,IAAAC,IAAAA,EAAAC,EAAAC,EAAA,OAAAL,IAAAhf,MAAA,SAAAsf,GAAAA,cAAAA,EAAAC,KAAAD,EAAAttB,MAAA,KAAA,EAAA,OAAAstB,EAAAttB,KAAA,SAG+B,kBAAgBstB,KAAAA,EAAAA,GAAAA,EAAAE,GAAAL,EAAAG,EAAAG,KAAAH,EAAAI,GAAAJ,OAAAA,EAAAE,GAAAF,EAAAI,IAAAJ,EAAAttB,KAAA,EAAA,KAAA,CAAAstB,EAAAI,QAAA,IAAAP,EAAA,KAAA,EAAA,IAAAG,EAAAI,GAAA,CAAAJ,EAAAttB,KAAAstB,GAAAA,KAAAA,CAAAA,EAAAK,QAAAL,EAAAA,EAAAttB,KAAAstB,GAAAA,MAAAA,KAAAA,GAAAA,EAAAK,GAAjCR,EAA4C,QAAA,KAAA,GAAzDC,EAAaE,EAAAK,GAEbN,MAAkBD,EAAa,CACnCvM,OAAQ8L,EACR7hB,MAAAA,EACAma,MAAO4H,EAAY,MAAQ,SAC3Be,OAAM,SAAY9iB,GACV,IACA+iB,EACM,IAFE/iB,EAAMgjB,KAAK,GAGnBhjB,EAAM+iB,IAAIhT,UAAU,EAAG,GACvB/P,EAAM+iB,IACZjB,EAASiB,MAIbR,EAAYzd,OAEZkd,EAAkB,WAChBO,EAAYz2B,wDAIhBkK,IAAS,WACPgsB,0LAI2CH,EAAGnY,4xBCgC5B/f,EAAK,mBACjBA,EAAQ,YAAiCqK,OAAYrK,EAAK,IAA/C,oDAFCA,EAAQ,qBAH9B6E,GAOCvB,EAAA2V,EAAAnU,sBADW9E,EAAe,kEAFLA,EAAK,gBACjBA,EAAQ,GAAiC,SAAAqK,OAAYrK,EAAK,IAA/C,0EAFCA,EAAQ,0EA7DpBgxB,EAAsBnkB,GAAiC,kBAAvDmkB,kBAEGrM,EAAcnK,EAAdmK,KACA3iB,EAAawY,EAAbxY,MACA+1B,EAAiBvd,EAAjBud,SACAC,EAAgBxd,EAAhBwd,QACAlY,EAAiBtF,EAAjBsF,MAIF,SAAAqY,EAAS9hB,GAChB2hB,EAAO,EAEHC,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOqU,KAIX6H,aAGOA,IACP4B,yNAfCvB,EAAA,EAAAlI,EAAQ8M,GAAYnhB,YAkBd,SAAgBiE,GAAiB,IAAAqzB,EAAAC,MACpCxB,GAOE,IAEAz0B,EAAS2C,EAAM3C,OACf4b,EAAM5b,EAAO2pB,wBAAwB/N,IACrCsa,EAA6C,QAAjCF,EAAsBC,QAAtBA,EAAG/N,GAAUloB,cAASi2B,SAAnB/N,EAAmB7M,mBAAW2a,IAAAA,EAAAA,EAAI,EASvDtI,EAAkByI,IALhBpjB,MAAOrU,EACPm2B,SAAAA,EACAC,UALgBoB,EAAeta,EALlB,KAKkCA,EALlC,KAa0B,CACvCpa,OAAQxB,EACRsY,mBAAmB,EACnBsC,QAAAA,EACA4R,UAAW,GACXE,YAAa,EACbtR,OAnBa,6LCGb,SAAUgb,GAAcC,GAK5B,IAJA,IAAMC,EAAiBC,EAAOF,GAAU,SAACG,GAAO,OAAKA,EAAQzpB,KAAK,IAE5D0pB,EAAiB,CAACH,EAAe,IAE9BI,EAAc,EAAGA,EAAcJ,EAAe/4B,OAAQm5B,IAAe,CAC5E,IAAMC,EAAcF,EAAel5B,OAAS,EACtCwK,EAAW0uB,EAAeE,GAC1BvhB,EAAUkhB,EAAeI,GAE3BthB,EAAQrI,OAAShF,EAASiF,IAE5BypB,EAAeE,GAAe,CAC5B5pB,MAAO1P,KAAKkkB,IAAIxZ,EAASgF,MAAOqI,EAAQrI,OACxCC,IAAK3P,KAAKC,IAAIyK,EAASiF,IAAKoI,EAAQpI,MAItCypB,EAAe3tB,KAAKsM,EAEvB,CAED,OAAOqhB,CACT,CAGgB,SAAAG,GAAiBP,EAAqBnmB,GACpD,OAAOmmB,EAASQ,MAAK,SAACL,GACpB,OAAOtmB,GAASsmB,EAAQzpB,OAASmD,EAAQsmB,EAAQxpB,GACnD,GACF,CAEM,SAAU8pB,GAAgB5mB,GAC9B,OAAO6mB,GAAmB7mB,GAASoN,EACrC,CAEM,SAAUyZ,GAAmB7mB,GACjC,OAAO7S,KAAKmiB,MAAMtP,EAAQoN,IAAsBA,EAClD,CC9BM,SAAU0Z,GAAoB94B,GAClC,IAAI+4B,EAA+B,CACjCC,YAAa,CAAE,EACfC,iBAAkB,CAAE,EACpBC,mBAAoB,CAAE,EACtB5P,UAAW,KACX6P,aAAc,MAchB,OAXIn5B,SAAAA,EAAO4G,aAAyB5H,IAAfgB,EAAMkmB,OACzB6S,EAAalhB,EAAAA,EAAA,CAAA,EACRkhB,GACHzP,CAAAA,EAAAA,CAAAA,UAAWtpB,EAAM4G,OAAO5G,EAAMkmB,KAAM6S,MAIpC/4B,SAAAA,EAAOo5B,SACTL,EAAgBM,GAAmBr5B,EAAMkmB,KAAM6S,EAAe,GAAI/4B,EAAMo5B,SAGnEL,CACT,CAEgB,SAAAO,GACdP,EACAQ,GAEA,OAAOR,EAAcG,mBAAmBK,IAAYha,EACtD,UAKgBia,GACdC,EACAC,EACA7sB,GAEA6sB,EAAgB57B,SAAQ,SAAA67B,GAAmB,IAAhB9qB,EAAK8qB,EAAL9qB,MAAOC,EAAG6qB,EAAH7qB,IAChCyU,GAAa1U,EAAO1P,KAAKkkB,IAAIoW,EAAUp6B,OAAQyP,GAAMjC,EACvD,GACF,UAMgB+sB,GACd1T,EACA6S,EACA5V,GAKA,IAHA,IAAM6V,EAAWnhB,KAAiCkhB,EAAcC,aAC1DE,EAAkBrhB,EAAQkhB,CAAAA,EAAAA,EAAcG,oBAErC55B,EAAI,EAAGA,EAAI6jB,EAAK9jB,OAAQC,IAAK,CACpC,IAAMu6B,EAAc1W,EAAKvkB,MAAM,EAAGU,GAC5Bw6B,EAAiB1W,EAAmByW,GAEpCr5B,EAAQu5B,EAAM7T,EAAM2T,GAO1B,GALI1Y,GAAgB3gB,KAClBw4B,EAAYc,IAAkB,GAI5BjqB,MAAMmS,QAAQxhB,IAAUlB,EAAI6jB,EAAK9jB,OAAQ,CAC3C,IAAM84B,EAAWe,EAAmBY,IAAmBva,GACjDvN,EAAQ6O,GAAIsC,EAAK7jB,IAEvB,IAAKo5B,GAAiBP,EAAUnmB,GAAQ,CACtC,IAAMnD,EAAQgqB,GAAmB7mB,GAE3BgoB,EAAa,CAAEnrB,MAAAA,EAAOC,IADhB8pB,GAAgB/pB,IAE5BqqB,EAAmBY,GAAkB5B,GAAcC,EAAStvB,OAAOmxB,GACpE,CACF,CACF,CAED,OAAAniB,EAAAA,EAAA,CAAA,EACKkhB,GAAa,CAAA,EAAA,CAChBC,YAAAA,EACAE,mBAAAA,GAEJ,CAMM,SAAUG,GACdnT,EACA6S,EACA5V,EACA8W,GAEA,IAAMjB,EAAWnhB,EAAQkhB,CAAAA,EAAAA,EAAcC,aAsCvC,IAAMkB,EAAc/W,EAAKvkB,QACnB4B,OAAiBxB,IAATknB,EAAqB6T,EAAM7T,EAAM/C,GAAQ+C,EAKvD,YAJclnB,IAAVwB,GAtCJ,SAASwmB,EAAQxmB,GACf,IAAM25B,EAAYD,EAAY76B,OAE9B,GAAIwQ,MAAMmS,QAAQxhB,IAChB,GAAIy5B,EAAiBC,GAAc,CACjC,IAAMX,EAAUnW,EAAmB8W,GAGnC,GAFAlB,EAAYO,IAAW,EAEnB/4B,EAAMnB,OAAS,EAAG,CACpB,IAAMq6B,EAAkBJ,GAAmBP,EAAeQ,GAE1DC,GAAoBh5B,EAAOk5B,GAAiB,SAAC1nB,GAC3CkoB,EAAYC,GAAalT,OAAOjV,GAChCgV,EAAQxmB,EAAMwR,GAChB,IAEAkoB,EAAYttB,KACb,CACF,OACQsU,GAAAA,GAAS1gB,IACdy5B,EAAiBC,GAAc,CACjClB,EAAY5V,EAAmB8W,KAAgB,EAE/C,IAAM/5B,EAAOzC,OAAOyC,KAAKK,GACzB,GAAIL,EAAKd,OAAS,EAAG,CAAA+6B,IACGC,EADHD,EAAAE,EACDn6B,GAAlB,IAAA,IAAAi6B,EAAAG,MAAAF,EAAAD,EAAA3pB,KAAA+pB,MAAwB,CAAA,IAAbz0B,EAAGs0B,EAAA75B,MACZ05B,EAAYC,GAAap0B,EACzBihB,EAAQxmB,EAAMuF,GACf,CAAA,CAAA,MAAA2b,GAAA0Y,EAAAztB,EAAA+U,EAAA0Y,CAAAA,QAAAA,EAAA54B,GAED04B,CAAAA,EAAYttB,KACb,CACF,CAEJ,CAKCoa,CAAQxmB,GAGVqX,EAAAA,EAAA,CAAA,EACKkhB,GACHC,CAAAA,EAAAA,CAAAA,YAAAA,GAEJ,CAcgB,SAAAyB,GAAa1B,EAA8B5V,GAEzD,IAAM6V,EAAc0B,GAAW3B,EAAcC,YAAa7V,GACpD8V,EAAmByB,GAAW3B,EAAcE,iBAAkB9V,GAC9D+V,EAAqBwB,GAAW3B,EAAcG,mBAAoB/V,GAExE,OAAAtL,EAAAA,EAAA,CAAA,EACKkhB,GAAa,CAAA,EAAA,CAChBC,YAAAA,EACAC,iBAAAA,EACAC,mBAAAA,GAEJ,UAGgByB,GACd5B,EACAQ,EACAqB,GAEA,GAAIA,EAAe,CACjB,IAAMC,EAAoBhjB,KAAQkhB,EAAcE,kBAGhD,OAFA4B,EAAqBtB,GAAWqB,EAEhC/iB,EAAAA,EAAA,CAAA,EACKkhB,GACHE,CAAAA,EAAAA,CAAAA,iBAAkB4B,GAErB,CAEC,GAAuD,kBAA5C9B,EAAcE,iBAAiBM,GAAwB,CAChE,IAAMsB,EAAoBhjB,EAAA,CAAA,EAAQkhB,EAAcE,kBAEhD,cADO4B,EAAqBtB,GAC5B1hB,EAAAA,EACKkhB,CAAAA,EAAAA,GACHE,CAAAA,EAAAA,CAAAA,iBAAkB4B,GAErB,CACC,OAAO9B,CAGb,UAuCgB+B,GACd5U,EACA6S,EACAgC,GAEA,IAAMC,EAAuBC,EAAmB/U,EAAM6U,GAEhDG,EAAuBH,EAAW7e,QAAO,SAACif,EAAeC,GAC7D,OAAIC,EAAeD,GACVE,GAAiBN,EAAaG,EAAeC,GAGlDG,EAAkBH,GACbI,GAAoBR,EAAaG,EAAeC,GAGrDK,EAAmBL,YA4FzBJ,EACAjC,EACAqC,GAEA,IAAM7B,EAAU6B,EAAUjY,KAGpB6V,EAAc0C,GAAwBV,EAAajC,EAAcC,aACjEC,EAAmByC,GAAwBV,EAAajC,EAAcE,kBACtEC,EAAqBwC,GAAwBV,EAAajC,EAAcG,oBAGzEyC,EAAaP,EAAU56B,QAAWo7B,EAAYR,EAAU56B,eACpDw4B,EAAYO,GAEhBqC,EAAYR,EAAU56B,eAClB04B,EAAmBK,IAExBoC,EAAaP,EAAU56B,QAAUo7B,EAAYR,EAAU56B,gBAClDy4B,EAAiBM,GAG1B,OAAA1hB,EAAAA,EACKkhB,CAAAA,EAAAA,GACHC,CAAAA,EAAAA,CAAAA,YAAAA,EACAC,iBAAAA,EACAC,mBAAAA,GAEJ,CAvHa2C,CAAqBb,EAAaG,EAAeC,GAGtDU,EAAgBV,IAAcW,EAAgBX,YAuHpDJ,EACAjC,EACAqC,GAEA,GAAIW,EAAgBX,IAAcA,EAAUtrB,OAASsrB,EAAUjY,KAE7D,OAAO4V,EAIT,IAAMiD,EAAgB,SAACzC,GAAoB,OACzC6B,EAAUjY,KAAOoW,EAAQ3U,UAAUwW,EAAUtrB,KAAKzQ,OAAO,EACrD48B,EAAkBC,GACtBC,GAAWpD,EAAcC,YAAaoC,EAAUtrB,MAChDksB,GAEII,EAAuBF,GAC3BC,GAAWpD,EAAcE,iBAAkBmC,EAAUtrB,MACrDksB,GAEIK,EAAyBH,GAC7BC,GAAWpD,EAAcG,mBAAoBkC,EAAUtrB,MACvDksB,GAKEM,EAAevD,EACfgD,EAAgBX,KAClBkB,EAAed,GAAoBR,EAAasB,EAAc,CAC5D7F,GAAI,SACJtT,KAAMiY,EAAUtrB,QAGpBwsB,EAAehB,GAAiBN,EAAasB,EAAc,CACzD7F,GAAI,MACJtT,KAAMiY,EAAUjY,KAChB3iB,MAAO,OAIT,IAAMw4B,EAAcuD,GAAWD,EAAatD,YAAaiD,GACnDhD,EAAmBsD,GAAWD,EAAarD,iBAAkBmD,GAC7DlD,EAAqBqD,GAAWD,EAAapD,mBAAoBmD,GAEvE,OAAAxkB,EAAAA,EAAA,CAAA,EACKkhB,GAAa,CAAA,EAAA,CAChBC,YAAAA,EACAC,iBAAAA,EACAC,mBAAAA,GAEJ,CAzKasD,CAAwBxB,EAAaG,EAAeC,GAGtDD,CACR,GAAEpC,GAEH,MAAO,CACL7S,KAAM8U,EACNjC,cAAemC,EAEnB,UAEgBI,GACdpV,EACA6S,EACAqC,GAEA,IAAMjY,EAAOsZ,EAAUvW,EAAMkV,EAAUjY,MACjCuZ,EAAaC,EAAQxZ,GACrByZ,EAAgBxZ,EAAmBsZ,GACnC9R,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAAS,CACvB,IAAM5Y,EAAQ6O,GAAIgc,EAAK1Z,IAGjB6V,EAAc8D,GAAU/D,EAAcC,YAAa0D,EAAY1qB,EAAO,GACtEinB,EAAmB6D,GAAU/D,EAAcE,iBAAkByD,EAAY1qB,EAAO,GAClFknB,EAAqB4D,GAAU/D,EAAcG,mBAAoBwD,EAAY1qB,EAAO,GAOxF,OAJAknB,EAAqB6D,GAAiB7D,EAAoB0D,GAAe,SAACzE,GACxE,OAAA6E,GAAqB7E,EAAUnmB,EAAO,EAAE,IAG1C6F,EAAAA,KACKkhB,GAAa,CAAA,EAAA,CAChBC,YAAAA,EACAC,iBAAAA,EACAC,mBAAAA,GAEH,CAGD,OAAOH,CACT,UAEgByC,GACdR,EACAjC,EACAqC,GAEA,IAAMjY,EAAOsZ,EAAUzB,EAAaI,EAAUjY,MACxCuZ,EAAaC,EAAQxZ,GACrByZ,EAAgBxZ,EAAmBsZ,GACnC9R,EAASmP,EAAMiB,EAAa0B,GAE5B1D,EAAsDD,EAAtDC,YAAaC,EAAyCF,EAAzCE,iBAAkBC,EAAuBH,EAAvBG,mBAOrC,GAJAF,EAAc0B,GAAW1B,EAAa7V,GACtC8V,EAAmByB,GAAWzB,EAAkB9V,GAChD+V,EAAqBwB,GAAWxB,EAAoB/V,GAEhDyY,EAAYhR,GAAS,CACvB,IAAM5Y,EAAQ6O,GAAIgc,EAAK1Z,IAGvB6V,EAAc8D,GAAU9D,EAAa0D,EAAY1qB,GAAQ,GACzDinB,EAAmB6D,GAAU7D,EAAkByD,EAAY1qB,GAAQ,GAInEknB,EAAqB6D,GAHrB7D,EAAqB4D,GAAU5D,EAAoBwD,EAAY1qB,GAAQ,GAGb4qB,GAAe,SAACzE,GAAQ,OAChF6E,GAAqB7E,EAAUnmB,GAAQ,EACxC,GACF,CAED,OAAA6F,EAAAA,EAAA,CAAA,EACKkhB,GAAa,CAAA,EAAA,CAChBC,YAAAA,EACAC,iBAAAA,EACAC,mBAAAA,GAEJ,CA2FgB,SAAAwB,GAAcnoB,EAAwB4Q,GACpD,IAAM8Z,EAAgC,CAAA,EAChC1D,EAAUnW,EAAmBD,GASnC,OANAzlB,OAAOyC,KAAKoS,GAAKzU,SAAQ,SAACo/B,GACnBC,EAAsBD,EAAa3D,KACtC0D,EAAWC,GAAe3qB,EAAI2qB,GAElC,IAEOD,CACT,CAGgB,SAAAd,GAAc5pB,EAAwBgnB,GACpD,IAAM6D,EAAiC,CAAA,EAQvC,OANA1/B,OAAOyC,KAAKoS,GAAKzU,SAAQ,SAACo/B,GACpBC,EAAsBD,EAAa3D,KACrC6D,EAAYF,GAAe3qB,EAAI2qB,GAEnC,IAEOE,CACT,CAGgB,SAAAb,GAAcr+B,EAAsBC,GAClD,OAAA0Z,EAAAA,EAAA,CAAA,EAAY3Z,GAAMC,EACpB,CAGgB,SAAA+9B,GACd3pB,EACA8qB,GAEA,IAAMC,EAA8B,CAAA,EAOpC,OALA5/B,OAAOyC,KAAKoS,GAAKzU,SAAQ,SAACy/B,GACxB,IAAMC,EAAaH,EAAcE,GACjCD,EAASE,GAAcjrB,EAAIgrB,EAC7B,IAEOD,CACT,CAEM,SAAUR,GACdvqB,EACA4Q,EACAnR,EACAgS,GAOA,IALA,IAAMyZ,EAAeta,EAAK9jB,OACpBk6B,EAAUnW,EAAmBD,GAG7Bua,EAA4E,GAClFC,EAAA,EAAAC,EAA0BlgC,OAAOyC,KAAKoS,GAAIorB,EAAAC,EAAAv+B,OAAAs+B,IAAE,CAAvC,IAAMT,EAAWU,EAAAD,GACpB,GAAIR,EAAsBD,EAAa3D,GAAU,CAC/C,IAAMsE,EAAqBva,EAAiB4Z,GACtC/C,EAAYtZ,GAAIgd,EAASJ,IAE3BtD,GAAanoB,IACf6rB,EAASJ,GAAgBxW,OAAOkT,EAAYnW,GAE5C0Z,EAAQ9yB,KAAK,CACX2yB,WAAYL,EACZM,WAAYpa,EAAmBya,GAC/Br9B,MAAO+R,EAAI2qB,KAGhB,CACF,CAGD,GAAuB,IAAnBQ,EAAQr+B,OACV,OAAOkT,EAGT,IAAM0qB,EAAUplB,EAAQtF,CAAAA,EAAAA,GAaxB,OATAmrB,EAAQ5/B,SAAQ,SAAC+0B,UACRoK,EAAWpK,EAAM0K,WAC1B,IAGAG,EAAQ5/B,SAAQ,SAAC+0B,GACfoK,EAAWpK,EAAM2K,YAAc3K,EAAMryB,KACvC,IAEOy8B,CACT,CAGgB,SAAAvB,GACdxV,EACA3T,GAEA,IAAM0qB,EAAgC,CAAA,EAWtC,OANAv/B,OAAOyC,KAAKoS,GACTvI,QAAO,SAACuvB,GAAO,OAAKuE,EAAS5X,EAAMuW,EAAUvW,EAAMqT,GAAS,IAC5Dz7B,SAAQ,SAACy7B,GACR0D,EAAW1D,GAAWhnB,EAAIgnB,EAC5B,IAEK0D,CACT,UAOgBF,GACdxqB,EACAgnB,EACA1sB,GAEA,IAAMrM,EAAQ+R,EAAIgnB,GAElB,GAAIA,KAAWhnB,EAAK,CAClB,IAAMwrB,EAAelxB,EAASrM,GAC9B,IAAKw9B,GAAQx9B,EAAOu9B,GAAe,CACjC,IAAMd,EAAUplB,EAAA,CAAA,EAAQtF,GAQxB,YANqBvT,IAAjB++B,SACKd,EAAW1D,GAElB0D,EAAW1D,GAAWwE,EAGjBd,CACR,CACF,CAED,OAAO1qB,CACT,UAKgByqB,GACdtD,EACA1nB,EACAgS,GASA,OAIF,SAA+B0V,GAC7B,IAAMz6B,EAASy6B,EAAgB96B,MAAM,GAEjCU,EAAI,EACR,KAAOA,EAAIL,EAAOI,QACZJ,EAAOK,EAAI,GAAGwP,MAAQ7P,EAAOK,GAAGuP,QAClC5P,EAAOK,EAAI,GAAK,CACduP,MAAO5P,EAAOK,EAAI,GAAGuP,MACrBC,IAAK7P,EAAOK,GAAGwP,KAEjB7P,EAAO+U,OAAO1U,IAEhBA,IAGF,OAAOL,CACT,CApBSg/B,CAPiBvE,EAAgBnnB,KAAI,SAAC+lB,GAC3C,MAAO,CACLzpB,MAAOypB,EAAQzpB,MAAQmD,EAAQsmB,EAAQzpB,MAAQmV,EAASsU,EAAQzpB,MAChEC,IAAKwpB,EAAQxpB,IAAMkD,EAAQsmB,EAAQxpB,IAAMkV,EAASsU,EAAQxpB,IAE9D,IAGF,CAqBM,SAAUovB,GACd19B,EACAy4B,EACAM,EACAxX,GAEA,IAAM6Y,EAAgB3B,EAAmBA,EAAiBM,QAAWv6B,EAErE,MAA6B,kBAAlB47B,EACFA,EjBlfK,SAAiC7xB,EAAcgZ,GAC7D,MAAsB,iBAARhZ,GAA0D,iBAA/BsZ,GAActZ,EAAKgZ,EAC9D,CiBmfSoc,CAAiC39B,EAAOuhB,EACjD,CAEM,SAAUqc,GAAYj+B,EAAgB4F,GAA+B,IAAlBs4B,EAAU52B,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,IAAAyI,UAAA,GAC3DuK,EAAQ7R,EAAK+F,QAAQH,GAC3B,OAAe,IAAXiM,EACKqsB,EAAal+B,EAAKvB,MAAMoT,GAAS7R,EAAKvB,MAAMoT,EAAQ,GAGpD,EAEX,CAMgB,SAAAssB,GAAgBpY,EAAe6S,GAC7C,IAAM9G,EAAoB,GAwB1B,OAtBA,SAASsM,EAAS/9B,EAAgB2iB,GAChC8O,EAAMrnB,KAAKuY,GACX,IAAMoW,EAAUnW,EAAmBD,GAEnC,GAAI3iB,IAAgD,IAAvCu4B,EAAcC,YAAYO,GAAmB,CACxD,GAAIqC,EAAYp7B,GAAQ,CACtB,IAAMk5B,EAAkBJ,GAAmBP,EAAeQ,GAC1DC,GAAoBh5B,EAAOk5B,GAAiB,SAAC1nB,GAC3CusB,EAAS/9B,EAAMwR,GAAQmR,EAAKta,OAAOoe,OAAOjV,IAC5C,GACD,CAEG2pB,EAAan7B,IACf9C,OAAOyC,KAAKK,GAAO1C,SAAQ,SAACiI,GAC1Bw4B,EAAS/9B,EAAMuF,GAAMod,EAAKta,OAAO9C,GACnC,GAEH,CACF,CAEDw4B,CAASrY,EAAM,IAER+L,CACT,CAOM,SAAUuM,GACdtY,EACA6S,GACoB,IAApB0F,IAAah3B,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,KAAAA,UAAA,GAEPwqB,EAAyB,GA2C/B,OAzCA,SAASsM,EAAS/9B,EAAgB2iB,GAChC8O,EAAMrnB,KAAK,CAAEuY,KAAAA,EAAM7b,KAAMoX,GAAUle,QAEnC,IAAM+4B,EAAUnW,EAAmBD,GACnC,GAAI3iB,IAAgD,IAAvCu4B,EAAcC,YAAYO,GAAmB,CAKxD,GAJIkF,GACFxM,EAAMrnB,KAAK,CAAEuY,KAAAA,EAAM7b,KAAMoX,GAAU4L,SAGjCsR,EAAYp7B,GAAQ,CACtB,IAAMk5B,EAAkBJ,GAAmBP,EAAeQ,GAC1DC,GAAoBh5B,EAAOk5B,GAAiB,SAAC1nB,GAC3C,IAAM6rB,EAAW1a,EAAKta,OAAOoe,OAAOjV,IAEpCusB,EAAS/9B,EAAMwR,GAAQ6rB,GAEnBY,GACFxM,EAAMrnB,KAAK,CAAEuY,KAAM0a,EAAUv2B,KAAMoX,GAAU6L,OAEjD,GACD,CAED,GAAIoR,EAAan7B,GACF9C,OAAOyC,KAAKK,GACpB1C,SAAQ,SAACiI,GACZ,IAAM24B,EAAevb,EAAKta,OAAO9C,GAEjCksB,EAAMrnB,KAAK,CAAEuY,KAAMub,EAAcp3B,KAAMoX,GAAU3Y,MAEjDw4B,EAAS/9B,EAAMuF,GAAM24B,GAEjBD,GACFxM,EAAMrnB,KAAK,CAAEuY,KAAMub,EAAcp3B,KAAMoX,GAAU6L,OAErD,GAEH,CACF,CAEDgU,CAASrY,EAAM,IAER+L,CACT,UA6BgB0M,GACdzY,EACA6S,EACA5V,GAEA,IAAMyb,EAAeN,GAAgBpY,EAAM6S,GAErC/mB,EADsB4sB,EAAarsB,IAAI6Q,GACXld,QAAQkd,EAAmBD,IAE7D,OAAe,IAAXnR,GAAgBA,EAAQ4sB,EAAav/B,OAAS,EACzCu/B,EAAa5sB,EAAQ,GAGvB,IACT,UAOgB6sB,GACd3Y,EACA6S,EACA5V,GAEA,IAAM2b,EAAsC/E,EAAM7T,EAAM/C,GACxD,YAAuBnkB,IAAnB8/B,EACK/F,EAMFM,GAAmBnT,EAAM6S,EAAe5V,GAHnBwD,GAAe,CAAET,KAAM4Y,GAAkBnf,IACzBof,GAAYC,GAG1D,CAGM,SAAUA,GAAc7b,GAC5B,OAAuB,IAAhBA,EAAK9jB,QAAsC,IAAhB8jB,EAAK9jB,QAA4B,MAAZ8jB,EAAK,EAC9D,UAGgB4b,KACd,OAAO,CACT,CCrzBM,SAAUE,GACd3V,GAEA,OAAQA,GAAaA,EAAUhiB,OAASmX,GAAc8L,QAAU,CAClE,CAEM,SAAU2U,GACd5V,GAEA,OAAQA,GAAaA,EAAUhiB,OAASmX,GAAc6L,SAAW,CACnE,CAEM,SAAU6U,GAAe7V,GAC7B,OAAQA,GAAaA,EAAUhiB,OAASmX,GAAc1Y,MAAQ,CAChE,CAEM,SAAUq5B,GACd9V,GAEA,OAAQA,GAAaA,EAAUhiB,OAASmX,GAAcje,QAAU,CAClE,CAEM,SAAU6+B,GACd/V,GAEA,OAAQA,GAAaA,EAAUhiB,OAASmX,GAAc+L,QAAU,CAClE,CAEM,SAAU8U,GACdhW,GAEA,OAAO+V,GAAiB/V,IAAc0U,GAAQ1U,EAAUiW,UAAWjW,EAAUkW,WAC/E,CAEM,SAAUC,GAAgBnW,GAC9B,OACE+V,GAAiB/V,IACjB2V,GAAiB3V,IACjB4V,GAAkB5V,IAClB6V,GAAe7V,IACf8V,GAAiB9V,EAErB,CAEM,SAAUoW,GAAgBpW,GAC9B,OAAQA,GAAaA,EAAUhiB,OAASmX,GAActa,OAAS,CACjE,CAMgB,SAAAw7B,GAAkBzZ,EAAeoD,GAC/C,IAAM2I,EAAoB,GAM1B,gBAcA/L,EACAoD,EACAzc,GAEA,IAAKyc,EACH,OAGF,IAAMkW,EAAaI,GAActW,GAC3BiW,EAAYM,GAAavW,GAE/B,GAAI0U,GAAQwB,EAAYD,GAEtB,OAAO1yB,EAAS2yB,GAGhB,QAAaxgC,IAATknB,EACF,OAGF,IAAM4Z,EAAaC,GAAeP,EAAYD,GAE9C,GAAIC,EAAWngC,SAAWygC,EAAWzgC,QAAUkgC,EAAUlgC,SAAWygC,EAAWzgC,OAE7E,OAAOwN,EAASizB,GAGlB,IAAMxW,EAAY0W,GAAqBR,EAAYD,GAC7CU,EAAYC,GAAaha,EAAMoD,GAC/B6W,EAAUC,GAAWla,EAAMoD,GAE3B+W,EAAaC,GAAcpa,EAAMoD,EAAW2W,GAC5CM,EAAWD,GAAcpa,EAAMoD,EAAW6W,GAEhD,IAAoB,IAAhBE,IAAmC,IAAdE,EACvB,OAGF,IAAM//B,EAAQu5B,EAAM7T,EAAM4Z,GAE1B,GAAInE,EAAan7B,GAAQ,CAGvB,IAFA,IAAML,EAAOzC,OAAOyC,KAAKK,GAEhBlB,EAAI+gC,EAAY/gC,GAAKihC,EAAUjhC,IAAK,CAC3C,IAAMkB,EAAQqM,EAASizB,EAAWj3B,OAAO1I,EAAKb,KAC9C,QAAcN,IAAVwB,EACF,OAAOA,CAEV,CAED,MACD,CAED,GAAIo7B,EAAYp7B,GAAQ,CACtB,IAAK,IAAIlB,EAAI+gC,EAAY/gC,GAAKihC,EAAUjhC,IAAK,CAC3C,IAAMkB,EAAQqM,EAASizB,EAAWj3B,OAAOoe,OAAO3nB,KAChD,QAAcN,IAAVwB,EACF,OAAOA,CAEV,CAED,MACD,CAGH,MAAM,IAAIgK,MAAM,6BAClB,CApFEg2B,CAAqBta,EAAMoD,GAAW,SAACnG,GACrC8O,EAAMrnB,KAAKuY,EACb,IAEO8O,CACT,CAiFM,SAAUwO,GAAcnX,GAC5B,OAAI4V,GAAkB5V,GACbA,EAAUnG,KAEVwZ,EAAQkD,GAAavW,GAEhC,CAEgB,SAAA4W,GAAaha,EAAeoD,GAC1C,IAAK+V,GAAiB/V,GACpB,OAAOA,EAAUnG,KAGnB,IAAMud,EAAcJ,GAAcpa,EAAMoD,EAAWA,EAAUkW,YAG7D,OAFmBc,GAAcpa,EAAMoD,EAAWA,EAAUiW,WAExCmB,EAAcpX,EAAUiW,UAAYjW,EAAUkW,UACpE,CAEgB,SAAAY,GAAWla,EAAeoD,GACxC,IAAK+V,GAAiB/V,GACpB,OAAOA,EAAUnG,KAGnB,IAAMud,EAAcJ,GAAcpa,EAAMoD,EAAWA,EAAUkW,YAG7D,OAFmBc,GAAcpa,EAAMoD,EAAWA,EAAUiW,WAExCmB,EAAcpX,EAAUiW,UAAYjW,EAAUkW,UACpE,CAUM,SAAUmB,GACdza,EACA6S,GACA,IAAA6H,EAAcn5B,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,IAAAA,UAAG,GAEX6hB,EAAYyP,EAAczP,UAChC,IAAKA,EACH,OAAO,KAGT,IAAMiW,EAAYqB,EAAiBf,GAAavW,GAAa4W,GAAaha,EAAMoD,GAC1EuX,WDqjBN3a,EACA6S,EACA5V,GAEA,IAAMyb,EAAeN,GAAgBpY,EAAM6S,GACrC+H,EAAsBlC,EAAarsB,IAAI6Q,GACvC2d,EAAc3d,EAAmBD,GACjCnR,EAAQ8uB,EAAoB56B,QAAQ66B,GAE1C,OAAe,IAAX/uB,GAAgBA,EAAQ,EACnB4sB,EAAa5sB,EAAQ,GAGvB,IACT,CCnkBuBgvB,CAAuB9a,EAAM6S,EAAewG,GAEjE,GAAIqB,EAEF,OAAI1B,GAAkB5V,IAAc2V,GAAiB3V,GAC3B,OAAjBuX,EAAwBb,GAAqBT,EAAWA,GAAa,KAGtD,OAAjBsB,EACHb,GAAqBJ,GAActW,GAAYuX,GAC/C,KAGN,GAAI5B,GAAiB3V,GAGnB,OAAO2X,GAAqB1B,GAAW,GAGzC,GAAIL,GAAkB5V,GAEpB,OAAO2X,GAAqB1B,GAAW,GAGzC,GAAIJ,GAAe7V,GAAY,CAC7B,GAAoB,MAAhBuX,GAAgD,IAAxBA,EAAaxhC,OACvC,YAGF,IAAMq9B,EAAaC,EAAQkE,GACrBjW,EAASmP,EAAM7T,EAAMwW,GAC3B,OAAI7sB,MAAMmS,QAAQ4I,IAAW0F,EAAQuQ,GAE5BI,GAAqBJ,GAAc,GAEnCK,GAAmBL,GAAc,EAE3C,CAED,OAAIzB,GAAiB9V,GACK,OAAjBuX,EAAwBI,GAAqBJ,GAAc,GAAS,IAQ/E,UAuGgBM,GACdjb,EACA6S,EACA0F,GAEA,IAAMnV,EAAYyP,EAAczP,UAChC,IAAKA,EACH,MAAO,CAAE8X,MAAO,KAAMv3B,SAAU,KAAME,KAAM,MAE9C,IAAMs3B,EAAwB7C,GAAyBtY,EAAM6S,EAAe0F,GAEtEzsB,EAAQqvB,EAAsB9R,WAAU,SAAC6R,GAC7C,OACEpD,GAAQoD,EAAMje,KAAM0c,GAAavW,KAAerC,OAAOma,EAAM95B,QAAU2f,OAAOqC,EAAUhiB,KAE5F,IAEA,MAAO,CACL85B,OAAkB,IAAXpvB,EAAeqvB,EAAsBrvB,GAAS,KAErDnI,UAAqB,IAAXmI,GAAgBA,EAAQ,EAAIqvB,EAAsBrvB,EAAQ,GAAK,KAEzEjI,MACa,IAAXiI,GAAgBA,EAAQqvB,EAAsBhiC,OAAS,EACnDgiC,EAAsBrvB,EAAQ,GAC9B,KAEV,CA4EgB,SAAAsvB,GAAoBpb,EAAe6S,GAKjD,IAJA,IAAM6F,EAAeN,GAAgBpY,EAAM6S,GAGvC/mB,EAAQ,EAEVA,EAAQ4sB,EAAav/B,OAAS,GAC9Bu/B,EAAa5sB,EAAQ,GAAG3S,OAASu/B,EAAa5sB,GAAO3S,QAErD2S,IAGF,IAAMmR,EAAOyb,EAAa5sB,GAC1B,YAAgBhT,IAATmkB,GAAsC,IAAhBA,EAAK9jB,QAAgBwQ,MAAMmS,QAAQ+X,EAAM7T,EAAMyW,EAAQxZ,KAChF8d,GAAqB9d,GAAM,GAC3B+d,GAAmB/d,GAAM,EAC/B,CAEgB,SAAAoe,GACdrb,EACA6U,GAEA,GAA0B,IAAtBA,EAAW17B,OAAc,CAC3B,IAAM+7B,EAAYhqB,GAAM2pB,GACxB,GAAqB,YAAjBK,EAAU3E,GAIZ,OAAOwK,GAFMxE,EAAUvW,EAAMkV,EAAUjY,OAEL,EAErC,CAED,IAAKmN,EAAQyK,IAAeA,EAAWyG,OAAM,SAACpG,GAAS,MAAsB,SAAjBA,EAAU3E,EAAa,IAAG,CACpF,IAAMgL,EAAUrwB,GAAM2pB,GAChB2G,EAAW3G,EAAWn8B,MAAM,GAElC,IACGk9B,EAAgB2F,IAAY1F,EAAgB0F,KAC7CA,EAAQ3xB,OAAS2xB,EAAQte,MACzBue,EAASF,OAAM,SAAC/K,GAAO,OAACqF,EAAgBrF,IAAOsF,EAAgBtF,KAAQA,EAAG3mB,OAAS2mB,EAAGtT,IAAK,IAK3F,OAAO+d,GAFMzE,EAAUvW,EAAMub,EAAQte,OAEL,EAEnC,CAED,IAAM8O,EAAQ8I,EACX/wB,QAAO,SAACoxB,GACP,MACmB,SAAjBA,EAAU3E,IACO,WAAjB2E,EAAU3E,KACQ,SAAjB2E,EAAU3E,IAAiB2E,EAAUtrB,OAASsrB,EAAUjY,OAC/B,iBAAnBiY,EAAUjY,IAErB,IACC5Q,KAAI,SAAC6oB,UAAcqB,EAAUvW,EAAMkV,EAAUjY,SAEhD,OAAImN,EAAQ2B,GACC,KAKN,CACL3qB,KAAMmX,GAAc+L,MACpBgV,WAAYpuB,GAAM6gB,GAClBsN,UAAW1C,EAAK5K,GAEpB,CAOgB,SAAA8N,GAAe4B,EAAiBC,GAE9C,IADA,IAAItiC,EAAI,EACDA,EAAIqiC,EAAMtiC,QAAUC,EAAIsiC,EAAMviC,QAAUsiC,EAAMriC,KAAOsiC,EAAMtiC,IAChEA,IAGF,OAAOqiC,EAAM/iC,MAAM,EAAGU,EACxB,CAEM,SAAUuiC,GAAmBvY,GACjC,OACE6V,GAAe7V,IACf8V,GAAiB9V,IACjBgW,GAA4BhW,EAEhC,CAEgB,SAAAwY,GAAa5b,EAAeoD,GAC1C,OAAOuY,GAAmBvY,IAAcnI,GAAgB4Y,EAAM7T,EAAM2Z,GAAavW,KAC7EuW,GAAavW,GACbqT,EAAQkD,GAAavW,GAC3B,CAGgB,SAAAyY,GAAe5e,EAAgBuZ,GAC7C,GAAIvZ,EAAK9jB,OAASq9B,EAAWr9B,OAC3B,OAAY,EAGd,IAAK,IAAIC,EAAI,EAAGA,EAAIo9B,EAAWr9B,OAAQC,IACrC,GAAI6jB,EAAK7jB,KAAOo9B,EAAWp9B,GACzB,OAAO,EAIX,OAAW,CACb,CAGM,SAAU0iC,GAA4BjJ,GAC1C,IAAMzP,EAAYyP,EAAczP,UAEhC,OAAK6V,GAAe7V,IAAc8V,GAAiB9V,KAAeA,EAAU2Y,KAC1EpqB,EAAAA,EAAA,CAAA,EACKkhB,GACHzP,CAAAA,EAAAA,CAAAA,UAASzR,EAAAA,EAAA,CAAA,EACJyR,GAAS,CAAA,EAAA,CACZ2Y,MAAM,MAKLlJ,CACT,CAEgB,SAAAmI,GAAmB/d,EAAgB8e,GACjD,MAAO,CACL36B,KAAMmX,GAAc1Y,IACpBod,KAAAA,EACA8e,KAAAA,EAEJ,CAEgB,SAAAhB,GAAqB9d,EAAgB8e,GACnD,MAAO,CACL36B,KAAMmX,GAAcje,MACpB2iB,KAAAA,EACA8e,KAAAA,EAEJ,CAEM,SAAUC,GAAsB/e,GACpC,MAAO,CACL7b,KAAMmX,GAAc6L,OACpBnH,KAAAA,EAEJ,CAEM,SAAUgf,GAAqBhf,GACnC,MAAO,CACL7b,KAAMmX,GAAc8L,MACpBpH,KAAAA,EAEJ,CAEgB,SAAA6c,GAAqBR,EAAsBD,GAEzD,IAAMO,EAAaC,GAAeP,EAAYD,GACxC6C,EAAW5C,EAAWngC,OAASygC,EAAWzgC,QAAUkgC,EAAUlgC,OAASygC,EAAWzgC,OAExF,MAAO,CACLiI,KAAMmX,GAAc+L,MACpBgV,WAAY4C,EAAWtC,EAAWj3B,OAAO22B,EAAWM,EAAWzgC,SAAWygC,EAC1EP,UAAW6C,EAAWtC,EAAWj3B,OAAO02B,EAAUO,EAAWzgC,SAAWygC,EAE5E,CAMM,SAAUuC,GACdnc,EACAoD,EACA/C,EACAxE,GAEA,GAAIod,GAAe7V,GACjB,OAAOrC,OAAO4V,EAAKvT,EAAUnG,OAG/B,GAAIic,GAAiB9V,GAAY,CAAAgZ,IAAAA,EACzB9hC,EAAQu5B,EAAM7T,EAAMoD,EAAUnG,MACpC,MAAwB,iBAAV3iB,EAAqBA,EAAkD8hC,QAA7CA,EAAGvgB,EAAOG,UAAU1hB,EAAO,KAAM+lB,cAAY+b,EAAAA,EAAI,IAC1F,CAED,GAAIjD,GAAiB/V,GAAY,CACG,IAAAiZ,EAAlC,GAAIjS,EAAQhH,EAAUiW,WAEpB,OAAgD,QAAhDgD,EAAOxgB,EAAOG,UAAUgE,EAAM,KAAMK,UAAYgc,IAAAA,EAAAA,EAAI,KAGtD,IAAM7F,EAAa+D,GAAcnX,GAC3BsB,EAASmP,EAAM7T,EAAMwW,GAC3B,GAAI7sB,MAAMmS,QAAQ4I,GAAS,CACzB,GAAI0U,GAA4BhW,GAAY,CAAAkZ,IAAAA,EAEpCtQ,EAAO6H,EAAM7T,EAAMoD,EAAUiW,WACnC,eAAAiD,EAAOzgB,EAAOG,UAAUgQ,EAAM,KAAM3L,UAAY,IAAAic,EAAAA,EAAI,IACrD,CACC,OAAO7C,GAAkBzZ,EAAMoD,GAC5B/W,KAAI,SAAC4Q,GACJ,IAAM+O,EAAO6H,EAAM7T,EAAM/C,GACzB,MAAA,GAAAta,OAAUkZ,EAAOG,UAAUgQ,EAAM,KAAM3L,GACzC,IAAA,IACCpc,KAAK,KAEX,CAEC,OAAOw1B,GAAkBzZ,EAAMoD,GAC5B/W,KAAI,SAAC4Q,GACJ,IAAMpd,EAAM82B,EAAK1Z,GACX3iB,EAAQu5B,EAAM7T,EAAM/C,GAC1B,MAAA,GAAAta,OAAUkZ,EAAOG,UAAUnc,GAAI,MAAA8C,OAAKkZ,EAAOG,UAAU1hB,EAAO,KAAM+lB,GAAY,IAChF,IACCpc,KAAK,KAEX,CAED,OAAO,IACT,CAEM,SAAUs4B,GAAmBnZ,GACjC,OAAQ6V,GAAe7V,IAAc8V,GAAiB9V,MAAkC,IAAnBA,EAAU2Y,IACjF,CA0BM,SAAUS,GAAqBpZ,GACnC,OAAO6V,GAAe7V,IAAc8V,GAAiB9V,IAAc+V,GAAiB/V,EACtF,CAMM,SAAUqZ,GAAWrZ,GACzB,OACE6V,GAAe7V,IACf8V,GAAiB9V,IACjBgW,GAA4BhW,EAEhC,CAGM,SAAUsZ,GAAkBC,GAChC,OAAQA,EAAcv7B,MACpB,KAAKoX,GAAU3Y,IACb,OAAOm7B,GAAmB2B,EAAc1f,MAAM,GAChD,KAAKzE,GAAUle,MACb,OAAOygC,GAAqB4B,EAAc1f,MAAM,GAClD,KAAKzE,GAAU6L,MACb,OAAO4X,GAAqBU,EAAc1f,MAC5C,KAAKzE,GAAU4L,OACb,OAAO4X,GAAsBW,EAAc1f,MAEjD,UAGgB2f,GACd5c,EACA6c,EACA5f,GAEA,OAAQ4f,GACN,KAAKtkB,GAAc1Y,IACjB,OAAOm7B,GAAmB/d,GAAM,GAClC,KAAK1E,GAAcje,MACjB,OAAOygC,GAAqB9d,GAAM,GACpC,KAAK1E,GAAc8L,MACjB,OAAO4X,GAAqBhf,GAC9B,KAAK1E,GAAc6L,OACjB,OAAO4X,GAAsB/e,GAC/B,KAAK1E,GAAc+L,MACnB,KAAK/L,GAActa,KACjB,OAAO67B,GAAqB7c,EAAMA,GAExC,UAEgB6f,GACd9c,EACAoD,EACAnG,GAEA,OAAKmG,IAID2Z,GAAgB/c,EAAMoD,EAAWnG,IAKjC4e,GADe1C,GAAiB/V,GAAaqT,EAAQrT,EAAUiW,WAAajW,EAAUnG,KAC3DA,IAJtBmG,EAJI,IAaf,UAEgB2Z,GACd/c,EACAoD,EACAnG,GAEA,QAAankB,IAATknB,IAAuBoD,EACzB,OAAO,EAGT,GAAI6V,GAAe7V,IAAc4V,GAAkB5V,IAAc2V,GAAiB3V,GAChF,OAAO0U,GAAQ1U,EAAUnG,KAAMA,GAGjC,GAAIic,GAAiB9V,GACnB,OAAOyY,GAAe5e,EAAMmG,EAAUnG,MAGxC,GAAIkc,GAAiB/V,GAAY,CAC/B,IAAM2W,EAAYC,GAAaha,EAAMoD,GAC/B6W,EAAUC,GAAWla,EAAMoD,GAC3BoT,EAAaC,EAAQrT,EAAUiW,WAErC,IAAKwC,GAAe5e,EAAMuZ,IAAevZ,EAAK9jB,QAAUq9B,EAAWr9B,OACjE,SAGF,IAAMghC,EAAaC,GAAcpa,EAAMoD,EAAW2W,GAC5CM,EAAWD,GAAcpa,EAAMoD,EAAW6W,GAC1ChG,EAAYmG,GAAcpa,EAAMoD,EAAWnG,GACjD,OAAsB,IAAfgX,GAAoBA,GAAakG,GAAclG,GAAaoG,CACpE,CAED,OAAO,CACT,CAEA,SAASD,GAAcpa,EAAeoD,EAA2BnG,GAC/D,IAAMuZ,EAAaC,EAAQrT,EAAUiW,WACrC,IAAKwC,GAAe5e,EAAMuZ,IAAevZ,EAAK9jB,QAAUq9B,EAAWr9B,OACjE,OAAQ,EAGV,IAAM0G,EAAMod,EAAKuZ,EAAWr9B,QACtBurB,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAIf,EAAa/Q,GAEf,OADaltB,OAAOyC,KAAKyqB,GACb1kB,QAAQH,GAGtB,GAAI61B,EAAYhR,GAAS,CACvB,IAAM5Y,EAAQ6O,GAAI9a,GAClB,GAAIiM,EAAQ4Y,EAAOvrB,OACjB,OAAO2S,CAEV,CAED,OAAQ,CACV,CAGM,SAAU6tB,GAAavW,GAC3B,OAAO+V,GAAiB/V,GAAaA,EAAUiW,UAAYjW,EAAUnG,IACvE,CAGM,SAAUyc,GAActW,GAC5B,OAAO+V,GAAiB/V,GAAaA,EAAUkW,WAAalW,EAAUnG,IACxE,CCp2BgB,SAAA+f,KACI,IAAlB,IAAMC,EAAU,GAAEC,EAAA37B,UAAApI,OADU6V,MAAyDrF,MAAAuzB,GAAAC,EAAAA,EAAAA,EAAAD,EAAAC,IAAzDnuB,EAAyDmuB,GAAA57B,UAAA47B,GAGrF,QAAAC,EAAA,EAAAC,EAAkBruB,EAAIouB,EAAAC,EAAAlkC,OAAAikC,IAAE,CAAnB,IAAME,EAAGD,EAAAD,GAKZ,GAJmB,iBAARE,GACTL,EAAQv4B,KAAK44B,GAGXA,GAAsB,WAAfplC,EAAOolC,GAChB,IAAK,IAAMz9B,KAAOy9B,EACZ9lC,OAAO+lC,eAAez+B,KAAKw+B,EAAKz9B,IAAQy9B,EAAIz9B,IAC9Co9B,EAAQv4B,KAAK7E,EAIpB,CAED,OAAOo9B,EAAQh5B,KAAK,IACtB,CCtBgB,SAAAu5B,GAAcljC,EAAgBuhB,GAG5C,OAAOmhB,GAAW,YAAa,OAFlBphB,GAAUthB,EAAOuhB,GAEgB,CAC5C,UAAWK,GAAM5hB,GACjB,YAA8B,iBAAVA,GAAuC,IAAjBA,EAAMnB,QAEpD,k/CCmJS+F,GAAAwc,EAAA,QAAA+hB,EAAApjC,GAAA2iC,GAAW,mBAAoB1kC,EAAc,GAAA,CAAA,iBAAkBA,EAAS,MAAA,6FAHjF6E,GAWCvB,EAAA8f,EAAAte,gCALW9E,EAAgB,mBACdA,EAAkB,iBACpBA,EAAgB,gBACjBA,EAAU,4BANZ,SAAA,IAAAmlC,KAAAA,EAAApjC,GAAA2iC,GAAW,mBAAoB1kC,EAAc,GAAA,CAAA,iBAAkBA,EAAS,MAAA,qHAxI3EolC,EACAC,EAXEvvB,EAAQH,GAAY,0BAEf3T,EAAawY,EAAbxY,MACAsjC,EAAiB9qB,EAAjB+qB,UAAAA,OAAY,IAAHD,GAAQA,EACjBnN,EAAiF3d,EAAjF2d,SACAqN,EAAoBhrB,EAApBgrB,SACAC,EAAcjrB,EAAdirB,OACAC,EAAuBlrB,EAAvBmrB,QAAAA,WAAOD,EAAYlnC,GAAIknC,EACvBE,EAAkDprB,EAAlDqrB,aAAAA,OAAY,IAAAD,mBAAoC,EAAE,EAAAA,EAKzDE,GAAS,WAiCJC,WACFX,ElB+EH,SAA8Bz/B,GAClC,OAAOA,EAAKgY,QAAQ,MAAO,GAC7B,CkB9EWqoB,CAAoBZ,EAASa,WAF3B,GAKF,SAAAC,EAAY3G,GACd6F,GAGL7mB,EAAA,EAAA6mB,EAASa,UAAYhc,GAAiBsV,GAAY6F,YAG3Ce,IACD,IAAAC,EAAWL,IAEA,KAAbK,GAEFF,EAAY,QAIdb,EAAaQ,EAAaO,aAGnBC,IAEPP,GAAS,EAETN,WA7DFv5B,IAAO,WACL6J,EAAM,UAAS,CAAI9T,MAAAA,IACnBkkC,EAAYlkC,GAGRojC,IACF1a,GAAe0a,OAKfA,EAASjX,QAAUgY,EAAgBf,OAMnCA,EAAShX,OAASiY,EAAYjB,OAIlC/4B,IAAS,WACD,IAAA+5B,EAAWL,IAEjBjwB,EAAM,YAAW,CAAIgwB,OAAAA,EAAQ9jC,MAAAA,EAAOokC,SAAAA,IAE/BN,GAAUM,IAAapkC,GAC1Bm2B,EAASiO,EAAU9lB,GAA2BgmB,mTA9B/C/nB,EAAA,EAAA8mB,EAAaQ,EAAa7jC,cAmEpB,SAAmBiE,GAC1BA,EAAMU,sBAEA4/B,EAAQlY,GAAkBpoB,GAM5B,GAJU,WAAVsgC,GACFF,IAGY,UAAVE,GAA+B,QAAVA,EAAe,CAEtCT,GAAS,EAEH,IAAAM,EAAWL,IACjB5N,EAASiO,EAAU9lB,GAA2BkmB,YAGlC,WAAVD,IACFtgC,EAAMM,iBACNk/B,GAAO,IAGK,WAAVc,IACFtgC,EAAMM,iBACNk/B,GAAO,KAIF,SAAiBx/B,MACxBA,EAAMU,kBAEDg/B,GAAY1/B,EAAMwgC,eAIjB,IAAAC,EAAgBzgC,EAAMwgC,cAAcE,QAAQ,cAClDhB,EAAQe,oBAIFE,EAAWxiC,SAASwiC,WACpBR,EAAWL,IAEjBjwB,EAAM,aAAgB,CAAA8wB,SAAAA,EAAUd,OAAAA,EAAQ9jC,MAAAA,EAAOokC,SAAAA,IAM3ChiC,SAASwiC,aAAed,IAC1BA,GAAS,EACLM,IAAapkC,GACfm2B,EAASiO,EAAU9lB,GAA2BumB,uEAsBzCzB,EAAQrlB,8QCpEZ/f,EAAa,GAACqpB,YAAYrpB,EAAK,aAC5BA,EAAiB,YACjBA,EAAkB,WACnBA,EAAW,4BAENA,EAAkB,0HALzBA,EAAa,GAACqpB,YAAYrpB,EAAK,yKA5E3B2kB,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACAuhB,EAAkB/I,EAAlB+I,OACAujB,EAAiCtsB,EAAjCssB,cACA1K,EAAsB5hB,EAAtB4hB,cACApE,EAAgBxd,EAAhBwd,QACA+O,EAAwBvsB,EAAxBusB,YACAC,EAAsBxsB,EAAtBwsB,SACAvB,EAAcjrB,EAAdirB,OACA3lB,EAAiBtF,EAAjBsF,MACAmnB,EAA8BzsB,EAA9BysB,eAEF,SAAAC,EAAQllC,GACR,OAAAo6B,EAAgBp6B,EAAQ6hB,GAAc7hB,EAAOuhB,kbAG3B6iB,EAAkBe,GAC3CnP,IAGMC,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOklC,EAAQJ,EAActd,cAAc4c,OAG9C,SAAAgB,EAAaC,OAIRA,EAAavc,WAAc0U,GAAQ7a,EAAM0c,GAAagG,EAAavc,aAIjE,IAAAA,EACJqc,IAAoB7mB,GAA2BkmB,WAC3CS,EAAetiB,GACf8d,GAAqB9d,GAAM,UAG/BnH,MAAKnE,EAAAA,EACAguB,CAAAA,EAAAA,GACHvc,CAAAA,EAAAA,CAAAA,UAAAA,SAMRhL,gBAIAknB,EAASvE,GAAqB9d,GAAM,IACpC7E,KAGO,SAAYwnB,OAEX,IAAAC,EAAahkB,EAAOS,MAAMsjB,GAC5B3kB,GAAgB4kB,IAClBR,EACE,CAAApiB,KAAAA,EACA6iB,SAAUD,UAGPrkB,MAMF,SAAmBlhB,UACnBkjC,GAAcgC,EAAQJ,EAActd,cAAcxnB,IAASuhB,+RC1CtDxe,GACd2iB,EACA/C,EACAU,GAEA,IAAM6Y,EAAaC,EAAQxZ,GACrByH,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAAS,CAGvB,IAAM5G,EAASnD,GAAIgc,EAAK1Z,IACxB,OAAOU,EAAOtR,KAAI,SAAC0zB,EAAOj0B,GAAK,MAAM,CACnCykB,GAAI,MACJtT,KAAMC,EAAmBsZ,EAAW7zB,OAAOoe,OAAOjD,EAAShS,KAC3DxR,MAAOylC,EAAMzlC,MACb,GACH,CAAM,GAAIm7B,EAAa/Q,GAAS,CAE/B,IAAMsb,EAAWrJ,EAAK1Z,GAChBhjB,EAAOzC,OAAOyC,KAAKyqB,GACnBub,OAAwBnnC,IAAbknC,EAAyB9H,GAAYj+B,EAAM+lC,GAAU,GAAQ,GAE9E,MAAA,GAAAr9B,OAAA4J,EAEKoR,EAAOtR,KAAI,SAAC0zB,GACb,IAAMG,EAAUzV,GAAesV,EAAMlgC,IAAK5F,GAC1C,MAAO,CACLs2B,GAAI,MACJtT,KAAMC,EAAmBsZ,EAAW7zB,OAAOu9B,IAC3C5lC,MAAOylC,EAAMzlC,MAEjB,KAAEiS,EAGC0zB,EAAS5zB,KAAI,SAACxM,GAAQ,OAAAsgC,GAAS3J,EAAY32B,EAAK,KAEtD,CACC,MAAU,IAAAyE,MAAM,qEAEpB,UAUgB3I,GAAOqkB,EAAe/C,EAAgBU,GACpD,IAAM+G,EAASmP,EAAM7T,EAAM/C,GAE3B,GAAItT,MAAMmS,QAAQ4I,GAAS,CACzB,IAAM5G,EAAS4G,EAAOvrB,OACtB,OAAOwkB,EAAOtR,KAAI,SAAC0zB,EAAOj0B,SAAW,CACnCykB,GAAI,MACJtT,KAAMC,EAAmBD,EAAKta,OAAOoe,OAAOjD,EAAShS,KACrDxR,MAAOylC,EAAMzlC,MACd,GACF,CAEC,OAAOqjB,EAAOtR,KAAI,SAAC0zB,GACjB,IAAMG,EAAUzV,GAAesV,EAAMlgC,IAAKrI,OAAOyC,KAAKyqB,IACtD,MAAO,CACL6L,GAAI,MACJtT,KAAMC,EAAmBD,EAAKta,OAAOu9B,IACrC5lC,MAAOylC,EAAMzlC,MAEjB,GAEJ,CAMM,SAAU8lC,GACd5J,EACAv8B,EACAomC,EACAC,GAEA,IACMC,EAAe9V,GAAe6V,EADfrmC,EAAK6J,QAAO,SAACjE,GAAQ,OAAAA,IAAQwgC,CAAO,KAEnDJ,EAAW/H,GAAYj+B,EAAMomC,GAAQ,GAE3C,OAEE,CACE9P,GAAI,OACJ3mB,KAAMsT,EAAmBsZ,EAAW7zB,OAAO09B,IAC3CpjB,KAAMC,EAAmBsZ,EAAW7zB,OAAO49B,MAC5C59B,OAAA4J,EAGE0zB,EAAS5zB,KAAI,SAACxM,GAAG,OAAKsgC,GAAS3J,EAAY32B,EAAK,KAEvD,CA+EgB,SAAA2gC,GAAUxgB,EAAe+L,GAEvC,IAAM0U,EAAW9J,EAAK5K,GAEtB,GAAI3B,EAAQqW,GACV,MAAM,IAAIn8B,MAAM,gCAGlB,IAAMkyB,EAAaC,EAAQgK,GACrBC,EAAY/J,EAAK8J,GACjB/b,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAAS,CACvB,IAAM+b,EAAW9J,EAAK5K,GAChBjO,EAAS2iB,EAAW9lB,GAAIgc,EAAK8J,IAAuB,EAAI,EAE9D,OAAAl0B,EAEKwf,EAAM1f,KAAI,SAAC4Q,EAAMnR,GAOlB,MANsC,CACpCykB,GAAI,OACJ3mB,KAAMsT,EAAmBD,GACzBA,KAAMC,EAAmBsZ,EAAW7zB,OAAOoe,OAAOjV,EAAQgS,KAI9D,IAEH,IAAU2X,EAAa/Q,GAAS,CAE/B,IAAMzqB,EAAOzC,OAAOyC,KAAKyqB,GACnBub,OAAyBnnC,IAAd4nC,EAA0BxI,GAAYj+B,EAAMymC,GAAW,GAAS,GAEjF,SAAA/9B,OAAA4J,EAEKwf,EAAM1f,KAAI,SAAC4Q,GACZ,IACMijB,EAAUzV,GADHkM,EAAK1Z,GACmBhjB,GAErC,MAAO,CACLs2B,GAAI,OACJ3mB,KAAMsT,EAAmBD,GACzBA,KAAMC,EAAmBsZ,EAAW7zB,OAAOu9B,IAE/C,KAAE3zB,EAIC0zB,EAAS5zB,KAAI,SAACxM,GAAQ,OAAAsgC,GAAS3J,EAAY32B,EAAK,KAEtD,CACC,MAAU,IAAAyE,MAAM,wEAEpB,CA2DM,SAAUnH,GACd6iB,EACAoD,EACA4b,EACAnjB,GAEA,GAAIod,GAAe7V,GAAY,CAE7B,IAAMud,EAAYviB,GAA0B4gB,EAAenjB,GACrD2a,EAAaC,EAAQrT,EAAUnG,MAC/ByH,EAASmP,EAAM7T,EAAMwW,GAK3B,OAAO4J,GAAO5J,EAJDh/B,OAAOyC,KAAKyqB,GACViS,EAAKvT,EAAUnG,MACM,iBAAd0jB,EAAyBA,EAAY3B,EAG5D,CAED,GACE9F,GAAiB9V,IAChB+V,GAAiB/V,IAAcgH,EAAQhH,EAAUiW,WAGlD,IACE,MAAO,CACL,CACE9I,GAAI,UACJtT,KAAMC,EAAmByc,GAAavW,IACtC9oB,MAAOgkB,GAAiB0gB,GAAe,SAAC/gC,UAASggB,GAAehgB,EAAM4d,EAAO,KAGlF,CAAC,MAAOL,GAEP,MAAO,CACL,CACE+U,GAAI,UACJtT,KAAMC,EAAmByc,GAAavW,IACtC9oB,MAAO0kC,GAGZ,CAGH,GAAI7F,GAAiB/V,GAAY,CAC/B,IAAMwd,EAAYC,GAAkB7B,EAAenjB,GAEnD,gBAnOFmE,EACA+L,EACApO,GAEA,IAAMmjB,EAAY51B,GAAM6gB,GAClByK,EAAaC,EAAQqK,GACrBpc,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAAS,CACvB,IAAMoc,EAAY51B,GAAM6gB,GAClBjO,EAASgjB,EAAYnmB,GAAIgc,EAAKmK,IAAwB,EAE5D,MAAA,GAAAn+B,OAAA4J,EAEKw0B,GAAUhV,IAAMxf,EAGhBoR,EAAOtR,KAAI,SAAC0zB,EAAOj0B,GAOpB,MANsC,CACpCykB,GAAI,MACJtT,KAAMC,EAAmBsZ,EAAW7zB,OAAOoe,OAAOjV,EAAQgS,KAC1DxjB,MAAOylC,EAAMzlC,MAIjB,KAEH,IAAUm7B,EAAa/Q,GAAS,CAI/B,IAAM+b,EAAW9J,EAAK5K,GAChByK,EAAaC,EAAQgK,GACrBC,EAAY/J,EAAK8J,GACjBxmC,EAAiBzC,OAAOyC,KAAKyqB,GAC7Bub,OAAyBnnC,IAAd4nC,EAA0BxI,GAAYj+B,EAAMymC,GAAW,GAAS,GAC3EM,EAAa,IAAI7mC,IAAI4xB,EAAM1f,KAAI,SAAC4Q,UAAS0Z,EAAK1Z,OAC9CgkB,EAAehnC,EAAK6J,QAAO,SAACjE,GAAQ,OAACmhC,EAAW5mC,IAAIyF,EAAI,IAE9D,MAAA8C,GAAAA,OAAA4J,EAEKw0B,GAAUhV,IAAMxf,EAGhBoR,EAAOtR,KAAI,SAAC0zB,GACb,IAAMG,EAAUzV,GAAesV,EAAMlgC,IAAKohC,GAC1C,MAAO,CACL1Q,GAAI,MACJtT,KAAMC,EAAmBsZ,EAAW7zB,OAAOu9B,IAC3C5lC,MAAOylC,EAAMzlC,MAEjB,KAAEiS,EAIC0zB,EAAS5zB,KAAI,SAACxM,GAAQ,OAAAsgC,GAAS3J,EAAY32B,OAEjD,CACC,UAAUyE,MAAM,sEAEpB,CAuKW2R,CAAQ+J,EAAMyZ,GAAkBzZ,EAAMoD,GAAYwd,EAC1D,CAED,GAAI7H,GAAiB3V,GAAY,CAC/B,IAAMwd,EAAYC,GAAkB7B,EAAenjB,GAC7CoB,EAAOmG,EAAUnG,KACjBuZ,EAAaC,EAAQxZ,GACrByH,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAAS,CACvB,IAAM5Y,EAAQ6O,GAAIgc,EAAK1Z,IAGvB,OAAO5f,GAAa2iB,EAFCwW,EAAW7zB,OAAOoe,OAAOjV,EAAQ,IAEd80B,EACzC,CAAUnL,GAAAA,EAAa/Q,GAAS,CAE/B,IAAM7kB,EAAMkhB,OAAO4V,EAAK1Z,IAClBhjB,EAAiBzC,OAAOyC,KAAKyqB,GACnC,GAAI0F,EAAQnwB,IAAS08B,EAAK18B,KAAU4F,EAClC,OAAOlE,GAAOqkB,EAAMwW,EAAYoK,GAEhC,IAAM90B,EAAQ7R,EAAK+F,QAAQH,GACrBqhC,EAAUjnC,EAAK6R,EAAQ,GAG7B,OAAOzO,GAAa2iB,EAFAwW,EAAW7zB,OAAOu+B,GAECN,EAE1C,CACC,UAAUt8B,MAAM,qEAEnB,CAED,GAAI00B,GAAkB5V,GAAY,CAChC,IAAMwd,EAAYC,GAAkB7B,EAAenjB,GAC7CoB,EAAOmG,EAAUnG,KACjB3iB,EAAQu5B,EAAM7T,EAAM/C,GAE1B,GAAIyY,EAAYp7B,GAEd,OAAO+C,GAAa2iB,EADE/C,EAAKta,OAAO,KACOi+B,GAChCnL,GAAAA,EAAan7B,GAAQ,CAE9B,IAAML,EAAOzC,OAAOyC,KAAKK,GACzB,GAAI8vB,EAAQnwB,GACV,OAAO0B,GAAOqkB,EAAM/C,EAAM2jB,GAE1B,IAAMO,EAAWj2B,GAAMjR,GAGvB,OAAOoD,GAAa2iB,EAFC/C,EAAKta,OAAOw+B,GAEOP,EAE3C,CACC,MAAU,IAAAt8B,MAAM,qEAEnB,CAGD,MAAU,IAAAA,MAAM,gDAAkDgc,KAAKtE,UAAUoH,GACnF,CA6IM,SAAU2d,GAAUhV,GACxB,OAAOA,EACJ1f,KAAI,SAAC4Q,GAMJ,MALsC,CACpCsT,GAAI,SACJtT,KAAMC,EAAmBD,GAI7B,IACCmkB,SACL,CAIA,SAASjB,GAAS3J,EAAsB32B,GACtC,MAAO,CACL0wB,GAAI,OACJ3mB,KAAMsT,EAAmBsZ,EAAW7zB,OAAO9C,IAC3Cod,KAAMC,EAAmBsZ,EAAW7zB,OAAO9C,IAE/C,CAEgB,SAAAghC,GAAkB7B,EAAuBnjB,GACvD,IAAMwlB,EAAe,QAAQtmB,KAAKikB,GAC5BsC,EAAc,SAASvmB,KAAKikB,GAE5BuC,EAAoBnjB,GAA0B4gB,EAAenjB,GAC7D2lB,OACkB1oC,IAAtByoC,EACIA,EACAjjB,GAAiB0gB,GAAe,SAAC/gC,GAAI,OAAKggB,GAAehgB,EAAM4d,EAAQ,IAE7E,OACGwlB,GAAgBrmB,GAASwmB,IACzBF,GAAe33B,MAAMmS,QAAQ0lB,GAEvB,CAAC,CAAE3hC,IAAK,WAAYvF,MAAOknC,IAGhC73B,MAAMmS,QAAQ0lB,GACTA,EAAkBn1B,KAAI,SAAC/R,EAAOwR,GACnC,MAAO,CAAEjM,IAAK,YAAciM,EAAOxR,MAAAA,EACrC,IAGE0gB,GAASwmB,GACJhqC,OAAOyC,KAAKunC,GAAmBn1B,KAAI,SAACxM,GACzC,MAAO,CAAEA,IAAAA,EAAKvF,MAAOknC,EAAkB3hC,GACzC,IAIK,CAAC,CAAEA,IAAK,WAAYvF,MAAOknC,GACpC,CAGgB,SAAAC,GACdzhB,EACAoD,GAEA,GAAI6V,GAAe7V,GAAY,CAE7B,IAAMoT,EAAaC,EAAQrT,EAAUnG,MAC/ByH,EAASmP,EAAM7T,EAAMwW,GAKrB3B,EAAauL,GAAO5J,EAJbh/B,OAAOyC,KAAKyqB,GACViS,EAAKvT,EAAUnG,MACf,IAKf,MAAO,CAAE4X,WAAAA,EAAY6M,aAFArG,GAA8Brb,EAAM6U,GAG1D,CAED,GAAIqE,GAAiB9V,GASnB,MAAO,CAAEyR,WAR6B,CACpC,CACEtE,GAAI,UACJtT,KAAMC,EAAmBkG,EAAUnG,MACnC3iB,MAAO,KAIUonC,aAActe,GAGrC,GAAI+V,GAAiB/V,GAAY,CAC/B,IAAM2I,EAAQ0N,GAAkBzZ,EAAMoD,GAChCyR,EAAakM,GAAUhV,GACvB0U,EAAW9J,EAAK5K,GAEtB,GAAI3B,EAAQqW,GAAW,CAMrB,MAAO,CAAE5L,WAJ6B,CAAC,CAAEtE,GAAI,UAAWtT,KAAM,GAAI3iB,MAAO,KAIpDonC,aAFA3G,GAAqB,IAAI,GAG/C,CAED,IAAMvE,EAAaC,EAAQgK,GACrB/b,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAAS,CACvB,IAAMoc,EAAY51B,GAAM6gB,GAClBjgB,EAAQ6O,GAAIgc,EAAKmK,IAMvB,MAAO,CAAEjM,WAAAA,EAAY6M,aAJT,IAAV51B,EACIkwB,GAAsBxF,GACtByF,GAAqBzF,EAAW7zB,OAAOoe,OAAOjV,EAAQ,KAG7D,CAAM,GAAI2pB,EAAa/Q,GAAS,CAE/B,IAAMzqB,EAAOzC,OAAOyC,KAAKyqB,GACnBoc,EAAY51B,GAAM6gB,GAClBlsB,EAAM82B,EAAKmK,GACXh1B,EAAQ7R,EAAK+F,QAAQH,GACrB8hC,EAAc1nC,EAAK6R,EAAQ,GAMjC,MAAO,CAAE+oB,WAAAA,EAAY6M,aAJT,IAAV51B,EACIkwB,GAAsBxF,GACtByF,GAAqBzF,EAAW7zB,OAAOg/B,IAG9C,CACC,UAAUr9B,MAAM,qEAEnB,CAGD,MAAM,IAAIA,MAAM,gDAAkDgc,KAAKtE,UAAUoH,GACnF,CAEgB,SAAAwe,GACd5hB,EACA6U,GAEA,OAAOgN,EAAgB7hB,EAAM6U,EAAY,CACvCiN,OAAQ,SAAC9hB,EAAMkV,EAAW6M,GACxB,GAAI1M,EAAkBH,GAAY,CAChC,IAAMjY,EAAOG,EAAiB8X,EAAUjY,MACxC,MAAO,CACL8kB,iBAAgB,GAAAp/B,OAAA4J,EAAMw1B,GAAgBx1B,EAAKy1B,GAA2BhiB,EAAM/C,KAE/E,CAED,GAAI4Y,EAAgBX,GAAY,CAC9B,IAAMtrB,EAAOwT,EAAiB8X,EAAUtrB,MACxC,MAAO,CACLm4B,oBAAgBp/B,OAAA4J,EAAMw1B,GAAgBx1B,EAAKy1B,GAA2BhiB,EAAMpW,KAE/E,CAED,MAAO,CAAElN,SAAUsjB,EACpB,GAEL,CAEA,SAASgiB,GAA2BhiB,EAAe/C,GACjD,IAAMuZ,EAAaC,EAAQxZ,GACrB+iB,EAAWrJ,EAAK1Z,GAChByH,EAASmP,EAAM7T,EAAMwW,GAC3B,OAAIf,EAAa/Q,GAEEwT,GADJ1gC,OAAOyC,KAAKyqB,GACUsb,GAAU,GAG7B3zB,KAAI,SAACxM,UAAQsgC,GAAS3J,EAAY32B,EAAI,IAGjD,EACT,CCtrBM,SAAUoiC,GAAWC,GACzB,IAAMC,EACJD,EAAaE,YAAcF,EAAaG,MAAMlpC,OAAS,EACnD+oC,EAAaE,YAAc,EAC3BF,EAAaG,MAAMlpC,OAAS,EAC1B,GACC,EAEHmpC,EAAiBJ,EAAaG,MAAMF,GAEpCE,EAAoCH,EAAaG,MAAMh2B,KAAI,SAAC2f,EAAMlgB,GACtE,OAAA6F,EAAAA,EAAA,CAAA,EAAYqa,GAAI,CAAA,EAAA,CAAE9pB,OAAQ4J,IAAUq2B,GACtC,IAEA,OAAAxwB,EAAAA,EAAA,CAAA,EACKuwB,GAAY,CAAA,EAAA,CACfG,MAAAA,EACAE,SAAUC,GAAQH,GAAO,SAACrW,GAAS,OAAA9O,EAAmB8O,EAAK/O,KAAM,IACjEwlB,WAAYH,EACZF,YAAaD,GAEjB,CAGM,SAAUO,GAAeR,GAC7B,IAAMS,EACJT,EAAaE,YAAc,EAAIF,EAAaE,YAAc,EAAIF,EAAaG,MAAMlpC,OAAS,EAEtFypC,EAAqBV,EAAaG,MAAMM,GAExCN,EAAoCH,EAAaG,MAAMh2B,KAAI,SAAC2f,EAAMlgB,GACtE,OAAA6F,EAAAA,EAAA,CAAA,EAAYqa,GAAM9pB,CAAAA,EAAAA,CAAAA,OAAQ4J,IAAU62B,GACtC,IAEA,OAAAhxB,EAAAA,EACKuwB,CAAAA,EAAAA,GACHG,CAAAA,EAAAA,CAAAA,MAAAA,EACAE,SAAUC,GAAQH,GAAO,SAACrW,GAAI,OAAK9O,EAAmB8O,EAAK/O,KAAM,IACjEwlB,WAAYG,EACZR,YAAaO,GAEjB,CAGM,SAAUE,GACdC,EACA9iB,GACA,IAAA+iB,EAAUxhC,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAGqf,IAEPoiB,EAA8B,GAC9B/lB,EAAiB,GAEvB,SAASgmB,EAAQtW,GACXqW,EAAQ7pC,OAAS4pC,GACnBC,EAAQt+B,KAAKioB,EAEhB,CAiDyB,iBAAfmW,GAA0C,KAAfA,GA/CtC,SAASI,EAAgBC,EAA6B7oC,GACpD,GAAIo7B,EAAYp7B,GAAQ,CACtB,IAAM8oC,EAAQnmB,EAAK9jB,OACnB8jB,EAAKvY,KAAK,KAEV,IAAK,IAAItL,EAAI,EAAGA,EAAIkB,EAAMnB,OAAQC,IAKhC,GAJA6jB,EAAKmmB,GAASriB,OAAO3nB,GAErB8pC,EAAgBC,EAAqB7oC,EAAMlB,IAEvC4pC,EAAQ7pC,QAAU4pC,EACpB,OAIJ9lB,EAAKvW,KACN,MAAU+uB,GAAAA,EAAan7B,GAAQ,CAC9B,IAAML,EAAOzC,OAAOyC,KAAKK,GACnB8oC,EAAQnmB,EAAK9jB,OAEnB8jB,EAAKvY,KAAK,IAEV,QAAA2+B,EAAA,EAAAC,EAAkBrpC,EAAIopC,EAAAC,EAAAnqC,OAAAkqC,IAAE,CAAnB,IAAMxjC,EAAGyjC,EAAAD,GAOZ,GANApmB,EAAKmmB,GAASvjC,EAEd0jC,GAA2B1jC,EAAKsjC,EAAqBlmB,EAAMvE,GAAY7Y,IAAKojC,GAE5EC,EAAgBC,EAAqB7oC,EAAMuF,IAEvCmjC,EAAQ7pC,QAAU4pC,EACpB,MAEH,CAED9lB,EAAKvW,KACN,MAEC68B,GACExiB,OAAOzmB,GACP6oC,EACAlmB,EACAvE,GAAYpe,MACZ2oC,EAGL,CAICC,CAD4BJ,EAAW5sB,cACF8J,GAGvC,OAAOgjB,CACT,CAKM,SAAUO,GACdtlC,EACAklC,EACAlmB,EACAumB,EACAP,GAEA,IAAMQ,EAAYxlC,EAAKiY,cAEnBwtB,EAAa,EACbpsB,GAAY,EACZxL,GAAS,EAEb,IAGiB,KAFfA,EAAQ23B,EAAUzjC,QAAQmjC,EAAqB7rB,MAG7CA,EAAWxL,EAAQq3B,EAAoBhqC,OAEvC8pC,EAAQ,CACNhmB,KAAMA,EAAKvkB,MAAM,GACjB8qC,MAAAA,EACAE,WAAAA,EACA/6B,MAAOmD,EACPlD,IAAK0O,IAGPosB,YAEgB,IAAX53B,EACX,CAKM,SAAU63B,GAAY1lC,EAAc2lC,EAAyBj7B,EAAeC,GAChF,OAAO3K,EAAKygB,UAAU,EAAG/V,GAASi7B,EAAkB3lC,EAAKygB,UAAU9V,EACrE,UAKgBi7B,GACd5lC,EACA2lC,EACAE,GAEA,IAAIC,EAAc9lC,EAMlB,OAJA+lC,GAAaF,GAAa,SAACG,GACzBF,EAAcJ,GAAYI,EAAaH,EAAiBK,EAAWt7B,MAAOs7B,EAAWr7B,IACvF,IAEOm7B,CACT,CAEM,SAAUG,GACdlkB,EACA6S,EACA+Q,EACAO,EACAtoB,GAEA,IAAQ2nB,EAA4BW,EAA5BX,MAAOvmB,EAAqBknB,EAArBlnB,KAAMtU,EAAew7B,EAAfx7B,MAAOC,EAAQu7B,EAARv7B,IAE5B,GAAI46B,IAAU9qB,GAAY7Y,IAAK,CAE7B,IAAM22B,EAAaC,EAAQxZ,GACrByH,EAASmP,EAAM7T,EAAMwW,GACrB6J,EAAS1J,EAAK1Z,GAId4X,EAAauL,GAAO5J,EAHbh/B,OAAOyC,KAAKyqB,GAGmB2b,EAF7BsD,GAAYtD,EAAQuD,EAAiBj7B,EAAOC,IAK3D,MAAO,CACL84B,aAHmBrG,GAA8Brb,EAAM6U,GAIvDA,WAAAA,EAEH,CAAU2O,GAAAA,IAAU9qB,GAAYpe,MAAO,CAEtC,IAAM8pC,EAAoCvQ,EAAM7T,EAAM/C,GACtD,QAAqBnkB,IAAjBsrC,EACF,UAAU9/B,MAAK3B,kCAAAA,OAAmCua,EAAmBD,KAEvE,IAAMonB,EAA2C,iBAAjBD,EAA4BA,EAAerjB,OAAOqjB,GAE5E/Q,EAAUnW,EAAmBD,GAC7ByX,EAAgBsD,GACpBoM,EACAvR,EAAcE,iBACdM,EACAxX,GAGIvhB,EAAQqpC,GAAYU,EAAkBT,EAAiBj7B,EAAOC,GAE9DisB,EAAmC,CACvC,CACEtE,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOo6B,EAAgBp6B,EAAQ6hB,GAAc7hB,EAAOuhB,KAMxD,MAAO,CACL6lB,aAHmBrG,GAA8Brb,EAAM6U,GAIvDA,WAAAA,EAEH,CACC,MAAU,IAAAvwB,MAAK3B,uDAAAA,OAAwD6gC,GAE3E,CAEM,SAAUc,GACdtkB,EACA6S,EACAiQ,EACAc,EACA/nB,GAcA,IAXA,IAAM0oB,EAAoB1B,GAAOC,EAAY9iB,EAAMY,KAU7C4jB,EAA+B,GAC5BprC,EAAI,EAAGA,EAAImrC,EAAkBprC,OAAQC,IAAK,CACjD,IAAMqrC,EAAeF,EAAkBnrC,EAAI,GACrC4yB,EAAOuY,EAAkBnrC,GACrB,IAANA,GAAW4yB,EAAKwX,QAAUiB,EAAajB,OAAU1L,GAAQ9L,EAAK/O,KAAMwnB,EAAaxnB,MAOjF0Z,EAAK6N,GAA+BnC,MAAM39B,KAAKsnB,GANjDwY,EAAoB9/B,KAAK,CACvBuY,KAAM+O,EAAK/O,KACXumB,MAAOxX,EAAKwX,MACZnB,MAAO,CAACrW,IAKb,CAKDwY,EAAoBvsB,MAAK,SAACjgB,EAAGC,GAE3B,OAAID,EAAEwrC,QAAUvrC,EAAEurC,MACZxrC,EAAEwrC,QAAU9qB,GAAY7Y,IACnB,GAEC,EAKL5H,EAAEglB,KAAK9jB,OAASnB,EAAEilB,KAAK9jB,MAChC,IAGA,IAAIurC,EAAmC,GACnCC,EAAyC,KAmD7C,OAlDAH,EAAoB5sC,SAAQ,SAAC+0B,GAE3B,IAAQ6W,EAAuB7W,EAAvB6W,MAAOvmB,EAAgB0P,EAAhB1P,KAAMolB,EAAU1V,EAAV0V,MAErB,GAAImB,IAAU9qB,GAAY7Y,IAAK,CAE7B,IAAM22B,EAAaC,EAAQxZ,GACrByH,EAASmP,EAAM7T,EAAMwW,GACrB6J,EAAS1J,EAAK1Z,GAId4X,EAAauL,GAAO5J,EAHbh/B,OAAOyC,KAAKyqB,GAGmB2b,EAF7BwD,GAAexD,EAAQuD,EAAiBvB,IAGvDqC,EAAgBA,EAAc/hC,OAAOkyB,GAErC8P,EAAmBtJ,GAA8Brb,EAAM6U,EACxD,KAAU2O,IAAAA,IAAU9qB,GAAYpe,MA8B/B,MAAU,IAAAgK,MAAK3B,uDAAAA,OAAwD6gC,IA5BvE,IAAMY,EAAoCvQ,EAAM7T,EAAM/C,GACtD,QAAqBnkB,IAAjBsrC,EACF,MAAU,IAAA9/B,MAAK,kCAAA3B,OAAmCua,EAAmBD,KAEvE,IAAMonB,EACoB,iBAAjBD,EAA4BA,EAAerjB,OAAOqjB,GAErD/Q,EAAUnW,EAAmBD,GAC7ByX,EAAgBsD,GACpBoM,EACAvR,EAAcE,iBACdM,EACAxX,GAGIvhB,EAAQupC,GAAeQ,EAAkBT,EAAiBvB,GAE1DxN,EAAmC,CACvC,CACEtE,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOo6B,EAAgBp6B,EAAQ6hB,GAAc7hB,EAAOuhB,KAGxD6oB,EAAgBA,EAAc/hC,OAAOkyB,GAErC8P,EAAmBtJ,GAA8Brb,EAAM6U,EAGxD,CACH,IAEO,CACLA,WAAY6P,EACZhD,aAAciD,EAElB,CAoDA,SAASC,GAAoBT,GAC3B,OAAOA,EAAiBlnB,KAAKta,OAAOwhC,EAAiBX,MAAOziB,OAAOojB,EAAiBT,YACtF,CAGgB,SAAAmB,GACdx4B,EACAgnB,GAAoB,IAAAyR,EAEdzC,EAAQh2B,SAAc,QAAXy4B,EAAHz4B,EAAMgnB,UAAQ,IAAAyR,OAAA,EAAdA,EAAgBhhC,QAAO,SAACkoB,GAAsB,OAAKA,EAAKwX,QAAU9qB,GAAY7Y,GAAI,IAEhG,GAAKwiC,GAA0B,IAAjBA,EAAMlpC,OAIpB,OAAOkpC,CACT,CAGgB,SAAA0C,GACd14B,EACAgnB,GAAoB2R,IAAAA,EAEd3C,EAAQh2B,SAAc24B,QAAXA,EAAH34B,EAAMgnB,UAAN2R,IAAcA,OAAdA,EAAAA,EAAgBlhC,QAAO,SAACkoB,GAA2B,OAAAA,EAAKwX,QAAU9qB,GAAYpe,KAAK,IAEjG,GAAK+nC,GAA0B,IAAjBA,EAAMlpC,OAIpB,OAAOkpC,CACT,obCtdgE9f,GAAiBjqB,EAAI,GAAC2F,MAAI,yFAAxC+C,GAAAikC,EAAA,aAAA3sC,KAAK4J,yBAAnD/E,GAA8FvB,EAAAqpC,EAAA7nC,wCAAlCmlB,GAAiBjqB,EAAI,GAAC2F,MAAI,KAAAiC,GAAAwC,EAAAwiC,QAAxClkC,GAAAikC,EAAA,aAAA3sC,KAAK4J,iDAFlD,MAAAgjC,EAAA5sC,KAAK2F,KAAI,2EAAT,EAAArF,GAAAssC,KAAAA,EAAA5sC,KAAK2F,KAAI,KAAAiC,GAAAwC,EAAAwiC,wEADO,WAAd5sC,EAAI,GAAC8I,KAAiBqQ,qPADtBnZ,EAAK,iBAAVa,OAAIC,GAAA,sNAACd,EAAK,YAAVa,OAAIC,GAAA,EAAA,yHAAJD,6EANW8E,EAAY6U,EAAZ7U,KACAsmC,EAA6CzxB,EAA7CyxB,iKAEV1tB,EAAA,EAAEsuB,EDuZW,SAAWlnC,EAAcu5B,GACvC,IAI2B4N,EAJrBD,EAA0B,GAE5BE,EAAc,EAACC,EAAAlR,EAECoD,OAApB,IAAA8N,EAAAjR,MAAA+Q,EAAAE,EAAA/6B,KAAA+pB,MAA6B,CAAlB,IAAA3H,EAAKyY,EAAA9qC,MACRirC,EAAgBtnC,EAAKvF,MAAM2sC,EAAa1Y,EAAMhkB,OAC9B,KAAlB48B,GACFJ,EAAMzgC,KAAK,CACTtD,KAAM,SACNnD,KAAMsnC,EACNrjC,QAAQ,IAIZ,IAAMsjC,EAAevnC,EAAKvF,MAAMi0B,EAAMhkB,MAAOgkB,EAAM/jB,KACnDu8B,EAAMzgC,KAAK,CACTtD,KAAM,YACNnD,KAAMunC,EACNtjC,OAAQyqB,EAAMzqB,SAGhBmjC,EAAc1Y,EAAM/jB,GACrB,CAAA,CAAA4S,MAAAA,GAAA8pB,EAAA7+B,EAAA+U,WAAA8pB,EAAAhqC,GAAA,CAED,IAAMmqC,EAAY9O,EAAKa,GASvB,OARIiO,GAAaA,EAAU78B,IAAM3K,EAAK9E,QACpCgsC,EAAMzgC,KAAK,CACTtD,KAAM,SACNnD,KAAMA,EAAKvF,MAAM+sC,EAAU78B,KAC3B1G,QAAQ,IAILijC,CACT,CC1baO,CAAW3kB,OAAO9iB,GAAOsmC,87CCiDjC,MAAAW,EAAA3iB,GAAiBjqB,EAAc,GAAAqpB,YAAYrpB,EAAK,KAAA,2EAAhD,EAAAM,GAAAssC,KAAAA,EAAA3iB,GAAiBjqB,EAAc,GAAAqpB,YAAYrpB,EAAK,KAAA,KAAA4H,GAAAwC,EAAAwiC,2FAFlB5sC,EAAa,GAACqpB,YAAYrpB,EAAK,qIAA/BA,EAAa,GAACqpB,YAAYrpB,EAAK,sOAD3DA,EAAiB,GAAA,oKALfklC,GAAcllC,EAAK,GAAEA,EAAM,KAAA,kCAG3BA,EAAU,GAAG,qDAAuD,uBAP7E6E,GAcKvB,EAAA8f,EAAAte,2CATO9E,EAAgB,oBACbA,EAAsB,yMAF5BklC,GAAcllC,EAAK,GAAEA,EAAM,KAAA,uDAG3BA,EAAU,GAAG,qDAAuD,wJApChE2kB,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACA+1B,EAAiBvd,EAAjBud,SACA+O,EAAiCtsB,EAAjCssB,cACAvjB,EAAkB/I,EAAlB+I,OACAyjB,EAAsBxsB,EAAtBwsB,SAEAiF,EAAyDzxB,EAAzDyxB,2UAER1tB,EAAA,EAAA8uB,EAAazpB,GAAM5hB,gBAEb,SAAiBiE,GACH,iBAAVjE,GAAsBqrC,GAAcpnC,EAAMuoB,UACnDvoB,EAAMM,iBACNN,EAAMU,kBAENtE,OAAOgc,KAAKrc,EAAO,YAId,SAAuBiE,GACzB8xB,IACH9xB,EAAMM,iBACNygC,EAASvE,GAAqB9d,GAAM,w2BClCvC3kB,EAAI,gEADP6E,GAEKvB,EAAA8f,EAAAte,8CADF9E,EAAI,+DAJM2F,EAAY6U,EAAZ7U,wMCaP,SAAU2nC,GACd/pC,EAAagqC,OAGT1c,EAFFlrB,EAAI4nC,EAAJ5nC,KAAMqrB,EAAiBuc,EAAjBvc,kBAAmBP,EAAkB8c,EAAlB9c,mBAI3B,SAAS+c,IAMP3c,EAAUG,EAAkByc,GALd,CACZ9nC,KAAAA,GAI0C,CAC1CqZ,SAAU,MACVR,MAAO,GAAK7Y,EAAK9E,OACjBivB,UAAW,EACXhrB,OAAQvB,EACRqY,mBAAmB,GAEtB,CAED,SAAS8xB,IACPjd,EAAmBI,EACpB,CAKD,OAHAttB,EAAK6C,iBAAiB,aAAconC,GACpCjqC,EAAK6C,iBAAiB,aAAcsnC,GAE7B,CACLvrC,QAAO,WACLoB,EAAK8C,oBAAoB,aAAcmnC,GACvCjqC,EAAK8C,oBAAoB,aAAcqnC,EACxC,EAEL,8OC/BcC,gHADd9oC,GAEKvB,EAAA8f,EAAAte,iDAFqCa,CAAAA,KAAA3F,EAAI,IAAKA,EAAoB,yFAA7B2F,KAAA3F,EAAI,IAAKA,EAAoB,4JAP/D4tC,EAAuB/gC,GAAiC,kBAEnD7K,EAAawY,EAAbxY,uGAER2D,EAAI,SAAA0E,OAAA,IAAgB7H,KAAKR,GAAO6nB,gKCLrB,SAAAgkB,GAAWC,GACzB,IAAAnpB,EAAImpB,EAAJnpB,KACA3iB,EAAK8rC,EAAL9rC,MACA+1B,EAAQ+V,EAAR/V,SACAqE,EAAa0R,EAAb1R,cACA6P,EAAiB6B,EAAjB7B,kBACA8B,EAASD,EAATC,UACAxqB,EAAMuqB,EAANvqB,OACAujB,EAAagH,EAAbhH,cACA9O,EAAO8V,EAAP9V,QACA+O,EAAW+G,EAAX/G,YACAC,EAAQ8G,EAAR9G,SACAvB,EAAMqI,EAANrI,OACAwB,EAAc6G,EAAd7G,eACAnnB,EAAKguB,EAALhuB,MAEMkuB,EAA+C,GAiDrD,OA/CKD,G9BQD,SAAoB/rC,GACxB,OAAiB,IAAVA,IAA4B,IAAVA,CAC3B,C8BVoBisC,CAAUjsC,IAC1BgsC,EAAU5hC,KAAK,CACb5C,UAAW0kC,GACX1sC,MAAO,CAAEmjB,KAAAA,EAAM3iB,MAAAA,EAAO+1B,SAAAA,EAAUC,QAAAA,EAASlY,MAAAA,MAIxCiuB,G9B4DD,SAAkB/rC,GACtB,MAAwB,iBAAVA,KAAwBmhB,GAAYnhB,EACpD,C8B9DoBmsC,CAAQnsC,IACxBgsC,EAAU5hC,KAAK,CACb5C,UAAW4kC,GACX5sC,MAAO,CAAEmjB,KAAAA,EAAM3iB,MAAAA,EAAO+1B,SAAAA,EAAUC,QAAAA,EAASlY,MAAAA,KAIzCiuB,GACFC,EAAU5hC,KAAK,CACb5C,UAAW6kC,GACX7sC,MAAO,CACLmjB,KAAAA,EACA3iB,MAAAA,EACAo6B,cAAAA,EACA7Y,OAAAA,EACAujB,cAAAA,EACA9O,QAAAA,EACA+O,YAAAA,EACAC,SAAAA,EACAvB,OAAAA,EACAwB,eAAAA,EACAnnB,MAAAA,KAKDiuB,GACHC,EAAU5hC,KAAK,CACb5C,UAAW8kC,GACX9sC,MAAO,CAAEmjB,KAAAA,EAAM3iB,MAAAA,EAAO+1B,SAAAA,EAAUxU,OAAAA,EAAQujB,cAAAA,EAAemF,kBAAAA,EAAmBjF,SAAAA,MAIzE+G,GAAanrB,GAAY5gB,IAC5BgsC,EAAU5hC,KAAK,CACb5C,UAAW+kC,GACX/sC,MAAO,CAAEQ,MAAAA,KAINgsC,CACT,CCjEO,IAAMQ,GAA4D,CAAA,EAO5DC,GAAuD,CAClEC,YAAY,EACZC,cAAc,GCfV9pB,GAAMlkB,KAAKkkB,IACXjkB,GAAMD,KAAKC,IACXguC,GAAQjuC,KAAKiuC,MACb9rB,GAAQniB,KAAKmiB,MACb+rB,GAAe,SAAA93B,GAAC,MAAK,CACzBrY,EAAGqY,EACHoW,EAAGpW,EACJ,EACK+3B,GAAkB,CACtB1vB,KAAM,QACNwO,MAAO,OACPsC,OAAQ,MACRhR,IAAK,UAED6vB,GAAuB,CAC3B1+B,MAAO,MACPC,IAAK,SAEP,SAAS0+B,GAAM3+B,EAAOrO,EAAOsO,GAC3B,OAAO1P,GAAIyP,EAAOwU,GAAI7iB,EAAOsO,GAC/B,CACA,SAAS2+B,GAASjtC,EAAOktC,GACvB,MAAwB,mBAAVltC,EAAuBA,EAAMktC,GAASltC,CACtD,CACA,SAASmtC,GAAQC,GACf,OAAOA,EAAU9jC,MAAM,KAAK,EAC9B,CACA,SAAS+jC,GAAaD,GACpB,OAAOA,EAAU9jC,MAAM,KAAK,EAC9B,CACA,SAASgkC,GAAgBC,GACvB,MAAgB,MAATA,EAAe,IAAM,GAC9B,CACA,SAASC,GAAcD,GACrB,MAAgB,MAATA,EAAe,SAAW,OACnC,CACA,SAASE,GAAYL,GACnB,MAAO,CAAC,MAAO,UAAUM,SAASP,GAAQC,IAAc,IAAM,GAChE,CACA,SAASO,GAAiBP,GACxB,OAAOE,GAAgBG,GAAYL,GACrC,CACA,SAASQ,GAAkBR,EAAWS,EAAOC,QAC/B,IAARA,IACFA,GAAM,GAER,IAAMC,EAAYV,GAAaD,GACzBY,EAAgBL,GAAiBP,GACjCvuC,EAAS2uC,GAAcQ,GACzBC,EAAsC,MAAlBD,EAAwBD,KAAeD,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAdC,EAAwB,SAAW,MAI9I,OAHIF,EAAMK,UAAUrvC,GAAUgvC,EAAMM,SAAStvC,KAC3CovC,EAAoBG,GAAqBH,IAEpC,CAACA,EAAmBG,GAAqBH,GAClD,CACA,SAASI,GAAsBjB,GAC7B,IAAMkB,EAAoBF,GAAqBhB,GAC/C,MAAO,CAACmB,GAA8BnB,GAAYkB,EAAmBC,GAA8BD,GACrG,CACA,SAASC,GAA8BnB,GACrC,OAAOA,EAAUzxB,QAAQ,cAAc,SAAAoyB,GAAa,OAAAhB,GAAqBgB,KAC3E,CAkBA,SAASS,GAA0BpB,EAAWqB,EAAe9hC,EAAWmhC,GACtE,IAAMC,EAAYV,GAAaD,GAC3Bt9B,EAnBN,SAAqB4+B,EAAMC,EAASb,GAClC,IAAMc,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QAGrB,OAAQH,GACN,IAAK,MACL,IAAK,SACH,OAAIZ,EAAYa,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EATA,CAAC,MAAO,UACR,CAAC,SAAU,OASpB,QACE,MAAO,GAEb,CAGaG,CAAY3B,GAAQC,GAA0B,UAAdzgC,EAAuBmhC,GAOlE,OANIC,IACFj+B,EAAOA,EAAKiC,KAAI,SAAA28B,GAAQ,OAAAA,EAAO,IAAMX,CAAU,IAC3CU,IACF3+B,EAAOA,EAAKzH,OAAOyH,EAAKiC,IAAIw8B,OAGzBz+B,CACT,CACA,SAASs+B,GAAqBhB,GAC5B,OAAOA,EAAUzxB,QAAQ,0BAA0B,SAAA+yB,GAAI,OAAI5B,GAAgB4B,EAAK,GAClF,CAUA,SAASK,GAAiBC,GACxB,MAA0B,iBAAZA,EAVhB,SAA6BA,GAC3B,OAAA33B,EACE6F,CAAAA,IAAK,EACL0O,MAAO,EACPsC,OAAQ,EACR9Q,KAAM,GACH4xB,EAEP,CAEuCC,CAAoBD,GAAW,CAClE9xB,IAAK8xB,EACLpjB,MAAOojB,EACP9gB,OAAQ8gB,EACR5xB,KAAM4xB,EAEV,CACA,SAASE,GAAiBlkB,GACxB,OAAA3T,EAAAA,EAAA,CAAA,EACK2T,GAAI,CAAA,EAAA,CACP9N,IAAK8N,EAAKG,EACV/N,KAAM4N,EAAKtuB,EACXkvB,MAAOZ,EAAKtuB,EAAIsuB,EAAKxO,MACrB0R,OAAQlD,EAAKG,EAAIH,EAAKtO,QAE1B,CCtHA,SAASyyB,GAA2BC,EAAMhC,EAAWU,GACnD,IAYIuB,EAXFnB,EAEEkB,EAFFlB,UACAC,EACEiB,EADFjB,SAEImB,EAAW7B,GAAYL,GACvBY,EAAgBL,GAAiBP,GACjCmC,EAAc/B,GAAcQ,GAC5BU,EAAOvB,GAAQC,GACfoC,EAA0B,MAAbF,EACbG,EAAUvB,EAAUxxC,EAAIwxC,EAAU1xB,MAAQ,EAAI2xB,EAAS3xB,MAAQ,EAC/DkzB,EAAUxB,EAAU/iB,EAAI+iB,EAAUxxB,OAAS,EAAIyxB,EAASzxB,OAAS,EACjEizB,EAAczB,EAAUqB,GAAe,EAAIpB,EAASoB,GAAe,EAEzE,OAAQb,GACN,IAAK,MACHW,EAAS,CACP3yC,EAAG+yC,EACHtkB,EAAG+iB,EAAU/iB,EAAIgjB,EAASzxB,QAE5B,MACF,IAAK,SACH2yB,EAAS,CACP3yC,EAAG+yC,EACHtkB,EAAG+iB,EAAU/iB,EAAI+iB,EAAUxxB,QAE7B,MACF,IAAK,QACH2yB,EAAS,CACP3yC,EAAGwxC,EAAUxxC,EAAIwxC,EAAU1xB,MAC3B2O,EAAGukB,GAEL,MACF,IAAK,OACHL,EAAS,CACP3yC,EAAGwxC,EAAUxxC,EAAIyxC,EAAS3xB,MAC1B2O,EAAGukB,GAEL,MACF,QACEL,EAAS,CACP3yC,EAAGwxC,EAAUxxC,EACbyuB,EAAG+iB,EAAU/iB,GAGnB,OAAQkiB,GAAaD,IACnB,IAAK,QACHiC,EAAOrB,IAAkB2B,GAAe7B,GAAO0B,GAAc,EAAI,GACjE,MACF,IAAK,MACHH,EAAOrB,IAAkB2B,GAAe7B,GAAO0B,GAAc,EAAI,GAGrE,OAAOH,CACT,CASA,IAAMO,GAAe,WAAA,IAAAC,EAAAvZ,EAAAC,IAAAC,MAAG,SAAAsZ,EAAO5B,EAAWC,EAAUtgC,GAAM,IAAAkiC,EAAA3C,EAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvC,EAAAD,EAAAyC,EAAA5zC,EAAAyuB,EAAAolB,EAAAC,EAAAC,EAAA3xC,EAAA4xC,EAAAC,EAAA3zC,EAAA4zC,EAAAC,EAAAC,EAAAltC,EAAAmtC,EAAAC,EAAA,OAAAza,IAAAhf,MAAA,SAAA05B,iBAAAA,EAAAna,KAAAma,EAAA1nC,MAAA,KAAA,EAQrC,OARqCwmC,EAMpDliC,EAJFu/B,UAAAA,WAAS2C,EAAG,SAAQA,EAAAC,EAIlBniC,EAHFoiC,SAAAA,OAAQ,IAAAD,EAAG,WAAUA,EAAAE,EAGnBriC,EAFFsiC,WAAAA,OAAU,IAAAD,EAAG,GAAEA,EACfE,EACEviC,EADFuiC,SAEIC,EAAkBF,EAAW3mC,OAAOsP,SAAQm4B,EAAA1nC,KAC/B,EAAkB,MAAlB6mC,EAASc,WAAgB,EAASd,EAASc,MAAM/C,GAAS,KAAA,EAC3D,OADZL,EAAGmD,EAAAja,KAAAia,EAAA1nC,KACS,EAAA6mC,EAASe,gBAAgB,CACzCjD,UAAAA,EACAC,SAAAA,EACA8B,SAAAA,IACA,KAAA,EAJEpC,EAAKoD,EAAAja,KAAAsZ,EAQLnB,GAA2BtB,EAAOT,EAAWU,GAF/CpxC,EAAC4zC,EAAD5zC,EACAyuB,EAACmlB,EAADnlB,EAEEolB,EAAoBnD,EACpBoD,EAAiB,CAAA,EACjBC,EAAa,EACR3xC,EAAI,EAAC,KAAA,GAAA,KAAEA,EAAIuxC,EAAgBxxC,QAAMoyC,CAAAA,EAAA1nC,cAGpC,OAHoCmnC,EAIpCL,EAAgBvxC,GAFlByE,EAAImtC,EAAJntC,KACAvG,EAAE0zC,EAAF1zC,GAAEi0C,EAAA1nC,KAAA,GAOMvM,EAAG,CACXN,EAAAA,EACAyuB,EAAAA,EACAimB,iBAAkBhE,EAClBA,UAAWmD,EACXN,SAAAA,EACAO,eAAAA,EACA3C,MAAAA,EACAuC,SAAAA,EACAiB,SAAU,CACRnD,UAAAA,EACAC,SAAAA,KAEFyC,KAAAA,GASA,GATAA,EAAAK,EAAAja,KAjBG6Z,EAAKD,EAARl0C,EACGo0C,EAAKF,EAARzlB,EACAvnB,EAAIgtC,EAAJhtC,KACAmtC,EAAKH,EAALG,MAeFr0C,EAAa,MAATm0C,EAAgBA,EAAQn0C,EAC5ByuB,EAAa,MAAT2lB,EAAgBA,EAAQ3lB,EAC5BqlB,EAAcn5B,EAAAA,EACTm5B,CAAAA,EAAAA,GAAcn9B,CAAAA,EAAAA,EAChB9P,CAAAA,EAAAA,EAAI8T,EAAAA,EAAA,CAAA,EACAm5B,EAAejtC,IACfK,OAGHmtC,GAASN,GAAc,KAAEQ,EAAA1nC,KAAA,GAAA,KAAA,CACd,GAAbknC,IACqB,WAAjB7yC,EAAOmzC,IAAkBE,EAAA1nC,KAAA,GAAA,KAAA,CAG1B,GAFGwnC,EAAM3D,YACRmD,EAAoBQ,EAAM3D,YAExB2D,EAAMlD,MAAKoD,CAAAA,EAAA1nC,KAAA,GAAA,KAAA,CAAA,IACW,IAAhBwnC,EAAMlD,MAAc,CAAAoD,EAAA1nC,KAAA0nC,GAAAA,KAAAA,CAAS,OAATA,EAAA1nC,KAAS,GAAA6mC,EAASe,gBAAgB,CAC5DjD,UAAAA,EACAC,SAAAA,EACA8B,SAAAA,IACA,KAAA,GAAAgB,EAAAha,GAAAga,EAAAja,KAAAia,EAAA1nC,KAAA,GAAA,MAAA,KAAA,GAAA0nC,EAAAha,GAAG8Z,EAAMlD,cAJXA,EAAKoD,EAAAha,GAAA,KAAA,GAAA+Z,EASH7B,GAA2BtB,EAAO0C,EAAmBzC,GAFvDpxC,EAACs0C,EAADt0C,EACAyuB,EAAC6lB,EAAD7lB,EAGJrsB,KAAAA,GAAO,OAAPA,GAAK,EAAEmyC,EAAAK,OAAA,WAAA,IAAA,KAAA,GAnDiCxyC,IAAGmyC,EAAA1nC,6BAAA0nC,EAAAK,OAAA,SAuDxC,CACL50C,EAAAA,EACAyuB,EAAAA,EACAiiB,UAAWmD,EACXN,SAAAA,EACAO,eAAAA,IACD,KAAA,GAAA,IAAA,MAAA,OAAAS,EAAAM,OAAAzB,GAAAA,EACF,KAAA,OAAA,SAnFoB0B,EAAAC,EAAAC,GAAA,OAAA7B,EAAA79B,MAAA/K,KAAAA,YAAA,GAqFrB,SAQe0qC,GAAcC,EAAAC,GAAA,OAAAC,GAAA9/B,MAAAvN,KAAAwC,UAgP7B,CAAA,SAAA6qC,KA3LC,OA2LDA,GAAAxb,EAAAC,IAAAC,MAhPA,SAAAub,EAA8Bv2B,EAAOrX,GAAO6tC,IAAAA,EAAAt1C,EAAAyuB,EAAAilB,EAAAvC,EAAAwD,EAAApB,EAAAgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5wC,EAAA6wC,EAAA7nB,EAAA8nB,EAAAC,EAAAC,EAAA,OAAAzc,IAAAhf,MAAA,SAAA07B,GAAAA,cAAAA,EAAAnc,KAAAmc,EAAA1pC,MAE1C,KAAA,EAqB0D,YArB1C,IAAZpF,IACFA,EAAU,CAAA,GAGVzH,EAME8e,EANF9e,EACAyuB,EAKE3P,EALF2P,EACAilB,EAIE50B,EAJF40B,SACAvC,EAGEryB,EAHFqyB,MACAwD,EAEE71B,EAFF61B,SACApB,EACEz0B,EADFy0B,SAAQgC,EAQNhF,GAAS9oC,EAASqX,GAAM02B,EAAAD,EAL1BE,SAAAA,OAAQ,IAAAD,EAAG,oBAAmBA,EAAAE,EAAAH,EAC9BI,aAAAA,OAAe,IAAHD,EAAG,WAAUA,EAAAE,EAAAL,EACzBM,eAAAA,WAAcD,EAAG,WAAUA,EAAAE,EAAAP,EAC3BQ,YAAAA,OAAW,IAAAD,GAAQA,EAAAE,EAAAT,EACnBjD,QAEI2D,EAAgB5D,QAFV,IAAH2D,EAAG,EAACA,GAGPE,EAAgC,aAAnBL,EAAgC,YAAc,WAC3DvwC,EAAUqvC,EAASoB,EAAcG,EAAaL,GAAeU,EAAAhc,GACxCiY,GAAgB+D,EAAAlc,GAAOqZ,EAAQ6C,EAAA1pC,KAAA,GACQ,MAAtB6mC,EAAS8C,eAAoB,EAAS9C,EAAS8C,UAAUlxC,GAAQ,KAAA,GAA3E,GAA2EixC,EAAA/b,GAAhG8a,EAAqBiB,EAAAjc,KAAiF,MAAjFic,EAAA/b,GAAqF,CAAA+b,EAAA1pC,KAAA,GAAA,KAAA,CAAA0pC,EAAAE,GAAGnB,EAAqBiB,EAAA1pC,KAAA0pC,GAAAA,MAAAA,KAAAA,GAAAA,EAAAE,IAAG,EAAIF,KAAAA,GAAAA,IAAAA,EAAAE,GAAAF,CAAAA,EAAA1pC,KAAA,GAAA,KAAA,CAAA0pC,EAAAG,GAAIpxC,EAAOixC,EAAA1pC,KAAA,GAAA,MAAA,KAAA,GAAyB0pC,GAAzBA,EAAAI,GAAGrxC,EAAQsxC,eAAcL,EAAAI,GAAAJ,CAAAA,EAAA1pC,KAAA0pC,GAAAA,KAAAA,CAAY,OAAZA,EAAA1pC,KAAY,GAA+B,MAA/B6mC,EAASmD,wBAA6B,EAASnD,EAASmD,mBAAmBlC,EAASlD,kBAAS8E,EAAAI,GAAAJ,EAAAjc,KAAA,KAAA,GAAAic,EAAAG,GAAAH,EAAAI,GAAA,KAAA,GAGzRJ,OAHyRA,EAAAO,GAAAP,EAAAG,GAAAH,EAAAQ,GACjStB,EAAQc,EAAAS,GACRrB,EAAYY,EAAAU,GACZ1D,EAAQgD,EAAAW,IAAA,CAHR5xC,QAAOixC,EAAAO,GACPrB,SAAQc,EAAAQ,GACRpB,aAAYY,EAAAS,GACZzD,SAAQgD,EAAAU,IAAAV,EAAA1pC,KAAA0pC,GAAAA,EAAAlc,GAJiD8c,gBAAervC,KAAAyuC,EAAAlc,GAAAkc,EAAAW,KAAA,KAAA,GAW9C,OAX8CX,EAAAa,IAAAb,EAAAjc,KAApE6b,GAAkB,EAAAI,EAAAhc,IAAAgc,EAAAa,KAMlB9oB,EAA0B,aAAnBunB,EAA6Bl7B,EAAAA,KACrCw2B,EAAMM,UAAQ,CAAA,EAAA,CACjBzxC,EAAAA,EACAyuB,EAAAA,IACE0iB,EAAMK,UAAS+E,EAAA1pC,KACS,GAA4B,MAA5B6mC,EAAS2D,qBAA0B,EAAS3D,EAAS2D,gBAAgB1C,EAASlD,UAApG2E,KAAAA,GACsB,OADtBA,EAAYG,EAAAjc,KAAAic,EAAA1pC,KACU,GAAsB,MAAtB6mC,EAAS8C,eAAoB,EAAS9C,EAAS8C,UAAUJ,GAAaG,KAAAA,GAAAA,IAAAA,EAAAjc,KAAAic,CAAAA,EAAA1pC,KAAA0pC,GAAAA,KAAAA,CAAa,OAAbA,EAAA1pC,KAAa,GAAqB,MAArB6mC,EAAS4D,cAAmB,EAAS5D,EAAS4D,SAASlB,GAAaG,KAAAA,GAAA,GAAAA,EAAAgB,IAAAhB,EAAAjc,KAAAic,EAAAgB,IAAA,CAAAhB,EAAA1pC,KAAA,GAAA,KAAA,CAAA0pC,EAAAgB,IAAM,CACvLv3C,EAAG,EACHyuB,EAAG,GACJ8nB,KAAAA,GAAAA,EAAAiB,IAAAjB,EAAAgB,IAAAhB,EAAA1pC,KAAA,GAAA,MAAA,KAAA,GAAA0pC,EAAAiB,IAAG,CACFx3C,EAAG,EACHyuB,EAAG,GACJ,KAAA,GAC0CilB,GAPrC2C,EAAWE,EAAAiB,IAAAjB,EAAAkB,IAOSjF,IAAiBkB,EAASgE,sDAAqDnB,CAAAA,EAAA1pC,KAAA,GAAA,KAAA,CAAA,OAAA0pC,EAAA1pC,KAAA,GAAS6mC,EAASgE,sDAAsD,CAC/KppB,KAAAA,EACA8nB,aAAAA,EACA7C,SAAAA,IACAgD,KAAAA,GAAAA,EAAAoB,IAAApB,EAAAjc,KAAAic,EAAA1pC,KAAA0pC,GAAAA,MAAAA,KAAAA,GAAAA,EAAAoB,IAAGrpB,EAAIioB,KAAAA,GAJc,OAIdA,EAAAqB,IAAArB,EAAAoB,IAJHrB,GAAiB,EAAAC,EAAAkB,KAAAlB,EAAAqB,KAAArB,EAAA3B,OAAA,SAKhB,CACLp0B,KAAM21B,EAAmB31B,IAAM81B,EAAkB91B,IAAMy1B,EAAcz1B,KAAO61B,EAAY5nB,EACxF+C,QAAS8kB,EAAkB9kB,OAAS2kB,EAAmB3kB,OAASykB,EAAczkB,QAAU6kB,EAAY5nB,EACpG/N,MAAOy1B,EAAmBz1B,KAAO41B,EAAkB51B,KAAOu1B,EAAcv1B,MAAQ21B,EAAYr2C,EAC5FkvB,OAAQonB,EAAkBpnB,MAAQinB,EAAmBjnB,MAAQ+mB,EAAc/mB,OAASmnB,EAAYr2C,IACjGu2C,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAA1B,OAAAQ,GAAAA,EACF,KAAAD,GAAA9/B,MAAA/K,KAAAA,UAiMD,CAAA,IAAMwsB,GAAO,SAAUtvB,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAA,GAEL,CACLZ,KAAM,OACNY,QAAAA,EACMnH,GAAE,SAACwe,GAAO,OAAA8a,EAAAC,IAAAC,MAAA+d,SAAAA,IAAAC,IAAAA,EAAAC,EAAArH,EAAAoD,EAAA3C,EAAAuD,EAAAhB,EAAAiB,EAAAqD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3G,EAAA4G,EAAA3G,EAAA4G,EAAAxH,EAAAyH,EAAAC,EAAAv4B,EAAAw4B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3f,OAAAA,IAAAhf,MAAA4+B,SAAAC,GAAA,cAAAA,EAAAtf,KAAAsf,EAAA7sC,MAGZ6jC,KAAAA,EAoBR,GApBQA,EAME5xB,EANF4xB,UACAoD,EAKEh1B,EALFg1B,eACA3C,EAIEryB,EAJFqyB,MACAuD,EAGE51B,EAHF41B,iBACAhB,EAEE50B,EAFF40B,SACAiB,EACE71B,EADF61B,SAAQqD,EAUNzH,GAAS9oC,EAASqX,GAAMm5B,EAAAD,EAP1B2B,SAAUzB,OAAa,IAAAD,GAAOA,EAAAE,EAAAH,EAC9B4B,UAAWxB,OAAiB,IAAHD,GAAOA,EACZE,EAA2BL,EAA/Ca,mBAAkBP,EAAAN,EAClBO,iBAAAA,OAAgB,IAAAD,EAAG,UAASA,EAAAE,EAAAR,EAC5BS,0BAAAA,OAA4B,IAAHD,EAAG,OAAMA,EAAAE,EAAAV,EAClCjG,cAAAA,OAAa,IAAA2G,GAAOA,EACjBC,EAAqBkB,EAAA7B,EAAA8B,GAO4B,OAAjDhC,EAAwBhE,EAAeiG,SAAkBjC,EAAsBkC,gBAAe,CAAAN,EAAA7sC,KAAA,EAAA,KAAA,CAAA,OAAA6sC,EAAA9E,OAAA,SAC1F,IAEH5C,KAAAA,EACgE,OADhEA,EAAOvB,GAAQC,GACfkI,EAAkBnI,GAAQiE,KAAsBA,EAAgBgF,EAAA7sC,KAAA,EACjC,MAAlB6mC,EAASc,WAAgB,EAASd,EAASc,MAAMG,EAASlD,UAAS,KAAA,EAM/D,OANjBL,EAAGsI,EAAApf,KACHue,EAAqBR,IAAgCO,IAAoB7G,EAAgB,CAACL,GAAqBgD,IAAqB/C,GAAsB+C,IAC3J2D,GAA6D,SAA9BI,GAClCI,EAAmBnrC,KAAI4H,MAAvBujC,EAAkBtjC,EAASu8B,GAA0B4C,EAAkB3C,EAAe0G,EAA2BrH,KAE7G0H,EAAcpE,CAAAA,GAAgB/oC,OAAA4J,EAAKsjC,IAAkBa,EAAA7sC,KACpC,GAAAooC,GAAen2B,EAAO65B,GAAvCp4B,KAAAA,GAeZ,GAfYA,EAAQm5B,EAAApf,KACRye,EAAY,GACdC,GAAiE,OAA/CjB,EAAuBjE,EAAe/c,WAAgB,EAASghB,EAAqBgB,YAAc,GACpHb,GACFa,EAAUrrC,KAAK6S,EAASyxB,IAEtBoG,IACIa,EAAQ/H,GAAkBR,EAAWS,EAAOC,GAClD2H,EAAUrrC,KAAK6S,EAAS04B,EAAM,IAAK14B,EAAS04B,EAAM,MAEpDD,EAAa,GAAArtC,OAAA4J,EAAOyjC,GAAa,CAAE,CACjCtI,UAAAA,EACAqI,UAAAA,KAIGA,EAAUzU,OAAM,SAAA0N,GAAQ,OAAAA,GAAQ,CAAE,IAAA,CAAA0H,EAAA7sC,KAE/BusC,GAAAA,KAAAA,CAEFC,GAFED,IAA+D,OAAhDF,EAAwBpF,EAAe/c,WAAgB,EAASmiB,EAAsBpkC,QAAU,GAAK,IACpHukC,EAAgBP,EAAWM,IAChBM,CAAAA,EAAA7sC,KAAA,GAAA,KAAA,CAAA,OAAA6sC,EAAA9E,gBAER,CACL1tC,KAAM,CACJ4N,MAAOskC,EACPL,UAAWC,GAEb3E,MAAO,CACL3D,UAAW2I,KAKzB,KAAA,GAIA,GAFYC,EAAgJ,OAA9HH,EAAwBH,EAAclsC,QAAO,SAAAlG,GAAC,OAAIA,EAAEmyC,UAAU,IAAM,CAAE,IAAC93B,MAAK,SAACjgB,EAAGC,UAAMD,EAAE+3C,UAAU,GAAK93C,EAAE83C,UAAU,MAAI,SAAc,EAASI,EAAsBzI,UAGvKgJ,CAAAA,EAAA7sC,cAAA6sC,EAAAnf,GACTge,EAAgBmB,EAAA7sC,KACjB,YADiB6sC,EAAAnf,MAUjB,qBATSmf,EAAAnf,uBAMT,OAHKmW,EAAyM,OAA5L6I,EAAwBP,EAAc3jC,KAAI,SAAAzO,GAAK,MAAA,CAACA,EAAE8pC,UAAW9pC,EAAEmyC,UAAUjsC,QAAO,SAAAyT,GAAQ,OAAIA,EAAW,CAAE,IAACvB,QAAO,SAACi7B,EAAK15B,GAAa,OAAA05B,EAAM15B,IAAU,GAAG,IAAEU,MAAK,SAACjgB,EAAGC,GAAM,OAAAD,EAAE,GAAKC,EAAE,EAAG,IAAC,SAAc,EAASs4C,EAAsB,GACjP7I,IACF4I,EAAiB5I,GAClBgJ,EAAA9E,OAAA,QAAA,IAAA,KAAA,GAI+B,OAAlC0E,EAAiB5E,EAAiBgF,EAAA9E,8BAIpClE,IAAc4I,EAAcI,CAAAA,EAAA7sC,KAAA,GAAA,KAAA,CAAA,OAAA6sC,EAAA9E,OACvB,SAAA,CACLP,MAAO,CACL3D,UAAW4I,oBAEdI,EAAA9E,OAGE,SAAA,IAAE8E,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAA7E,UAAAgD,EAAA,IAjGKje,EAkGf,EAEL,EA2MA,SACesgB,GAAoBC,EAAAC,GAAAC,OAAAA,GAAA/kC,MAAA/K,KAAAA,UAyCnC,CAAA,SAAA8vC,YAAAA,GAAAzgB,EAAAC,IAAAC,MAzCA,SAAAwgB,EAAoCx7B,EAAOrX,OAAOipC,EAAAgD,EAAAiB,EAAAvD,EAAAY,EAAAX,EAAAyB,EAAAyH,EAAAC,EAAAC,EAAAC,EAAAf,EAAAC,EAAAtI,EAAA,OAAAzX,IAAAhf,MAAA8/B,SAAAC,GAAA,cAAAA,EAAAxgB,KAAAwgB,EAAA/tC,MAE9C6jC,KAAAA,EAIiB,OAJjBA,EAGE5xB,EAHF4xB,UACAgD,EAEE50B,EAFF40B,SACAiB,EACE71B,EADF61B,SAAQiG,EAAA/tC,KAES,EAAkB,MAAlB6mC,EAASc,WAAgB,EAASd,EAASc,MAAMG,EAASlD,UAAS,KAAA,EAyBrF,OAzBKL,EAAGwJ,EAAAtgB,KACH0X,EAAOvB,GAAQC,GACfW,EAAYV,GAAaD,GACzBoC,EAAwC,MAA3B/B,GAAYL,GACzB6J,EAAgB,CAAC,OAAQ,OAAOvJ,SAASgB,IAAS,EAAI,EACtDwI,EAAiBpJ,GAAO0B,GAAc,EAAI,EAC1C2H,EAAWlK,GAAS9oC,EAASqX,GAErC47B,EAK0B,iBAAbD,EAAwB,CACjCd,SAAUc,EACVb,UAAW,EACXtI,cAAe,MAChB32B,EACCg/B,CAAAA,SAAU,EACVC,UAAW,EACXtI,cAAe,MACZmJ,GAXHd,EAAQe,EAARf,SACAC,EAASc,EAATd,UACAtI,EAAaoJ,EAAbpJ,cAWED,GAAsC,iBAAlBC,IACtBsI,EAA0B,QAAdvI,GAAuC,EAAjBC,EAAqBA,GACxDsJ,EAAAhG,gBACM9B,EAAa,CAClB9yC,EAAG45C,EAAYY,EACf/rB,EAAGkrB,EAAWY,GACZ,CACFv6C,EAAG25C,EAAWY,EACd9rB,EAAGmrB,EAAYY,IAChB,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAA/F,UAAAyF,EAAA,KACFD,GAAA/kC,MAAAvN,KAAAwC,UASD,CAAA,IAuCMswC,GAAQ,SAAUpzC,GAItB,YAHgB,IAAZA,IACFA,EAAU,CAAA,GAEL,CACLZ,KAAM,QACNY,QAAAA,EACMnH,GAAEA,SAACwe,GAAO8a,OAAAA,EAAAC,IAAAC,MAAAghB,SAAAA,IAAA96C,IAAAA,EAAAyuB,EAAAiiB,EAAAqK,EAAAC,EAAA9C,EAAA+C,EAAA7C,EAAA8C,EAAAC,EAAAxC,EAAAhG,EAAApyB,EAAAq5B,EAAAD,EAAAyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/hB,OAAAA,IAAAhf,MAAAghC,SAAAC,GAAA,cAAAA,EAAA1hB,KAAA0hB,EAAAjvC,MAAA,KAAA,EA0Bb,OAxBC7M,EAGE8e,EAHF9e,EACAyuB,EAEE3P,EAFF2P,EACAiiB,EACE5xB,EADF4xB,UAASqK,EAkBPxK,GAAS9oC,EAASqX,GAAMk8B,EAAAD,EAf1BpB,SAAUzB,WAAa8C,GAAOA,EAAAC,EAAAF,EAC9BnB,UAAWxB,OAAc,IAAA6C,GAAQA,EAAAC,EAAAH,EACjCI,QAAAA,OAAO,IAAAD,EAAG,CACR56C,GAAI,SAAAoyC,GAKF,MAAO,CACL1yC,EAFE0yC,EAFF1yC,EAKAyuB,EAHEikB,EADFjkB,EAMH,GACFysB,EACEvC,EAAqBkB,EAAAkB,EAAAgB,GAEpBpJ,EAAS,CACb3yC,EAAAA,EACAyuB,EAAAA,GACDqtB,EAAAjvC,KAAA,EACsBooC,GAAen2B,EAAO65B,GAAvCp4B,KAAAA,EAuBJu7B,OAvBIv7B,EAAQu7B,EAAAxhB,KACRsf,EAAY7I,GAAYN,GAAQC,IAChCiJ,EAAW/I,GAAgBgJ,GAC7BwB,EAAgBzI,EAAOgH,GACvB0B,EAAiB1I,EAAOiH,GACxB1B,IAEIoD,EAAuB,MAAb3B,EAAmB,SAAW,QACxCxzB,EAAMi1B,EAAgB76B,EAFC,MAAbo5B,EAAmB,MAAQ,QAGrCz3C,EAAMk5C,EAAgB76B,EAAS+6B,GACrCF,EAAgB9K,GAAMnqB,EAAKi1B,EAAel5C,IAExCk2C,IAEIkD,EAAwB,MAAd1B,EAAoB,SAAW,QACzCzzB,EAAMk1B,EAAiB96B,EAFC,MAAdq5B,EAAoB,MAAQ,QAGtC13C,EAAMm5C,EAAiB96B,EAAS+6B,GACtCD,EAAiB/K,GAAMnqB,EAAKk1B,EAAgBn5C,IAExC05C,EAAgBT,EAAQ76C,GAAEqa,EAAAA,EAC3BmE,CAAAA,EAAAA,GAAKnI,CAAAA,EAAAA,EAAAA,EACPgjC,CAAAA,EAAAA,EAAWyB,GACXxB,EAAYyB,KACbS,EAAAlH,OAAAj6B,SAAAA,EAAAA,KAEGihC,GAAa,CAAA,EAAA,CAChB10C,KAAM,CACJlH,EAAG47C,EAAc57C,EAAIA,EACrByuB,EAAGmtB,EAAcntB,EAAIA,MACtB,KAAA,GAAA,IAAA,MAAA,OAAAqtB,EAAAjH,OAAA,GAAAiG,EAAA,IAxDWlhB,EA0Df,EAEL,ECt2BA,SAASoiB,GAAYn3C,GACnB,OAAIo3C,GAAOp3C,IACDA,EAAK4mB,UAAY,IAAIvM,cAKxB,WACT,CACA,SAAS4N,GAAUjoB,GACjB,IAAIq3C,EACJ,OAAgB,MAARr3C,GAAsE,OAA7Cq3C,EAAsBr3C,EAAKgB,oBAArC,EAAuEq2C,EAAoBlvB,cAAgBrpB,MACpI,CACA,SAASkzC,GAAmBhyC,GAC1B,IAAI6tC,EACJ,OAA0F,OAAlFA,GAAQuJ,GAAOp3C,GAAQA,EAAKgB,cAAgBhB,EAAKa,WAAa/B,OAAO+B,eAAoB,EAASgtC,EAAKyJ,eACjH,CACA,SAASF,GAAO34C,GACd,OAAOA,aAAiB84C,MAAQ94C,aAAiBwpB,GAAUxpB,GAAO84C,IACpE,CACA,SAAS5F,GAAUlzC,GACjB,OAAOA,aAAiB+4C,SAAW/4C,aAAiBwpB,GAAUxpB,GAAO+4C,OACvE,CACA,SAASC,GAAch5C,GACrB,OAAOA,aAAiBi5C,aAAej5C,aAAiBwpB,GAAUxpB,GAAOi5C,WAC3E,CACA,SAASC,GAAal5C,GAEpB,MAA0B,oBAAfm5C,aAGJn5C,aAAiBm5C,YAAcn5C,aAAiBwpB,GAAUxpB,GAAOm5C,WAC1E,CACA,SAASC,GAAkBp3C,GACzB,IAAAq3C,EAKIhkC,GAAiBrT,GAJnBib,EAAQo8B,EAARp8B,SACAq8B,EAASD,EAATC,UACAC,EAASF,EAATE,UACA1gC,EAAOwgC,EAAPxgC,QAEF,MAAO,kCAAkC4H,KAAKxD,EAAWs8B,EAAYD,KAAe,CAAC,SAAU,YAAY5L,SAAS70B,EACtH,CACA,SAAS2gC,GAAex3C,GACtB,MAAO,CAAC,QAAS,KAAM,MAAM0rC,SAASgL,GAAY12C,GACpD,CACA,SAASy3C,GAAkBz3C,GACzB,IAAM03C,EAASC,KACT3qC,EAAMqG,GAAiBrT,GAG7B,MAAyB,SAAlBgN,EAAI4qC,WAA4C,SAApB5qC,EAAI6qC,eAA2B7qC,EAAI8qC,eAAsC,WAAtB9qC,EAAI8qC,gBAAwCJ,KAAW1qC,EAAI+qC,gBAAwC,SAAvB/qC,EAAI+qC,iBAAuCL,KAAW1qC,EAAIxF,QAAwB,SAAfwF,EAAIxF,QAA8B,CAAC,YAAa,cAAe,UAAU2uB,MAAK,SAAAn4B,UAAUgP,EAAIgrC,YAAc,IAAItM,SAAS1tC,EAAM,KAAK,CAAC,QAAS,SAAU,SAAU,WAAWm4B,MAAK,SAAAn4B,GAAS,OAACgP,EAAIirC,SAAW,IAAIvM,SAAS1tC,KAC7b,CAYA,SAAS25C,KACP,QAAmB,oBAARO,MAAwBA,IAAIC,WAChCD,IAAIC,SAAS,0BAA2B,OACjD,CACA,SAASC,GAAsB74C,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAamsC,SAASgL,GAAYn3C,GAC5D,CACA,SAAS8T,GAAiBrT,GACxB,OAAOwnB,GAAUxnB,GAASqT,iBAAiBrT,EAC7C,CACA,SAASq4C,GAAcr4C,GACrB,OAAIkxC,GAAUlxC,GACL,CACLs4C,WAAYt4C,EAAQs4C,WACpBC,UAAWv4C,EAAQu4C,WAGhB,CACLD,WAAYt4C,EAAQw4C,YACpBD,UAAWv4C,EAAQy4C,YAEvB,CACA,SAASC,GAAcn5C,GACrB,GAA0B,SAAtBm3C,GAAYn3C,GACd,OAAOA,EAET,IAAM9B,EAEN8B,EAAKo5C,cAELp5C,EAAK0B,YAELi2C,GAAa33C,IAASA,EAAKiB,MAE3B+wC,GAAmBhyC,GACnB,OAAO23C,GAAaz5C,GAAUA,EAAO+C,KAAO/C,CAC9C,CACA,SAASm7C,GAA2Br5C,GAClC,IAAM0B,EAAay3C,GAAcn5C,GACjC,OAAI64C,GAAsBn3C,GACjB1B,EAAKgB,cAAgBhB,EAAKgB,cAAcwa,KAAOxb,EAAKwb,KAEzDi8B,GAAc/1C,IAAem2C,GAAkBn2C,GAC1CA,EAEF23C,GAA2B33C,EACpC,CACA,SAAS43C,GAAqBt5C,EAAMuO,EAAMgrC,GACxC,IAAIC,OACS,IAATjrC,IACFA,EAAO,SAEe,IAApBgrC,IACFA,GAAkB,GAEpB,IAAME,EAAqBJ,GAA2Br5C,GAChD05C,EAASD,KAAuE,OAA9CD,EAAuBx5C,EAAKgB,oBAAyB,EAASw4C,EAAqBh+B,MACrHm+B,EAAM1xB,GAAUwxB,GACtB,OAAIC,EACKnrC,EAAKzH,OAAO6yC,EAAKA,EAAIC,gBAAkB,GAAI/B,GAAkB4B,GAAsBA,EAAqB,GAAIE,EAAIE,cAAgBN,EAAkBD,GAAqBK,EAAIE,cAAgB,IAE7LtrC,EAAKzH,OAAO2yC,EAAoBH,GAAqBG,EAAoB,GAAIF,GACtF,CCvHA,SAASO,GAAiBr5C,GACxB,IAAMgN,EAAMqG,GAAiBrT,GAGzBwa,EAAQuU,WAAW/hB,EAAIwN,QAAU,EACjCE,EAASqU,WAAW/hB,EAAI0N,SAAW,EACjC4+B,EAAYtC,GAAch3C,GAC1B+W,EAAcuiC,EAAYt5C,EAAQ+W,YAAcyD,EAChDxD,EAAesiC,EAAYt5C,EAAQgX,aAAe0D,EAClD6+B,EAAiB3O,GAAMpwB,KAAWzD,GAAe6zB,GAAMlwB,KAAY1D,EAKzE,OAJIuiC,IACF/+B,EAAQzD,EACR2D,EAAS1D,GAEJ,CACLwD,MAAAA,EACAE,OAAAA,EACA8+B,EAAGD,EAEP,CAEA,SAASE,GAAcz5C,GACrB,OAAQkxC,GAAUlxC,GAAoCA,EAAzBA,EAAQsxC,cACvC,CAEA,SAASU,GAAShyC,GAChB,IAAM05C,EAAaD,GAAcz5C,GACjC,IAAKg3C,GAAc0C,GACjB,OAAO7O,GAAa,GAEtB,IAAM7hB,EAAO0wB,EAAWzwB,wBACxB0wB,EAIIN,GAAiBK,GAHnBl/B,EAAKm/B,EAALn/B,MACAE,EAAMi/B,EAANj/B,OACA8+B,EAACG,EAADH,EAEE9+C,GAAK8+C,EAAI5O,GAAM5hB,EAAKxO,OAASwO,EAAKxO,OAASA,EAC3C2O,GAAKqwB,EAAI5O,GAAM5hB,EAAKtO,QAAUsO,EAAKtO,QAAUA,EAUjD,OANKhgB,GAAMukB,OAAOJ,SAASnkB,KACzBA,EAAI,GAEDyuB,GAAMlK,OAAOJ,SAASsK,KACzBA,EAAI,GAEC,CACLzuB,EAAAA,EACAyuB,EAAAA,EAEJ,CAEA,IAAMywB,GAAyB/O,GAAa,GAC5C,SAASgP,GAAiB75C,GACxB,IAAMk5C,EAAM1xB,GAAUxnB,GACtB,OAAK23C,MAAeuB,EAAIC,eAGjB,CACLz+C,EAAGw+C,EAAIC,eAAentB,WACtB7C,EAAG+vB,EAAIC,eAAertB,WAJf8tB,EAMX,CAWA,SAAS3wB,GAAsBjpB,EAAS85C,EAAcC,EAAiBjJ,QAChD,IAAjBgJ,IACFA,GAAe,QAEO,IAApBC,IACFA,GAAkB,GAEpB,IAAMC,EAAah6C,EAAQipB,wBACrBywB,EAAaD,GAAcz5C,GAC7B0yB,EAAQmY,GAAa,GACrBiP,IACEhJ,EACEI,GAAUJ,KACZpe,EAAQsf,GAASlB,IAGnBpe,EAAQsf,GAAShyC,IAGrB,IAAMi6C,EA7BR,SAAgCj6C,EAASk6C,EAASC,GAIhD,YAHgB,IAAZD,IACFA,GAAU,MAEPC,GAAwBD,GAAWC,IAAyB3yB,GAAUxnB,KAGpEk6C,CACT,CAqBwBE,CAAuBV,EAAYK,EAAiBjJ,GAAgB+I,GAAiBH,GAAc7O,GAAa,GAClInwC,GAAKs/C,EAAW5+B,KAAO6+B,EAAcv/C,GAAKg4B,EAAMh4B,EAChDyuB,GAAK6wB,EAAW9+B,IAAM++B,EAAc9wB,GAAKuJ,EAAMvJ,EAC/C3O,EAAQw/B,EAAWx/B,MAAQkY,EAAMh4B,EACjCggB,EAASs/B,EAAWt/B,OAASgY,EAAMvJ,EACvC,GAAIuwB,EAIF,IAHA,IAAMR,EAAM1xB,GAAUkyB,GAChBW,EAAYvJ,GAAgBI,GAAUJ,GAAgBtpB,GAAUspB,GAAgBA,EAClFwJ,EAAgBpB,EAAIE,aACjBkB,GAAiBxJ,GAAgBuJ,IAAcnB,GAAK,CACzD,IAAMqB,EAAcvI,GAASsI,GACvBE,EAAaF,EAAcrxB,wBAC3Bjc,EAAMqG,GAAiBinC,GACvBl/B,EAAOo/B,EAAWp/B,MAAQk/B,EAAcG,WAAa1rB,WAAW/hB,EAAI0tC,cAAgBH,EAAY7/C,EAChGwgB,EAAMs/B,EAAWt/B,KAAOo/B,EAAcK,UAAY5rB,WAAW/hB,EAAI4tC,aAAeL,EAAYpxB,EAClGzuB,GAAK6/C,EAAY7/C,EACjByuB,GAAKoxB,EAAYpxB,EACjB3O,GAAS+/B,EAAY7/C,EACrBggB,GAAU6/B,EAAYpxB,EACtBzuB,GAAK0gB,EACL+N,GAAKjO,EACLo/B,EAAgB9yB,GAAU8yB,GAAelB,YAC1C,CAEH,OAAOlM,GAAiB,CACtB1yB,MAAAA,EACAE,OAAAA,EACAhgB,EAAAA,EACAyuB,EAAAA,GAEJ,CA0CA,SAAS0xB,GAAoB76C,GAG3B,OAAOipB,GAAsBsoB,GAAmBvxC,IAAUob,KAAOi9B,GAAcr4C,GAASs4C,UAC1F,CAiEA,SAASwC,GAAkC96C,EAAS+6C,EAAkB9M,GACpE,IAAIjlB,EACJ,GAAyB,aAArB+xB,EACF/xB,EA7CJ,SAAyBhpB,EAASiuC,GAChC,IAAMiL,EAAM1xB,GAAUxnB,GAChBg7C,EAAOzJ,GAAmBvxC,GAC1Bm5C,EAAiBD,EAAIC,eACvB3+B,EAAQwgC,EAAKC,YACbvgC,EAASsgC,EAAKE,aACdxgD,EAAI,EACJyuB,EAAI,EACR,GAAIgwB,EAAgB,CAClB3+B,EAAQ2+B,EAAe3+B,MACvBE,EAASy+B,EAAez+B,OACxB,IAAMygC,EAAsBxD,OACvBwD,GAAuBA,GAAoC,UAAblN,KACjDvzC,EAAIy+C,EAAentB,WACnB7C,EAAIgwB,EAAertB,UAEtB,CACD,MAAO,CACLtR,MAAAA,EACAE,OAAAA,EACAhgB,EAAAA,EACAyuB,EAAAA,EAEJ,CAsBWiyB,CAAgBp7C,EAASiuC,WACF,aAArB8M,EACT/xB,EAlEJ,SAAyBhpB,GACvB,IAAMg7C,EAAOzJ,GAAmBvxC,GAC1Bq7C,EAAShD,GAAcr4C,GACvB+a,EAAO/a,EAAQO,cAAcwa,KAC7BP,EAAQ5d,GAAIo+C,EAAKM,YAAaN,EAAKC,YAAalgC,EAAKugC,YAAavgC,EAAKkgC,aACvEvgC,EAAS9d,GAAIo+C,EAAKO,aAAcP,EAAKE,aAAcngC,EAAKwgC,aAAcxgC,EAAKmgC,cAC7ExgD,GAAK2gD,EAAO/C,WAAauC,GAAoB76C,GAC3CmpB,GAAKkyB,EAAO9C,UAIlB,MAHyC,QAArCllC,GAAiB0H,GAAMpQ,YACzBjQ,GAAKkC,GAAIo+C,EAAKC,YAAalgC,EAAKkgC,aAAezgC,GAE1C,CACLA,MAAAA,EACAE,OAAAA,EACAhgB,EAAAA,EACAyuB,EAAAA,EAEJ,CAiDWqyB,CAAgBjK,GAAmBvxC,SACrC,GAAIkxC,GAAU6J,GACnB/xB,EAvBJ,SAAoChpB,EAASiuC,GAC3C,IAAM+L,EAAa/wB,GAAsBjpB,GAAS,EAAmB,UAAbiuC,GAClD/yB,EAAM8+B,EAAW9+B,IAAMlb,EAAQ26C,UAC/Bv/B,EAAO4+B,EAAW5+B,KAAOpb,EAAQy6C,WACjC/nB,EAAQskB,GAAch3C,GAAWgyC,GAAShyC,GAAW6qC,GAAa,GAKxE,MAAO,CACLrwB,MALYxa,EAAQi7C,YAAcvoB,EAAMh4B,EAMxCggB,OALa1a,EAAQk7C,aAAexoB,EAAMvJ,EAM1CzuB,EALQ0gB,EAAOsX,EAAMh4B,EAMrByuB,EALQjO,EAAMwX,EAAMvJ,EAOxB,CAQWsyB,CAA2BV,EAAkB9M,OAC/C,CACL,IAAMgM,EAAgBJ,GAAiB75C,GACvCgpB,EAAI3T,EAAAA,EACC0lC,CAAAA,EAAAA,OACHrgD,EAAGqgD,EAAiBrgD,EAAIu/C,EAAcv/C,EACtCyuB,EAAG4xB,EAAiB5xB,EAAI8wB,EAAc9wB,GAEzC,CACD,OAAO+jB,GAAiBlkB,EAC1B,CACA,SAAS0yB,GAAyB17C,EAAS27C,GACzC,IAAM16C,EAAay3C,GAAc14C,GACjC,QAAIiB,IAAe06C,IAAazK,GAAUjwC,IAAem3C,GAAsBn3C,MAG9B,UAA1CoS,GAAiBpS,GAAY+Z,UAAwB0gC,GAAyBz6C,EAAY06C,GACnG,CAoEA,SAASC,GAA8B57C,EAAS8wC,EAAc7C,GAC5D,IAAM4N,EAA0B7E,GAAclG,GACxC+F,EAAkBtF,GAAmBT,GACrCoJ,EAAuB,UAAbjM,EACVjlB,EAAOC,GAAsBjpB,GAAS,EAAMk6C,EAASpJ,GACvDuK,EAAS,CACX/C,WAAY,EACZC,UAAW,GAEPuD,EAAUjR,GAAa,GAC7B,GAAIgR,IAA4BA,IAA4B3B,EAI1D,IAHkC,SAA9BxD,GAAY5F,IAA4BsG,GAAkBP,MAC5DwE,EAAShD,GAAcvH,IAErB+K,EAAyB,CAC3B,IAAME,EAAa9yB,GAAsB6nB,GAAc,EAAMoJ,EAASpJ,GACtEgL,EAAQphD,EAAIqhD,EAAWrhD,EAAIo2C,EAAa2J,WACxCqB,EAAQ3yB,EAAI4yB,EAAW5yB,EAAI2nB,EAAa6J,SACzC,MAAU9D,IACTiF,EAAQphD,EAAImgD,GAAoBhE,IAGpC,MAAO,CACLn8C,EAAGsuB,EAAK5N,KAAOigC,EAAO/C,WAAawD,EAAQphD,EAC3CyuB,EAAGH,EAAK9N,IAAMmgC,EAAO9C,UAAYuD,EAAQ3yB,EACzC3O,MAAOwO,EAAKxO,MACZE,OAAQsO,EAAKtO,OAEjB,CAEA,SAASshC,GAAoBh8C,EAASi8C,GACpC,OAAKjF,GAAch3C,IAAmD,UAAvCqT,GAAiBrT,GAASgb,SAGrDihC,EACKA,EAASj8C,GAEXA,EAAQ8wC,aALN,IAMX,CAIA,SAASiB,GAAgB/xC,EAASi8C,GAChC,IAAM59C,EAASmpB,GAAUxnB,GACzB,IAAKg3C,GAAch3C,GACjB,OAAO3B,EAGT,IADA,IAAIyyC,EAAekL,GAAoBh8C,EAASi8C,GACzCnL,GAAgB0G,GAAe1G,IAA6D,WAA5Cz9B,GAAiBy9B,GAAc91B,UACpF81B,EAAekL,GAAoBlL,EAAcmL,GAEnD,OAAInL,IAA+C,SAA9B4F,GAAY5F,IAA0D,SAA9B4F,GAAY5F,IAAwE,WAA5Cz9B,GAAiBy9B,GAAc91B,WAA0By8B,GAAkB3G,IACvKzyC,EAEFyyC,GD9UT,SAA4B9wC,GAE1B,IADA,IAAIk8C,EAAcxD,GAAc14C,GACzBg3C,GAAckF,KAAiB9D,GAAsB8D,IAAc,CACxE,GAAIzE,GAAkByE,GACpB,OAAOA,EAEPA,EAAcxD,GAAcwD,EAE/B,CACD,OAAW,IACb,CCoUyBC,CAAmBn8C,IAAY3B,CACxD,CAwBA,IAAM+vC,GAAW,CACfgE,sDAzRF,SAA+DhF,GAC7D,IACEpkB,EAGEokB,EAHFpkB,KACA8nB,EAEE1D,EAFF0D,aACA7C,EACEb,EADFa,SAEI4N,EAA0B7E,GAAclG,GACxC+F,EAAkBtF,GAAmBT,GAC3C,GAAIA,IAAiB+F,EACnB,OAAO7tB,EAET,IAAIqyB,EAAS,CACX/C,WAAY,EACZC,UAAW,GAET7lB,EAAQmY,GAAa,GACnBiR,EAAUjR,GAAa,GAC7B,IAAIgR,IAA4BA,GAAwC,UAAb5N,MACvB,SAA9ByI,GAAY5F,IAA4BsG,GAAkBP,MAC5DwE,EAAShD,GAAcvH,IAErBkG,GAAclG,IAAe,CAC/B,IAAMiL,EAAa9yB,GAAsB6nB,GACzCpe,EAAQsf,GAASlB,GACjBgL,EAAQphD,EAAIqhD,EAAWrhD,EAAIo2C,EAAa2J,WACxCqB,EAAQ3yB,EAAI4yB,EAAW5yB,EAAI2nB,EAAa6J,SACzC,CAEH,MAAO,CACLngC,MAAOwO,EAAKxO,MAAQkY,EAAMh4B,EAC1BggB,OAAQsO,EAAKtO,OAASgY,EAAMvJ,EAC5BzuB,EAAGsuB,EAAKtuB,EAAIg4B,EAAMh4B,EAAI2gD,EAAO/C,WAAa5lB,EAAMh4B,EAAIohD,EAAQphD,EAC5DyuB,EAAGH,EAAKG,EAAIuJ,EAAMvJ,EAAIkyB,EAAO9C,UAAY7lB,EAAMvJ,EAAI2yB,EAAQ3yB,EAE/D,EAwPEooB,mBAAAA,GACAM,gBAhHF,SAAyBzE,GACvB,IACEptC,EAIEotC,EAJFptC,QACAmwC,EAGE/C,EAHF+C,SACAE,EAEEjD,EAFFiD,aACApC,EACEb,EADFa,SAEImO,EAAwC,sBAAbjM,EAxCnC,SAAqCnwC,EAASq8C,GAC5C,IAAMC,EAAeD,EAAMz1C,IAAI5G,GAC/B,GAAIs8C,EACF,OAAOA,EAQT,IANA,IAAI7+C,EAASo7C,GAAqB74C,EAAS,IAAI,GAAOwH,QAAO,SAAA+0C,UAAMrL,GAAUqL,IAA2B,SAApB7F,GAAY6F,EAAe,IAC3GC,EAAsC,KACpCC,EAAwD,UAAvCppC,GAAiBrT,GAASgb,SAC7CkhC,EAAcO,EAAiB/D,GAAc14C,GAAWA,EAGrDkxC,GAAUgL,KAAiB9D,GAAsB8D,IAAc,CACpE,IAAMQ,EAAgBrpC,GAAiB6oC,GACjCS,EAA0BlF,GAAkByE,GAC7CS,GAAsD,UAA3BD,EAAc1hC,WAC5CwhC,EAAsC,OAEVC,GAAkBE,IAA4BH,GAAuCG,GAAsD,WAA3BD,EAAc1hC,UAA2BwhC,GAAuC,CAAC,WAAY,SAAS9Q,SAAS8Q,EAAoCxhC,WAAao8B,GAAkB8E,KAAiBS,GAA2BjB,GAAyB17C,EAASk8C,IAG5Yz+C,EAASA,EAAO+J,QAAO,SAAAo1C,GAAQ,OAAIA,IAAaV,CAAW,IAG3DM,EAAsCE,EAExCR,EAAcxD,GAAcwD,EAC7B,CAED,OADAG,EAAM54C,IAAIzD,EAASvC,GACZA,CACT,CAWsEo/C,CAA4B78C,EAASyC,KAAKq6C,IAAM,GAAGz2C,OAAO8pC,GACxH4M,KAAiB12C,OAAA4J,EAAOmsC,GAAwB,CAAE/L,IAClD2M,EAAwBD,EAAkB,GAC1CE,EAAeF,EAAkBrjC,QAAO,SAACwjC,EAASnC,GACtD,IAAM/xB,EAAO8xB,GAAkC96C,EAAS+6C,EAAkB9M,GAK1E,OAJAiP,EAAQhiC,IAAMte,GAAIosB,EAAK9N,IAAKgiC,EAAQhiC,KACpCgiC,EAAQtzB,MAAQ/I,GAAImI,EAAKY,MAAOszB,EAAQtzB,OACxCszB,EAAQhxB,OAASrL,GAAImI,EAAKkD,OAAQgxB,EAAQhxB,QAC1CgxB,EAAQ9hC,KAAOxe,GAAIosB,EAAK5N,KAAM8hC,EAAQ9hC,MAC/B8hC,CACR,GAAEpC,GAAkC96C,EAASg9C,EAAuB/O,IACrE,MAAO,CACLzzB,MAAOyiC,EAAarzB,MAAQqzB,EAAa7hC,KACzCV,OAAQuiC,EAAa/wB,OAAS+wB,EAAa/hC,IAC3CxgB,EAAGuiD,EAAa7hC,KAChB+N,EAAG8zB,EAAa/hC,IAEpB,EAyFE62B,gBAAAA,GACA5C,gBA3BmB,WAAA,IAAAgO,EAAA7oB,EAAAC,IAAAC,MAAG,SAAA4oB,EAAgBhQ,GAAI,IAAAlB,EAAAC,EAAA8B,EAAAoP,EAAAC,EAAA/oB,OAAAA,IAAAhf,eAAAgoC,iBAAAA,EAAAzoB,KAAAyoB,EAAAh2C,MAAA,KAAA,EASU,OAPlD2kC,EAGEkB,EAHFlB,UACAC,EAEEiB,EAFFjB,SACA8B,EACEb,EADFa,SAEIoP,EAAoB56C,KAAKsvC,iBAAmBA,GAC5CuL,EAAkB76C,KAAK+6C,cAAaD,EAAAtoB,GAE7B2mB,GAA6B2B,EAAAxoB,GAACmX,EAASqR,EAAAh2C,KAAA,EAAQ81C,EAAkBlR,GAAS,KAAA,EAG/E,OAH+EoR,EAAAroB,GAAAqoB,EAAAvoB,KAAAuoB,EAAApM,GAAElD,EAAQsP,EAAAnM,IAAAmM,EAAAA,EAAAtoB,IAAAsoB,EAAAxoB,GAAAwoB,EAAAroB,GAAAqoB,EAAApM,IAAAoM,EAAAlM,GAAAh8B,EAAAkoC,EAAA/L,GAAA,CAE7F92C,EAAG,EACHyuB,EAAG,GAACo0B,EAAAh2C,KAAA,GACM+1C,EAAgBnR,GAASoR,KAAAA,GAAA,OAAAA,EAAA9L,GAAA8L,EAAAvoB,KAAAuoB,EAAA7L,MAAA6L,EAAAlM,IAAAkM,EAAA/L,GAAA+L,EAAA9L,IAAA8L,EAAAjO,iBAJrCpD,UAASqR,EAAAnM,GACTjF,SAAQoR,EAAA7L,8BAAA6L,EAAAhO,OAAA6N,GAAAA,EAMX36C,KAAA,KAAA,OAAA,SAhBoBg7C,GAAA,OAAAN,EAAAntC,WAAA/K,UAAA,CAAA,CAAA,GA4BnBgS,eA1PF,SAAwBjX,GACtB,OAAOqN,MAAMC,KAAKtN,EAAQiX,iBAC5B,EAyPEumC,cA1FF,SAAuBx9C,GACrB,OAAOq5C,GAAiBr5C,EAC1B,EAyFEgyC,SAAAA,GACAd,UAAAA,GACAhC,MAdF,SAAelvC,GACb,MAA+C,QAAxCqT,GAAiBrT,GAAS2K,SACnC,GAiGA,SAAS+yC,GAAWxR,EAAWC,EAAUjiC,EAAQ/H,QAC/B,IAAZA,IACFA,EAAU,CAAA,GAEZ,IAAAw7C,EAMIx7C,EAAOy7C,EAAAD,EALTE,eAAAA,OAAiB,IAAHD,GAAOA,EAAAE,EAAAH,EACrBI,eAAAA,OAAiB,IAAHD,GAAOA,EAAAE,EAAAL,EACrBM,cAAAA,OAAgB,IAAHD,EAA6B,mBAAnBE,eAA6BF,EAAAG,EAAAR,EACpDS,YAAAA,OAAc,IAAHD,EAAmC,mBAAzBE,qBAAmCF,EAAAG,EAAAX,EACxDY,eAAAA,OAAiB,IAAHD,GAAQA,EAElBE,EAAc/E,GAAcvN,GAC5BuS,EAAYZ,GAAkBE,EAAc,GAAA13C,OAAA4J,EAAQuuC,EAAc3F,GAAqB2F,GAAe,IAAEvuC,EAAM4oC,GAAqB1M,KAAa,GACtJsS,EAAUnjD,SAAQ,SAAAshD,GAChBiB,GAAkBjB,EAASx6C,iBAAiB,SAAU8H,EAAQ,CAC5Dw0C,SAAS,IAEXX,GAAkBnB,EAASx6C,iBAAiB,SAAU8H,EAC1D,IACE,IAsBIy0C,EAtBEC,EAAYJ,GAAeJ,EApGnC,SAAqBp+C,EAAS6+C,GAC5B,IACIC,EADAC,EAAK,KAEH1+C,EAAOkxC,GAAmBvxC,GAChC,SAASg/C,IACPC,aAAaH,GACbC,GAAMA,EAAGG,aACTH,EAAK,IACN,CA8DD,OA7DA,SAAS50B,EAAQg1B,EAAMC,QACR,IAATD,IACFA,GAAO,QAES,IAAdC,IACFA,EAAY,GAEdJ,IACA,IAAAK,EAKIr/C,EAAQipB,wBAJV7N,EAAIikC,EAAJjkC,KACAF,EAAGmkC,EAAHnkC,IACAV,EAAK6kC,EAAL7kC,MACAE,EAAM2kC,EAAN3kC,OAKF,GAHKykC,GACHN,IAEGrkC,GAAUE,EAAf,CAGA,IAKMvY,EAAU,CACdm9C,YANexgC,GAAM5D,GAIQ,OAHZ4D,GAAMze,EAAK46C,aAAe7/B,EAAOZ,IAGC,OAFjCsE,GAAMze,EAAK66C,cAAgBhgC,EAAMR,IAEuB,OAD1DoE,GAAM1D,GACyE,KAG/FgkC,UAAWxiD,GAAI,EAAGikB,GAAI,EAAGu+B,KAAe,GAEtCG,GAAgB,EAoBpB,IACER,EAAK,IAAIV,qBAAqBmB,EAAanqC,EAAAA,EAAA,CAAA,EACtClT,GACX,CAAA,EAAA,CACQ9B,KAAMA,EAAKE,gBAEd,CAAC,MAAO4J,GACP40C,EAAK,IAAIV,qBAAqBmB,EAAer9C,EAC9C,CACD48C,EAAGU,QAAQz/C,EAvCV,CAWD,SAASw/C,EAAcE,GACrB,IAAMC,EAAQD,EAAQ,GAAGE,kBACzB,GAAID,IAAUP,EAAW,CACvB,IAAKG,EACH,OAAOp1B,IAEJw1B,EAKHx1B,GAAQ,EAAOw1B,GAJfb,EAAYe,YAAW,WACrB11B,GAAQ,EAAO,KAChB,GAAE,IAIN,CACDo1B,GAAgB,CACjB,CAcF,CACDp1B,EAAQ,GACD60B,CACT,CA6BiDc,CAAYtB,EAAat0C,GAAU,KAC9E61C,GAAkB,EAClBC,EAAiB,KACjB/B,IACF+B,EAAiB,IAAI9B,gBAAe,SAAA9Q,GAClC,IAAK6S,EAAL1sB,EAAmB6Z,EAAI,GAAR,GACX6S,GAAcA,EAAW3gD,SAAWk/C,GAAewB,IAGrDA,EAAeE,UAAU/T,GACzBgU,qBAAqBJ,GACrBA,EAAiBphD,uBAAsB,WACrCqhD,GAAkBA,EAAeP,QAAQtT,EACnD,KAEMjiC,GACN,IACQs0C,IAAgBD,GAClByB,EAAeP,QAAQjB,GAEzBwB,EAAeP,QAAQtT,IAGzB,IAAIiU,EAAc7B,EAAiBt1B,GAAsBijB,GAAa,KAatE,OAZIqS,GAGJ,SAAS8B,IACP,IAAMC,EAAcr3B,GAAsBijB,IACtCkU,GAAgBE,EAAY5lD,IAAM0lD,EAAY1lD,GAAK4lD,EAAYn3B,IAAMi3B,EAAYj3B,GAAKm3B,EAAY9lC,QAAU4lC,EAAY5lC,OAAS8lC,EAAY5lC,SAAW0lC,EAAY1lC,QACtKxQ,IAEFk2C,EAAcE,EACd3B,EAAUhgD,sBAAsB0hD,EACjC,CATCA,GAUFn2C,IACO,WACLu0C,EAAUnjD,SAAQ,SAAAshD,GAChBiB,GAAkBjB,EAASv6C,oBAAoB,SAAU6H,GACzD6zC,GAAkBnB,EAASv6C,oBAAoB,SAAU6H,EAC/D,IACI00C,GAAaA,IACboB,GAAkBA,EAAed,aACjCc,EAAiB,KACbzB,GACF4B,qBAAqBxB,EAE3B,CACA,CAOA,IAAM/Q,GAAkB,SAAC1B,EAAWC,EAAUhqC,GAI5C,IAAMk6C,EAAQ,IAAI12C,IACZ46C,EAAalrC,EACjB+4B,CAAAA,SAAAA,IACGjsC,GAECq+C,EAAiBnrC,EAAAA,EAAA,CAAA,EAClBkrC,EAAcnS,UAAQ,CAAA,EAAA,CACzB0O,GAAIT,IAEN,OAAOoE,GAAkBvU,EAAWC,EAAQ92B,EAAAA,EACvCkrC,CAAAA,EAAAA,GACHnS,CAAAA,EAAAA,CAAAA,SAAUoS,IAEd,ECrlBe,SAASh5C,GAAMk5C,GAC1B,IAAAC,EAAWD,EAAXC,YACAC,EAAUF,EAAVE,WACA7a,EAAK2a,EAAL3a,MACA8a,EAAQH,EAARG,SACA7iD,EAAK0iD,EAAL1iD,MACA8iD,EAAMJ,EAANI,OACA5a,EAAOwa,EAAPxa,QACA6a,EAAmBL,EAAnBK,oBACAC,EAAUN,EAAVM,WACAC,EAA2BP,EAA3BO,4BACAC,EAAkBR,EAAlBQ,mBACArzB,EAAK6yB,EAAL7yB,MAEA,GAAIkY,GAAS4a,EAAa,OAAO5a,EACjC,IAAKA,EAAO,MAAO,GAEfA,GAASA,EAAMlpC,OAAS,GAAyB,WAApBjB,EAAOmqC,EAAM,MAC1CA,EAAQkb,EAA4Blb,IAGxC,IAAIob,EAAgBpb,EAAMv+B,QAAO,SAACkoB,GAC9B,IAAI0xB,EAAgBJ,EAAWtxB,EAAK7B,GAAQ+yB,EAAYlxB,GAOxD,OANI0xB,GAAiBP,GAAjBO,MAA6BpjD,GAAAA,EAAOnB,SACpCukD,GAAiBpjD,EAAMm4B,MAAK,SAACz7B,GACzB,QAAOqmD,GAAsBrmD,EAAEomD,KAAYpxB,EAAKoxB,EAChE,KAGeM,CACf,IAMI,OAJIlb,IACAib,EAAgBD,EAAmBC,IAGhCA,CACX,CAAA,SCrC8BE,GAAQC,GAAAC,OAAAA,GAAAvxC,WAAA/K,UAAA,eAwBtC,sBAxBe,SAAAu8C,EAAAC,GAAA/2C,IAAAA,EAAAi2C,EAAAM,EAAAL,EAAAc,EAAAntB,OAAAA,IAAAhf,MAAA,SAAAosC,GAAAA,cAAAA,EAAA7sB,KAAA6sB,EAAAp6C,MAAA,KAAA,EAAwF,OAA9DmD,EAAQ+2C,EAAR/2C,SAAUi2C,EAAWc,EAAXd,YAAaM,EAA2BQ,EAA3BR,4BAA6BL,EAAUa,EAAVb,WAAUe,EAAAp6C,KAAA,EACnFo5C,EAAYC,GAAiB,OAAC,SAAC1hC,GAC3CtM,QAAQugB,KAAK,uCAAwCjU,GACrDxU,EAAS,QAAS,CAAE5F,KAAM,cAAe88C,QAAS1iC,GAC1D,IAAM,KAAA,EAHK,KAAHwiC,EAAGC,EAAA3sB,OAKK0sB,EAAIG,UAAS,CAAAF,EAAAp6C,KAAA,EAAA,KAAA,CASpB,OARGm6C,GACIA,GAAOA,EAAI7kD,OAAS,GAAuB,WAAlBjB,EAAO8lD,EAAI,MACpCA,EAAMT,EAA4BS,IAGtCh3C,EAAS,SAAU,CAAEq7B,MAAO2b,KAE5BA,EAAM,GACTC,EAAArS,OAAA,SAEM,CACHwS,cAAeJ,EACfK,SAAS,EACTC,SAAS,EACTC,UAAU,IACbN,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAApS,OAAAiS,GAAAA,EAET,KAAAD,GAAAvxC,MAAA/K,KAAAA,wxBCxBApE,GAaKvB,EAAAmxB,EAAA3vB,GAPDzB,GAMuDoxB,EAAA9P,g0BCZ3D9f,GAaKvB,EAAAmxB,EAAA3vB,GALDzB,GAICoxB,EAAA9P,46BCZL9f,GAUKvB,EAAAmxB,EAAA3vB,GATDzB,GAQ4BoxB,EAAAyxB,uqXC6vBsBlmD,EAAK,GAAA,kMAlBGA,EAAI,WAASA,EAAC,qTAxChBA,EAAC,4LAtB5C41B,EAAA51B,MAAQ,iBAAcmmD,GAAAnmD,qCACtB,OAAAA,MAAQ8R,KAAI,EACP9R,EAAa,IAACa,OAAS,EAAC,EA0BvBb,EAAc,OAAA,8BAKpB,IAAAi2B,EAAAj2B,MAAQ,gBAAaomD,GAAApmD,qKAzC9B6E,GA0CKvB,EAAA8f,EAAAte,8HArCU9E,EAAgB,6FAGtBA,MAAQ,gSAiCRA,MAAQ,4yBAHL6E,GAAkCvB,EAAA8f,EAAAte,sTA3B/B9E,EAAa,kBAAlBa,OAAIC,GAAA,8SAACd,EAAa,aAAlBa,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,mhBAoBW8rC,WAAAyZ,EAAArmD,2BAAAqmD,EAAOrmD,EAAK,MAAA,iFAAZ,SAAAM,EAAA,IAAAssC,KAAAA,WAAA0Z,EAAAtmD,cAAAsmD,WAAAA,EAAAA,EAAOtmD,EAAK,MAAA,KAAA4H,GAAAwC,EAAAwiC,mPAPOlkC,GAAAgP,EAAA,mBAAA1X,OAAKumD,aACf79C,GAAAgP,EAAA,SAAA1X,EAAa,IAAAA,EAAM,KAAAA,KAAOA,EAAM,MACjC0I,GAAAgP,EAAA,QA1FZ,IA0FwB1X,EAAC,MACb0I,GAAAgP,EAAA,QAAA1X,OAAmBA,EAAC,MACf0I,GAAAgP,EAAA,aAAA1X,OAAKwmD,kCACoB,KAAjB,QAAJC,EAAAzmD,EAAI,YAAA,IAAAymD,OAAA,EAAJA,EAAMC,gHAjBpC7hD,GAsBKvB,EAAAuU,EAAA/S,GAdDzB,GAaKwU,EAAAH,8DAZmB2nC,OAAQr/C,EAAY,IAACA,EAAM,KAAAA,KAAOA,EAAM,KAAG2mD,QAAA3mD,EAAO,+BACnDq/C,OAAQr/C,EAAiB,MAAKA,EAAC,KAAE2mD,QAAA3mD,EAAO,wUADvCq/C,OAAQr/C,EAAY,IAACA,EAAM,KAAAA,KAAOA,EAAM,KAAG2mD,QAAA3mD,EAAO,4DACnDq/C,OAAQr/C,EAAiB,MAAKA,EAAC,KAAE2mD,QAAA3mD,EAAO,2BAEnC0I,GAAAgP,EAAA,mBAAA1X,OAAKumD,6CACf79C,GAAAgP,EAAA,SAAA1X,EAAa,IAAAA,EAAM,KAAAA,KAAOA,EAAM,sBAEjC0I,GAAAgP,EAAA,QAAA1X,OAAmBA,EAAC,2BACf0I,GAAAgP,EAAA,aAAA1X,OAAKwmD,sDACoB,KAAjB,QAAJI,EAAA5mD,EAAI,YAAA,IAAA4mD,OAAA,EAAJA,EAAMF,+eAkBjB1mD,EAAa,8BAEnCA,EAAW,wIAFhB6E,GAA+CvB,EAAAujD,EAAA/hD,qBAC/CD,GAEMvB,EAAAwjD,EAAAhiD,yCAHqB9E,EAAa,kBAEnCA,EAAW,8GAWXA,EAAQ,GAAA,wbA6BA,MAAA4sC,EAAA5sC,KAAMA,EAAK,KAAA,2EAAX,KAAAM,EAAA,IAAAssC,KAAAA,EAAA5sC,KAAMA,EAAK,KAAA,KAAA4H,GAAAwC,EAAAwiC,gJAFiC5sC,EAAgB,sBAArE6E,GAIKvB,EAAA8f,EAAAte,wNAJgD9E,EAAgB,sIA1B9DA,EAAK,iBAAVa,OAAIC,GAAA,ySAACd,EAAK,YAAVa,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,mjBAeM+D,GAMKvB,EAAA8f,EAAAte,iWAXA,MAAA8nC,EAAA5sC,OAAKA,EAAK,KAAA,2EAAV,KAAAM,EAAA,IAAAssC,KAAAA,EAAA5sC,OAAKA,EAAK,KAAA,KAAA4H,GAAAwC,EAAAwiC,oCAIb5sC,EAAQ,MAAKA,EAAsB,KAAI+mD,IAASC,GAAAhnD,6NAXxC0I,GAAA0a,EAAA,SAAApjB,QAAgBA,EAAC,8CAFnC6E,GAsBKvB,EAAA8f,EAAAte,GAfDzB,GAIM+f,EAAAupB,kRAEA3sC,EAAQ,KAAKA,EAAsB,MAAI+mD,uIAX/Br+C,GAAA0a,EAAA,SAAApjB,QAAgBA,EAAC,+kBA8C3C6E,GAIKvB,EAAA8f,EAAAte,0nBAILD,GAIQvB,EAAA2V,EAAAnU,0CAJkD9E,EAAW,knBAQrE6E,GAIKvB,EAAA8f,EAAAte,+aAULD,GAAoEvB,EAAA8E,EAAAtD,8VA7IvE9E,EAAQ,IAAAinD,GAAAjnD,KA+CJA,EAAO,IAAAknD,GAAAlnD,wCAaPA,EAAQ,KAAAmnD,GAAAnnD,mBAwCEA,EAAU,KACjBA,EAAgB,iBAGPA,EAAe,YACrBA,EAAW,mEAKjBA,EAAO,IAAA61B,GAAA71B,KAQPA,EAAS,KAAAg2B,GAAAh2B,KAQTA,EAAW,KAAAyX,GAAAzX,yJAUmBA,EAAK,GAAGgoB,KAAKtE,UAAU1jB,EAAK,IAAI,oDAAnE6E,GAA0EvB,EAAA8jD,EAAAtiD,+DAAvC9E,EAAK,GAAGgoB,KAAKtE,UAAU1jB,EAAK,IAAI,iDAGlEqnD,EAAArnD,SAAcA,EAAK,IAAqB,IAAjBA,EAAM,GAAAa,SAAYsY,GAAAnZ,sjBAvJxBA,EAAgB,IAAA,+BAO/BA,EAAe,sCANTA,EAAQ,iEAGJA,EAAQ,wBACLA,EAAW,kBAClBA,EAAQ,sBAPzB6E,GA6JKvB,EAAAgV,EAAAxT,0BAlGDzB,GAOMiV,EAAAq0B,0BAENtpC,GAEKiV,EAAAZ,0BAELrU,GAgDKiV,EAAAT,0BAXDxU,GAUgBwU,EAAAuvC,wCAHApnD,EAAU,YAM9BqD,GAwBKiV,EAAAH,qJApJgBnY,EAAkB,yBAAcA,EAAa,oBAgH9CA,EAAa,iBAChBA,EAAU,kBACTA,EAAW,6CAvGAA,EAAW,qDAInCA,EAAQ,gHA+CJA,EAAO,yIAaPA,EAAQ,8JAwCEA,EAAU,OAAA,CAAA+3B,SAAAuvB,mBACjBtnD,EAAgB,+BAGPA,EAAe,+BACrBA,EAAW,6DAFNA,EAAU,SAAVA,EAAU,6BAOrBA,EAAO,gHAQPA,EAAS,gHAQTA,EAAW,gQAafA,OAAcA,EAAK,IAAqB,IAAjBA,EAAM,GAAAa,qKAvJZb,EAAgB,IAAA,mEAO/BA,EAAe,sCANTA,EAAQ,6HAGJA,EAAQ,4CACLA,EAAW,sCAClBA,EAAQ,0SA7iBZ,SAAAilD,GAA4BsC,GAC1B,OAAAA,EAAOxzC,KAAK,SAAA2f,EAAMlgB,GAEjB,MAAA,CAAAA,MAAAA,EACAxR,MAAO0xB,EACP7B,MAAKxnB,GAAAA,OAAKqpB,gDAhElB8zB,EAkBAC,EACAC,EACAC,EACAC,EAcAC,ExD3EqB7oD,8CNkOtB,SAAuB8oD,GAC7B,IAAMrmD,EAAS,CAAA,EACf,IAAK,IAAM8F,KAAOugD,EACjBrmD,EAAO8F,IAAO,EAEf,OAAO9F,CACR,K8D1PUiN,EAAWnC,KASNw7C,EAAgBvtC,EAAhBwtC,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAEhBE,EAAgBztC,SAAhBhP,WAAMy8C,EAAGC,GAAOD,EAChBE,EAAoB3tC,WAApB6qC,OAAWE,IAAH4C,EAAG5C,GAAS4C,EAEpBC,EAAS5tC,EAATvW,GAAAA,OAAE,IAAAmkD,EAAG,KAAIA,EACTC,EAAW7tC,EAAXjV,KAAAA,WAAI8iD,EAAG,KAAIA,EACXC,EAAqB9tC,EAArB6Q,UAAAA,OAAS,IAAAi9B,OAAG9nD,EAAS8nD,EACrBC,EAAiB/tC,EAAjB1S,MAAAA,WAAKygD,OAAG/nD,EAAS+nD,EACjBC,EAAgBhuC,EAAhBqqC,SAAAA,OAAW,IAAH2D,GAAQA,EAChBC,EAA8BjuC,EAA9BkuC,uBAAAA,OAAsB,IAAAD,GAAQA,EAC9BE,EAAgBnuC,EAAhBI,SAAAA,WAAQ+tC,GAAQA,EAChBC,EAAepuC,EAAfwrC,QAAAA,OAAU,IAAH4C,GAAQA,EACfC,EAAYruC,EAAZxY,MAAAA,QAAK,IAAA6mD,EAAG,KAAIA,EACZC,GAAetuC,EAAfoqC,WAAAA,YAAUkE,GAAG,GAAEA,GACfC,GAA6BvuC,EAA7BwuC,YAAAA,QAAc,IAAHD,GAAG,gBAAeA,GAC7BE,GAA6BzuC,EAA7B0uC,sBAAAA,QAAqB,IAAAD,IAAQA,GAC7BE,GAAY3uC,EAAZuvB,MAAAA,YAAKof,GAAG,KAAIA,GACZC,GAAe5uC,EAAfqX,MAAAA,QAAQ,IAAHu3B,GAAG,QAAOA,GACfC,GAAoG7uC,EAApGwqC,WAAAA,YAAUqE,GAAI,SAAAx3B,EAAO+yB,EAAYt8C,GAAM,MAAA,GAAA+B,OAAQwnB,GAAQjU,cAAc8xB,SAASkV,EAAWhnC,gBAAWyrC,GACpGC,GAAmB9uC,EAAnB0vB,QAAAA,QAAO,IAAAof,QAAG9oD,EAAS8oD,MACa9uC,EAAhC+uC,YAAAA,QAAW,IAAAC,GAAI,SAAAC,UAAWA,GAAMD,GAChCE,GAA6BlvC,EAA7BmvC,sBAAAA,QAAqB,IAAAD,IAAQA,GAC7BE,GAAgBpvC,EAAhBsqC,OAAAA,QAAS,IAAH8E,GAAG,QAAOA,GAChBC,GAAuBrvC,EAAvBmqC,YAAAA,QAAW,IAAAkF,QAAGrpD,EAASqpD,GACvBC,GAAoBtvC,EAApBuvC,gBAAAA,YAAeD,GAAG,GAAEA,GACpBE,GAAgBxvC,EAAhByvC,SAAAA,QAAW,IAAHD,IAAQA,GAChBE,GAA0B1vC,EAA1BuqC,oBAAAA,QAAmB,IAAAmF,IAAOA,GAC1BC,GAAgB3vC,EAAhB4vC,SAAAA,YAAQD,IAAQA,GAChBE,GAAwB7vC,EAAxB8vC,kBAAAA,QAAiB,IAAAD,IAAOA,GACxBE,GAA4B/vC,EAA5BgwC,sBAAAA,YAAqBD,IAAOA,QAE5BE,sBAAAA,QAAqB,IAAAC,GAAA,SAAIC,EAAYj3B,GAExC,OAAAre,EAAA,CAAArT,MAAO2oD,GACN94B,GAAQ84B,OAQNC,GAAiBpwC,EAAjBqwC,WAAAA,QAAU,IAAAD,IAAOA,GACjBE,GAAgBtwC,EAAhBuwC,YAAAA,QAAW,IAAAD,GAAG,GAAEA,GAChBE,GAAgBxwC,EAAhBywC,UAAAA,YAASD,IAAOA,GAChBE,GAAe1wC,EAAfurC,QAAAA,QAAO,IAAAmF,IAAQA,GACfC,GAAgB3wC,EAAhByrC,SAAAA,QAAQ,IAAAkF,IAAQA,GAGhBC,KAAAC,SAAAA,QAAQ,IAAAD,GAAI,SAAApsD,OAAIssD,EAAIriD,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAG,EAC9Bg6C,aAAauE,GACbA,EAAU3D,WAAW7kD,EAAIssD,OAGlBC,GAAkB/wC,EAAlBgxC,aAAAA,YAAYD,GAAG,IAAGA,GAClBE,GAAsBjxC,EAAtBkxC,eAAAA,QAAiB,IAAHD,IAAQA,MACPjxC,EAAfmxC,gBAAAA,QAAe,IAAAC,GAAA,GAAAA,GACfC,GAAoBrxC,EAApBsxC,cAAAA,QAAgB,IAAHD,IAAOA,GACpBE,GAAmBvxC,EAAnBwxC,YAAAA,QAAW,IAAAD,IAAQA,GACnBE,GAAczxC,EAAd0xC,WAAAA,QAAa,IAAHD,GAAG,EAACA,GACdE,GAAkB3xC,EAAlB4xC,eAAAA,QAAc,IAAAD,GAAG,EAACA,MACJ3xC,EAAd6xC,eAAAA,YAAcC,GAAA,GAAAA,GAIrBC,GAAqB/xC,EAArBgyC,MAAAA,YAAgBD,GAAG,GAAEA,GAoDhB,SAAArH,GAAmBqC,OAClBkF,EAAW,GACXhD,EAAM,CAAA,EAEZlC,EAAOjoD,SAAS,SAAAo0B,OACNi3B,EAAazgB,GAAQxW,GAEtB+4B,EAAY/c,SAASib,KACtB8B,EAAYrgD,KAAKu+C,GACjBlB,EAAOkB,GAAU,GAEbA,GACAlB,EAAOkB,GAAYv+C,KACflN,OAAOP,OAAO8rD,GAAsBE,EAAYj3B,GAAI,CAChDzvB,GAAI0mD,EACJpE,aAAa,EACbG,WAAYiD,OAM5BF,EAAOkB,GAAYv+C,KAAKlN,OAAOP,OAAS,CAAA6nD,YAAamE,GAAcj3B,WAGjEg5B,EAAkB,UAExBnD,GAAYkD,GAAantD,SAAS,SAAAqrD,GAC1BlB,EAAOkB,IAAa+B,EAAmBtgD,KAAI4H,MAAvB04C,EAAkBz4C,EAASw1C,EAAOkB,QAGvD+B,EAwDF,SAAAC,KAAmD,IAA9BC,EAAa3jD,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,aAAG,EAAG4jD,EAAW5jD,UAAApI,OAAAoI,EAAAA,kBAAAzI,EACxD+d,EAAA,EAAA6tC,GAAiBQ,EAAgB,EAAI,EAAIA,IACpCC,GAAe3iB,IAAW4b,EAAcsG,MAAoBtG,EAAcsG,IAAgB1F,YAC3FoG,GAAc,YA6FbC,KACD,IAAAC,GAAe,KACfhrD,GAAK,KACCoyB,EAAG,GACH64B,EAAY,GAElBjrD,GAAM1C,SAAS,SAAA4tD,GACN94B,EAAIsb,SAASwd,EAAIpI,KAIlBkI,GAAe,GAHf54B,EAAIhoB,KAAK8gD,EAAIpI,KACbmI,EAAa7gD,KAAK8gD,OAMrBF,GAAYzuC,EAAA,EAAEvc,GAAQirD,UAExBD,EAGF,SAAAG,GAASriC,OACVsiC,EAAUtiC,EAAYA,EAAUg6B,IAAU9iD,GAAM8iD,WAC7C/a,GAAMsjB,MAAM,SAAA35B,UAASA,EAAKoxB,MAAYsI,cAclCE,GAAoBC,GAAA,OAAAC,GAAAx5C,WAAA/K,UAAA,CAAA,SAAAukD,YAAAA,GAAAl1B,EAAAC,IAAAC,MAApB,SAAAi1B,EAAqB3sD,GAAC,IAAA4sD,EAAA,OAAAn1B,IAAAhf,eAAAo0C,iBAAAA,EAAA70B,KAAA60B,EAAApiD,aAC3BmiD,EAAe1rD,GAAMlB,GAEN,IAAjBkB,GAAMnB,OACN0d,EAAA,EAAAvc,QAAQxB,GAER+d,EAAA,EAAAvc,GAAQA,GAAMwJ,QAAQ,SAAAkoB,GACX,OAAAA,IAASg6B,MAIxBh/C,EAAS,QAASg/C,GAAY,KAAAC,EAAAA,IAAAA,MAAAA,OAAAA,EAAApa,UAAAka,EAAA,2BAGzB,CAyFA,SAAAG,GAAYz/C,GAAC,IAAA0/C,EAAAC,EACd9H,GAAWl+C,KAAkB+lD,QAAbA,EAAKzpD,oBAAQypD,SAARA,EAAUjuC,iBAC/BzR,GAAGO,EAAS,QAASP,WACzB2/C,EAAAhmD,SAAK,IAAAgmD,GAALA,EAAOhuC,QACPvB,EAAA,EAAAynC,GAAU,aAGC+H,GAAUC,GAAA,OAAAC,GAAAj6C,WAAA/K,UAAA,CAAA,SAAAglD,YAAAA,GAAA31B,EAAAC,IAAAC,MAAV,SAAA01B,EAAW//C,GAAC,IAAAggD,EAAA51B,OAAAA,IAAAhf,MAAA,SAAA60C,GAAA,cAAAA,EAAAt1B,KAAAs1B,EAAA7iD,MAAA,KAAA,EAAA,IACnB8iD,GAAWD,CAAAA,EAAA7iD,oBAAA6iD,EAAA9a,OACX,UAAA,KAAA,GAAA2S,IAAYD,KACZt3C,EAAS,OAAQP,GACjBmgD,KACA/vC,EAAA,EAAAynC,GAAU,GACVznC,EAAA,GAAAkpC,OAAcjnD,GACT,QAAL2tD,EAAArmD,SAAAqmD,IAAKA,GAALA,EAAOI,mFAuCND,KACD9D,IACAjsC,EAAA,EAAAqmC,GAAa,IAEjBrmC,EAAA,EAAA0nC,IAAW,GxDxeUjnD,EwDyRbs5B,EAAAC,IAAAC,MAAA,SAAAg2B,WAAAj2B,IAAAhf,MAAA,SAAAk1C,GAAA,cAAAA,EAAA31B,KAAA21B,EAAAljD,MAAA,KAAA,EACRgT,EAAA,GAAAmpC,EAAa1lD,IACbuc,EAAA,GAAAopC,EAAkB/C,IAClBrmC,EAAA,GAAAqpC,EAAgB/C,GAAQ,KAAA4J,EAAAA,IAAAA,MAAAA,OAAAA,EAAAlb,OAAA,GAAAib,EAAA,KxD3R/BziD,KAAwBG,GAAGsC,cAAcpC,KAAKpN,GwD6c3CiN,IAAO,WACCg6C,IAAQ1nC,EAAA,EAAEynC,GAAU,GACpBA,GAAWl+C,GAAOA,EAAMgY,WA2BrB,IAAA4uC,KAAAC,WAAAA,QAAc,IAAJD,GAAI,SAAArpC,0BACJA,EAAM,wBAGhBupC,aAAAA,YAAYC,GAAA,SAAIh9B,EAAOtM,GACgB,MAAA,uCAAAlb,OAAAwnB,kBAAKxnB,OAAekb,kCAG3DupC,YAAAA,QAAW,IAAAC,GAAA,4FA2BlB,IAEAC,GAFAl9C,GAAO,cAGFm9C,KACLhM,aAAa+L,IACbA,GAAmBnL,uBACfwK,IAAc,IACf,KASPhiD,IAAS,WAAA,IAAA6iD,EACDA,QAAJA,EAAAp9C,cAAIo9C,GAAJA,EAAMC,YAGN,IAAAd,IAAc,EAET,SAAAe,GAAa17B,GACbA,IAA4B,IAApBA,EAAKgzB,YAlFb,SAAa57B,MACdA,EAAS,CACTvM,EAAA,EAAAqmC,GAAa,IACP,IAAAlxB,EAAOx0B,OAAOP,UAAWmsB,GAE3B,GAAA4I,EAAK6yB,cAAgB7yB,EAAKgzB,WAAU,OACxCnoC,EAAA,EAAAvc,GAAQ6iD,EAAY7iD,GAAQA,GAAMqI,OAAQ,CAAAqpB,KAAUA,GAAUnV,EAAA,EAAAvc,GAAQ0xB,IAEtEmwB,YAAU,WACFyG,IAAmBgE,KACvB/vC,EAAA,GAAAkpC,OAAcjnD,GACdkO,EAAS,SAAU1M,IACnB0M,EAAS,SAAUoc,OAuE3BukC,CAAa37B,GAGR,SAAA47B,GAAYxuD,GACbutD,IACJ9vC,EAAA,EAAA6tC,GAAiBtrD,GAGZ,SAAAyuD,GAAgB74C,OACbgd,EAAYhd,EAAZgd,KAAM5yB,EAAM4V,EAAN5V,MACW,KAArB4yB,eAAAA,EAAMgzB,mBACN1kD,KAAU6iD,GAAY7iD,GAAM8iD,MAAYpxB,EAAKoxB,IAAgBwJ,UAyC5D,SAAiB56B,GACd,OAAAA,EAAK6yB,aAAe7yB,EAAKgzB,YAAehzB,EAAKgzB,aAAehzB,EAAKuR,eAAe,cAzCpFuqB,CAAiB97B,KACjBnV,EAAA,EAAA6tC,GAAiBtrD,GACjBsuD,GAAa17B,KAIZ,SAAAo5B,GAAc2C,MAKoB,IAJT3J,EAAct6C,QACvC,SAAAkoB,UAAUx0B,OAAOwwD,OAAOh8B,EAAM,gBAAqC,IAApBA,EAAKgzB,cAG7B7lD,OAChB,OAAA0d,EAAA,EAAA6tC,GAAiB,GAGzBqD,EAAY,GAAKrD,KAAmBtG,EAAcjlD,OAAS,EAC3D0d,EAAA,EAAA6tC,GAAiB,GAEjB7tC,EAAA,EADOkxC,EAAY,GAAwB,IAAnBrD,GACxBA,GAAiBtG,EAAcjlD,OAAS,EAExCurD,IAAkCqD,OAGhCE,EAAQ7J,EAAcsG,IAExBuD,IAA8B,IAArBA,EAAMjJ,aACG,IAAd+I,IAAkC,IAAfA,GAAkB3C,GAAc2C,IAkBzD,IAAAG,GAAeC,GACfC,GAAcD,GAEX,SAAAA,GAAatsD,UAEd2K,OAAMA,SAACwI,GACCA,EAAK2oC,SACL4P,KACA1rD,EAAKwsD,eAAiB,CAAA1wC,SAAU,OAAQjQ,MAAO,mBR+H1CjJ,GQpHjB6pD,GAAe,CACf/d,SAAU,WACV7C,UAAW,eACX+C,aRiHiBhsC,GQjHG+lD,QRkHV,IAAZ/lD,KACFA,GAAU,GAEL,CACLZ,KAAM,SACNY,QAAAA,GACMnH,GAAEA,SAACwe,GAAO,OAAA8a,EAAAC,IAAAC,MAAAy3B,SAAAA,QAAAC,EAAA1Z,EAAA93C,EAAAyuB,EAAAiiB,EAAAoD,EAAA2d,EAAA53B,OAAAA,IAAAhf,MAAA,SAAA62C,iBAAAA,EAAAt3B,KAAAs3B,EAAA7kD,aAME,OAHd7M,EAIE8e,EAJF9e,EACAyuB,EAGE3P,EAHF2P,EACAiiB,EAEE5xB,EAFF4xB,UACAoD,EACEh1B,EADFg1B,eAAc4d,EAAA7kD,KAAA,EAESqtC,GAAqBp7B,EAAOrX,IAAQ,KAAA,KAAvDgqD,EAAUC,EAAAp3B,KAIZoW,KAAkE,OAAlD8gB,EAAwB1d,EAAehtB,aAAkB,EAAS0qC,EAAsB9gB,YAAgE,OAAjDoH,EAAwBhE,EAAeiG,SAAkBjC,EAAsBkC,gBAAe0X,CAAAA,EAAA7kD,KAAA,EAAA,KAAA,CAAA,OAAA6kD,EAAA9c,OAChN,SAAA,IAAE8c,KAAAA,EAAAA,OAAAA,EAAA9c,OAAA,SAEJ,CACL50C,EAAGA,EAAIyxD,EAAWzxD,EAClByuB,EAAGA,EAAIgjC,EAAWhjC,EAClBvnB,KAAIyT,EAAAA,EAAA,CAAA,EACC82C,GACH/gB,CAAAA,EAAAA,CAAAA,UAAAA,MAEHghB,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAA7c,UAAA0c,EAAA,IAtBa33B,EAuBf,IQ/IoC7C,KAAQ8jB,MACzCmI,YAAY,GAGT2O,GC1oBJ,SAA+BC,GAClC,IAAIC,EACAC,EACEC,EAAiB,CACnB/O,YAAY,GAEZv7C,EAAUmqD,EACRI,EAAa,SAACC,GAChB,OAAAt3C,EAAAA,EAAAA,EAAYo3C,CAAAA,EAAAA,GAAoBH,GAAe,CAAA,GAASK,GAAS,CAAA,EACzE,EACUC,EAAiB,SAACC,GAChBN,GAAoBC,IACpBrqD,EAAUuqD,EAAWG,GACrBjf,GAAgB2e,EAAkBC,EAAiBrqD,GAC9CsH,MAAK,SAAAsJ,GAAK,IAAA+5C,EACX5xD,OAAOP,OAAO6xD,EAAgBzsD,MAAO,CACjCib,SAAUjI,EAAEk7B,SACZ7yB,KAAI/U,GAAAA,OAAK0M,EAAErY,EAAC,MACZwgB,IAAG7U,GAAAA,OAAK0M,EAAEoW,EAC9B,SACuB,QAAP2jC,EAAA3qD,SAAO,IAAA2qD,OAAA,EAAPA,EAASC,aAAc5qD,EAAQ4qD,WAAWh6C,EAC1D,IAEA,EAyCUi6C,EAA8B,SAACztD,GAYjC8I,GAXoB9I,EAAK0tD,WAAU,SAACC,QACP1wD,IAArB+vD,GACAA,EAAmBW,EACnBN,MAIA1xD,OAAOP,OAAO4xD,EAAkBW,GAChCN,IAEhB,IAEA,EACI,MAAO,CAtDiB,SAAArtD,GACpB,GAAI,cAAeA,EAEf,OADAytD,EAA4BztD,GACrB,GAGPgtD,EAAmBhtD,EACnBqtD,GAEZ,EAC0B,SAACrtD,EAAM4tD,GACzB,IAAIC,EACJZ,EAAkBjtD,EAClB4C,EAAUuqD,EAAWS,GACrBtN,YAAW,WAAA,OAAM+M,EAAeO,EAAe,GAAE,GACjDP,EAAeO,GACf,IAAME,EAAoB,WAClBD,IACAA,IACAA,OAAoB5wD,EAEpC,EACc8wD,EAAiB,eAAG5P,GAAiCz4C,UAAApI,OAAAoI,QAAAzI,IAAAyI,aAAAA,UAAlB9C,GAAAA,GAAW,CAAA,GAA5Bu7C,WAEpB,GADA2P,KACmB,IAAf3P,EACA,OAAO6P,GAAYhB,EAAkBC,GAAiB,WAAM,OAAAI,EAAezqD,EAAWu7C,IAAe,IAAfA,EAAsB,CAAE,EAAGA,EAGjI,EAEQ,OADA0P,EAAoBE,IACb,CACHpjD,OAAM,SAACijD,GACHP,EAAeO,GACfC,EAAoBE,EAAeH,EACtC,EACDhvD,QAAO,WACHkvD,GACH,EAEb,EAkBQT,EAER,CDujB2DY,CAAsBxB,IAAeyB,GAAAl6B,EAAA84B,GAArFqB,GAAAA,GAAWD,GAAA,GAAEE,GAAeF,MAAEG,GAAcH,GAAA,GAM/CI,IAAW,qgEA9bN,MAwTDrpD,IAqHIgW,0CAjcGxc,eA5GA,GAAU,iBAAVA,GAAkB,KACrB0xB,GAAQqW,IAAK,IAAQsjB,MAAM,SAAA35B,GAAS,OAAAA,EAAKoxB,MAAY9iD,EAAK,QAC9DA,GAAQ0xB,GAAIre,EAAAA,KACPyvC,GAAS9iD,IACHA,QAAAA,UAEJ6iD,GAAYxzC,MAAMmS,QAAQxhB,KAAUA,GAAMnB,OAAS,OAC1DmB,GAAQA,GAAM+R,KAAK,SAAA2f,GAAI,MAAsB,iBAATA,EAAsB,CAAA1xB,MAAO0xB,EAAM7B,MAAO6B,GAASA,CAAI,KAqG5Eo+B,6CAChBnG,IAAoBd,UAhGvBhD,EAAmB3oD,OAAOP,QAElBozD,eAAgB,OAChBC,aAAc,MACdC,YAAa,MACbC,YAAY,EACZC,SAAU,EACVrpD,KAAM,OACN,oBAAqB,QAEzB6iD,KAGA1nD,QACA4jD,EAAqB,GAAI5jD,EAAE4jD,GAG1BgD,SACDhD,EAA2B,UAAI,EAAIA,wBA+EpChD,GAfC7iD,KACIqP,MAAMmS,QAAQxhB,IACduc,EAAA,EAAAvc,GAAKiS,EAAOjS,KAEZuc,EAAA,EAAAvc,IAASA,8CAYd4lD,IAAkB/C,GANjB7iD,IAAKuc,EAAA,EAAEvc,GAAQ,yBAOhB6iD,GAAY7iD,IAASA,GAAMnB,OAAS,GAAGksD,sBACvC/qD,KAjCC6iD,EACI78B,KAAKtE,UAAU1hB,MAAWgmB,KAAKtE,UAAUgkC,IACrCqF,MACAr+C,EAAS,QAAS1M,IAMzB0lD,GAAc1/B,KAAKtE,UAAU1hB,GAAM8iD,OAAa98B,KAAKtE,UAAUgkC,EAAW5C,MAC3Ep2C,EAAS,QAAS1M,6CAwBlBA,IAAS6iD,GAAY6C,GAAYh5C,EAAS,QAAS1M,sBACnDgkD,GAAWl+C,GAAOwmD,4CACnB1J,KAAe+C,IAwBbhD,IAAqC,IAAtBC,GAAW/jD,UAE3B8jD,GACA0G,GAAQ/yB,EAAAC,IAAAC,mFACJja,KAAAA,EACgB8mC,OADhB9mC,EAAA,EAAAwnC,IAAU,GAAIqM,EAAA7mD,KACE85C,EAAAA,EAAQ,CACpB32C,SAAAA,EACAi2C,YAAAA,GACAM,4BAAAA,GACAL,WAAAA,KAJAc,KAAAA,GAAAA,EAAG0M,EAAAp5B,WAQH+sB,GAAUL,EAAIK,SACdxnC,EAAA,EAAA0nC,GAAWA,GAAWP,EAAIO,SAAWrB,GAAW/jD,OAAS,GACzD0d,EAAA,EAAAynC,EAAUC,IAAYP,EAAIM,SAC1BznC,EAAA,GAAAwrB,GAAQG,GAAUgb,GAAmBQ,EAAII,eAAiBJ,EAAII,iBAE9DvnC,EAAA,EAAAwnC,IAAU,GACVxnC,EAAA,EAAAynC,GAAU,GACVznC,EAAA,EAAA0nC,IAAW,+CAEhBuF,KAEHjtC,EAAA,EAAA0nC,IAAW,GAEPpB,GACAtmC,EAAA,GAAAkpC,OAAcjnD,kEAqBzB+d,EAAA,GAAEunC,EAAgBt6C,EAAM,CACrBm5C,YAAAA,GACAC,WAAAA,GACA7a,MAAAA,GACA8a,SAAAA,EACA7iD,MAAAA,GACA8iD,OAAAA,GACA5a,QAAAA,GACArY,MAAAA,GACAkzB,oBAAAA,GACAC,WAAAA,GACAC,4BAAAA,GACAC,mBAAAA,+BAnFIL,GAAYoB,IAAYjkD,IAAS8jD,GAQrC6G,GAJmB7G,EAAc/0B,WAAW,SAAAjwB,GACjC,OAAAA,EAAEgkD,MAAY9iD,GAAM8iD,QAGE,sBAoF9BmB,IAAYpB,GAAUtmC,EAAA,EAAA6tC,GAAiB,qBAEvCxH,IAAYrmC,EAAA,EAAA6tC,GAAiB,sBAlFhC19C,EAAS,YAXI09C,uBAsDd7tC,EAAA,GAAA8zC,EAAWxN,EAAW7iD,IAASA,GAAMnB,OAAS,EAAImB,4BACpDuc,EAAA,GAAE+zC,EAAmBD,GAAYzN,GAAW/jD,OAAS,4CACrD0d,EAAA,GAAEg0C,EAAYF,GAAYpH,KAAcrwC,IAAamrC,gDACnDxnC,EAAA,GAAAi0C,EACCtJ,IAAyBrE,GAEnBA,GAA8B,KAAb4N,QAALA,EAAAzwD,cAAKywD,SAALA,EAAO5xD,QADnBmoD,GAGAhnD,GACA,GACAgnD,wBACTzqC,EAAA,GAAEm0C,EAAgB1wD,IAiQXwG,OAAWhI,EAGXgI,EApQuCq8C,GAmQ1B7iD,GAAMnB,OAAS,EACjBmB,GAAM+R,KAAK,SAAAgD,GAAC,OAAKA,EAAE8a,OAAQlmB,KAAK,MAEhC3J,GAAM6vB,IAGd88B,GAAWnmD,IAzQqC,4BAC1D+V,EAAA,GAAEo0C,aA4QM,IAAA7M,GAA0C,IAAzBA,EAAcjlD,aAAqB,OACrD+xD,EAAQ9M,EAAcsG,IACtB,GAAAnG,IAAY2M,EAAK,CACb,IAAArtC,EAAQugC,EAAgBA,EAAcjlD,OAAS,EAC5C,OAAA+tD,GAAagE,EAAM/gC,IAAQtM,UAE3BupC,KAlRE+D,2BAqER,SAAmB9oB,GACnBA,GAA0B,IAAjBA,EAAMlpC,SAAgBkpC,EAAM5P,MAAM,SAAAzG,GAAgB,MAAS,WAAT9zB,EAAA8zB,EAAiB,KAC5E1xB,KAAU6iD,GAAW7iD,GAAMm4B,MAAM,SAAArP,UAAeA,IAAcA,EAAUg6B,GAAM,IAAM9iD,GAAM8iD,OAE3FzzC,MAAMmS,QAAQxhB,QACdA,GAAQA,GAAM+R,KAAK,SAAA+W,GAAc,OAAAqiC,GAASriC,IAAcA,UAExD9oB,GAAQmrD,MAAcnrD,KA3E3B8wD,CAAmB/oB,wBACrBxrB,EAAA,GAAEypC,EAsCKnD,EAAiB7iD,GAAQA,GAAM+R,KAAK,SAAA2f,GAAI,OAAKA,EAAKoxB,OAAW,KAC1D9iD,GAAQA,GAAM8iD,IAAU9iD,4CAtC3B6iD,IAAY6C,GAAe1lD,IAAO0M,EAAS,QAAS1M,6BAerDikD,IAAYH,IAAkBjB,IAAa7iD,IAAO2qD,6BAWhD,SAAkB5iB,GACnBkc,IAAUv3C,EAAS,SAAUq7B,GAXlCgpB,CAAkBjN,yCA+Wdz6B,QAA4C7qB,KAAjB,QAAdwyD,EAAA3G,UAAc,IAAA2G,OAAA,EAAdA,EAAgBtR,kBAChCsO,GAAgBtO,YAAa,EAAIsO,2CA/W9B3kC,GAAaghC,IAAgBuF,GAAe1yD,OAAOP,OAAOqxD,GAAiB3D,4BACjF9tC,EAAA,GAAEooC,IAAY70C,oCAkXMA,EAAMm0C,GAClB,IAAAn0C,IAASm0C,EAAkB,OAAA1nC,EAAA,GAAAszC,IAAW,GAC3ChO,uBACItlC,EAAA,GAAAszC,IAAW,KACZ,GArXJoB,CAAYnhD,GAAMm0C,2BACdA,IAAY56B,GAAavZ,KA8VpB0M,EAAU6M,EAAU4B,wBAApBzO,WACR1M,GAAK/N,MAAMya,MAAQstC,GAAgBttC,EAAQ,KAAO,OAAM1M,wBA9V3DyM,EAAA,GAAE20C,EAAoB9G,sBAEhBtkD,GAASm+C,KAAaD,GAAS4H,6EAsLlCl/C,EAAS,QAAS1M,IAClBuc,EAAA,EAAAvc,QAAQxB,GACR8tD,KACAV,qCArHK,SAAcz/C,MACd63C,EAEG,OADR73C,EAAExH,kBACMwH,EAAE5G,SACD,SACD4G,EAAE5H,iBACF+nD,eAEC,WACDngD,EAAE5H,iBAEE0/C,GAAQ,IACqB,IAAzBH,EAAcjlD,OAAY,UACxBsyD,EAAYrN,EAAcsG,OAE5BpqD,KAAU6iD,GAAY7iD,GAAM8iD,MAAYqO,EAAUrO,IAAM,CACxDwJ,WAGAc,GAAatJ,EAAcsG,eAKlC,YACDj+C,EAAE5H,iBAEE0/C,GACA6G,GAAc,IAEdvuC,EAAA,EAAA0nC,IAAW,GACX1nC,EAAA,GAAAkpC,OAAcjnD,cAIjB,UACD2N,EAAE5H,iBAEE0/C,GACA6G,IAAe,IAEfvuC,EAAA,EAAA0nC,IAAW,GACX1nC,EAAA,GAAAkpC,OAAcjnD,cAIjB,MACG,GAAAylD,IAAYD,EAAO,CAEf,GAAyB,IAAzBF,EAAcjlD,QACbmB,IAASA,GAAM8iD,MAAYgB,EAAcsG,IAAgBtH,WAEnDwJ,KAEXngD,EAAE5H,iBACF6oD,GAAatJ,EAAcsG,KAC3BkC,eAIH,YACI,IAAAzJ,GAAYD,GAAW/jD,OAAS,EAAC,OAElC,GAAAgkD,GAAY7iD,IAASA,GAAMnB,OAAS,EAAC,CAEjC,GADJysD,QAAqC9sD,IAAhBinD,EAA4BA,EAAczlD,GAAMnB,OAAS,GAC1D,IAAhB4mD,QAAqCjnD,IAAhBinD,EAAyB,WAClDA,EAAczlD,GAAMnB,OAAS4mD,EAAcA,EAAc,OAAIjnD,aAIhE,YACI,IAAAwB,KAAU6iD,GAAYD,GAAW/jD,OAAS,EAAC,YAC5BL,IAAhBinD,EACAlpC,EAAA,GAAAkpC,EAAczlD,GAAMnB,OAAS,GACtBmB,GAAMnB,OAAS4mD,GAA+B,IAAhBA,GACrClpC,EAAA,GAAAkpC,GAAe,aAGlB,iBACIzlD,KAAU6iD,GAAYD,GAAW/jD,OAAS,QAAqBL,IAAhBinD,EAAyB,OACzEA,IAAgBzlD,GAAMnB,OAAS,EAC/B0d,EAAA,GAAAkpC,OAAcjnD,GACPinD,EAAczlD,GAAMnB,OAAS,GACpC0d,EAAA,GAAAkpC,GAAe,0BAyBvB7sC,EACA,OAAAgqC,GAAW/jD,OAAS,EAAU0d,EAAA,EAAA0nC,IAAW,QAC7C1nC,EAAA,EAAA0nC,IAAYA,QAoFP,SAAmBhgD,GAAKmtD,IAAAA,EACxBnN,IAAaD,IAAW36B,GAAcA,EAAUgoC,SAASptD,EAAM3C,SAAgB,UAAJwO,UAAI,IAAAshD,GAAJA,EAAMC,SAASptD,EAAM3C,SACjGyqD,YAuDC,SAAar6B,EAAM1xB,EAAO8iD,OAC3BD,EACG,OAAA7iD,GAASA,EAAM8iD,KAAYpxB,EAAKoxB,8DArjBd,kBAClBgB,0KAqoB6B,SAAAhlD,UAAAwuD,GAAYxuD,EAChB,EAAA,SAAAA,GAAA,OAAAwuD,GAAYxuD,EAAC,uBACGyuD,GAAe,CAAG77B,KAAAA,EAAM5yB,EAAAA,yDAbzDgR,GAAIiO,OA4EwD,SAAAjf,GAAA,OAAAwsD,GAAqBxsD,gBAZhD,OAAA4nD,EAAyB4E,GAAqBxsD,GAAC,uDAmChFgH,EAAKiY,kBACJ6kC,GAAUn+C,KAAAzE,kEA1GnBqpB,EAAStL,owGExjBmC/f,EAAY,gCAAwB,IAAVA,EAAU,aAAVA,EAAU,8HAI9EA,EAAqB,gCACF,IAAdA,EAAc,aAAdA,EAAc,wHAUqBA,EAAY,gCAAsB,IAARA,EAAQ,aAARA,EAAQ,6HAI1EA,EAAoB,gCACF,IAAbA,EAAa,aAAbA,EAAa,2IAalBA,EAAiB,gBACG,IAAfA,EAAe,aAAfA,EAAe,8xBAvCrC6E,GA4COvB,EAAAgwD,EAAAxuD,GA3CLzB,GAcIiwD,EAAAC,GAbFlwD,GAAckwD,EAAAC,WACdnwD,GAWIkwD,EAAAE,GAVFpwD,GASKowD,EAAA/7C,6CADHrU,GAA0DqU,EAAA5P,QAAd9H,EAAW,YAI7DqD,GAaIiwD,EAAAI,GAZFrwD,GAAYqwD,EAAAC,WACZtwD,GAUIqwD,EAAAE,GATFvwD,GAQKuwD,EAAA/7C,6CAGTxU,GAaIiwD,EAAAO,GAZFxwD,GAAYwwD,EAAAC,WACZzwD,GAUIwwD,EAAAE,GATF1wD,GAQK0wD,EAAA57C,2GApCgDnY,EAAY,2BAAcA,EAAU,4EAKzEA,EAAc,2DAEgBA,EAAW,SAAXA,EAAW,6BAQNA,EAAY,2BAAcA,EAAQ,6EAKrEA,EAAa,oEAalBA,EAAiB,4BACZA,EAAe,+YAxI7B8V,EAAQH,GAAY,8BAEf+R,EAAalN,EAAbkN,OACYlN,EAAZyY,aAAAA,OAAY,IAAA+gC,EAAA,GAAAA,EACZ77B,EAAsD3d,EAAtD2d,SASL87B,EAAqB,CAAI,KAAM,KAAM,IAAK,KAAM,IAAK,MAAMlgD,KAAK,SAAAqf,SAAQ,CAC5EpxB,MAAOoxB,EACPvB,MAAOuB,EAAA,IAGH8gC,EACF,CAAA,CAAAlyD,MAAO,MAAO6vB,MAAO,aAAW,CAChC7vB,MAAO,OAAQ6vB,MAAO,eAItB8L,EAAyBw2B,QAAZA,EAAAlhC,SAAYkhC,IAAAA,GAAQA,QAARA,EAAZA,EAAc3oD,kBAAM2oD,GAApBA,EAAsBxvC,KAAOiN,GAAaqB,EAAaznB,OAAOmZ,MAAQ,KACnFyvC,EAA6B,QAAZC,EAAAphC,SAAY,IAAAohC,GAAQA,QAARA,EAAZA,EAAc7oD,kBAAM6oD,GAApBA,EAAsBjhC,SACvC6gC,EAAsB5G,MAAM,SAAA/kD,GAAMgsD,IAAAA,SAAKhsD,EAAOtG,SAA6B,QAAxBsyD,EAAKrhC,EAAaznB,cAAM,IAAA8oD,OAAA,EAAnBA,EAAqBlhC,aAC7E,KACAE,GAA0B,QAAZihC,EAAAthC,SAAY,IAAAshC,GAAQA,QAARA,EAAZA,EAAc/oD,cAAd+oD,IAAoBA,OAApBA,EAAAA,EAAsBvyD,QAAS,GAC7CwyD,UAAWC,EAAAxhC,SAAY,IAAAwhC,GAAM,QAANA,EAAZA,EAAc90C,YAAI,IAAA80C,GAAlBA,EAAoB9vC,KAAOiN,GAAaqB,EAAatT,KAAKgF,MAAQ,KAC7E+vC,EAA4BC,QAAZA,EAAA1hC,SAAY0hC,IAAAA,GAAM,QAANA,EAAZA,EAAch1C,YAAdg1C,IAAkBA,GAAlBA,EAAoBhmD,UACpCulD,EAAqB7G,MAAM,SAAA/kD,GAAM,IAAAssD,EAAA,OAAKtsD,EAAOtG,SAA2B4yD,QAAtBA,EAAK3hC,EAAatT,gBAAIi1C,SAAjBA,EAAmBjmD,UAAS,IACnF,yKASsBgW,EAA0BkwC,IAQtBzhC,EAA4B0hC,EAQ/B9yD,EAAyB+yD,MAgBvBpmD,EAA6BqmD,yBAlEvDC,EAAc5jD,MAAMmS,QAAQkE,2BAC5B+L,EAAQwhC,EAAc5wC,GAAeqD,GAAI,sBAC3CnJ,EAAA,GAAE22C,EAAwBD,EAAc5wC,GAAeqD,GAAM,GAAI,0BAC/DytC,EAAe1hC,EAAM1f,IAAI6d,sBAC3BrT,EAAA,EAAE62C,EAAoBF,EAAwBA,EAAsBnhD,IAAI6d,0BAuBxErT,EAAA,EAAE82C,EACW,QAAZC,EAAAriC,SAAYqiC,IAAAA,GAAYA,QAAZA,EAAZA,EAAcpiC,sBAAUoiC,GAAxBA,EAA0B7hC,OAAS2hC,EAC9BniC,EAAaC,WAAWO,MACtB1f,KAAK,SAAA4Q,GAAI,OAAKywC,EAAkB/H,MAAM,SAAA/kD,GAAM,OAAKk3B,GAAQl3B,EAAOtG,MAAO2iB,KAAI,IAC3EnZ,QAAQ,SAAAlD,GAAM,QAAOA,CAAM,IAC9B,qBAEoBqc,UAgDP4wC,EAAC53B,SAAU,IAAA43B,OAAA,EAAVA,EAAYvzD,MA/CzBw9B,WAAOq1B,EAAC5hC,SAAY,IAAA4hC,GAAQ,QAARA,EAAZA,EAAcrpD,cAAM,IAAAqpD,OAAA,EAApBA,EAAsBlwC,KAAMA,KACvC7O,EAAM,mBAAoB6O,QAC1BsO,EAAeuiC,EAAMviC,EAAY,CAAG,SAAU,QAAStO,GAAM,IAC7DwT,EAASlF,oBAIiBG,EAyCQqiC,QAAfA,EAACrB,SAAAqB,IAAcA,OAAdA,EAAAA,EAAgBzzD,MAxCjCw9B,GAAoBs1B,QAAbA,EAAC7hC,aAAY6hC,GAAQ,QAARA,EAAZA,EAActpD,cAAdspD,IAAoBA,OAApBA,EAAAA,EAAsB1hC,SAAUA,KAC3Ctd,EAAM,uBAAwBsd,QAC9BH,EAAeuiC,EAAMviC,EAAY,CAAG,SAAU,YAAaG,GAAU,IACrE+E,EAASlF,qBAIcjxB,EAkCNsxB,EAjCdkM,GAAoB,QAAbu1B,EAAC9hC,SAAY,IAAA8hC,GAAQA,QAARA,EAAZA,EAAcvpD,cAAdupD,IAAoBA,OAApBA,EAAAA,EAAsB/yD,MAAOA,KACxC8T,EAAM,oBAAqB9T,QAC3BixB,EAAeuiC,EAAMviC,EAAY,CAAG,SAAU,SAAUjxB,GAAO,IAC/Dm2B,EAASlF,oBAIJ,SAAetO,GAA0B,IAAA+wC,EAC3Cl2B,GAAoBk2B,QAAbA,EAACziC,aAAYyiC,WAAAA,EAAZA,EAAc/1C,YAAI,IAAA+1C,OAAA,EAAlBA,EAAoB/wC,KAAMA,KACrC7O,EAAM,iBAAkB6O,QACxBsO,EAAeuiC,EAAMviC,EAAY,CAAG,OAAQ,QAAStO,GAAM,IAC3DwT,EAASlF,IAuBV0iC,CAAuBC,QAATA,EAACpB,SAAAoB,IAAQA,OAARA,EAAAA,EAAU5zD,uBAnBC2M,EAoBO,QAAdknD,EAACnB,SAAa,IAAAmB,OAAA,EAAbA,EAAe7zD,MAnB/Bw9B,GAAoBw1B,QAAbA,EAAC/hC,SAAY+hC,IAAAA,GAAM,QAANA,EAAZA,EAAcr1C,YAAI,IAAAq1C,OAAA,EAAlBA,EAAoBrmD,UAAWA,KAC1CmH,EAAM,sBAAuBnH,QAC7BskB,EAAeuiC,EAAMviC,EAAY,CAAG,OAAQ,aAActkB,GAAW,IACrEwpB,EAASlF,oBAIJ,SAAsBQ,GAA2BqiC,IAAAA,EACnDt2B,WAAOs2B,EAAC7iC,SAAY,IAAA6iC,GAAYA,QAAZA,EAAZA,EAAc5iC,kBAAd4iC,IAAwBA,OAAxBA,EAAAA,EAA0BriC,MAAOA,KAC5C3d,EAAM,wBAAyB2d,QAC/BR,EAAeuiC,EAAMviC,EAAY,CAAG,aAAc,SAAUQ,GAAO,IACnE0E,EAASlF,IASV8iC,CAAsBV,EAAkBA,EAAgBthD,KAAK,SAAA2f,GAAI,OAAKA,EAAK1xB,KAAK,SAAIxB,qDAQJm9B,EAAU37B,oBAKzEoyD,EAAcpyD,eAEgBsxB,EAAW7sB,KAAAzE,8BAQoBwyD,EAAQxyD,oBAKrE0yD,EAAa1yD,oBAcbqzD,EAAerzD,28CCxHf41B,wOAFAD,2NAIbq+B,EAAAh2D,KAAcuF,KAAI,yCALdvF,EAAa,GAACiE,KAAOjE,EAAe,GAAA,iMAFxB4G,GAAAqS,EAAA,QAAAg9C,EAAA,UAAA5rD,OAAArK,KAAcuF,KAAI,uCADnBvF,EAAa,GAACiE,KAAOjE,EAAe,qBAJtD6E,GAaQvB,EAAA2V,EAAAnU,uNADL4T,GAAA,EAAApY,IAAA01D,KAAAA,EAAAh2D,KAAcuF,KAAI,KAAAqC,GAAAmxB,EAAAi9B,KAPFt9C,GAAA,EAAApY,GAAA21D,KAAAA,EAAA,UAAA5rD,OAAArK,KAAcuF,KAAI,oEADnBvF,EAAa,GAACiE,KAAOjE,EAAe,2IALjDA,EAAc,iBAAnBa,OAAIC,GAAA,kTAFV+D,GAmBKvB,EAAAuU,EAAA/S,GAlBHzB,GAiBKwU,EAAAH,iHAhBI1X,EAAc,YAAnBa,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,uJAZGo1D,EAA+B17C,EAA/B07C,eACAC,EAAuB37C,EAAvB27C,gBACAC,EAA4C57C,EAA5C47C,sBAEF,SAAAC,EAA0BC,GACjC/3C,EAAA,EAAA43C,EAAkBG,GAClBF,EAAsBE,qNASFD,EAA0BE,EAActyD,GAAE,+vBC8BhDuyD,8KAPd3xD,GAQQvB,EAAA2V,EAAAnU,gDAJI9E,EAAU,+LALnBA,EAAc,GAACa,OAAS,GAACsY,GAAAnZ,gCAYhBy2D,iSAdhB5xD,GAgBKvB,EAAAuU,EAAA/S,GAfHzB,GAAqCwU,EAAAH,kCAYrCrU,GAEQwU,EAAAoB,qFAbHjZ,EAAc,GAACa,OAAS,qRA5BzB61D,EACA7lC,EALOqlC,EAA+B17C,EAA/B07C,eACAC,EAAuB37C,EAAvB27C,gBACAC,EAA4C57C,EAA5C47C,sBAKHv3C,EAAUhS,GAAoB,gBAA9BgS,MACA83C,EACN9pD,GAAiC,kBAD3BmkB,EAAiB2lC,EAAjB3lC,kBAAmBP,EAAkBkmC,EAAlBlmC,+NAInBjvB,EAAK,CACT00D,eAAAA,EACAC,gBAAAA,EACAC,sBAAwB,SAAAD,GACtB1lC,EAAmBI,GACnBulC,EAAsBD,KAI1BtlC,EAAUG,EAAkB4lC,GAAqBp1D,EAAK,CACpDsuB,WAAY,EACZE,WAAY,EACZlrB,OAAQ4xD,EACR96C,mBAAmB,4DAUR86C,EAAe32C,kBAQ0B,OAAAlB,GAAK,gMC7CzD/I,GAAQH,GAAY,gCCH1B,IAAekhD,GAAA,SAACzsD,EAAWzK,EAAWoD,EAAWuC,GAE/C,OADA8E,GAAK9E,EAAI,GACD,EACEvC,EAAI,EAAKqH,EAAIA,EAAIzK,GAGlBoD,EAAI,KADbqH,GACwBA,EAAI,GAAK,GAAKzK,CACxC,ECEam3D,GAAa,WAIxB,IAAIzrC,EACArnB,EAEAqM,EACAkjC,EAEA/tB,EACA3U,EACAkmD,EAEA3pC,EACAtjB,EAEAktD,EACAC,EAIA5oD,EAEA6oD,EAUJ,SAASh4C,EAAIlb,GAIX,OAHmBA,EAAQipB,wBAAwB/N,KAC9BmM,EAAU4B,sBAAwB5B,EAAU4B,wBAAwB/N,IAAM,GAE5D7O,CACpC,CAID,SAAS8O,EAASD,GAChBmM,EAAUlM,SACNkM,EAAUlM,SAASkM,EAAUixB,WAAYp9B,GACxCmM,EAAUkxB,UAAYr9B,CAC5B,CAID,SAASi4C,EAAKC,GAEPJ,IACHA,EAAYI,GAUdj4C,EAHOtO,EAHPomD,EAAcG,EAAcJ,EAGD3mD,EAAO+c,EAAUtjB,IAK5CotD,GAAY,EAGZD,EAAcntD,EACVnH,sBAAsBw0D,GAM5B,WAKE,GAHAh4C,EAAS9O,EAAQ+c,GAGbppB,GAAW+yD,EAAM,CAEnB/yD,EAAQgD,aAAa,WAAY,MAGbhD,EACR8b,OACb,CAGuB,mBAAbzR,GACTA,IAIF2oD,EAAY,EAGZE,GAAY,CACb,CA7BKl7B,EACL,CAgHD,OAhFA,SAAc14B,GAAmC,IAAA6C,yDAAuB,GAStE,OAPA2D,EAAW,IACX0b,EAASrf,EAAQqf,QAAU,EAC3BnX,EAAWlI,EAAQkI,SACnBwC,EAAS1K,EAAQ0K,QAAUgmD,GAC3BE,EAAO5wD,EAAQ4wD,OAAQ,EAGvBn3D,EAAeuG,EAAQklB,YACrB,IAAK,SAEHA,EAAYllB,EAAQklB,UACpB,MAEF,IAAK,SACHA,EAAYjnB,SAASizD,cAAclxD,EAAQklB,WAC3C,MAEF,QACEA,EAAYhpB,OAAO+B,SAASy2C,gBAOhC,OAHAxqC,EAnGOgb,EAAUkxB,UAsGjB38C,EAAe0D,IAEb,IAAK,SACHU,OAAUxD,EACVu2D,GAAO,EACPxjB,EAAOljC,EAAQ/M,EACf,MAIF,IAAK,SAEHiwC,EAAOr0B,EADPlb,EAAUV,GAEV,MAIF,IAAK,SACHU,EAAUI,SAASizD,cAAc/zD,GACjCiwC,EAAOr0B,EAAIlb,GAUf,OAHAopB,EAAWmmB,EAAOljC,EAAQmV,EAG1B5lB,EAAeuG,EAAQ2D,WAErB,IAAK,SACHA,EAAW3D,EAAQ2D,SACnB,MAGF,IAAK,WACHA,EAAW3D,EAAQ2D,SAASsjB,GAO3B8pC,EAIHF,EAAY,EAHZr0D,sBAAsBw0D,EAKzB,CAIH,ECrMMG,GAAoB,IAEpBxhD,GAAQH,GAAY,sBA2BV,SAAA4hD,SAAiBpxD,EAAA8C,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAA0B,GACnDuuD,EAAWrxD,EAAQqxD,UAAYF,GAKjCvtB,EAAa,GAEbv2B,EAAQ,EAEZ,SAASikD,IACP,OAAOjkD,EAAQu2B,EAAMlpC,MACtB,CAED,SAAS62D,IACP,OAAOlkD,EAAQ,CAChB,CAED,SAASmkD,IACP,MAAO,CACLF,QAASA,IACTC,QAASA,IACT72D,OAAQkpC,EAAMlpC,OAEjB,CAED,SAAS+2D,IACHzxD,EAAQgyB,UACVhyB,EAAQgyB,SAASw/B,IAEpB,CAkDD,MAAO,CACLrpD,IAjDF,SAAaolB,GACX5d,GAAM,MAAO4d,GAEbqW,EAAQ,CAACrW,GAAMrpB,OAAO0/B,EAAM3pC,MAAMoT,IAAQpT,MAAM,EAAGo3D,GAEnDhkD,EAAQ,EAERokD,GACD,EA0CC/rD,MAxCF,WACEiK,GAAM,SAENi0B,EAAQ,GACRv2B,EAAQ,EAERokD,GACD,EAkCCD,SAAAA,EACAE,KAjCF,WACE,GAAIJ,IAAW,CACb,IAAM/jC,EAAOqW,EAAMv2B,GAOnB,OANAA,GAAS,EAETsC,GAAM,OAAQ4d,GAEdkkC,IAEOlkC,CACR,CAGF,EAqBCokC,KAnBF,WACE,GAAIJ,IAOF,OAJA5hD,GAAM,OAAQi0B,EAFdv2B,GAAS,IAITokD,IAEO7tB,EAAMv2B,EAIhB,EASH,CCjHgB,SAAAukD,GAAW1pD,EAAmB2pD,GAC5C,IAAM3nD,EAAQ7N,KAAKF,MACbb,EAAS4M,IAKf,OAFA2pD,EAFYx1D,KAAKF,MAEA+N,GAEV5O,CACT,CCIA,IAAMqU,GAAQH,GAAY,cAwCpB,SAAUsiD,GACdvwC,EACAwwC,EACA30C,EACA40C,GAIA,GAFAriD,GAAM,iBAEDoiD,EACH,MAAO,GAGT,GAAI30C,IAAW40C,EAAkB,CAG/B,IAAMxyD,EAAO4d,EAAOG,UAAUgE,GAE9B,OAAOwwC,OADwB13D,IAATmF,EAAqBwyD,EAAiBn0C,MAAMre,QAAQnF,EAE3E,CACC,OAAO03D,EAAUxwC,EAErB,CAEM,SAAU0wC,GACdzyD,EACAuyD,EACA30C,EACA40C,GAIA,GAFAriD,GAAM,gBAEFnQ,EAAK9E,OAASmgB,GAOhB,MAAO,CACLq3C,iBAAkB,CAPqB,CACvC1zC,KAAM,GACNqC,QAAS,mDACTsxC,SAAUn4C,GAAmBtV,QAQjC,GAAoB,IAAhBlF,EAAK9E,OAEP,OAAW,KAGb,IAGE,IAAM6mB,EAAOqwC,IACX,WAAM,OAAAx0C,EAAOS,MAAMre,EAAK,IACxB,SAACmE,GAAQ,OAAKgM,+BAAKzL,OAA6BP,EAAQ,OACzD,IAED,IAAKouD,EACH,OAAO,KAIT,IAAMK,EACJh1C,IAAW40C,EACPzwC,EACAqwC,IACE,WAAM,OAAAI,EAAiBn0C,MAAMre,EAAK,IAClC,SAACmE,UAAagM,GAAKzL,sDAAAA,OAAuDP,EAAa,WAIzFuuD,EAAmBN,IACvB,WAAA,OAAMG,EAAUK,EAAc,IAC9B,SAACzuD,GAAagM,OAAAA,GAAK,+BAAAzL,OAAgCP,EAAQ,OAAM,IAGnE,OAAQgoB,EAAQumC,GAA2C,KAAvB,CAAEA,iBAAAA,EACvC,CAAC,MAAOn1C,GACP,IAAMs1C,EAAeT,IACnB,WAAA,OAgBN,SAAuBpyD,EAAc4d,GACnC,GAAI5d,EAAK9E,OAASogB,GAChB,OAAO,EAGT,IAGE,OAFAsC,EAAOS,MAAM6B,EAAWlgB,KAEb,CACZ,CAAC,MAAOud,GACP,QACD,CACH,CA5BYu1C,CAAc9yD,EAAM4d,EAAO,IACjC,SAACzZ,UAAagM,GAAKzL,2CAAAA,OAA4CP,EAAa,OAC7E,IAOD,MAAO,CACL4uD,WANiBryC,GACjB1gB,EACCud,EAAc8D,SAAY9D,EAAc2G,YAKzC2uC,aAAAA,EAEH,CACH,CCnJA,IAAM1iD,GAAQH,GAAY,2BAWV,SAAAgjD,GAAkBC,GAOd,IACdC,EAPJ5sD,EAAO2sD,EAAP3sD,QACAI,EAASusD,EAATvsD,UACAmf,EAASotC,EAATptC,UACAob,EAAQgyB,EAARhyB,SACAkyB,EAAOF,EAAPE,QACAC,EAAMH,EAANG,OAGIj5C,GAAQ,EAEZ,SAASk5C,IACP,IAAMC,EAAWryB,IAEbqyB,IACFhW,aAAa4V,GACR/4C,IACHhK,GAAM,SACNgjD,IACAh5C,EAAQm5C,GAGb,CAED,SAASC,IACHp5C,IAIFmjC,aAAa4V,GACbA,EAAoBhV,YAAW,WACxBjd,MACH9wB,GAAM,QACNgK,GAAQ,EACRi5C,IAEJ,IAEH,CAED9sD,GAAQ,WACN6J,GAAM,sBACN,IAAMzT,EAASmpB,IACXnpB,IACFA,EAAO+D,iBAAiB,UAAW4yD,GAAe,GAClD32D,EAAO+D,iBAAiB,WAAY8yD,GAAgB,GAExD,IAEA7sD,GAAU,WACRyJ,GAAM,wBACN,IAAMzT,EAASmpB,IACXnpB,IACFA,EAAOgE,oBAAoB,UAAW2yD,GAAe,GACrD32D,EAAOgE,oBAAoB,WAAY6yD,GAAgB,GAE3D,GACF,6lECjCoBl5D,EAAI,6GAAJA,EAAI,0JAwBFm5D,EAAA,IAAAC,GAAA,CAAA53D,MAAA,CAAAoE,KAAA5F,KAAOw3B,kGAAP,EAAAl3B,IAAA+4D,EAAAzzD,KAAA5F,KAAOw3B,mKAEpBw+B,EAAAh2D,KAAO2F,KAAI,GAHP4R,EAAAvX,KAAOw3B,MAAIre,GAAAnZ,yNAHT4G,GAAAqS,EAAA,QAAAg9C,EAAAj2D,KAAOs5D,OACJrgD,EAAA2B,SAAA2+C,EAAAv5D,KAAO4a,0BAdnB/V,GAoBQvB,EAAA2V,EAAAnU,2HAJM0yB,gHAGX9e,GAAA,EAAApY,IAAA01D,KAAAA,EAAAh2D,KAAO2F,KAAI,KAAAiC,GAAAmxB,EAAAi9B,KANLt9C,GAAA,EAAApY,GAAA21D,KAAAA,EAAAj2D,KAAOs5D,2BACJ5gD,GAAA,EAAApY,GAAAi5D,KAAAA,EAAAv5D,KAAO4a,iLAtBd5a,EAAI,IAAAyX,GAAAzX,QAOJA,EAAO,iBAAZa,OAAIC,GAAA,iKAJHd,EAAO,wMAPaA,EAAO,gFANLA,EAAI,GAAA,mCAAjC6E,GAyCKvB,EAAAgV,EAAAxT,GAvCHzB,GAaKiV,EAAAT,GANHxU,GAKKwU,EAAAH,0CAEPrU,GAwBKiV,EAAAH,4EAjCOnY,EAAW,8CAGdA,EAAI,4HAGRA,EAAO,uCAPaA,EAAO,wBAWvBA,EAAO,YAAZa,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,gDAjBmBd,EAAI,GAAA,gFAiB3Ba,OAAIC,GAAA,2KAnCG,IAAA04D,EAA0Dh/C,EAA1D1R,KAAAA,OAAI,IAAA0wD,EAA6C,UAASA,EAC1DC,EAA4Cj/C,EAA5Cgd,KAAAA,OAAmCh3B,IAA/Bi5D,OAA+Bj5D,EAASi5D,EAC5CC,EAAuCl/C,EAAvCwM,QAAAA,OAAO,IAAA0yC,OAAuBl5D,EAASk5D,IAChCl/C,EAAPm/C,QAAAA,OAAO,IAAAC,EAAA,GAAAA,EACPC,EAA6Cr/C,EAA7Cs/C,QAAAA,OAAO,IAAAD,OAA6Br5D,EAASq5D,EAC7CE,EAA6Cv/C,EAA7C0D,QAAAA,OAAO,IAAA67C,OAA6Bv5D,EAASu5D,EAEpD77C,GACF7R,GAAU6R,yOAIN47C,GACFA,mBA0BQE,EAAOF,SACTE,EAAOF,uBAILE,EAAOC,aACTD,EAAOC,srECpBVj6D,EAAQ,IAAc,IAAVA,EAAK,mJADxB6E,GA+DKvB,EAAA8f,EAAAte,6VAZmBo1D,4BAKEC,+GAFbn6D,EAAK,SAAC,gYAPf6E,GAcOvB,EAAAgwD,EAAAxuD,GAbLzB,GAYOiwD,EAAA8G,GAXL/2D,GAUI+2D,EAAAC,GATFh3D,GAEIg3D,EAAA5G,wBACJpwD,GAKIg3D,EAAAzG,mBAHFvwD,GAEKuwD,EAAAxwC,wCARkCpjB,EAAM,2CAK5CA,EAAK,oNAlDHilB,GAAMjlB,EAAgB,GAAE6gB,kBAA7BhgB,OAAIC,GAAA,oFAgCDyW,EAAAvX,KAAQ6gB,IAAqBmV,GAAAh2B,gMAlCtC6E,GA2COvB,EAAAgwD,EAAAxuD,GA1CLzB,GAyCOiwD,EAAA8G,yHAxCEn1C,GAAMjlB,EAAgB,GAAE6gB,aAA7BhgB,OAAIC,GAAA,EAAA,yGAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,YAgCDd,KAAQ6gB,mGAhCXhgB,OAAIC,GAAA,mMAyBgBw5D,qMANdz1D,GAOQvB,EAAA2V,EAAAnU,2CAJoB9E,EAAQ,+LAVrCixB,GAAkBjxB,EAAe,GAAC2kB,MAAI,GAGtC41C,EAAAv6D,KAAgBgnB,QAAO,yBANZkzC,MASP,IAAA3iD,EAAU,IAAVvX,MAAeA,EAAiB,GAAAa,OAAS,GAACg1B,GAAA71B,2dAjBnD6E,GA4BIvB,EAAA+2D,EAAAv1D,GArBFzB,GAEIg3D,EAAA5G,wBACJpwD,GAEIg3D,EAAAzG,mBACJvwD,GAEIg3D,EAAAtG,mBACJ1wD,GAWIg3D,EAAAG,0FAhBDvpC,GAAkBjxB,EAAe,GAAC2kB,MAAI,KAAA/c,GAAAmxB,EAAAi9B,KAGtCt9C,GAAA,EAAApY,IAAAi6D,KAAAA,EAAAv6D,KAAgBgnB,QAAO,KAAApf,GAAAutC,EAAAolB,GAGT,IAAVv6D,MAAeA,EAAiB,GAAAa,OAAS,0SAkBtC05D,EAAAv6D,KAAQ6gB,GAAqB,sFAAnC,sBAAoC,oOAH1Chc,GAKIvB,EAAA+2D,EAAAv1D,GAJFzB,GAAKg3D,EAAA5G,WACLpwD,GAAKg3D,EAAAzG,WACLvwD,GAAyDg3D,EAAAtG,mCACzD1wD,GAAKg3D,EAAAG,oBADK,EAAAl6D,GAAAi6D,KAAAA,EAAAv6D,KAAQ6gB,GAAqB,KAAAjZ,GAAAutC,EAAAolB,4CAzC/C,QAAAE,GAAA3oC,EAAQ9xB,EAAgB,gIAAxB,EAAAM,IAAAm6D,GAAA3oC,EAAQ9xB,EAAgB,iPAhBjBq4D,EAAmC79C,EAAnC69C,iBACAqC,EAA6ClgD,EAA7CkgD,YAIPC,GAAW,6JAFZp8C,EAAA,EAAAgH,EAAQ8yC,EAAiBx3D,6BAK1B0d,EAAA,EAAAo8C,GAAW,eAIXp8C,EAAA,EAAAo8C,GAAW,gBAcC9W,YAAU,kBAAO6W,EAAYE,EAAe,yKCzC/CC,GACU,oBAAdC,WAA4BA,UAAU1oB,SAAS/nB,cAAc3iB,QAAQ,QAAU,ykBC4BxE+uD,iDAbXz2D,EAAK,+MAFV6E,GAiBKvB,EAAAuU,EAAA/S,GAhBHzB,GAEKwU,EAAAH,mBACLrU,GAYQwU,EAAAoB,qGAdLjZ,EAAK,qJARG,IAAA+6D,EAAevgD,EAAf8+C,MAAAA,WAAKyB,EAAG,QAAOA,EACfC,EAA6CxgD,EAA7C0D,QAAAA,OAAoC1d,IAA7Bw6D,OAA6Bx6D,EAASw6D,EAEhDn8C,EAAUhS,GAAoB,gBAA9BgS,gHAWAX,EACFA,IAEAW,4uHCHG7e,EAAI,GAAA,WACF,6EAKFA,EAAI,GAAA,WACF,4EAKFA,EAAI,GAAA,WACF,+iBAtBb6E,GA+BKvB,EAAA23D,EAAAn2D,wBA5BHzB,GA2BK43D,EAAAC,GA1BH73D,GAAiE63D,EAAAxjD,WAEjErU,GAmBK63D,EAAAC,GAlBH93D,GAKK83D,EAAAhjD,GAJH9U,GAEK8U,EAAAN,mBAGPxU,GAKK83D,EAAAC,GAJH/3D,GAEK+3D,EAAA9iD,mBAGPjV,GAKK83D,EAAAE,GAJHh4D,GAEKg4D,EAAAC,mBAKTj4D,GAEK63D,EAAAK,GADHl4D,GAAkFk4D,EAAAtiD,6LAjC9E4F,EAAUhS,GAAoB,gBAA9BgS,eAEKg8C,GAAS,IAAM,kBA+BkC,OAAAh8C,yIC1B1D,SAAU28C,GAAY9nC,GAI1B,QAAOA,IAAwB,UAAjBA,EAAW,OAAmC,IAAlBA,EAAY,MACxD,CAEM,SAAU+nC,GAAgB/nC,GAI9B,QAAOA,IAAwB,cAAjBA,EAAW,OAA2C,IAAtBA,EAAgB,UAChE,CAEM,SAAUgoC,GAAYhoC,GAG1B,QAAOA,IAAwB,UAAjBA,EAAW,MAAyC,iBAAjBA,EAAW,KAC9D,CAEM,SAAUioC,GAAajoC,GAI3B,QAAOA,GAAkC,mBAApBA,EAAc,OACrC,CAEM,SAAUkoC,GAAqBloC,GACnC,QAAOA,IAGc,oBAAjBA,EAAW,MAGTioC,GAAajoC,EAAW,OAGxBriB,MAAMmS,QAAQkQ,EAAY,OAElC,CAEM,SAAUmoC,GAAiBnoC,GAG/B,QAAOA,IAAwB,QAAjBA,EAAW,MAAeriB,MAAMmS,QAAQkQ,EAAY,OACpE,CAEM,SAAUooC,GAAoBpoC,GAGlC,QAAOA,IAAwB,WAAjBA,EAAW,MAAkBriB,MAAMmS,QAAQkQ,EAAY,OACvE,CAEM,SAAUqoC,GAAoBC,GAClC,OAAOt5C,GAASs5C,IAAkBt5C,GAASs5C,EAA0B,WACvE,CAEM,SAAUC,GACdD,GAEA,OAAOt5C,GAASs5C,IAAkB3qD,MAAMmS,QAAQw4C,EAAgC,iBAClF,CAEM,SAAUE,GAAkBl6D,GAChC,OACE0gB,GAAS1gB,IACTqP,MAAMmS,QAAQxhB,EAAM2iB,OACK,iBAAlB3iB,EAAMglB,SACb,aAAchlB,CAElB,CAEM,SAAUm6D,GAAwBn6D,GACtC,OAAO0gB,GAAS1gB,IAAUk6D,GAAkBl6D,IAAwC,kBAAvBA,EAAMo6D,YACrE,skFClDO,MAAAxvB,EAAAyvB,GAAgBr8D,EAAI,IAAA,2EAApB,EAAAM,GAAAssC,KAAAA,EAAAyvB,GAAgBr8D,EAAI,IAAA,KAAA4H,GAAAwC,EAAAwiC,0EARdhX,EAAA51B,KAAKw3B,MAAI2vB,GAAAnnD,GAGT81B,EAAA91B,KAAK2F,MAAIkwB,GAAA71B,qFARK4G,GAAAqS,EAAA,QAAAF,EAAA,cAAA/Y,KAAK+0B,UAAS,kBAE1BnuB,GAAAqS,EAAA,QAAAg9C,EAAAj2D,KAAKs5D,oBACFt5D,EAAI,GAAC4a,WAAY,mBAL7B/V,GAaQvB,EAAA2V,EAAAnU,6EAVIvF,GAAAS,EAAK,GAAA85D,UAAL95D,KAAK85D,QAAO9lD,MAAAvN,KAAAwC,8CAIZuuB,8GAGLx3B,KAAK2F,iEARS+S,GAAA,EAAApY,GAAAyY,KAAAA,EAAA,cAAA/Y,KAAK+0B,UAAS,sCAE1Brc,GAAA,EAAApY,GAAA21D,KAAAA,EAAAj2D,KAAKs5D,0CACFt5D,EAAI,GAAC4a,WAAY,8OAP7B/V,GAAwBvB,EAAA8f,EAAAte,4JAFxBD,GAA4BvB,EAAA8f,EAAAte,0EAYZ0yB,EAAA,IAAA4hC,GAAA,CAAA53D,MAAA,CAAAoE,KAAA5F,KAAKw3B,kGAAL,EAAAl3B,IAAAw3B,EAAAlyB,KAAA5F,KAAKw3B,6IAGhB,MAAAoV,EAAA5sC,KAAK2F,KAAI,2EAAT,EAAArF,GAAAssC,KAAAA,EAAA5sC,KAAK2F,KAAI,KAAAiC,GAAAwC,EAAAwiC,oJAhBX,MAAA6tB,IAAAA,IAAAgB,GAAgBz7D,EAAI,UAEf,MAAAs8D,IAAAA,IAAAd,GAAYx7D,EAAI,UAEhB,MAAAu8D,IAAAA,IAAAZ,GAAa37D,EAAI,2bALtBA,EAAK,iBAAVa,OAAIC,GAAA,gRAHR+D,GA6BKvB,EAAA8f,EAAAte,+NA1BI9E,EAAK,YAAVa,OAAIC,GAAA,EAAA,yGAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,0HAAJD,OAAIC,GAAA,4KATG,SAAAu7D,GAAgB3oC,UACvB9c,QAAQZ,MAAM,4BAA6B0d,GACpC,yEAJOlZ,EAALuvB,MAAAA,OAAK,IAAAyyB,EAAA,GAAAA,s1CCgId33D,GAA4EvB,EAAA8f,EAAAte,uJAcjE9E,EAAc,iHAAdA,EAAc,6LARjBk6D,GACyBlzC,8BAAA3c,OAAArK,KAAMgnB,iBAC5BhnB,EAAY,gGADU,EAAAM,IAAAm8D,EAAAz1C,QAAA3c,sBAAAA,OAAArK,KAAMgnB,2BAC5BhnB,EAAY,gRALpBA,EAAK,gIAiBEA,EAAQ,2IAIEA,EAAI,6EA1B5B6E,GA4BKvB,EAAA8f,EAAAte,+CATHzB,GAQA+f,EAAAs5C,oCANY18D,EAAY,uRACZA,EAAQ,wBAIEA,EAAI,sMArItB28D,EAkEA5yB,EA5EO6yB,EAASpiD,EAAT7U,KAAAA,OAAI,IAAAi3D,EAAG,GAAEA,EACTC,EAAgBriD,EAAhBud,SAAAA,OAAQ,IAAA8kC,GAAQA,EAChBC,EAA+BtiD,EAA/BsiD,QACAC,EAAkCviD,EAAlCuiD,SACAC,EAAuDxiD,EAAvD2d,SAAAA,OAAmD,IAA3C6kC,EAA2C,KAAIA,EACvDC,EAAuCziD,EAAvCyiD,QACAz3B,EAAoBhrB,EAApBgrB,SAEL1vB,EAAQH,GAAY,kCAmDjBunD,IACPD,EAAQt3D,ySAhDP4Y,EAAA,EAAAvI,EAKM,SAAgB4P,cAErBk3C,EAAQl3C,GACG,WACJ1C,GACA,OAAAmD,GAAwBT,EAAW1C,EAAc8D,UAVjDm2C,CAAgBx3D,kBACxB4Y,EAAA,GAAA6+C,EAaM,SAAax3C,cAElBm3C,EAASn3C,IACF,QACA1C,aAjBKs1C,CAAa7yD,kBAE1BmQ,EAAM,QAASE,wBA8Df+zB,EAAK,CAEJ,CAAAjhC,KAAM,UAGNA,KAAM,SACN0uB,KAAMi/B,GACN6C,MAAO,gBACPvkC,UAAW,aACX+kC,QAASt0B,uBAkBZjnB,EAAA,EAAE8+C,EAAeD,GAAcE,EAAYC,GAAY,CAAKD,sBAE1DE,EAAc,EAEbhmC,KAAMimC,GACN93D,KAAM,QACN2zD,MAAO,mBACP1+C,SAAUmd,EACV+hC,QAASoD,WAtBVI,EAAU,CACX9lC,KAAMkmC,GACN/3D,KAAM,UACN2zD,MAAO,+BACPQ,mBA1DI,GAAA6C,GAAe3mD,EAAK,KAChBgJ,EAA6B,MAAlBhJ,EAAMgJ,SAAmBhJ,EAAMgJ,SAAW,EAC3D29C,EAAYgB,kBAAkB3+C,EAAUA,GACxC29C,EAAY78C,iBA0Dby9C,EAAY,CACb/lC,KAAMomC,GACNj4D,KAAM,cACN2zD,MAAO,4BACPQ,2BAnCEn0D,EAAOo3D,EAASp3D,IAEZwyB,GACFA,EAASxyB,SAEJud,uBA5BF,SAAajd,GACpB6P,EAAM,gBAEA,IAAA9T,EAASiE,EAAM3C,OAA+BtB,MAEhD2D,IAAS3D,IAIbuc,EAAA,EAAA5Y,EAAO3D,GAEHm2B,GACFA,EAASxyB,wEAkFAg3D,EAAW58C,oNCpJtBtT,GAAwB,GAE5B,SAASoxD,GAAc53D,GACrB,GAAkB,WAAdA,EAAMsB,IAAkB,CAC1B,IAAM8G,EAAWgwB,EAAK5xB,IAClB4B,GACFA,GAEH,CACH,CASgB,SAAAyvD,GAAS95D,EAAyBqK,GAOhD,OANIyjB,EAAQrlB,KACVpK,OAAO+D,iBAAiB,UAAWy3D,IAGrCpxD,GAAUL,KAAKiC,GAER,CACLlM,QAAS,WACPsK,GAAYA,GAAUjB,QAAO,SAACzI,UAAMA,IAAMsL,CAAQ,IAE9CyjB,EAAQrlB,KACVpK,OAAOgE,oBAAoB,UAAWw3D,GAEzC,EAEL,ohBCTa79D,EAAW,YACVA,EAAY,yNAN1B6E,GAQKvB,EAAA8f,EAAAte,6CAR2C9E,EAAK,uTAjBxC2F,EAAY6U,EAAZ7U,KACAm3D,EAA+BtiD,EAA/BsiD,QACAC,EAAkCviD,EAAlCuiD,SACAE,EAAuCziD,EAAvCyiD,QAEHp+C,EAAUhS,GAAoB,gBAA9BgS,uKAEC,SAAYk/C,GACnBl/C,IACAo+C,EAAQc,eAIRl/C,ioCCAY2Y,EAAA,IAAA4hC,GAAA,CAAA53D,MAAA,CAAAoE,KAAA5F,KAAKw3B,kGAAL,EAAAl3B,IAAAw3B,EAAAlyB,KAAA5F,KAAKw3B,6IAGhB,MAAAoV,EAAA5sC,KAAK2F,KAAI,2EAAT,EAAArF,GAAAssC,KAAAA,EAAA5sC,KAAK2F,KAAI,KAAAiC,GAAAwC,EAAAwiC,gEAJPhX,EAAA51B,KAAKw3B,MAAI/f,GAAAzX,GAGT81B,EAAA91B,KAAK2F,MAAIwT,GAAAnZ,qFAXP4G,GAAAqS,EAAA,QAAAF,EAAAhX,GAAA2iC,GAAW,0BAA2B1kC,EAAW,GAAAA,KAAK+0B,YAAS,kBAK/DnuB,GAAAqS,EAAA,QAAAg9C,EAAAj2D,KAAKs5D,oBACFt5D,EAAI,GAAC4a,WAAY,mBAR7B/V,GAgBQvB,EAAA2V,EAAAnU,2GAND,GAAA9E,KAAKw3B,8GAGLx3B,KAAK2F,iEAXH+S,GAAA,EAAApY,GAAAyY,KAAAA,EAAAhX,GAAA2iC,GAAW,0BAA2B1kC,EAAW,GAAAA,KAAK+0B,YAAS,sCAK/Drc,GAAA,EAAApY,GAAA21D,KAAAA,EAAAj2D,KAAKs5D,0CACFt5D,EAAI,GAAC4a,WAAY,yJAbhB8Y,EAAgBlZ,EAAhBkZ,KACAsqC,EAAyCxjD,EAAzCua,UAAAA,OAAS,IAAAipC,OAAuBx9D,EAASw9D,EACzCC,EAA8BzjD,EAA9ByjD,0KAMA,SAAAh4D,GACTg4D,IACAvqC,EAAKomC,QAAQ7zD,ghGC2DSuxB,EAAA,IAAA4hC,GAAA,CAAA53D,MAAA,CAAAoE,KAAA5F,MAAKw3B,kGAAL,EAAAl3B,IAAAw3B,EAAAlyB,KAAA5F,MAAKw3B,uKAElBw+B,EAAAh2D,MAAK2F,KAAI,GAHL4R,EAAAvX,MAAKw3B,MAAIre,GAAAnZ,uOAJP4G,GAAAqS,EAAA,QAAAg9C,EAAAj2D,MAAKs5D,OACFrgD,EAAA2B,SAAA2+C,EAAAv5D,MAAK4a,SACRhU,GAAAqS,EAAA,QAAAF,EAAAhX,GAAA/B,MAAK+0B,WAAS,iEANzBlwB,GAaIvB,EAAA46D,EAAAp5D,GAZFzB,GAWQ66D,EAAAjlD,sGAJIue,gHAGT9e,GAAA,EAAApY,IAAA01D,KAAAA,EAAAh2D,MAAK2F,KAAI,KAAAiC,GAAAmxB,EAAAi9B,KAPHt9C,GAAA,EAAApY,GAAA21D,KAAAA,EAAAj2D,MAAKs5D,2BACF5gD,GAAA,EAAApY,GAAAi5D,KAAAA,EAAAv5D,MAAK4a,6BACRlC,GAAA,EAAApY,GAAAyY,KAAAA,EAAAhX,GAAA/B,MAAK+0B,WAAS,2OAZjBopC,mBAKHn+D,EAAK,iBAAVa,OAAIC,GAAA,+VAPEd,EAAgB,sBAFPA,EAAO,gGAO+CA,EAAK,uBAA7BA,EAAO,qIAd5D6E,GAkCKvB,EAAAuU,EAAA/S,0BA/BHzB,GASQwU,EAAAoB,wBAER5V,GAmBKwU,EAAAH,GAlBHrU,GAiBIqU,EAAA0mD,6EAxBMp+D,EAAU,iBARsDA,EAAW,yIAS3EA,EAAgB,kCAFPA,EAAO,wBASjBA,EAAK,YAAVa,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,oCAFiEd,EAAK,kCAA7BA,EAAO,oGAEpDa,OAAIC,GAAA,4PAvDM0Z,EAALuvB,MAAAA,OAAK,IAAAs0B,EAAA,GAAAA,EACLC,EAAqC9jD,EAArC8+C,MAAAA,OAAK,IAAAgF,OAAuB99D,EAAS89D,EACrCC,EAAe/jD,EAAfgE,MAAAA,OAAK,IAAA+/C,EAAG,QAAOA,EAEtBC,GAAU,WAWLC,IACPlgD,EAAA,EAAAigD,GAAU,GAGH,SAAAX,EAAc53D,GAEP,WADAooB,GAAkBpoB,KAE9BA,EAAMM,iBACNgY,EAAA,EAAAigD,GAAU,IAIdvyD,IAAO,WACL7H,SAASgC,iBAAiB,QAASq4D,GACnCr6D,SAASgC,iBAAiB,UAAWy3D,MAGvCxxD,IAAS,WACPjI,SAASiC,oBAAoB,QAASo4D,GACtCr6D,SAASiC,oBAAoB,UAAWw3D,2LA5BvCt/C,EAAA,EAAAmgD,EAAmB30B,EAAM/G,OAAO,SAAAtP,GAAI,OAAuB,IAAlBA,EAAK9Y,oCAGzC,IAAA+jD,EAAaH,EAGnB3a,YAAU,kBAAAtlC,EAAA,EAAQigD,GAAWG,EAAU,WA+CpB,SAAAjrC,EAAAztB,UAAUytB,EAAKomC,QAAQ7zD,EAAK,8mCC5CjCjG,EAAI,GAAC4+D,KAAKpnC,+GAAVx3B,EAAI,GAAC4+D,KAAKpnC,qKAEvBx3B,EAAI,GAAC4+D,KAAKj5D,KAAI,KAHV3F,EAAI,GAAC4+D,KAAKpnC,MAAIre,GAAAnZ,gFAVZ0kC,GAAW,0BAA2B1kC,KAAWA,EAAI,GAAC4+D,KAAK7pC,YAAS,kFAGpE/0B,EAAI,GAAC4+D,KAAKtF,OAKPrgD,EAAA2B,SAAA2+C,EAAAv5D,EAAK,GAAA4+D,KAAKhkD,WAAY,mBATlC/V,GAeQvB,EAAA2V,EAAAnU,uFAJD9E,EAAI,GAAC4+D,KAAKpnC,gIAGdx3B,EAAI,GAAC4+D,KAAKj5D,KAAI,KAAAiC,GAAAmxB,EAAAi9B,uBAbRtxB,GAAW,0BAA2B1kC,KAAWA,EAAI,GAAC4+D,KAAK7pC,YAAS,qDAGpE/0B,EAAI,GAAC4+D,KAAKtF,2BAKP5gD,GAAA,EAAApY,GAAAi5D,KAAAA,EAAAv5D,EAAK,GAAA4+D,KAAKhkD,WAAY,wKAVb4D,MAAAxe,KAAKwe,MAAcurB,MAAA/pC,KAAK+pC,0JAAxB,EAAAzpC,IAAAu+D,EAAArgD,MAAAxe,KAAKwe,OAAc,EAAAle,IAAAu+D,EAAA90B,MAAA/pC,KAAK+pC,wLALlCrW,EAAwBlZ,EAAxBkZ,KACAorC,EAAyCtkD,EAAzCua,UAAAA,OAAgCv0B,IAAvBs+D,OAAuBt+D,EAASs+D,EACzCb,EAA8BzjD,EAA9ByjD,0KASE,SAAAh4D,GACTg4D,IACAvqC,EAAKkrC,KAAK9E,QAAQ7zD,4lECyGjB,MAAA2mC,EAAAyvB,GAAgBr8D,EAAI,IAAA,2EAApB,EAAAM,GAAAssC,KAAAA,EAAAyvB,GAAgBr8D,EAAI,IAAA,KAAA4H,GAAAwC,EAAAwiC,uJAFrB/nC,GAA4BvB,EAAA8f,EAAAte,uEAnCnBoxB,EAAA/kB,GAAAnR,KAAK+pC,oBAAVlpC,OAAIC,GAAA,gNADR+D,GAkCKvB,EAAA8f,EAAAte,4FAjCIoxB,EAAA/kB,GAAAnR,KAAK+pC,eAAVlpC,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,m0BA8BD,MAAA8rC,EAAAyvB,GAAgBr8D,EAAO,KAAA,2EAAvB,EAAAM,GAAAssC,KAAAA,EAAAyvB,GAAgBr8D,EAAO,KAAA,KAAA4H,GAAAwC,EAAAwiC,uJAFxB/nC,GAA4BvB,EAAA8f,EAAAte,uEArBnBi6D,EAAA5tD,GAAAnR,MAAQ+pC,oBAAblpC,OAAIC,GAAA,mNADR+D,GAoBKvB,EAAA8f,EAAAte,4FAnBIi6D,EAAA5tD,GAAAnR,MAAQ+pC,eAAblpC,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,oLAHyBd,EAAO,sIAAPA,EAAO,kNAFfA,EAAO,sIAAPA,EAAO,6KAqBzB,MAAA4sC,EAAAyvB,GAAgBr8D,EAAU,KAAA,2EAA1B,EAAAM,GAAAssC,KAAAA,EAAAyvB,GAAgBr8D,EAAU,KAAA,KAAA4H,GAAAwC,EAAAwiC,8DAHxBA,EAAA5sC,MAAW2F,KAAI,oGADlBd,GAEKvB,EAAA8f,EAAAte,4BADF,EAAAxE,GAAAssC,KAAAA,EAAA5sC,MAAW2F,KAAI,KAAAiC,GAAAwC,EAAAwiC,uJAHlB/nC,GAA4BvB,EAAA8f,EAAAte,iHAJpB9E,EAAU,sIAAVA,EAAU,mOAJwBA,EAAU,sIAAVA,EAAU,wSADjD,MAAAy6D,IAAAA,IAAAkB,GAAa37D,EAAU,WAElB,MAAAs8D,IAAAA,IAAAV,GAAqB57D,EAAU,WAM/B,MAAAu8D,IAAAA,IAAAd,GAAgBz7D,EAAU,WAE1B,MAAAg/D,IAAAA,IAAAtD,GAAY17D,EAAU,qgBAjBjC,MAAAy6D,IAAAA,IAAAkB,GAAa37D,EAAO,WAEf,MAAAs8D,IAAAA,IAAAV,GAAqB57D,EAAO,WAE5B,MAAAu8D,IAAAA,IAAAT,GAAoB97D,EAAO,WAsB3B,MAAAg/D,IAAAA,IAAAvD,GAAgBz7D,EAAO,qgBAjClC,MAAAy6D,IAAAA,IAAAkB,GAAa37D,EAAI,UAEZ,MAAAs8D,IAAAA,IAAAV,GAAqB57D,EAAI,UAEzB,MAAAu8D,IAAAA,IAAAV,GAAiB77D,EAAI,UAoCrB,MAAAg/D,IAAAA,IAAAvD,GAAgBz7D,EAAI,0bAWZi/D,kGAEaj/D,EAAG,yKALlC6E,GAOKvB,EAAAgV,EAAAxT,GANHzB,GAKKiV,EAAAH,GAJH9U,GAEK8U,EAAAT,wBACLrU,GAAoC8U,EAAAN,iDAAT7X,EAAG,+JAtD7BA,EAAK,iBAAVa,OAAIC,GAAA,sFAgDDd,EAAG,IAAAmZ,GAAAnZ,iMAvDV6E,GAiEKvB,EAAA8f,EAAAte,6GA5DS9E,EAAa,kEAElBA,EAAK,YAAVa,OAAIC,GAAA,EAAA,yGAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,YAgDDd,EAAG,qJAhDNa,OAAIC,GAAA,yKAbG,SAAAu7D,GAAgB3oC,UACvB9c,QAAQZ,MAAM,oCAAqC0d,GAC5C,6BA7CLwrC,EAJOn1B,EAAwBvvB,EAAxBuvB,MACAk0B,EAA8BzjD,EAA9ByjD,mBACAkB,EAAuB3kD,EAAvB2kD,IAIXlzD,IAAO,WACC,IAAAmzD,EAAqB/tD,MAAMC,KAAK4tD,EAAez/C,iBAAiB,WAAW4tC,MAC9E,SAAAp0C,GAAM,OAAMA,EAAO2B,QAAQ,IAG1BwkD,GACFA,EAAmBt/C,eAIjBu/C,EAAgB,CACpBC,QAAS,KACTC,UAAW,OACXC,UAAW,OACXC,WAAY,wJAGL,SAAcx5D,OACfsgC,EAAQlY,GAAkBpoB,GAC1B0I,EAA0D0wD,EAAiB94B,MAE7E53B,GAAa1I,EAAM3C,OAAM,CAC3B2C,EAAMM,qBAKAunB,EAAUvB,GAAkB,CAChCE,YAJmCpb,MAAMC,KACzC4tD,EAAez/C,iBAAiB,2BAIhCiN,eAAgBzmB,EAAM3C,OACtBqL,UAAAA,EACAie,QAAU,SAAA5oB,GACD,MAAsC,sBAAtCA,EAAQ+C,aAAa,gBAG5B+mB,GACFA,EAAQhO,6DAeHo/C,EAAcn/C,mQCoSpB/f,EAAO,GAAG,0EAAuEQ,yKAAjFR,EAAO,GAAG,0EAAuEQ,0LAhPlFk/D,EAzFOh4C,EAAalN,EAAbkN,KACA6S,EAA4B/f,EAA5B+f,cACAhX,EAAkB/I,EAAlB+I,OAEAo8C,EAAgBnlD,EAAhBmlD,QAEA1B,EAA8BzjD,EAA9ByjD,mBACA2B,EAAgDplD,EAAhDolD,oBACAC,EAAqBrlD,EAArBqlD,UACAC,EAAuBtlD,EAAvBslD,YACAC,EAAiCvlD,EAAjCulD,sBACAC,EAAgCxlD,EAAhCwlD,MACAC,EAAiCzlD,EAAjCylD,OACAt6B,EAAmBnrB,EAAnBmrB,QACAu6B,EAAoB1lD,EAApB0lD,SACAC,EAAuB3lD,EAAvB2lD,YACAC,EAAqB5lD,EAArB4lD,UACAC,EAA0B7lD,EAA1B6lD,eACAC,EAAoC9lD,EAApC8lD,SACAC,EAAqC/lD,EAArC+lD,UACAC,EAAyBhmD,EAAzBgmD,cACAC,EAAkBjmD,EAAlBimD,OACAC,EAAuBlmD,EAAvBkmD,YA2DF,SAAAC,EAAsB73D,GACzBo7B,EACFq8B,EAAUz3D,GAEVw3D,EAASx3D,43BA7DVyV,EAAA,GAAAuM,EAAYyP,EAAczP,4BAE1BvM,EAAA,GAAAqiD,OAAmBpgE,IAATknB,sBACZnJ,EAAA,GAAEsiD,IAAiB/1C,sBACnBvM,EAAA,GAAEuiD,IAAeh2C,GAAYgH,EAAQuP,GAAavW,wCAClDvM,EAAA,GAAEwiD,EAAaj2C,EAAYyQ,EAAM7T,EAAM2Z,GAAavW,SAActqB,2BAChEwgE,EAAgB3vD,MAAMmS,QAAQu9C,GAC7B,aACAr+C,GAASq+C,GACP,cACA,kCAEHxiD,EAAA,GAAA2lB,EACD08B,IACC//B,GAAiB/V,IAAc6V,GAAe7V,IAAc8V,GAAiB9V,qDAE7Em2C,EAAeL,GAAW18B,IAAyB48B,kDAEnDI,EACDN,GACa,MAAb91C,IACC+V,GAAiB/V,IAAc8V,GAAiB9V,MAChDg2C,6CAEFviD,EAAA,GAAE4iD,EACDP,GACa,MAAb91C,GACAuY,GAAmBvY,KAClBg2C,IACAzvD,MAAMmS,QAAQ+X,EAAM7T,EAAMyW,EAAQkD,GAAavW,2BAEjDvM,EAAA,GAAE6iD,EAAeR,GAAwB,MAAb91C,GAAqBuY,GAAmBvY,4BAClEu2C,EAAmBD,IAAiBz+C,GAAgBo+C,4BAEtDxiD,EAAA,GAAE+iD,EAAcp9B,iCACdq9B,EAAsBD,EAAc,cAAgB,yDACpDE,GAA8BF,GAAsBT,8CACtDtiD,EAAA,GAAEkjD,EAA2BH,EAC1Bn9B,GAAWrZ,KAAepI,GAASq+C,GACnCF,8CACHtiD,EAAA,GAAEmjD,EAA0BJ,EACzBn9B,GAAWrZ,KAAezZ,MAAMmS,QAAQu9C,GACxCF,8CACHtiD,EAAA,GAAEojD,EAA0BL,EACzBn9B,GAAWrZ,IAAcnI,GAAgBo+C,GACzCF,4CAEDzkC,IACY,MAAbtR,IAAqBi2C,IACjBrhC,GACEqhC,EACAxmC,EAAcE,iBACd7V,EAAmByc,GAAavW,IAChCvH,oDAaLm8C,EAAY,EAEX52D,KAAM,MACNihC,MAAK,EAEDjhC,KAAM,SACNgxD,0BAAe+F,GAAS,EACxBroC,KAAMoqC,GACNj8D,KAAM,WACN2zD,MAAO,yCACP1+C,UAAWumD,IAGXr4D,KAAM,kBACN81D,KAAI,CACF91D,KAAM,SACNgxD,0BAAegG,GAAW,EAC1BtoC,KAAMoqC,GACNj8D,KAAMq7D,EACN1H,MAAO,6CACP1+C,UAAWwmD,GAEb5iD,MAAO,OACPurB,MAAK,EAEDjhC,KAAM,SACN0uB,KAAMoqC,GACNj8D,KAAMq7D,EACN1H,MAAO,6CACPQ,mBAAe,OAAAgG,GACfllD,EAAAA,UAAWwmD,IAGXt4D,KAAM,SACN0uB,KAAM4E,EAAgBzE,GAAgBC,GACtCjyB,KAAM,iBACN2zD,MAAO,uEACPQ,0BAAeiG,GACfnlD,EAAAA,UAAWymD,OAMnB,CAAAv4D,KAAM,cAENA,KAAM,MACNihC,MAAK,EAEDjhC,KAAM,kBACN81D,KAAI,CACF91D,KAAM,SACNgxD,QAAO,WAAA,OAAQkG,GAAM,EACrBxoC,EAAAA,KAAMqqC,GACNl8D,KAAM,MACN2zD,MAAO,6DACP1+C,UAAWspB,GAEb1lB,MAAO,OACPurB,MAAK,EAEDjhC,KAAM,SACN0uB,KAAMqqC,GACNl8D,KAAM,gBACN2zD,MAAO,6DACPQ,QAAO,WAAQ,OAAAkG,GAAM,EAAI,EACzBplD,UAAWspB,IAGXp7B,KAAM,SACN0uB,KAAMqqC,GACNl8D,KAAM,gBACN2zD,MAAO,4DACPQ,QAAO,WAAQ,OAAAkG,GAAM,EACrBplD,EAAAA,UAAWspB,MAKfp7B,KAAM,kBACN81D,KAAI,CACF91D,KAAM,SACNgxD,QAAO,kBAAQmG,GAAO,EACtBzoC,EAAAA,KAAMsqC,GACNn8D,KAAM,OACN2zD,MAAO,8DACP1+C,UAAWspB,GAEb1lB,MAAO,OACPurB,MAAK,EAEDjhC,KAAM,SACN0uB,KAAMsqC,GACNn8D,KAAM,iBACN2zD,MAAO,8DACPQ,QAAO,WAAA,OAAQmG,GAAO,EAAI,EAC1BrlD,UAAWspB,IAGXp7B,KAAM,SACN0uB,KAAMsqC,GACNn8D,KAAM,iBACN2zD,MAAO,6DACPQ,QAAO,WAAQ,OAAAmG,GAAO,EAAK,EAC3BrlD,UAAWspB,MAKfp7B,KAAM,SACNgxD,mBAAe,OAAAn0B,GAAO,EACtBnO,KAAMuqC,GACNp8D,KAAM,QACN2zD,MAAO,oCACP1+C,UAAWimD,KAIf,CAAA/3D,KAAM,cAENA,KAAM,MACNihC,MAAK,EAEDjhC,KAAM,SACNihC,MAAK,EAEDjhC,KAAM,SACNgxD,mBAAe,OAAAqG,GACf3oC,EAAAA,KAAMwqC,GACNr8D,KAAM,YACN2zD,MAAO,uCACP1+C,UAAWqmD,IAGXn4D,KAAM,SACNgxD,mBAAe,OAAAsG,GACf5oC,EAAAA,KAAMyqC,GACNt8D,KAAM,UACN2zD,MAAO,4BACP1+C,UAAWsmD,IAGXp4D,KAAM,SACNgxD,0BAAe2G,GAAM,EACrBjpC,KAAM0qC,GACNv8D,KAAM,OACN2zD,MAAO,gCACP1+C,UAAWspB,IAGXp7B,KAAM,SACNgxD,0BAAe4G,GAAW,EAC1BlpC,KAAM2qC,GACNx8D,KAAM,YACN2zD,MAAO,6DACP1+C,UAAWspB,IAGXp7B,KAAM,SACNgxD,mBAAe,OAAAoG,GACf1oC,EAAAA,KAAM4qC,GACNz8D,KAAM,SACN2zD,MAAO,oCACP1+C,UAAWspB,MAKfp7B,KAAM,SACNihC,MAAK,CACD,CAAAjhC,KAAM,QAASnD,KAAM47D,IAErBz4D,KAAM,SACNgxD,QAAO,WAAQ,OAAA6G,EAAsB,YAAW,EAChDnpC,KAAM8pC,EAAce,GAAwBC,GAC5C38D,KAAM,YACN2zD,MAAOiI,EAAsB,aAC7B3mD,UAAW4mD,IAGX14D,KAAM,SACNgxD,QAAO,WAAA,OAAQ6G,EAAsB,SACrCnpC,EAAAA,KAAM8pC,EAAce,GAAwBC,GAC5C38D,KAAM,SACN2zD,MAAOiI,EAAsB,aAC7B3mD,UAAW6mD,IAGX34D,KAAM,SACNgxD,QAAO,WAAQ,OAAA6G,EAAsB,QAAO,EAC5CnpC,KAAM8pC,EAAce,GAAwBC,GAC5C38D,KAAM,QACN2zD,MAAOiI,EAAsB,SAC7B3mD,UAAW8mD,IAGX54D,KAAM,SACNgxD,QAAO,WAAA,OAAQ6G,EAAsB,QACrCnpC,EAAAA,KAAM8pC,EAAce,GAAwBC,GAC5C38D,KAAM,QACN2zD,MAAOiI,EAAsB,SAC7B3mD,UAAW+mD,OAOnB,CAAA74D,KAAM,cAGNA,KAAM,MACNihC,MAAK,EAEDjhC,KAAM,SACNgxD,0BAAeuG,GAAc,EAC7B7oC,KAAM+qC,GACN58D,KAAM,gBACN2zD,MAAO,+DACP1+C,UAAWspB,GAAwB48B,IAGnCh4D,KAAM,SACNgxD,0BAAe0G,KACfhpC,KAAMgrC,GACN78D,KAAM,eACN2zD,MAAO,8DACP1+C,UAAWspB,GAAwB48B,8BAMxCviD,EAAA,EAAAwrB,EAAQ61B,EAAoBF,u0FC7TnB1J,EAAAh2D,MAAmBqQ,MAAK,GAAGkqD,EAAAv6D,MAAmBsQ,IAAG,4EADzD,sBACiC,0GALczL,GAMvCvB,EAAA2V,EAAAnU,4FADA,GAAAxE,GAAA01D,KAAAA,EAAAh2D,MAAmBqQ,MAAK,KAAAzI,GAAAmxB,EAAAi9B,GAAG,GAAA11D,GAAAi6D,KAAAA,EAAAv6D,MAAmBsQ,IAAG,KAAA1I,GAAAutC,EAAAolB,sFALpDv6D,EAAmB,iBAAxBa,OAAIC,GAAA,kFADgB,eAAOd,EAAU,SAAC,UAAEA,EAAQ,iLALhCA,EAAQ,mBAEbA,EAAI,GAACa,OAAS,oBAL/BgE,GAkBKvB,EAAA6U,EAAArT,GAXHzB,GAUK8U,EAAAN,GATHxU,GAAwDwU,EAAAH,mHAJ5C+qD,wDAIiBziE,EAAU,cAAGA,EAAQ,yBAC3CA,EAAmB,YAAxBa,OAAIC,GAAA,EAAA,iHAAJD,iCANgBb,EAAQ,wBAEbA,EAAI,GAACa,OAAS,wDAZpB,SAAA4hE,GAAgBx8D,GAGvBA,EAAMU,mDApBGu0B,EAAiC1gB,EAAjC0gB,gBACAwnC,EAAoBloD,EAApBkoD,aACAC,EAAanoD,EAAbmoD,MACAh+C,EAAcnK,EAAdmK,KACAmG,EAA+BtQ,EAA/BsQ,UACA83C,EAA2DpoD,EAA3DooD,gBACAh2D,EAA0B4N,EAA1B5N,gVAER2R,EAAA,GAAAskD,EAAiB3nC,EAAgBwnC,qBAEjCnkD,EAAA,EAAAsjB,EAAaghC,EAAevyD,yBAC5ByxB,EAAW7G,EAAgBwnC,EAAe,GAAKxnC,EAAgBwnC,EAAe,GAAGryD,MAAQsyD,wBAEzFn6D,EAAWi8B,GAAgB73B,EAAQk2D,UAAWh4C,EAAWnG,EAAKta,OAAOoe,OAAOoZ,yBAE5EkhC,EpDfW,SAAuBlhC,EAAoBE,GAEzD,IAAMihC,EAAW,CACf3yD,MAAOwxB,EACPvxB,IAAK3P,KAAKkkB,IAAIuV,GAAgByH,GAAaE,IAIvCkhC,EAAStiE,KAAKC,IAAIy5B,IAAoBwH,EAAaE,GAAY,GAAIF,GACnEqhC,EAAW,CACf7yD,MAAO4yD,EACP3yD,IAAK3P,KAAKkkB,IAAIuV,GAAgB6oC,GAASlhC,IAInCohC,EAAe9oC,GAAmB0H,GAClCqhC,EAAgBD,IAAiBphC,EAAWohC,EAAeviD,GAAqBuiD,EAChFE,EAAW,CACfhzD,MAAO1P,KAAKC,IAAIwiE,EAAevhC,GAC/BvxB,IAAKyxB,GAGDpI,EAAW,CAACqpC,GAEZM,EAAeJ,EAAS7yD,OAAS2yD,EAAS1yD,KAAO4yD,EAAS5yD,KAAO+yD,EAAShzD,MAUhF,OATIizD,GACF3pC,EAASvtB,KAAK82D,GAGKG,EAAShzD,QAAUizD,EAAeJ,EAAS5yD,IAAM0yD,EAAS1yD,MAE7EqpB,EAASvtB,KAAKi3D,GAGT1pC,CACT,CoDpB2B4pC,CAAuB1hC,EAAYE,0CAqBtC,OAAA6gC,EAAgBj+C,EAAM6+C,+pCCDhCrF,+IAHL18C,wBADazhB,EAAQ,qBAH9B6E,GAQQvB,EAAA2V,EAAAnU,wCAHI9E,EAAW,0EAFDA,EAAQ,yJA3BjBwI,EAAiBgS,EAAjBhS,SACAi7D,EAA4BjpD,EAA5BipD,2HAEF,SAAYx9D,GAEZ,QADHy9D,EAA6Bz9D,EAAM3C,OAChCogE,GAAsC,WAAxBA,EAAWv5C,UAC9Bu5C,EAAaA,EAAWz+D,WAGtBy+D,GACFD,EAAa,CACX3+D,OAAQ4+D,EACRtkD,KAAM,EACNF,IAAK,EACLV,MAAOwD,GACPtD,OAAQqD,GACR+N,UAAW,EACXE,WAAY,EACZ2vC,SAAS,y/BCmDR3/D,EAAiB,GAAA,wHAHf4G,GAAAwc,EAAA,QAAA+hB,EAAApjC,GAAA/B,KAAYA,EAAG,KAAA,oCAHxB6E,GAWKvB,EAAA8f,EAAAte,6CAPU9E,EAAoB,0KAD1B0Y,GAAA,EAAApY,GAAA6kC,KAAAA,EAAApjC,GAAA/B,KAAYA,EAAG,KAAA,yLAVfgC,MAAAhC,EAAQ,GAAA8mC,cAAczd,YAAYrpB,EAAG,0BAElCA,EAAiB,YACjBA,EAAkB,GACpBylC,OAAAzlC,KAAQylC,oGAJT,EAAAnlC,IAAAqjE,EAAA3hE,MAAAhC,EAAQ,GAAA8mC,cAAczd,YAAYrpB,EAAG,KAIpC,EAAAM,IAAAqjE,EAAAl+B,OAAAzlC,KAAQylC,+IAYb,MAAAmH,EAAA3iB,GAAiBjqB,EAAO,GAAC8mC,cAAczd,YAAYrpB,EAAG,KAAA,2EAAtD,EAAAM,GAAAssC,KAAAA,EAAA3iB,GAAiBjqB,EAAO,GAAC8mC,cAAczd,YAAYrpB,EAAG,KAAA,KAAA4H,GAAAwC,EAAAwiC,sFAFxBjnC,KAAA3F,EAAQ,GAAA8mC,cAAczd,YAAYrpB,EAAG,wHAArC,EAAAM,IAAAsjE,EAAAj+D,KAAA3F,EAAQ,GAAA8mC,cAAczd,YAAYrpB,EAAG,sNAO1C,EAAqByjE,cAAAzjE,KAAQyjE,2GAAR,EAAAnjE,IAAAujE,EAAAJ,cAAAzjE,KAAQyjE,0MAvBvDzjE,EAAO,GAAC+3B,UAAY/3B,EAAY,GAAA,0BAsBhC,IAAA81B,GAAA91B,EAAQ,GAAA+3B,UAAY/3B,OAAkBA,EAAY,IAAAmZ,GAAAnZ,wSAAlDA,EAAQ,GAAA+3B,WAAY/3B,MAAkBA,EAAY,8QArE3C2kB,EAAcnK,EAAdmK,KACApd,EAAWiT,EAAXjT,IACAujB,EAA+BtQ,EAA/BsQ,UACAmhB,EAAyDzxB,EAAzDyxB,kBACA63B,EAAuDtpD,EAAvDspD,YAEAl3D,EAAwB4N,EAAxB5N,gSAEV2R,EAAA,EAAEwlD,IAAgBj5C,IAAY6V,GAAe7V,IAAc0U,GAAQ1U,EAAUnG,KAAMA,0BACjFq/C,EAAeD,GAAiB9/B,GAAmBnZ,gBAE7C,SACP7kB,GAEK+9D,GAAiBp3D,EAAQmrB,WAC5B9xB,EAAMM,iBACNqG,EAAQo6B,SAAStE,GAAmB/d,GAAM,MAIrC,SAAYpd,GACZ,OAAAm9B,GAAW,UAAS,CACzB,YAAqB,KAARn9B,cAIUygC,EAAgBb,OACnC88B,EAAaH,EAAYv8D,EAAKqF,EAAQk6B,cAActd,cAAcwe,IAClEk8B,EAAc/lC,EAAQxZ,GAAMta,OAAO45D,GAEzCr3D,EAAQo6B,SACNG,IAAoB7mB,GAA2BkmB,WAC3C/D,GAAqByhC,GAAa,GAClCxhC,GAAmBwhC,GAAa,IAGlC/8B,IAAoB7mB,GAA2BumB,MACjDj6B,EAAQkT,oBAKVlT,EAAQo6B,SAAStE,GAAmB/d,GAAM,IAC1C/X,EAAQkT,wSCzBwCqP,EAAA,CAAAnvB,KAASwB,OAAjC0X,EAAAlZ,KAASwJ,sDAAe4lB,EAAAnc,GAAAkc,EAAA,CAAA9b,GAAArT,KAASwB,wMAAjC,GAAA,EAAAlB,GAAA4Y,KAAAA,EAAAlZ,KAASwJ,WAAS,+KAAMyJ,GAAAkc,EAAA,CAAA9b,GAAArT,KAASwB,sKADrD,QAAA2iE,EAAAnkE,KAASwJ,6GAAT,EAAAlJ,GAAAT,GAAAskE,EAAAA,EAAAnkE,KAASwJ,iNADVxJ,EAAS,iBAAda,OAAIC,GAAA,0RAACd,EAAS,YAAda,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,2JA5BO6jB,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACA4K,EAA0B4N,EAA1B5N,QACAwvB,EAAsB5hB,EAAtB4hB,cACAtR,EAA+BtQ,EAA/BsQ,UACAmhB,EAAiDzxB,EAAjDyxB,8SAEV1tB,EAAA,EAAEwvB,EAAYnN,GAAiB9V,IAAcmZ,GAAmBnZ,oBAE9DvM,EAAA,EAAAyvB,EAAYphC,EAAQw3D,cAAa,CAClCz/C,KAAAA,EACA3iB,MAAAA,EACA+1B,SAAUnrB,EAAQmrB,SAClBqE,cAAAA,EACA2R,UAAAA,EACAxqB,OAAQ3W,EAAQ2W,OAChBujB,cAAel6B,EAAQk6B,cACvBhc,UAAAA,EACAmhB,kBAAAA,EACAjU,QAASprB,EAAQorB,QACjB+O,YAAan6B,EAAQm6B,YACrBC,SAAUp6B,EAAQo6B,SAClBvB,OAAQ74B,EAAQ64B,OAChBwB,eAAgBr6B,EAAQq6B,eACxBnnB,MAAOlT,EAAQkT,0OC5BNukD,GAAuB,CAClCC,WAAW,EACXC,gBAAiB,KACjBC,oBAAqB,KACrBC,eAAgB,KAEhBC,UAAU,GCkBN,SAAUC,GAAeC,GAKV,IAJnBl9C,EAAIk9C,EAAJl9C,KACA6S,EAAaqqC,EAAbrqC,cACAsqC,EAAMD,EAANC,OACA96B,EAAK66B,EAAL76B,MAEA,IAAKxP,EAAczP,UACjB,MAAO,CACLyR,gBAAY/7B,EACZskE,iBAAkB,KAClBt/C,OAAQ,GAIZ,IAAMsF,EAAYyP,EAAczP,UAC1Bi6C,EACJF,EAAS,EAuCb,SAAuBG,GAKL,IAJhBt9C,EAAIs9C,EAAJt9C,KACAqiB,EAAKi7B,EAALj7B,MACAjf,EAASk6C,EAATl6C,UACA+5C,EAAMG,EAANH,OAEMI,EAAcvjC,GAAaha,EAAMoD,GACjCo6C,EAAen7B,EAAMhZ,WAAU,SAAC2C,GAAS,OAAA8L,GAAQ9L,EAAK/O,KAAMsgD,EAAY,IAExEE,EAAa,WAAHC,IAAAA,EAAAA,OAAyBA,QAAzBA,EAASr7B,EAAMv2B,EAAQ,cAAE4xD,SAAhBA,EAAkB1mD,MAAM,EAE7ClL,EAAQ0xD,EACRG,EAAmB,EAEvB,UAAwB7kE,IAAjB2kE,KAA8BxkE,KAAKyP,IAAIy0D,GAAUQ,EAAmBF,IAAe,GACxFE,GAAoBF,IACpB3xD,GAAS,EAGX,IAAM8xD,EAAav7B,EAAMv2B,GAAOmR,KAC1Ba,EAAShS,EAAQ0xD,EAEvB,OAAO1xD,IAAU0xD,QAAiC1kE,IAAjBupC,EAAMv2B,GAAuB,CAAE8xD,WAAAA,EAAY9/C,OAAAA,QAAWhlB,CACzF,CA7DQ+kE,CAAe,CAAE79C,KAAAA,EAAMoD,UAAAA,EAAW+5C,OAAAA,EAAQ96B,MAAAA,IA+DlD,SAAyBy7B,GAKP,IAAAC,EAJhB/9C,EAAI89C,EAAJ99C,KACAqiB,EAAKy7B,EAALz7B,MACAjf,EAAS06C,EAAT16C,UACA+5C,EAAMW,EAANX,OAEMI,EAAcrjC,GAAWla,EAAMoD,GAC/Bo6C,EAAen7B,EAAMhZ,WAAU,SAAC2C,GAAS,OAAA8L,GAAQ9L,EAAK/O,KAAMsgD,EAAY,IAE1EI,EAAmB,EACnB7xD,EAAQ0xD,EAENQ,EAAa,eAAHC,EAAA,OAAyB,QAAzBA,EAAS57B,EAAMv2B,EAAQ,UAAE,IAAAmyD,OAAA,EAAhBA,EAAkBjnD,MAAM,EAEjD,UAAwBle,IAAjBklE,KAA8B/kE,KAAKyP,IAAIy0D,GAAUQ,EAAmBK,IAAe,GACxFL,GAAoBK,IACpBlyD,GAAS,EAGX,IAAM0qB,EAAaC,EAAQ8mC,GACrB74C,EAASmP,EAAM7T,EAAMwW,GACrB1a,EAAUnS,MAAMmS,QAAQ4I,GAExBk5C,EAA+BG,QAArBA,EAAG17B,EADCvmB,EAAUhQ,EAAQA,EAAQ,UAC3BiyD,IAAkBA,OAAlBA,EAAAA,EAAoB9gD,KACjCa,EAAShS,EAAQ0xD,EAEvB,OAAOI,EAAa,CAAEA,WAAAA,EAAY9/C,OAAAA,GAAW,CAAEniB,QAAQ,EAAMmiB,OAAAA,EAC/D,CAzFQogD,CAAiB,CAAEl+C,KAAAA,EAAMoD,UAAAA,EAAW+5C,OAAAA,EAAQ96B,MAAAA,IAElD,IAAKg7B,GAAgD,IAA5BA,EAAiBv/C,OACxC,MAAO,CACL+W,gBAAY/7B,EACZskE,iBAAkB,KAClBt/C,OAAQ,GAIZ,IAAM+W,WlDuYN7U,EACAoD,EACAi6C,GAEA,IAAKj6C,EACH,MAAO,GAGT,IAAMw6C,EAAa,eAAgBP,EAAmBA,EAA6B,gBAAIvkE,EACjF6C,EAAS,WAAY0hE,EAAmBA,EAAyB,YAAIvkE,EAErE09B,EAAaC,EAAQkD,GAAavW,IAClCsB,EAASmP,EAAM7T,EAAMwW,GAE3B,KACG76B,GACCiiE,GAAc/hC,GAAe+hC,EAAYpnC,IAAeonC,EAAWzkE,OAASq9B,EAAWr9B,QAEzF,MAAO,GAGT,IAAM4gC,EAAYC,GAAaha,EAAMoD,GAC/B6W,EAAUC,GAAWla,EAAMoD,GAC3B+6C,EAAWxnC,EAAKoD,GAChBqkC,EAASznC,EAAKsD,GACdokC,EAA4BT,EAAaA,EAAWpnC,EAAWr9B,aAAUL,EAE/E,IAAI28B,EAAa/Q,GAuBNgR,IAAAA,EAAYhR,GAAS,CAE9B,IAAMyV,EAAaxf,GAAIwjD,GACjB9jC,EAAW1f,GAAIyjD,GACfE,OAAoBxlE,IAAVulE,EAAsB1jD,GAAI0jD,GAAS35C,EAAOvrB,OAG1D,OAESolE,GAJKlkC,EAAWF,EAAa,EAElCmkC,EAAUnkC,EAEQ,SAACrc,GACnB,MAAO,CACLyS,GAAI,OACJ3mB,KAAMsT,EAAmBsZ,EAAW7zB,OAAOoe,OAAOoZ,EAAarc,KAC/Db,KAAMC,EAAmBsZ,EAAW7zB,OAAOoe,OAAOu9C,EAAUxgD,KAEhE,EAGoB,WAClB,MAAO,CACLyS,GAAI,OACJ3mB,KAAMsT,EAAmBsZ,EAAW7zB,OAAOoe,OAAOoZ,KAClDld,KAAMC,EAAmBsZ,EAAW7zB,OAAOoe,OAAOu9C,KAEtD,EAEH,CACC,MAAU,IAAAh6D,MAAM,mEACjB,CAlDC,IAAMrK,EAAOzC,OAAOyC,KAAKyqB,GACnByV,EAAalgC,EAAK+F,QAAQm+D,GAC1B9jC,EAAWpgC,EAAK+F,QAAQo+D,GACxBE,EAAU3iE,EAAS1B,EAAKd,YAAmBL,IAAVulE,EAAsBpkE,EAAK+F,QAAQq+D,IAAU,EAEpF,OAAoB,IAAhBlkC,IAAmC,IAAdE,IAAgC,IAAbikC,EACtCA,EAAUnkC,EAIL,GAAAx3B,OAAA4J,EAAItS,EAAKvB,MAAMyhC,EAAYE,EAAW,IAAE9tB,EAAKtS,EAAKvB,MAAM4lE,EAASrkE,EAAKd,UAASkT,KACpF,SAACxM,GAAG,OAAKsgC,GAAS3J,EAAY32B,EAC/B,IAKM,GAAA8C,OAAA4J,EAAItS,EAAKvB,MAAM4lE,EAASnkC,IAAW5tB,EAAKtS,EAAKvB,MAAM2hC,EAAW,EAAGpgC,EAAKd,UAASkT,KACpF,SAACxM,UAAQsgC,GAAS3J,EAAY32B,EAC/B,IAiCA,EACT,CkDxdqB2+D,CAAiBx+C,EAAMoD,EAAWi6C,GAE/CpgD,EAAOwZ,EAAQuD,GAAaha,EAAMoD,IAClC9oB,EAAQu5B,EAAM7T,EAAM/C,GAC1B,GAAItT,MAAMmS,QAAQxhB,GAAQ,CACxB,IAAM8iE,EAmFV,SAAoCqB,GAKPC,IAAAA,EAAAC,EAJ3Bt8B,EAAKo8B,EAALp8B,MACAriB,EAAIy+C,EAAJz+C,KACAoD,EAASq7C,EAATr7C,UACAtF,EAAM2gD,EAAN3gD,OAEMic,EAAYC,GAAaha,EAAMoD,GAC/B6W,EAAUC,GAAWla,EAAMoD,GAE3B+W,EAAakI,EAAMhZ,WAAU,SAAC2C,GAAI,OAAK8L,GAAQ9L,EAAK/O,KAAM8c,EAAU,IACpEM,EAAWgI,EAAMhZ,WAAU,SAAC2C,GAAS,OAAA8L,GAAQ9L,EAAK/O,KAAMgd,EAAQ,IAEhEX,EAAuColC,QAA7BA,EAAGr8B,EAAMlI,EAAarc,UAAnB4gD,IAA0BA,OAA1BA,EAAAA,EAA4BzhD,KACzCoc,EAAoC,QAA3BslC,EAAGt8B,EAAMhI,EAAWvc,UAAO,IAAA6gD,OAAA,EAAxBA,EAA0B1hD,KAE5C,OAAO6c,GAAqBR,EAAYD,EAC1C,CAnG6BulC,CAA4B,CACnDv8B,MAAAA,EACAriB,KAAAA,EACAoD,UAAAA,EACAtF,OAAQu/C,EAAiBv/C,SAG3B,MAAO,CACL+W,WAAAA,EACAuoC,iBAAAA,EACAt/C,OAAQu/C,EAAiBv/C,OAE5B,CAEC,MAAO,CACL+W,WAAAA,EACAuoC,iBAAkB,KAClBt/C,OAAQu/C,EAAiBv/C,OAG/B,CCvDgB,SAAA+gD,GACdxyD,EACAgnB,GAEA,OAxBc,SACdhnB,EACAvI,GAEA,GAAKuI,EAAL,CAMA,IAFA,IAAM6qB,EAAiC,CAAA,EAEvC4nC,EAAA,EAAAC,EAAgBvnE,OAAOyC,KAAKoS,GAAIyyD,EAAAC,EAAA5lE,OAAA2lE,IAAE,CAA7B,IAAMnlE,EAAColE,EAAAD,GACNh7D,EAAOnK,EAAG0S,EAAI1S,MAChBu9B,EAAYv9B,GAAK0S,EAAI1S,GAExB,CAED,OAAOnC,OAAOyC,KAAKi9B,GAAa/9B,OAAS,EAAI+9B,OAAcp+B,CAV1D,CAWH,CAOSkmE,CAAqB3yD,GAAK,SAAC1S,GAAC,OAAKs9B,EAAsBt9B,EAAG05B,KACnE,mgBCLcm/B,+IANdr1D,GAOQvB,EAAA2V,EAAAnU,qDAJIvF,GAAAS,OAAAA,EAAQ,GAAAgU,MAAAvN,KAAAwC,qCACHtD,KAAA3F,EAAI,IAAKA,EAAoB,6FAA7B2F,CAAAA,KAAA3F,EAAI,IAAKA,EAAoB,8JAftC4tC,EAAuB/gC,GAAiC,kBAEnD+tD,EAAwDpgD,EAAxDogD,gBACA+L,EAAqCnsD,EAArCmsD,4JAEVpoD,EAAA,EAAE5Y,EACDw2D,GAAwBvB,IAAoBA,EAAgBwB,aACxD,wBACAxB,EAAgB5zC,qjcC62BVhnB,EAAO,GAAC+3B,UAAY/3B,EAAc,KAAIA,EAAc,KAAA4gC,GAAiB5gC,EAAc,KAAA6gC,GAAiB7gC,EAAS,OAAOikC,GAAmBjkC,EAAS,KAAKw/B,GAAQ6B,GAAarhC,EAAS,IAAGA,EAAI,6CAX1LA,EAAI,KAAA4mE,2CAMOxqC,cAAAp8B,QAAiB,YACrBA,EAAc,IAAGA,EAAS,GAAG,uBACrBysC,GAAyBzsC,EAAoB,GAAEA,EAAO,qCASxEA,EAAe,KAAA6mE,GAAA7mE,MAGdA,EAAI,KAAA8mE,GAAA9mE,gQAvBZ6E,GA+BKvB,EAAAuU,EAAA/S,GA9BHzB,GAkBKwU,EAAAH,+NAhBG1X,EAAI,wGAMO,KAAAM,EAAA,KAAAymE,EAAA3qC,cAAAp8B,QAAiB,4BACrBA,EAAc,IAAGA,EAAS,GAAG,qCACrBysC,GAAyBzsC,EAAoB,GAAEA,EAAO,0DAGrEA,EAAO,GAAC+3B,UAAY/3B,EAAc,KAAIA,EAAc,KAAA4gC,GAAiB5gC,EAAc,KAAA6gC,GAAiB7gC,EAAS,OAAOikC,GAAmBjkC,EAAS,KAAKw/B,GAAQ6B,GAAarhC,EAAS,IAAGA,EAAI,0HAM7LA,EAAe,oHAGdA,EAAI,mUA1GFA,EAAO,GAAC+3B,UAAY/3B,EAAc,KAAIA,EAAc,KAAA4gC,GAAiB5gC,EAAc,KAAA6gC,GAAiB7gC,EAAS,OAAOikC,GAAmBjkC,EAAS,KAAKw/B,GAAQ6B,GAAarhC,EAAS,IAAGA,EAAI,0CAxBzLA,EAAQ,2EAOTA,EAAI,KAAAgnE,4BAKDhnE,EAAQ,IAAAinE,mCAkBdC,EAAAlnE,EAAqB,OAAAA,EAAa,MAAAA,MAAgBo8D,eAAY+K,GAAAnnE,0BAG9DA,EAAQ,IAAAonE,GAOFpnE,EAAI,WAAAqnE,0BASZrnE,EAAQ,KAAAmmD,GAAAnmD,ilBAzDb6E,GAwDKvB,EAAAgV,EAAAxT,GAvDHzB,GAoCKiV,EAAAH,GAnCH9U,GAWQ8U,EAAAc,wEAKR5V,GAaK8U,EAAAN,GAZHxU,GAWKwU,EAAAH,4IAzBK1X,EAAY,4NAUlBA,EAAI,kIAiBJA,EAAO,GAAC+3B,UAAY/3B,EAAc,KAAIA,EAAc,KAAA4gC,GAAiB5gC,EAAc,KAAA6gC,GAAiB7gC,EAAS,OAAOikC,GAAmBjkC,EAAS,KAAKw/B,GAAQ6B,GAAarhC,EAAS,IAAGA,EAAI,2HAM7LA,EAAqB,KAAAA,EAAa,KAAAA,MAAgBo8D,mMAmBpDp8D,EAAQ,6ZAlJHA,EAAO,GAAC+3B,UAAY/3B,EAAc,KAAIA,EAAc,KAAA4gC,GAAiB5gC,EAAc,KAAA6gC,GAAiB7gC,EAAS,OAAOikC,GAAmBjkC,EAAS,KAAKw/B,GAAQ6B,GAAarhC,EAAS,IAAGA,EAAI,0CA7BzLA,EAAQ,IAAA,uEAOTA,EAAI,KAAAsnE,4BAKDtnE,EAAQ,IAAAomD,mCAuBd8gB,EAAAlnE,EAAqB,OAAAA,EAAa,MAAAA,MAAgBo8D,eAAYlV,GAAAlnD,0BAG9DA,EAAQ,IAAAgnD,0BAgBVhnD,EAAQ,KAAAg2B,GAAAh2B,6kBA9Db6E,GA6DKvB,EAAAgV,EAAAxT,GA5DHzB,GAyCKiV,EAAAH,GAxCH9U,GAWQ8U,EAAAc,wEAKR5V,GAkBK8U,EAAAN,GAjBHxU,GAgBKwU,EAAAH,yIA9BK1X,EAAY,4NAUlBA,EAAI,kIAsBJA,EAAO,GAAC+3B,UAAY/3B,EAAc,KAAIA,EAAc,KAAA4gC,GAAiB5gC,EAAc,KAAA6gC,GAAiB7gC,EAAS,OAAOikC,GAAmBjkC,EAAS,KAAKw/B,GAAQ6B,GAAarhC,EAAS,IAAGA,EAAI,2HAM7LA,EAAqB,KAAAA,EAAa,KAAAA,MAAgBo8D,6LAmBpDp8D,EAAQ,qeAuLP6E,GAAiCvB,EAAA8f,EAAAte,wFAYD,EAAqB2+D,cAAAzjE,KAAQyjE,6IAD7D5+D,GAEKvB,EAAA8f,EAAAte,+CADgD,IAAAxE,EAAA,KAAAujE,EAAAJ,cAAAzjE,KAAQyjE,4NAKdzjE,EAAY,8cAG7D6E,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAiB,uGApIbunE,wOAFApJ,yTAOdt5D,GAAiCvB,EAAA8f,EAAAte,oEAS1B0iE,EAAAtoE,OAAOyC,KAAK3B,MAAOa,OAAM,GACzB4mE,EAA8B,IAA9BvoE,OAAOyC,KAAK3B,EAAO,IAAAa,OAAe,OAAS,gTAH9CgE,GAAsCvB,EAAAoU,EAAA5S,aACtCD,GAGQvB,EAAA2V,EAAAnU,qCACRD,GAAsCvB,EAAAuU,EAAA/S,sBAJU9E,EAAY,4BACzD,EAAAM,EAAA,IAAAknE,KAAAA,EAAAtoE,OAAOyC,KAAK3B,MAAOa,OAAM,KAAA+G,GAAAsxB,EAAAsuC,GACzB,EAAAlnE,EAAA,IAAAmnE,KAAAA,EAA8B,IAA9BvoE,OAAOyC,KAAK3B,EAAO,IAAAa,OAAe,OAAS,UAAO+G,GAAAwtC,EAAAqyB,gNALrD5iE,GAAmDvB,EAAA8f,EAAAte,6FAavB,EAAqB2+D,cAAAzjE,KAAQyjE,6IAD7D5+D,GAEKvB,EAAA8f,EAAAte,+CADgD,IAAAxE,EAAA,KAAAujE,EAAAJ,cAAAzjE,KAAQyjE,4NAKdzjE,EAAY,8cAU7D6E,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAiB,oQAX7B6E,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAkB,2FAaxBA,EAAO,GAAC+3B,WAAa/3B,EAAK,MAAK0hB,IAAwB1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,gBAenG++D,EAAA5tD,GAAAnR,MAASA,EAAI,GAAEA,EAAK,GAAEA,EAAa,GAAAA,EAAkB,GAAAA,KAAoBA,EAAmB,GAAEA,EAAsB,GAAAA,KAAWA,EAAQ,mBAA5Ia,OAAIC,GAAA,uFA8BAd,EAAI,KAAA0nE,GAAA1nE,8XA9CZ6E,GAyCKvB,EAAAoU,EAAA5S,qFACLD,GAYKvB,EAAAgV,EAAAxT,GAXHzB,GAEKiV,EAAAH,mEA5CCnY,EAAO,GAAC+3B,WAAa/3B,EAAK,MAAK0hB,IAAwB1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,iJAenG++D,EAAA5tD,GAAAnR,MAASA,EAAI,GAAEA,EAAK,GAAEA,EAAa,GAAAA,EAAkB,GAAAA,KAAoBA,EAAmB,GAAEA,EAAsB,GAAAA,KAAWA,EAAQ,cAA5Ia,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,YA8BAd,EAAI,0GA9BRa,OAAIC,GAAA,gOALUd,EAAc,KAAI0gC,GAAkB1gC,EAAS,kBACxCA,EAAiC,2KAJ3CwhB,IAJY9Y,GAAA0a,EAAA,cAAApjB,QAAU0hB,wBACT1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,oBAElDA,EAAI,GAACa,OAAS,oBAL/BgE,GAYKvB,EAAA8f,EAAAte,uEAHS9E,EAAc,KAAI0gC,GAAkB1gC,EAAS,gCAPtC0I,GAAA0a,EAAA,cAAApjB,QAAU0hB,0CACT1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,4BAElDA,EAAI,GAACa,OAAS,2KAwBnB8jB,KAAA3kB,MAAK2kB,KACNpd,IAAAvH,MAAKuH,IACCujB,UAAA9qB,MAAK8qB,UACGmhB,kBAAAjsC,MAAK2nE,iDAEX3nE,EAAe,mJAPhC6E,GASKvB,EAAA8f,EAAAte,uDAPK,KAAAxE,EAAA,KAAAsnE,EAAAjjD,KAAA3kB,MAAK2kB,MACN,KAAArkB,EAAA,KAAAsnE,EAAArgE,IAAAvH,MAAKuH,KACC,KAAAjH,EAAA,KAAAsnE,EAAA98C,UAAA9qB,MAAK8qB,WACG,KAAAxqB,EAAA,KAAAsnE,EAAA37B,kBAAAjsC,MAAK2nE,kOAhBrB3lE,MAAAhC,MAAKgC,MACN2iB,KAAA3kB,MAAK2kB,KACE6V,YAAAx6B,MAAKw6B,YACAC,iBAAAz6B,MAAKy6B,iBACHC,mBAAA16B,MAAK06B,mBACJmtC,oBAAA7nE,MAAK6nE,oBACJC,qBAAA9nE,MAAK+nE,0BAChBj9C,UAAA9qB,MAAK8qB,4CAEM9qB,EAAwB,2IATvC,KAAAM,EAAA,KAAA0nE,EAAAhmE,MAAAhC,MAAKgC,OACN,KAAA1B,EAAA,KAAA0nE,EAAArjD,KAAA3kB,MAAK2kB,MACE,KAAArkB,EAAA,KAAA0nE,EAAAxtC,YAAAx6B,MAAKw6B,aACA,KAAAl6B,EAAA,KAAA0nE,EAAAvtC,iBAAAz6B,MAAKy6B,kBACH,KAAAn6B,EAAA,KAAA0nE,EAAAttC,mBAAA16B,MAAK06B,oBACJ,KAAAp6B,EAAA,KAAA0nE,EAAAH,oBAAA7nE,MAAK6nE,qBACJ,KAAAvnE,EAAA,KAAA0nE,EAAAF,qBAAA9nE,MAAK+nE,2BAChB,KAAAznE,EAAA,KAAA0nE,EAAAl9C,UAAA9qB,MAAK8qB,2ZAsBlBjmB,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAiB,uGAhOfunE,wOAFApJ,yTAOdt5D,GAAiCvB,EAAA8f,EAAAte,oEAc1B0iE,EAAAxnE,KAAMa,OAAM,GACZ4mE,EAAiB,IAAjBznE,KAAMa,OAAe,OAAS,gTAHjCgE,GAA+BvB,EAAAoU,EAAA5S,aAC/BD,GAGQvB,EAAA2V,EAAAnU,qCACRD,GAA+BvB,EAAAuU,EAAA/S,sBAJiB9E,EAAY,4BACzD,EAAAM,EAAA,IAAAknE,KAAAA,EAAAxnE,KAAMa,OAAM,KAAA+G,GAAAsxB,EAAAsuC,GACZ,EAAAlnE,EAAA,IAAAmnE,KAAAA,EAAiB,IAAjBznE,KAAMa,OAAe,OAAS,UAAO+G,GAAAwtC,EAAAqyB,iGARrCD,EAAAxnE,KAAMa,OAAM,GACZ4mE,EAAiB,IAAjBznE,KAAMa,OAAe,OAAS,0GAC3B,qIAJNgE,GAA+BvB,EAAA8f,EAAAte,aAC/BD,GAGMvB,EAAAqpC,EAAA7nC,sDAFH,EAAAxE,EAAA,IAAAknE,KAAAA,EAAAxnE,KAAMa,OAAM,KAAA+G,GAAAsxB,EAAAsuC,GACZ,EAAAlnE,EAAA,IAAAmnE,KAAAA,EAAiB,IAAjBznE,KAAMa,OAAe,OAAS,UAAO+G,GAAAwtC,EAAAqyB,4GAeZ,EAAqBhE,cAAAzjE,KAAQyjE,6IAD7D5+D,GAEKvB,EAAA8f,EAAAte,+CADgD,IAAAxE,EAAA,KAAAujE,EAAAJ,cAAAzjE,KAAQyjE,4NAKdzjE,EAAY,8cAU7D6E,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAiB,oQAX7B6E,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAkB,2FAaxBA,EAAO,GAAC+3B,WAAa/3B,EAAK,MAAK0hB,IAAwB1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,+BAenGo2B,EAAAjlB,GAAAnR,OAAmB+gB,yBAA0D/gB,EAAY,GAAA,UAA9Fa,OAAIC,GAAA,EAAA,qDAoCAd,EAAI,KAAA61B,GAAA71B,gYApDZ6E,GA+CKvB,EAAAoU,EAAA5S,qFACLD,GAYKvB,EAAA6U,EAAArT,GAXHzB,GAEK8U,EAAAN,gEAlDC7X,EAAO,GAAC+3B,WAAa/3B,EAAK,MAAK0hB,IAAwB1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,wIAenGo2B,EAAAjlB,GAAAnR,OAAmB+gB,mDAoCpB/gB,EAAI,0GApCRa,OAAIC,GAAA,yOALUd,EAAc,KAAI0gC,GAAkB1gC,EAAS,kBACxCA,EAAiC,2KAJ3CwhB,IAJY9Y,GAAA0a,EAAA,cAAApjB,QAAU0hB,wBACT1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,oBAElDA,EAAI,GAACa,OAAS,oBAL/BgE,GAYKvB,EAAA8f,EAAAte,uEAHS9E,EAAc,KAAI0gC,GAAkB1gC,EAAS,gCAPtC0I,GAAA0a,EAAA,cAAApjB,QAAU0hB,0CACT1hB,EAAc,KAAI0gC,GAAkB1gC,EAAS,4BAElDA,EAAI,GAACa,OAAS,iJAwBD+rC,EAAA5sC,MAAKwT,MAAK,yLADpC3O,GAEKvB,EAAAuU,EAAA/S,GADHzB,GAAwCwU,EAAAH,4BAAhB,MAAApX,EAAA,IAAAssC,KAAAA,EAAA5sC,MAAKwT,MAAK,KAAA5L,GAAAwC,EAAAwiC,gFAZ7B5qC,MAAAhC,MAAKgC,MACN2iB,KAAA3kB,MAAK2kB,KACE6V,YAAAx6B,MAAKw6B,YACAC,iBAAAz6B,MAAKy6B,iBACHC,mBAAA16B,MAAK06B,mBACJmtC,oBAAA7nE,MAAK6nE,oBACJC,qBAAA9nE,MAAK8nE,qBAChBh9C,UAAA9qB,MAAK8qB,4CAEM9qB,EAAwB,8LATvC,MAAAM,EAAA,KAAA0nE,EAAAhmE,MAAAhC,MAAKgC,OACN,MAAA1B,EAAA,KAAA0nE,EAAArjD,KAAA3kB,MAAK2kB,MACE,MAAArkB,EAAA,KAAA0nE,EAAAxtC,YAAAx6B,MAAKw6B,aACA,MAAAl6B,EAAA,KAAA0nE,EAAAvtC,iBAAAz6B,MAAKy6B,kBACH,MAAAn6B,EAAA,KAAA0nE,EAAAttC,mBAAA16B,MAAK06B,oBACJ,MAAAp6B,EAAA,KAAA0nE,EAAAH,oBAAA7nE,MAAK6nE,qBACJ,MAAAvnE,EAAA,KAAA0nE,EAAAF,qBAAA9nE,MAAK8nE,sBAChB,MAAAxnE,EAAA,KAAA0nE,EAAAl9C,UAAA9qB,MAAK8qB,qQAWCoQ,gBAAAl7B,OAAmB+gB,sBAE7B4hD,MAAA3iE,KAAMa,iBAEI+hE,gBAAA5iE,KAAQ4iE,yIAJR,MAAAtiE,EAAA,KAAA2nE,EAAA/sC,gBAAAl7B,OAAmB+gB,uCAE7B,EAAAzgB,EAAA,KAAA2nE,EAAAtF,MAAA3iE,KAAMa,8BAEI,IAAAP,EAAA,KAAA2nE,EAAArF,gBAAA5iE,KAAQ4iE,iPAxBtB1sC,EAAA/kB,GAAAnR,MAASA,EAAI,GAAEA,EAAO,GAAAA,MAAgBA,EAAW,GAAEA,EAAkB,GAAAA,KAAoBA,EAAmB,GAAEA,EAAsB,GAAAA,KAAWA,EAAQ,MAAW4R,EAAA,SAAA5R,UAAAA,MAAKwT,KAAK,UAAjL3S,OAAIC,GAAA,EAAA,8CAkBD,IAAAyW,EAAAvX,EAAe,IAAAsQ,IAAMtQ,KAAMa,QAAMsmD,GAAAnnD,2QAlB/Bk2B,EAAA/kB,GAAAnR,MAASA,EAAI,GAAEA,EAAO,GAAAA,MAAgBA,EAAW,GAAEA,EAAkB,GAAAA,KAAoBA,EAAmB,GAAEA,EAAsB,GAAAA,KAAWA,EAAQ,6DAkBzJA,EAAe,IAAAsQ,IAAMtQ,KAAMa,wKAlB9BA,OAAIC,GAAA,6XAoCN+D,GAKCvB,EAAA8f,EAAAte,sBADW9E,EAAiB,6GAmKrBA,EAAc,KAAIygC,GAAiBzgC,EAAS,kBACvCA,EAAgC,yKAJ1CwhB,IAHY9Y,GAAA0a,EAAA,cAAApjB,QAAU2hB,wBACT3hB,EAAc,KAAIygC,GAAiBzgC,EAAS,sBAHlE6E,GAWKvB,EAAA8f,EAAAte,uEAHS9E,EAAc,KAAIygC,GAAiBzgC,EAAS,gCANrC0I,GAAA0a,EAAA,cAAApjB,QAAU2hB,0CACT3hB,EAAc,KAAIygC,GAAiBzgC,EAAS,sKAJ9DA,EAAO,GAAC+3B,WAAa/3B,EAAK,MAAK2hB,IAAuB3hB,EAAc,KAAIygC,GAAiBzgC,EAAS,8FAnRnGqR,MAAMmS,QAAQxjB,EAAK,UA8Hd,MAAAu8D,IAAAA,IAAA75C,GAAS1iB,EAAK,6JAnJjB4G,GAAAwc,EAAA,QAAA+hB,EAAApjC,GAAA2iC,GACL,gBACE,CAAA,eAAgB1kC,EAClB,KAAAA,EAAQ,GAAAkoE,YAAYloE,KAAMA,EAAK,MAAA,mBAEtB4G,GAAAwc,EAAA,YAAA+kD,EAAAl8C,GAAejsB,EAAI,0BACfA,EAAc,qBAEbA,EAAI,yBACAA,EAAc,KAAI6gC,GAAiB7gC,EAAS,6BACxCA,EAAc,KAAI2gC,GAAe3gC,EAAS,+BACxCA,EAAc,KAAI4gC,GAAiB5gC,EAAS,KAClD0I,GAAA0a,EAAA,eAAApjB,KAAQ+3B,UACTrvB,GAAA0a,EAAA,cAAApjB,QAAU4hB,IANd7Z,GAAAqb,EAAA,UAAApjB,KAAKa,yBAVtBgE,GAyTKvB,EAAA8f,EAAAte,sEAxSW9E,EAAe,sBACfA,EAAe,sBACfA,EAAe,qBAChBA,EAAc,uBACjBQ,oBACDA,uLAqRHR,EAAO,GAAC+3B,WAAa/3B,EAAK,MAAK2hB,IAAuB3hB,EAAc,KAAIygC,GAAiBzgC,EAAS,6HAxSjG0Y,GAAA,KAAApY,EAAA,IAAA6kC,KAAAA,EAAApjC,GAAA2iC,GACL,gBACE,CAAA,eAAgB1kC,EAClB,KAAAA,EAAQ,GAAAkoE,YAAYloE,KAAMA,EAAK,MAAA,uCAEtB0Y,GAAA,EAAApY,EAAA,IAAA6nE,KAAAA,EAAAl8C,GAAejsB,EAAI,kEACfA,EAAc,wCAEbA,EAAI,2CACAA,EAAc,KAAI6gC,GAAiB7gC,EAAS,+CACxCA,EAAc,KAAI2gC,GAAe3gC,EAAS,iDACxCA,EAAc,KAAI4gC,GAAiB5gC,EAAS,sBAClD0I,GAAA0a,EAAA,eAAApjB,KAAQ+3B,2BACTrvB,GAAA0a,EAAA,cAAApjB,QAAU4hB,YANd7Z,GAAAqb,EAAA,UAAApjB,KAAKa,6JA7gBhBk6B,EAGA4/B,EAGAv+B,EAGAlB,EAGA0/B,EAGAwN,4CAtCOpmE,EAAcwY,EAAdxY,MACA2iB,EAAcnK,EAAdmK,KACA6V,EAAgDhgB,EAAhDggB,YACAC,EAAqDjgB,EAArDigB,iBACAC,EAAgElgB,EAAhEkgB,mBACAmtC,EAAsErtD,EAAtEqtD,oBACAC,EAA4EttD,EAA5EstD,qBACAh9C,EAA+BtQ,EAA/BsQ,UACAle,EAAwB4N,EAAxB5N,QACAy7D,EAEF7tD,EAFE6tD,qBAILvyD,EAAQH,GAAY,uBAEtBg6C,OAA4BnvD,EAC5B8nE,OAAiC9nE,EACjCkkE,OAAsClkE,EAIpC+nE,ErEuECC,GAAQ,SAAC7jD,UAASA,IAAMsM,IqE6KtB,SAAAw3C,EAAsBxiE,GAC7B2G,EAAQ87D,OAAOziE,GAGR,SAAA0iE,EAAoB1iE,GACvBo+D,GAAUC,YACZD,GAAUC,WAAY,EAEtBr+D,EAAMU,mBAGRiG,EAAQg8D,YAERxkE,SAASiC,oBAAoB,YAAaoiE,GAAuB,GACjErkE,SAASiC,oBAAoB,UAAWsiE,YAGjCE,IAAc,IAAAC,EACd,OAAmB,QAAnBA,EAAAl8D,EAAQm8D,YAAW,WAAA,IAAAD,GAA+BA,QAA/BA,EAAnBA,EAAyB77C,+BAAzB67C,IAAkDA,OAAlDA,EAAAA,EAAkD5pD,MAAO,WAGzD8pD,EAAgBtE,EAAyBz+D,GAE1C,IACAgjE,EADaJ,IACgBnE,EAASwE,kBAKrC,OAFcjjE,EAAMkjE,QAAUzE,EAAS0E,eAExBH,EA4Df,SAAAI,EAAoBpjE,MACvBy+D,EAAQ,KACJh9C,EAAO9a,EAAQk2D,UACjB,QAAStiE,IAATknB,aAGE6S,EAAgB3tB,EAAQ08D,mBAExBzE,EAASmE,EAAgBtE,EAAUz+D,GACjCuf,EAAWm/C,GAAe,CAChCj9C,KAAAA,EACA6S,cAAAA,EACAsqC,OAAAA,EACA96B,MAAO26B,EAAS36B,QAJVvkB,OAOJA,IAAWk/C,EAASl/C,SACtB1P,EAAM,iBAAkB0P,EAAQq/C,GAEhCtmD,EAAA,GAAAmmD,EAAQrrD,EAAAA,EAAA,CAAA,EACHqrD,GAAQ,CAAA,EAAA,CACXl/C,OAAAA,EACA+jD,cAAc,OAMb,SAAAC,EAAuBvjE,MAC1By+D,EAAQ,KACJh9C,EAAO9a,EAAQk2D,UACjB,QAAStiE,IAATknB,eAKqCi9C,GAAe,CACtDj9C,KAAAA,EACA6S,cAJoB3tB,EAAQ08D,mBAK5BzE,OAJamE,EAAgBtE,EAAUz+D,GAKvC8jC,MAAO26B,EAAS36B,QAJVxN,EAAUktC,EAAVltC,WAAYuoC,EAAgB2E,EAAhB3E,oBAOhBvoC,EACF3vB,EAAQorB,QAAQuE,GAAa,SAAAhI,EAAG8S,GAAY,MAAA,CAC1C7pB,MAAKnE,EAAAA,EAAA,CAAA,EACAguB,GAAY,CAAA,EAAA,CACfvc,UAAWg6C,GAAoBh6C,gBAM/B7kB,EAAM3C,SAAWohE,EAASgF,gBAAkBhF,EAAS6E,aAAY,CAC7D,IAAAhlC,EAAgB1Y,GAA2B5lB,EAAM3C,QACjDqhB,EAAOwH,GAAsBlmB,EAAM3C,QACrCqhB,GACF/X,EAAQo6B,SAAS1C,GAAkB5c,EAAM6c,EAAe5f,IAK9DpG,EAAA,GAAAmmD,OAAWlkE,GACX6jE,GAAUK,UAAW,EAErBtgE,SAASiC,oBAAoB,YAAagjE,GAAqB,GAC/DjlE,SAASiC,oBAAoB,UAAWmjE,giBA5YzCjrD,EAAA,EAAAwc,EAAUnW,EAAmBD,uBAG/BpG,EAAA,GAAEo8C,IAAWngC,IAAuC,IAAzBA,EAAYO,uBAGrCxc,EAAA,GAAA6d,EAAgBsD,GAAiB19B,EAAOy4B,EAAkBM,EAASnuB,EAAQ2W,4BAG7EhF,EAAA,GAAE2c,EAAkBR,EAAqBA,EAAmBK,QAAWv6B,sBAGvE+d,EAAA,GAAEq8C,EAAkBiN,EAAsBA,EAAoB9sC,QAAWv6B,sBAGzE+d,EAAA,GAAE6pD,EAAiB3jC,GAAgB73B,EAAQk2D,UAAWh4C,EAAWnG,0BAE/DtgB,EAAuB,IAAhBsgB,EAAK9jB,uDAIb8jB,EACAS,EACAoV,EACAC,EACAC,EACAmtC,EACAC,EACAh9C,EACA45C,OAEIljE,EAAQtC,OAAOyC,KAAKyjB,GAAQrR,KAAK,SAAAxM,GAC7B,IAAAoiE,EAAUpB,EAAY5jD,EAAKta,OAAO9C,IAClCqiE,EAAaC,EAAoB9uC,EAASxzB,UAE9CA,IAAAA,EACAvF,MAAOojB,EAAO7d,GACdod,KAAMglD,EACNnvC,YAAa+rC,GAAyB/rC,EAAaovC,GACnDnvC,iBAAkB8rC,GAAyB9rC,EAAkBmvC,GAC7DlvC,mBAAoB6rC,GAAyB7rC,EAAoBkvC,GACjE/B,oBAAqBtB,GAAyBsB,EAAqB+B,GACnEjC,wBAAyBp7B,GAAuBu7B,EAAsB8B,GACtE7B,0BAA2BxB,GAAyBuB,EAAsB8B,GAC1E9+C,UAAW0Z,GAAuB53B,EAAQk2D,UAAWh4C,EAAW6+C,cAKhEjF,GAAgC,IAApBA,EAASl/C,SACvBhkB,EAAQ8jB,GACN9jB,EACAkjE,EAASoF,oBACTpF,EAASqF,oBACTrF,EAASl/C,SAINhkB,YAKPmjB,EACAL,EACAu+C,EACAroC,EACAC,EACAC,EACAmtC,EACAC,EACAh9C,EACA45C,GAMS,QAJHr0D,EAAQwyD,EAAexyD,MACvBC,EAAM3P,KAAKkkB,IAAIg+C,EAAevyD,IAAKgU,EAAMzjB,QAC3CkpC,EAAK,GAEAv2B,EAAQnD,EAAOmD,EAAQlD,EAAKkD,IAAK,KAClC6rB,EAAWkpC,EAAY5jD,EAAKta,OAAOoe,OAAOjV,KAC1CkrB,EAAcmrC,EAAoB9uC,EAASvnB,GAEjDu2B,EAAM39B,KAAI,CACRoH,MAAAA,EACAxR,MAAOsiB,EAAM9Q,GACbmR,KAAM0a,EACN7E,YAAa+rC,GAAyB/rC,EAAakE,GACnDjE,iBAAkB8rC,GAAyB9rC,EAAkBiE,GAC7DhE,mBAAoB6rC,GAAyB7rC,EAAoBgE,GACjEmpC,oBAAqBtB,GAAyBsB,EAAqBnpC,GACnEopC,qBAAsBvB,GAAyBuB,EAAsBppC,GACrE5T,UAAW0Z,GAAuB53B,EAAQk2D,UAAWh4C,EAAWuU,KAKhE,GAAAqlC,GAAgC,IAApBA,EAASl/C,OAAY,KAC7BwkD,EAAkBjgC,EAAMh2B,KAAK,SAAA2f,UAASA,EAAKlgB,KAAK,IAEtDu2B,EAAQzkB,GACNykB,EACA26B,EAASoF,oBACTpF,EAASqF,oBACTrF,EAASl/C,gBAKF1kB,EAAI,EAAGA,EAAIipC,EAAMlpC,OAAQC,IAChCipC,EAAMjpC,GAAG0S,MAAQw2D,EAAgBlpE,UAI9BipC,GAGA,SAAa9jC,GACpBA,EAAMU,sBAEAsjE,EAAYhkE,EAAMuoB,QACxB5hB,EAAQ+5D,SAAShiD,GAAOg2C,EAAUsP,IAG3B,SAAahkE,GACpBA,EAAMU,kBAENiG,EAAQ+5D,SAAShiD,GAAM,aAGAojB,EAAgBC,GACjC,IAAAzL,EAAauL,GAAOnjB,EAAMzlB,OAAOyC,KAAKK,GAAmC+lC,EAAQC,GAKhF,OAJPp7B,EAAQorB,QAAQuE,GAIT8B,EAAKvZ,EAAiByX,EAAW,GAAG5X,QAGpC,SAAgB1e,GAGrB,KzEjFA,SAA+BjC,GACnC,MAA4B,QAArBA,EAAQmmB,UAAkD,SAA5BnmB,EAAQkmE,eAC/C,CyE+EMC,CAAqBlkE,EAAM3C,SACV,IAAhB2C,EAAMmkE,OAAelgD,GAAkBjkB,EAAM3C,OAAmB,WADjE,CAMF2C,EAAMU,kBACNV,EAAMM,iBAINqG,EAAQkT,QAIR1b,SAASgC,iBAAiB,YAAaqiE,GAAuB,GAC9DrkE,SAASgC,iBAAiB,UAAWuiE,GAE/B,IAAA0B,EAAax+C,GAA2B5lB,EAAM3C,QAC9CokB,EAAO9a,EAAQk2D,UACfvoC,EAAgB3tB,EAAQ08D,mBAG5B,IAAAx+C,GACAu/C,IAAepqD,GAAc8L,OAC7Bs+C,IAAepqD,GAAc6L,QAC5BhB,EAAUhiB,OAASuhE,GAAcv/C,EAAUhiB,OAASmX,GAAc+L,QACnEyY,GAAgB/c,EAAMoD,EAAWnG,GAiB/B,GALJ0/C,GAAUC,WAAY,EACtBD,GAAUE,gBAAkB5/C,EAC5B0/C,GAAUG,oBAAsB6F,EAChChG,GAAUI,eAAiB9/C,EAEvB1e,EAAM4Z,SAAQ,CAEV,IAAAyqD,EAAgB19D,EAAQ08D,mBAAmBx+C,UAC7Cw/C,GACF19D,EAAQo6B,SAASxF,GAAqBJ,GAAckpC,GAAgB3lD,YAGlE0lD,IAAepqD,GAAc+L,MAC3B,GAAA3nB,GAAS4B,EAAM3C,OAAmBinB,aAAa,aAAW,CACtD,IAAAggD,EAAoBlsC,EACxB2B,GAAyBh+B,EAAOu4B,IAElC3tB,EAAQo6B,SAAS5C,GAAkBmmC,SAEnC39D,EAAQo6B,SAASxF,GAAqB7c,EAAMA,cAE5BnkB,IAATknB,GACT9a,EAAQo6B,SAAS1C,GAAkB5c,EAAM2iD,EAAY1lD,SA9BlC,IAAjB1e,EAAMgT,QACRovD,EAAqBpiE,KAkClB,SAAgBA,GACnB,GAAAo+D,GAAUC,UAAS,CACrBr+D,EAAMM,iBACNN,EAAMU,kBAE0B,MAA5B09D,GAAUI,gBAGRpiE,OAAO0oB,cAGT1oB,OAAO0oB,eAAehlB,QAIpB,IAAAw+B,EAAgB1Y,GAA2B5lB,EAAM3C,QAGpDk8B,GAAQ7a,EAAM0/C,GAAUI,iBACzBlgC,IAAkB8/B,GAAUG,sBAE5BH,GAAUI,eAAiB9/C,EAC3B0/C,GAAUG,oBAAsBjgC,EAEhC33B,EAAQo6B,SACNxF,GACE6iC,GAAUE,iBAAmBF,GAAUI,eACvCJ,GAAUI,oBAuCX,SACPx+D,OAEI2G,EAAQmrB,UAAajN,GAInB,IAAA0/C,EAAsBrsC,EAAQkD,GAAavW,OAC5C0U,GAAQ7a,EAAM6lD,IAUb,IAAAzgC,WAmHNjf,EACAoQ,OAEM6O,EAAK,GAEF,SAAA0gC,EAAUh5C,GACX,IAAA4N,EAAW1a,EAAKta,OAAOonB,GACvBztB,EAAU4I,EAAQm8D,YAAY1pC,GACrB,MAAXr7B,GACF+lC,EAAM39B,KAAI,CACRuY,KAAM0a,EACN3gB,OAAQ1a,EAAQk7C,kBAKlB7tC,MAAMmS,QAAQxhB,GAAK,KACf0lB,EAAO9a,EAAQk2D,UACjB,QAAStiE,IAATknB,SACK,KAEH,IAAA+Z,EAAYC,GAAaha,EAAMoD,GAC/B6W,EAAUC,GAAWla,EAAMoD,GAC3B+W,EAAavf,SAAS+b,EAAKoD,GAAsB,IACjDM,EAAWzf,SAAS+b,EAAKsD,GAAoB,IAM7C+oC,EAAiBxvC,EAAgBmyB,MAAM,SAAAwV,UACpChhC,GAAcghC,EAAexyD,OAAS0xB,GAAY8gC,EAAevyD,WAGrEo6D,kBAIGr6D,EAAeq6D,EAAfr6D,MAAOC,EAAQo6D,EAARp6D,IACfyU,GAAa1U,EAAO1P,KAAKkkB,IAAI7iB,EAAMnB,OAAQyP,IAAO,SAAAkD,GAAK,OAAKi3D,EAAUhiD,OAAOjV,YAG7EtU,OAAOyC,KAAKK,GAAkC1C,QAAQmrE,UAGjD1gC,EAhKO4gC,CAA2B7/C,EAAWoQ,GAAmBna,OAEvEjL,EAAM,qBAAwB,CAAAgV,UAAAA,EAAWif,MAAAA,IAEpCA,OAKCriB,EAAO9a,EAAQk2D,UACjB,QAAStiE,IAATknB,EAAA,CAGE,IAAAu9C,EAAcvjC,GAAaha,EAAMoD,GACjCg/C,EAAsB//B,EAAMhZ,WAAW,SAAA2C,UAAS8L,GAAQ9L,EAAK/O,KAAMsgD,EAAW,IAE5Ez/C,EAAWm/C,GAAe,CAChCj9C,KAAAA,EACA6S,cAHoB3tB,EAAQ08D,mBAI5BzE,OAAQ,EACR96B,MAAAA,IAJMvkB,YAORk/C,EAAQ,CACNgF,cAAezjE,EAAM3C,OACrB8lE,eAAgBnjE,EAAMkjE,QACtBD,kBAAmBL,IACnBiB,oBAAAA,EACAC,oBAAqB5oC,GAAkBzZ,EAAMoD,GAAWjqB,OACxDkpC,MAAAA,EACAvkB,OAAAA,EACA+jD,cAAc,IAEhBlF,GAAUK,UAAW,EAErBtgE,SAASgC,iBAAiB,YAAaijE,GAAqB,GAC5DjlE,SAASgC,iBAAiB,UAAWojE,SA/BnC1zD,EAAM,mFAbNuyD,EAAqBpiE,KA2KhB,SAAgBA,GACnBo+D,GAAUC,WAAaD,GAAUK,WAIrCz+D,EAAMU,kBAEF2jB,GAAmBrkB,EAAM3C,OAAmB,YAAa,oBAC3Dib,EAAA,GAAAoxC,EAAQ/tC,IAER0I,GAAmBrkB,EAAM3C,OAAmB,YAAa,gCAEzDib,EAAA,GAAAoxC,EAAQjuC,IAER4I,GAAmBrkB,EAAM3C,OAAmB,YAAa,gCAEzDib,EAAA,GAAAoxC,EAAQhuC,IAGVshC,aAAaqlB,KAGN,SAAeriE,GACtBA,EAAMU,kBAKN2hE,EAAajmE,OAAOwhD,YAAkB,WAAA,OAAAtlC,EAAA,GAAAoxC,OAAQnvD,EAAS,KAGhD,SAAmByF,GACrBA,EAAM4Z,WACT5Z,EAAMU,kBACNV,EAAMM,iBAENqG,EAAQo6B,SAAStD,GAAsB/e,MAIlC,SAAkB1e,GACpBA,EAAM4Z,WACT5Z,EAAMU,kBACNV,EAAMM,iBAENqG,EAAQo6B,SAASrD,GAAqBhf,MAIjC,SAAkCimD,GACzCh+D,EAAQo6B,SAAStD,GAAsB/e,IACvC/X,EAAQ62D,cAAcmH,IAGf,SAAiCA,GACxCh+D,EAAQo6B,SAASrD,GAAqBhf,IACtC/X,EAAQ62D,cAAcmH,2TC9lBbC,GAAqC,CAChDC,OAAQ,MACRzzC,SAAU,oBACVG,KAAM,CACJ,IACA,IACA,GACA,GACA,0GAOSuzC,GAAuC,CAClDD,OAAQ,MACRzzC,SAAU,sBACVG,KAAM,CACJ,IACA,IACA,GACA,GACA,kFAISwzC,GAAqC,CAChDF,OAAQ,MACRzzC,SAAU,oBACVG,KAAM,CACJ,IACA,IACA,GACA,GACA,mHAOSyzC,GAAsC,CACjDH,OAAQ,MACRzzC,SAAU,qBACVG,KAAM,CACJ,IACA,IACA,GACA,GACA,4ZCPE0zC,EAUAC,EAUAC,EAUA1L,EAxDOh4C,EAAalN,EAAbkN,KACAoD,EAA+BtQ,EAA/BsQ,UAEAiN,EAAiBvd,EAAjBud,SACAszC,EAAkB7wD,EAAlB8wD,WAAAA,OAAa,IAAHD,GAAQA,EAClBE,EAA0B/wD,EAA1B+wD,aAEAC,EAAuBhxD,EAAvBgxD,YACAC,EAAyBjxD,EAAzBixD,cACAC,EAAkBlxD,EAAlBkxD,OACAC,EAAkBnxD,EAAlBmxD,OACAlL,EAAkBjmD,EAAlBimD,OACAC,EAAuBlmD,EAAvBkmD,YACA+C,EAA0CjpD,EAA1CipD,cACAxD,EAAkBzlD,EAAlBylD,OACA2L,EAAkCpxD,EAAlCoxD,sBAEFC,IACPttD,EAAA,EAAA+sD,GAAcA,mkBAGb/sD,EAAA,GAAAqiD,OAAmBpgE,IAATknB,uBACVnJ,EAAA,GAAA2lB,EACD08B,IACC//B,GAAiB/V,IAAc6V,GAAe7V,IAAc8V,GAAiB9V,yBAG7EogD,EAAc,CACfpiE,KAAM,SACN0uB,KAAMqzC,GACNvR,MAAO,aACPvkC,UAAW,iBACX+kC,QAAS0R,EACT5wD,UAAW+H,GAAgB+E,0BAI1ByjD,EAAgB,CACjBriE,KAAM,SACN0uB,KAAMuzC,GACNzR,MAAO,eACPvkC,UAAW,mBACX+kC,QAAS2R,EACT7wD,UAAW+H,GAAgB+E,wBAI1B0jD,EAAc,CACftiE,KAAM,SACN0uB,KAAMs0C,GACNxS,MAAO,kBACPvkC,UAAW,aACX+kC,QAAS+R,EACTjxD,cAAmBpa,IAATknB,uBAIXnJ,EAAA,GAAEmhD,EAAgB3nC,GAuDbmzC,EACAC,EAEE,CAAAriE,KAAM,cAGNA,KAAM,SACN0uB,KAAMsqC,GACNxI,MAAO,gBACPvkC,UAAW,WACX+kC,QAASmG,EACTrlD,UAAWspB,GAGX,CAAAp7B,KAAM,aAERsiE,EAEE,CAAAtiE,KAAM,WAvERoiE,EACAC,EAEE,CAAAriE,KAAM,cAGNA,KAAM,SACN0uB,KAAM0qC,GACN5I,MAAO,OACPvkC,UAAW,WACX+kC,QAAS2G,EACT7lD,SAAUmd,QAAqBv3B,IAATknB,IAGtB5e,KAAM,SACN0uB,KAAM2qC,GACN7I,MAAO,6CACPvkC,UAAW,gBACX+kC,QAAS4G,EACT9lD,SAAUmd,QAAqBv3B,IAATknB,GAExB0jD,GAEEtiE,KAAM,SACN0uB,KAAMu0C,GACNzS,MAAO73C,GACPsT,UAAW,kBACX+kC,QAAS2J,GAGT,CAAA36D,KAAM,cAGNA,KAAM,SACN0uB,KAAMw0C,GACN1S,MAAO,gBACPvkC,UAAW,WACX+kC,QAAS4R,EACT9wD,UAAW2wD,EAAa9T,UAGxB3uD,KAAM,SACN0uB,KAAMy0C,GACN3S,MAAO,sBACPvkC,UAAW,WACX+kC,QAAS6R,EACT/wD,UAAW2wD,EAAa7T,SAGxB,CAAA5uD,KAAM,8BA0BXyV,EAAA,EAAAwrB,EAAQ6hC,EAAalM,q9ECxIX,sFAIA,yFART76D,GAEKvB,EAAA8f,EAAAte,aACLD,GAGAvB,EAAA4oE,EAAApnE,aACAD,GAGAvB,EAAA6oE,EAAArnE,6KAXI9E,EAAQ,IAAAmZ,GAAAnZ,iZAJlB6E,GAmBKvB,EAAA83D,EAAAt2D,GAlBHzB,GAAmC+3D,EAAA1jD,WACnCrU,GAeK+3D,EAAAjjD,GAdH9U,GAAkD8U,EAAAN,kCAepDxU,GAAkC+3D,EAAA9iD,mEAd1BtY,EAAQ,0IAVL+3B,EAAiBvd,EAAjBud,SACAq0C,EAAyB5xD,EAAzB4xD,cACAC,EAA0B7xD,EAA1B6xD,eACAvS,EAAmBt/C,EAAnBs/C,oNAa2B,OAAAuS,GAAc,oBAIdD,uBAdCtS,8LCQzB,SAAAwS,GAA8B5sE,EAAYC,GACxD,IAAM4sE,EAAsB,iBAAN7sE,EAAiBA,EAAEke,cAAgBle,EACnD8sE,EAAsB,iBAAN7sE,EAAiBA,EAAEie,cAAgBje,EAEzD,OAAO8sE,GAAeF,EAAQC,EAChC,CAYgB,SAAAE,GACdhlD,GAGqB,IAFrBilD,EAAA1jE,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAqB,GAAA,GACrBo2B,EAAqBp2B,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAA,GACrB0F,EAAA1F,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAoB,EAEpB,GAAIm0B,EAAY7B,EAAM7T,EAAMilD,IAAY,CACtC,QAAiBnsE,IAAb6+B,EACF,MAAU,IAAArzB,MAAM,gEAGlB,OAyDY,SACd0b,GACA,IAAAilD,EAAA1jE,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAqB,GACrBi3B,EAAyBj3B,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAA,GACzB0F,EAAA1F,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAoB,GAAA,EAEd2jE,EAgBR,SAAgC1sC,EAAwBvxB,GACtD,gBAA2BjP,EAAYC,GACrC,IAAMktE,EAAStxC,EAAM77B,EAAGwgC,GAClB4sC,EAASvxC,EAAM57B,EAAGugC,GAExB,YAAe1/B,IAAXqsE,EACKl+D,OAEMnO,IAAXssE,GACMn+D,EAGY,iBAAXk+D,GAAyC,iBAAXC,EAIhCD,EAASC,EAASn+D,EAAYk+D,EAASC,GAAUn+D,EAAY,EAG/DA,EAAY29D,GAA8BO,EAAQC,EAC3D,CACF,CArCqBC,CAAuB7sC,EAAcvxB,GAGlD2V,EAAQiX,EAAM7T,EAAMilD,GAC1B,MAAO,CACL,CACE10C,GAAI,UACJtT,KAAMC,EAAmB+nD,GACzB3qE,MAAOsiB,EAAMlkB,MAAM,GAAGuf,KAAKitD,IAGjC,CA1EWI,CAAUtlD,EAAMilD,EAAUttC,EAAU1wB,EAC5C,CAED,GAAI+T,GAASgF,GACX,OAeE,SACJA,GAEqB,IADrBilD,EAAqB1jE,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,aAAA,GACrB0F,EAAA1F,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,aAAoB,EAEdmc,EAASmW,EAAM7T,EAAMilD,GAErBM,EADO/tE,OAAOyC,KAAKyjB,GACDhlB,QAExB6sE,EAAWttD,MAAK,SAACutD,EAAMC,GACrB,OAAOx+D,EAAY29D,GAA8BY,EAAMC,EACzD,IAIA,IADA,IAAM5wC,EAAgC,GAC7Bz7B,EAAI,EAAGA,EAAImsE,EAAWpsE,OAAQC,IAAK,CAC1C,IAAMyG,EAAM0lE,EAAWnsE,GACjB6jB,EAAOC,EAAmB+nD,EAAStiE,OAAO9C,IAChDg1B,EAAWnwB,KAAK,CACd6rB,GAAI,OACJ3mB,KAAMqT,EACNA,KAAAA,GAEH,CAED,OAAO4X,CACT,CAzCW6wC,CAAe1lD,EAAMilD,EAAUh+D,GAGxC,MAAM,IAAI3C,MAAM,kCAClB,g9CC9BO4gC,EAAAra,GAASvyB,EAAK,GAAA6pB,WAAYwjD,IAAmB,oLAFvCzmE,GAAAqS,EAAA,QAAAg9C,EAAAj2D,KAAK6pB,YAFQnhB,GAAAuQ,EAAA,eAAAjZ,OAASA,EAAY,kCAH3C6E,GAQQvB,EAAA2V,EAAAnU,gEADL,EAAAxE,GAAAssC,KAAAA,EAAAra,GAASvyB,EAAK,GAAA6pB,WAAYwjD,IAAmB,KAAAzlE,GAAAwC,EAAAwiC,GAFvC,EAAAtsC,GAAA21D,KAAAA,EAAAj2D,KAAK6pB,kCAFQnhB,GAAAuQ,EAAA,eAAAjZ,OAASA,EAAY,sGAY3C,wHADqBstE,GAAS,2BAH9BzoE,GAMQvB,EAAA2V,EAAAnU,yFAlBHmgB,GAAMjlB,EAAK,GAAEstE,0BAAoBttE,EAAI,YAA1Ca,OAAIC,GAAA,EAAA,oDAWDd,EAAK,GAACa,OAASysE,IAASn0D,sKAZ/BtU,GAqBKvB,EAAA8f,EAAAte,uHApBImgB,GAAMjlB,EAAK,GAAEstE,uCAWfttE,EAAK,GAACa,OAASysE,8IAhBd,IAAAA,GAAY,IACZD,GAAsB,0BALjBtjC,EAA0BvvB,EAA1BuvB,MACAwjC,EAA6B/yD,EAA7B+yD,aACAvmC,EAAyCxsB,EAAzCwsB,oJAYyB,SAAAtT,GAAA,OAAAsT,EAAStT,s8CC8CxC1zB,EAAY,mGALf6E,GAMQvB,EAAA2V,EAAAnU,qEADL9E,EAAY,8FARHm6D,MAET,IAAA5iD,OAAiB/W,IAAjBR,MAA0BmZ,GAAAnZ,2MALbA,EAAI,2EAJxB6E,GAkBKvB,EAAA8f,EAAAte,GAjBHzB,GAOQ+f,EAAAnK,wEAHIjZ,EAAY,sEADNA,EAAI,SAKAQ,IAAjBR,6OA1CDwtE,EAEA38C,EAVI48C,EACN5gE,GAAiC,kBAD3BmkB,EAAiBy8C,EAAjBz8C,kBAAmBP,EAAkBg9C,EAAlBh9C,mBAGhB9L,EAAcnK,EAAdmK,KACAnR,EAAagH,EAAbhH,MACAwzB,EAAkCxsB,EAAlCwsB,SACAqe,EAAsC7qC,EAAtC6qC,SAGPhnC,GAAO,EAMF,SAAAqvD,EAAiBh6C,GACxBjD,EAAmBI,GACnBmW,EAAS3H,EAASh1B,OAAOqpB,iMALxB2L,EAAW1a,EAAKvkB,MAAM,EAAGoT,mBACzB+K,EAAA,EAAAgvD,EAAe5oD,EAAKnR,4BAQjBg6D,EAAoB,CACtBjvD,EAAA,EAAAF,GAAO,OAED7c,EAAK,CACTuoC,MAAOsb,EAAShmB,GAChBkuC,aAAAA,EACAvmC,SAAU0mC,GAGZ78C,EAAUG,EAAkB28C,GAAuBnsE,EAAK,CACtDsD,OAAQ0oE,EACR5xD,mBAAmB,EACnBsC,QAAO,WACLK,EAAA,EAAAF,GAAO,gBAoBK,WAAA,OAAAqvD,EAAiBH,uDAbSC,EAAoBztD,+KCnD5C,SAAA6tD,GAAgBjoE,GAAY,IAAAkoE,EAAAC,EAClD,GAAIhT,UAAUzyB,UACZ,OAAOyyB,UAAUzyB,UAAU0lC,UAAUpoE,GAIlC,GAAkC,QAAlCkoE,GAAIC,EAAA1pE,UAAS4pE,6BAATH,IAA8BA,GAA9BA,EAAArnE,KAAAsnE,EAAiC,QAAS,CACjD,IAAMpR,EAAWt4D,SAASoB,cAAc,YACxCk3D,EAAS16D,MAAQ2D,EAEjB+2D,EAAS34D,MAAMib,SAAW,QAC1B09C,EAAS34D,MAAMuT,QAAU,IAEzBlT,SAAS2a,KAAKvb,YAAYk5D,GAC1BA,EAASt0D,SAGT,IACEhE,SAAS6pE,YAAY,OACtB,CAAC,MAAO9/D,GACPyI,QAAQZ,MAAM7H,EACf,CAAA,QACC/J,SAAS2a,KAAK7Z,YAAYw3D,EAC3B,CACF,MACC9lD,QAAQZ,MAAM,eAElB,s+CCuFkBkkD,+JARdr1D,GASQvB,EAAA2V,EAAAnU,kDALJa,KAAM8iB,OAAOzoB,MAAwB,KAClCA,EAAA,wEADH2F,CAAAA,KAAM8iB,OAAOzoB,MAAwB,KAClCA,EAAA,gRAOP6E,GAAyCvB,EAAA8f,EAAAte,sEAbtC9E,EAAoB,IAAAyX,GAAAzX,KAYpBA,EAAM,IAAAmZ,kCAUG2oD,yMA3BL9hE,EAAS,mOAJqCA,EAAoB,qBAA7E6E,GAiCKvB,EAAA8f,EAAAte,GAhCHzB,GAOC+f,EAAAtb,kEAgBDzE,GAQQ+f,EAAAnK,8CA1BsBjZ,EAAa,kBAC/BA,EAAW,iBAsBXA,EAAU,gEAzBbA,EAAS,cAATA,EAAS,IAKbA,EAAoB,4GAYpBA,EAAM,wGArB4CA,EAAoB,uMA7EvEkuE,EACAC,EAVEvgC,EAAuB/gC,GAAiC,kBAEnD8X,EAAcnK,EAAdmK,KACAypD,EAA0B5zD,EAA1B4zD,WACAj2C,EAAyC3d,EAAzC2d,SACAja,EAAmB1D,EAAnB0D,QACAmwD,EAAgB7zD,EAAhB6zD,QACAC,EAAuC9zD,EAAvC8zD,WAIPC,GAAmB,EAInBC,OAAkChuE,EAClCiuE,GAAS,WAWJ3uD,IACPouD,EAASpuD,QAGF,SAAA4uD,EAAiBt9C,OAKhB,IAAAzM,EAAOypD,EAAWpqD,MAAMoN,UAczB,SAAmBzM,GACrB,IAAA2pD,EAAW3pD,GACJ,MAAA,IAAA3Y,MAAM,2CAfhB2iE,CAAmBhqD,IAEjBA,KAAAA,EACA3O,WAAOxV,SAEFwV,UAEL2O,UAAMnkB,EACCwV,MAAAA,WA1Bb/J,IAAO,WACL6T,OAGFzT,IAAS,WACP42C,aAAaurB,kRAZZL,EAAYC,EAAW1qD,UAAUiB,sBACnCpG,EAAA,EAAEqwD,EAAuBL,EAAmBG,EAAiBP,GAAWn4D,WAAQxV,eA2CxE,SAAYyF,GACnBsY,EAAA,EAAA4vD,EAAYloE,EAAM4oE,cAAc7sE,QAGzB,SAAciE,OACfsgC,EAAQlY,GAAkBpoB,GAM5B,GAJU,WAAVsgC,GACFroB,IAGY,UAAVqoB,EAAiB,CACnBhoB,EAAA,GAAAgwD,GAAmB,OACb9sE,EAASitE,EAAiBP,QACZ3tE,IAAhBiB,EAAOkjB,KACTwT,EAAS12B,EAAOkjB,MAEhB0pD,EAAQ5sE,EAAOuU,oBAMnB43D,GAAgBO,GAChB5vD,EAAA,EAAAkwD,GAAS,GACTD,EAAcnsE,OAAOwhD,kCAAkB4qB,GAAS,EAAK,GAhEnC,KAiElB3uD,sEASWouD,EAAQnuD,03DCER/f,EAAiB,aAChBA,EAAgB,yXAVrBA,EAAI,yBAAiBA,EAAK,aAA/Ba,OAAIC,GAAA,EAAA,oDAGDd,EAAW,IAAAyX,GAAAzX,qNAHTA,EAAI,2DAGNA,EAAW,8JAHda,OAAIC,GAAA,wQACmDd,EAAY,mYAGvBwT,MAAAxT,KAAKa,gBAAkBb,EAAY,mHAAnC,EAAAM,IAAAwuE,EAAAt7D,MAAAxT,KAAKa,+KAuB/C8hB,GAAgB3iB,EAAI,KAAMA,EAAO,GAAsB,IAAnB,uDA7BpCA,EAAO,KAAA,qDAgCCA,EAAO,GAAG+uE,GAAUC,8PARzBhvE,EAAO,GAAG,mCAAqC,uCAFzCA,EAAO,4FAvBxB6E,GAmCKvB,EAAA8f,EAAAte,0BAfHzB,GAcQ+f,EAAAnK,GANN5V,GAGM4V,EAAA0zB,iEALI3sC,EAAa,qMAInB2iB,GAAgB3iB,EAAI,KAAMA,EAAO,GAAsB,IAAnB,mBAA2B4H,GAAAmxB,EAAAi9B,0BAGvDh2D,EAAO,GAAG+uE,GAAUC,gCARzBhvE,EAAO,GAAG,mCAAqC,qEAFzCA,EAAO,+NA1FlBivE,EAREn5D,EAAQH,GAAY,4BAEf+R,EAAalN,EAAbkN,KACAoD,EAA+BtQ,EAA/BsQ,UACAkc,EAAsBxsB,EAAtBwsB,SACAqnC,EAAgB7zD,EAAhB6zD,QACAD,EAA0B5zD,EAA1B4zD,WAGPc,GAAU,EA8CL,SAAA9f,EAAazqC,GACpB7O,EAAM,cAAekS,KAAKtE,UAAUiB,IAEpCqiB,EAASxF,GAAqB7c,EAAMA,aAO7BwqD,IACP5wD,EAAA,EAAA2wD,GAAU,mPAvDTvqD,EAAOmG,EAAYuW,GAAavW,GAAS,kBAC3CvM,EAAA,EAAE6wD,EAAczsD,GAAgB4Y,EAAM7T,EAAM/C,mBAM3Ck/B,YAAU,cACJorB,GAAoBA,EAAiB9vD,SAAQ,CACzC,IAAAC,EAAO6vD,EAAiB3vB,YAAc2vB,EAAiBhwB,YACzD7/B,EAAO,IACTtJ,EAAM,YAAasJ,GACnB6vD,EAAiB9vD,SAAQ,CAAGC,KAAAA,EAAMC,SAAU,gCAS3C,SAASsF,GAChB7O,EAAM,qBAAsB6O,GAEtB,IAAAphB,EAAOg4B,EAAM7T,EAAM/C,MACrBtT,MAAMmS,QAAQjgB,UACTqnB,GAAM,EAAGrnB,EAAK1C,QAAQkT,IAAI0U,WACxB/F,GAASnf,GAAI,CAChB,IAEA0pE,EAFO/tE,OAAOyC,KAAK4B,GAEDnD,MAAM,UAC9B6sE,EAAWttD,KAAK2sD,IAETW,YAOF,SAAWtoD,UACX2a,EAAS5X,EAAM/C,iBAUtBpG,EAAA,EAAA2wD,GAAWA,MAOJ,SAAiBvqD,GACxBwqD,IACA/f,EAAazqC,2DAI0BsqD,EAAgBlvD,2jHCuE9Cw6C,IAAiB,IAAjBv6D,KAAkBqK,GAAAA,OAAMrK,KAAc,EAAC,KAAM,IAAE,MA9BhDA,EAAQ,IAAA61B,GAAA71B,yCAaHA,EAAS,GAAA,gDAyBFqvE,4BAQAC,4BAQA7Y,MAGX,IAAAxgC,EAAAj2B,OAAgBA,EAAQ,IAAAyX,GAAAzX,6KA3ByBA,EAAoB,ucADvB0I,GAAAmP,EAAA,cAAS,KAAT7X,gkBAhCzD6E,GAiFKvB,EAAA83D,EAAAt2D,GA/EHzB,GA8EM+3D,EAAAmU,0BAnEJlsE,GAkEKksE,EAAAj3D,GAjEHjV,GA6CKiV,EAAAH,GA5CH9U,GAMK8U,EAAAT,0BACLrU,GASO8U,EAAA0Z,GARLxuB,GAOCwuB,EAAA/pB,QAFa9H,EAAI,YAIpBqD,GAEK8U,EAAAN,2BACLxU,GAOQ8U,EAAA+zD,wBACR7oE,GAOQ8U,EAAAg0D,wBACR9oE,GAOQ8U,EAAAq3D,qKAxD2BxvE,EAAY,oBAAcA,EAAa,6BACxEA,EAAQ,wPAyBMA,EAAI,SAAJA,EAAI,MAKjB0Y,GAAA,EAAApY,IAAAi6D,KAAAA,IAAiB,IAAjBv6D,QAAkBqK,OAAMrK,KAAc,OAAO,IAAE,KAAA4H,GAAAutC,EAAAolB,sBAAEv6D,EAAoB,kBADvB0I,GAAAmP,EAAA,cAAS,KAAT7X,MA4B9CA,OAAgBA,EAAQ,sYAlDfA,EAAW,GAAGm+D,GAAcoJ,4MAN1C1iE,GAOQvB,EAAA2V,EAAAnU,wCAHI9E,EAAiB,kDAEfA,EAAW,GAAGm+D,GAAcoJ,gMASxBuE,wOAFA2D,GAAat6C,MAAA,ovBA4C7BtwB,GAgBKvB,EAAA8f,EAAAte,GAfHzB,GAMC+f,EAAAtb,QADa9H,EAAW,YAEzBqD,GAIA+f,EAAA8oD,WACA7oE,GAEA+f,EAAA+oD,2CAJYnsE,EAAa,kBAEuCA,EAAgB,8CAPlEA,EAAW,SAAXA,EAAW,kEApEhCA,EAAI,IAAAmZ,GAAAnZ,oHAAJA,EAAI,oNALE,SAAA0vE,GAAgB1rE,GACvBA,EAAQoE,oCA3GCunE,EAAYn1D,EAAZW,KAAAA,OAAO,IAAHw0D,GAAQA,EACZC,EAAkBp1D,EAAlBo1D,UACAC,EAAer1D,EAAfs1D,YAAAA,OAAW,IAAAD,EAAG,EAACA,EACfE,EAAev1D,EAAfsvB,YAAAA,OAAW,IAAAimC,EAAG,EAACA,EACfC,EAAmBx1D,EAAnBy1D,YAAAA,OAAW,IAAAD,GAAQA,EACnBE,EAAgB11D,EAAhBud,SAAAA,OAAQ,IAAAm4C,GAAQA,EAChBC,EAAyC31D,EAAzC2d,SAAAA,OAAqC35B,IAA7B2xE,EAA6B3xE,GAAI2xE,EACzCC,EAA6B51D,EAA7B61D,WAAAA,OAAyB7xE,IAAf4xE,EAAe5xE,GAAI4xE,EAC7BE,EAAyB91D,EAAzB+1D,OAAAA,OAAM,IAAAD,EAAe9xE,GAAI8xE,EACzBE,EAA6Dh2D,EAA7Di2D,UAAAA,OAAS,IAAAD,EAAgDhyE,GAAIgyE,EAC7DE,EAAgEl2D,EAAhEm2D,aAAAA,OAA4DnyE,IAAhDkyE,EAAgDlyE,GAAIkyE,EAChEE,EAA0Bp2D,EAA1B0D,QAAAA,OAAsB1f,IAAfoyE,EAAepyE,GAAIoyE,EAEjCjrE,EAAO,GACPkrE,EAAe,GACfxlC,EAAc,YAmBTylC,QACPb,GAAeA,IAAgBl4C,YAuDxBg5C,IACHh5C,GAIJ04C,EAAU9qE,EAAM0lC,wfA9Ef9sB,EAAA,GAAAyyD,EACDlB,GAAenvD,GAAkB,GAAAtW,OAAMsW,IAAsB,KAAM8H,OAAOqnD,4BAEzEmB,EAAoB5lB,GAASlzB,EzFjCJ,0ByFmCzB84C,EAAkBtrE,iBAEdwV,GAKQ,KAATxV,GACFwyB,EAASxyB,6BAQJ,SAAaM,GACpBA,EAAMM,iBAEiBZ,IAASkrE,GAE9BA,EAAelrE,EACfsrE,EAAkB7iD,SAClB+J,EAASxyB,IAET4qE,KAIK,SAActqE,GAGrBA,EAAMU,sBACA4/B,EAAQlY,GAAkBpoB,GAElB,UAAVsgC,IACFtgC,EAAMM,iBACNgqE,KAGY,gBAAVhqC,IACFtgC,EAAMM,iBACN8pE,KAGY,eAAV9pC,IACFtgC,EAAMM,iBAEF0pE,EACFc,IAEAR,KAKU,WAAVhqC,IACFtgC,EAAMM,iBACNuqE,KAGY,WAAVvqC,IACFtgC,EAAMM,iBAEN2X,mBAaE6Z,GAIJ44C,EAAahrE,EAAM0lC,yBAqCG1lC,EAAIc,KAAAzE,yBAWF,OAAAuuE,gBAQA,OAAAF,uBAQAnyD,gBAYFmtB,EAAW5kC,KAAAzE,mSCzK/BkvE,GAAYC,OAAO,QAEnB,SAAUC,GACd9sD,EACA+sD,GACyB,IAAzBC,EAAcroE,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAGqf,GAAAA,IAEX7nB,EAAuB,CAAA,EAEzB4Q,MAAMmS,QAAQc,atFyIlBA,EACAgtD,EACAjjE,GAEA,GAAIiW,EAAMzjB,OAASywE,EACjBhtD,EAAMhlB,QAAQ+O,QAGd,IADA,IAAMnE,EAAOonE,EAAiB,GAAKhtD,EAAMzjB,OAAS,IAAMywE,EAAiB,GAAKhtD,EAAMzjB,OAC3EC,EAAI,EAAGA,EAAIwwE,EAAgBxwE,IAAK,CACvC,IAAM0S,EAAQ7S,KAAKmiB,MAAMhiB,EAAIoJ,GAC7BmE,EAASiW,EAAM9Q,GAAQA,EAAO8Q,EAC/B,CAEL,CsFlJIitD,CAAcjtD,EAAOgtD,GAAgB,SAAC59C,GAChChR,GAASgR,GACX89C,GAAe99C,EAAMjzB,EAAQ4wE,GAE7B5wE,EAAOywE,KAAa,CAExB,IAGF,IAAMz9C,EAAoB,GAM1B,OALIy9C,MAAazwE,GACfgzB,EAAMrnB,KAAK,IAEbqlE,GAAchxE,EAAQ,GAAIgzB,EAAO49C,GAE1B59C,CACT,CAIA,SAAS+9C,GAAepsD,EAAsB3kB,EAAsB4wE,GAClE,IAAK,IAAM9pE,KAAO6d,EAAQ,CACxB,IAAMpjB,EAAQojB,EAAO7d,GACfmqE,EAAcjxE,EAAO8G,KAAS9G,EAAO8G,GAAO,CAAA,GAE9Cmb,GAAS1gB,IAAUqvE,EACrBG,GAAexvE,EAAO0vE,EAAaL,QAEJ7wE,IAA3BkxE,EAAYR,MACdQ,EAAYR,KAAa,EAG9B,CACH,CAIA,SAASO,GACPrsD,EACA8Y,EACAzK,EACA49C,GAEA,IAAK,IAAM9pE,KAAO6d,EAAQ,CACxB,IAAMT,EAAOuZ,EAAW7zB,OAAO9C,GACzBvF,EAAQojB,EAAO7d,GAEjBvF,IAA8B,IAArBA,EAAMkvE,KACjBz9C,EAAMrnB,KAAKuY,GAGTwY,EAAan7B,IAAUqvE,GACzBI,GAAczvE,EAAO2iB,EAAM8O,EAAO49C,EAErC,CACH,CA4DgB,SAAAM,GACdp1B,EACAq1B,EACAlqD,EACAmqD,EACAC,GAYA,IAXW,IAAXhlD,EAAM7jB,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,GAEH8oE,EAAY30C,EAAY1V,GAAQA,EAAK7mB,OAAS,EAC9CmxE,EA4FR,SACEH,EACAC,GAEA,IAAMzsD,EAASnmB,OAAOmmB,OAAOwsD,GAC7B,GAAI//C,EAAQzM,GACV,OAAOysD,EAGT,IAAMxjE,EAAM,SAAC5O,EAAWC,GAAS,OAAKD,EAAIC,CAC1C,EACA,OADc0lB,EAAO3H,OAAOpP,GACb+W,EAAOxkB,MACxB,CAxG4BoxE,CAA2BJ,EAAaC,GAC5DI,EAAc31B,EAAYzvB,EAC1BqlD,EAAiBP,EAAiB,EAAI9kD,EAEtCslD,EAAgB,SAAC5+D,GAAkB,OAAAq+D,EAAYr+D,IAAUs+D,CAE/D,EAAIjwC,EAAa,EACbwwC,EAAc,EACXA,EAAcH,GAAerwC,EAAakwC,GAC/CM,GAAeD,EAAcvwC,GAC7BA,IAEEA,EAAa,IAGfwwC,GAAeD,IADfvwC,IAMF,IAFA,IAAIE,EAAWF,EACXywC,EAAgB,EACbA,EAAgBH,GAAkBpwC,EAAWgwC,GAClDO,GAAiBF,EAAcrwC,GAC/BA,IAIF,IADA,IAAIwwC,EAAY,EACPzxE,EAAIihC,EAAUjhC,EAAIixE,EAAWjxE,IACpCyxE,GAAaH,EAActxE,GAK7B,MAAO,CACL+gC,WAAAA,EACAE,SAAAA,EACAswC,YAAAA,EACAE,UAAAA,EACAP,kBAAAA,EACAM,cAAAA,EACAE,aATmBp1C,EAAY1V,GAAQA,EAAKtnB,MAAMyhC,EAAYE,GAAY,GAW9E,CAkCM,SAAU0wC,GACd9tD,EACA+tD,EACAb,EACAC,GAKA,IAHA,IAAQa,EAAaC,GAAoBjuD,EAAM+tD,GAAvCC,SAEJzzD,EAAM,EACDikD,EAAe,EAAGA,EAAewP,EAAUxP,IAClDjkD,GAAO2yD,EAAY1O,IAAiB2O,EAItC,OAAO5yD,CACT,CAoEgB,SAAA0zD,GAAoBjuD,EAAgB+tD,GAClD,MAAAG,MAA2BluD,oBAApBnR,EAAKq/D,EAAK/rD,GAAAA,EAAM+rD,EAAAzyE,MAEvB,GAAMuyE,EAAWrwD,SAAS9O,EAAO,IAEjC,MAAO,CACLm/D,SAAW5vD,MAAM4vD,IAAwB,EAAZA,EAC7BG,YAAaJ,EAAQ3hD,WAAU,SAAChuB,GAAM,OAAAwgC,GAAezc,EAAQ/jB,MAEjE,CAEgB,SAAAgwE,GAAsB/zD,EAA0B0zD,GAC9D,IAAQC,EAA0B3zD,EAA1B2zD,SAAUG,EAAgB9zD,EAAhB8zD,YAElB,MAAA,CAAQrqD,OAAOkqD,IAAStoE,OAAA4J,EAAKy+D,EAAQI,IACvC,CAqBgB,SAAAE,GACd3a,EACAqa,GAEA,IAECO,EAAA17C,EAFiC27C,GAAU7a,GAAkB,SAACuC,GAC7D,OAAAr4C,GAASq4C,EAAgBj2C,KAAK,GAAG,OAD5BwuD,EAAWF,EAAA,GAAEG,EAAUH,EAI9B,GAAMI,EAA6CnpC,GAAQipC,EAAaG,IAElEC,EAAqBC,GAAUH,GAAa,SAACI,GACjD,IAAMC,EAA2C,CAC/CC,IAAK,GACLjB,QAAS,CAAE,GAgBb,OAbAe,EAAOn0E,SAAQ,SAAC0W,GACd,IAAM88D,EAkDZ,SAAyB98D,EAAwB08D,GAC/C,IAAM1zD,EAAW4zD,GAAoB58D,EAAM2O,KAAM+tD,GAEjD,IAA8B,IAA1B1zD,EAAS8zD,YACX,OAAO9zD,EAAS8zD,YAGlB,OAAQ,CACV,CA1D0Bc,CAAgB59D,EAAO08D,IAEtB,IAAjBI,QACsCtyE,IAApCkzE,EAAWhB,QAAQI,KACrBY,EAAWhB,QAAQI,GAAe,IAEpCY,EAAWhB,QAAQI,GAAa1mE,KAAK4J,IAErC09D,EAAWC,IAAIvnE,KAAK4J,EAExB,IAEO09D,CACT,IAEA,MAAO,CACLrvE,KAAM+uE,EACNS,KAAMN,EAEV,CAEgB,SAAAO,GACdnvD,EACA0zC,GAEA,GAAKA,GAAgD,IAA5BA,EAAiBx3D,OAI1C,OAAgC,IAA5Bw3D,EAAiBx3D,OACZw3D,EAAiB,GAGnB,CACL1zC,KAAAA,EACAqC,QACE,+BACAqxC,EACGtkD,KAAI,SAACiC,GACJ,OAAOib,GAAkBjb,EAAM2O,MAAQ,IAAM3O,EAAMgR,OACrD,IACCrb,KAAK,MACV2sD,SAAUn4C,GAAmB4zD,QAEjC,CAEA,SAAST,GAAat9D,GACpB,OAAOsM,SAAStM,EAAM2O,KAAK,GAAI,GACjC,UAegBqvD,GACdz5C,EACAgC,EACA03C,GAMA,OAJsB13C,EAAWpC,MAAK,SAACyC,GAAS,gBAehDjC,EACAiC,EACA81C,GAEA,IAAK/3C,EACH,OAAO,EAIT,GAAqB,YAAjBiC,EAAU3E,GAAkB,CAC9B,IACAi8C,EAAkCtB,GADrB9tD,EAAiB8X,EAAUjY,MACoB+tD,GAApDC,EAAQuB,EAARvB,SAAUG,EAAWoB,EAAXpB,YACZqB,EAAsBzB,EAAQ3hD,WAAU,SAACjK,GAAM,OAAK0Y,GAAQ1Y,EAAQ6T,EAAahW,KAAM,IAE7F,IAAkB,IAAdguD,IAAoC,IAAjBG,GAAsBA,IAAgBqB,EAC3D,OAAY,CAEf,CAKD,OAAO,CACT,CArCIC,CAA6B75C,EAAcI,aAAciC,EAAWq3C,EAAQ,IAI5E56D,EAAAA,EAAA,CAAA,EACKkhB,GACHI,CAAAA,EAAAA,CAAAA,aAAc,OAIXJ,CACT,CClZA,IAAMzkB,GAAQH,GAAY,sBAW1B,SACsBqqD,GAAKqU,GAAA,OAAAC,GAAAtgE,MAAA/K,KAAAA,UA2C3B,CAAA,SAAAqrE,KATC,OASDA,GAAAh8C,EAAAC,IAAAC,MA3CO,SAAA+7C,EAAAC,OAAA9sD,EAAA6S,EAAAxS,EAAAgQ,EAAAxU,EAAAyU,EAAAqQ,EAAAosC,EAAAl4C,EAAA6M,EAAA7Q,OAAAA,IAAAhf,MAAAm7D,SAAAC,GAAA,cAAAA,EAAA77C,KAAA67C,EAAAppE,MAAA,KAAA,EASHwsB,GARFrQ,EAAI8sD,EAAJ9sD,KACA6S,EAAai6C,EAAbj6C,cACAxS,EAAWysD,EAAXzsD,YACAgQ,EAAQy8C,EAARz8C,SACAxU,EAAMixD,EAANjxD,OACAyU,EAAOw8C,EAAPx8C,SAGED,QACSv3B,IAATknB,GACC6S,EAAczP,WACdoZ,GAAqB3J,EAAczP,WAAU6pD,CAAAA,EAAAppE,KAAAopE,EAAAA,KAAAA,CAAAA,OAAAA,EAAArhC,OAK1CjL,UAAAA,KAAAA,EACFA,GAAa,OADXA,EAAYxE,GAAuBnc,EAAM6S,EAAczP,UAAW/C,EAAaxE,IAChEoxD,CAAAA,EAAAppE,KAAAopE,EAAAA,KAAAA,CAAAA,OAAAA,EAAArhC,OAIrBx9B,UAAAA,KAAAA,EAEM8+D,OAFN9+D,GAAM,MAAO,CAAEgV,UAAWyP,EAAczP,UAAWud,UAAAA,EAAWtgB,YAAAA,IAAc4sD,EAAAppE,KAEtEqpE,EAAAA,GAAgBvsC,GAAUosC,KAAAA,EAAAA,EAEKtrC,GAAuBzhB,EAAM6S,EAAczP,WAAxEyR,EAAUk4C,EAAVl4C,WAAY6M,EAAYqrC,EAAZrrC,aAEpBpR,EAAQuE,GAAY,SAAC6K,EAAaC,GAAY,MAAM,CAClD7pB,MAAKnE,EAAAA,EACAguB,CAAAA,EAAAA,GACHvc,CAAAA,EAAAA,CAAAA,UAAWse,IAEd,IAAE,KAAAurC,GAAAA,IAAAA,MAAAA,OAAAA,EAAAphC,OAAAghC,GAAAA,EACJ,KAAAD,GAAAtgE,MAAAvN,KAAAwC,UAAA,CAAA,SAUqBg3D,GAAM4U,GAAAC,OAAAA,GAAA9gE,MAAA/K,KAAAA,UAwB5B,CAAA,SAAA6rE,KAfCA,OAeDA,GAAAx8C,EAAAC,IAAAC,MAxBO,SAAAu8C,EAAAC,GAAA,IAAAttD,EAAA6S,EAAAxS,EAAAxE,EAAA8kB,EAAA,OAAA9P,IAAAhf,MAAA,SAAA07D,GAAA,cAAAA,EAAAn8C,KAAAm8C,EAAA1pE,MAAA,KAAA,EAED88B,GAFyB3gB,EAAIstD,EAAJttD,KAAM6S,EAAay6C,EAAbz6C,cAAexS,EAAWitD,EAAXjtD,YAAaxE,EAAMyxD,EAANzxD,OAE9C,OADX8kB,EAAYxE,GAAuBnc,EAAM6S,EAAczP,UAAW/C,EAAaxE,IAChE0xD,CAAAA,EAAA1pE,KAAA0pE,EAAAA,KAAAA,CAAAA,OAAAA,EAAA3hC,OAIrBx9B,UAAAA,KAAAA,EAEM8+D,OAFN9+D,GAAM,OAAQ,CAAEuyB,UAAAA,EAAWtgB,YAAAA,IAAcktD,EAAA1pE,KAEnCqpE,EAAAA,GAAgBvsC,GAAU,KAAA,EAAA,IAAA,MAAA,OAAA4sC,EAAA1hC,OAAA,GAAAwhC,EAAA,KACjCD,GAAA9gE,MAAA/K,KAAAA,oBAgBe08B,GAAOuvC,GACrB,IAAAxuC,EAAawuC,EAAbxuC,cACAhf,EAAIwtD,EAAJxtD,KACAoD,EAASoqD,EAATpqD,UACAiN,EAAQm9C,EAARn9C,SACAxU,EAAM2xD,EAAN3xD,OACAyU,EAAOk9C,EAAPl9C,QACAm9C,EAAYD,EAAZC,aACAC,EAAeF,EAAfE,gBAEA,IAAIr9C,EA8CJ,IACEs9C,EAAQ3uC,EACT,CAAC,MAAOxjB,GACPkyD,EAAgB1uC,GAAe,SAACq3B,GAC9BjoD,GAAM,yBAA0BioD,GAChCsX,EAAQtX,EACV,GACD,CAjDD,SAASsX,EAAQ/tC,GACf,QAAa9mC,IAATknB,EAAoB,CACtB,IAAM4tD,EAAmBxqD,GAAa2X,GAAqB,IAAI,GAEzDlG,EAAa13B,GAAO6iB,EAAM4tD,EAAkBhuC,EAAY/jB,GAE9DzN,GAAM,QAAS,CAAEwxB,WAAAA,EAAY/K,WAAAA,EAAY+4C,iBAAAA,IAEzCt9C,EAAQuE,GAAY,SAAC6K,EAAaC,GAChC,IAAIvJ,EAAeuJ,EAcnB,OAXA9K,EACG/wB,QACC,SAACoxB,GACC,OAACC,EAAeD,IAAcK,EAAmBL,KACjDja,GAAgBia,EAAU56B,MAC7B,IACA1C,SAAQ,SAACs9B,GACR,IAAMjY,EAAOsZ,EAAUvW,EAAMkV,EAAUjY,MACvCmZ,EAAeuC,GAAgB+G,EAAatJ,EAAcnZ,EAC5D,IAEK,CACLnH,MAAOsgB,EAEX,GACD,MAEChoB,GAAM,aAAc,CAAEwxB,WAAAA,IAEtB6tC,EAAazuC,GAAe,SAACU,EAAaC,GACxC,GAAID,EAAa,CAEf,MAAO,CACL5pB,MAAO6iB,GAAgB+G,EAAaC,EAFf,IAIxB,CACH,GAEH,CAUH,UAagB64B,GAAQqV,GACtB,IAAA7tD,EAAI6tD,EAAJ7tD,KACA/hB,EAAI4vE,EAAJ5vE,KACA40B,EAAag7C,EAAbh7C,cACAi7C,EAAaD,EAAbC,cACAz9C,EAAQw9C,EAARx9C,SACAI,EAAQo9C,EAARp9C,SACAH,EAAOu9C,EAAPv9C,QAEA,IAAID,GAAawC,EAAczP,UAA/B,CAMA,IAAM2qD,OACKj1E,IAATknB,IACCiZ,GAAepG,EAAczP,YAAc8V,GAAiBrG,EAAczP,YACvE0W,GAAqBjH,EAAczP,UAAUnG,KAAM4V,EAAczP,UAAUnG,MAC3E4V,EAAczP,UAEpB,GAAIgH,EAAQuP,GAAa9G,EAAczP,YAErChV,GAAM,cAAe,CAAEgV,UAAWyP,EAAczP,YAE5CqN,GACFA,EACE,CAAExyB,KAAM,GAAI+hB,UAAMlnB,QACTA,IAATknB,EAAqB,CAAE/hB,UAAMnF,EAAWknB,KAAAA,GAAS,CAAE/hB,KAAMA,GAAQ,GAAI+hB,KAAAA,GACrE,CACEs0C,cAAe,KACf0Z,YAAa,YAMnB,QAAal1E,IAATknB,EAAoB,CACtB,IAAAiuD,EAAqCxsC,GAAuBzhB,EAAM+tD,GAA1Dl5C,EAAUo5C,EAAVp5C,WAAY6M,EAAYusC,EAAZvsC,aAEpBtzB,GAAM,SAAU,CAAEymB,WAAAA,EAAYzR,UAAWyP,EAAczP,UAAWse,aAAAA,IAElEpR,EAAQuE,GAAY,SAAC6K,EAAaC,SAAkB,CAClD7pB,MAAKnE,EAAAA,EAAA,CAAA,EACAguB,GACHvc,CAAAA,EAAAA,CAAAA,UAAW0qD,EAAgBj7C,EAAczP,UAAYse,IAExD,GACF,CArCF,CAuCH,CAegB,SAAAwsC,GAAcC,GAC5B,IAAAnuD,EAAImuD,EAAJnuD,KACA6S,EAAas7C,EAAbt7C,cACAm4C,EAAOmD,EAAPnD,QACA36C,EAAQ89C,EAAR99C,SACAC,EAAO69C,EAAP79C,QAEA,IACED,QACSv3B,IAATknB,GACC6S,EAAczP,WACdoZ,GAAqB3J,EAAczP,WAJtC,CASA,IAAAgrD,EAAkClD,GAChCvxC,GAAa9G,EAAczP,WAC3B4nD,GAFMC,EAAQmD,EAARnD,SAAUG,EAAWgD,EAAXhD,YAKlBh9D,GAAM,gBAAiB,CAAE68D,SAAAA,IAEzB,IAAMoD,EAAU,CAACttD,OAAOkqD,IAGxB36C,EAFmBkQ,GAAUxgB,EAAM,CAACquD,KAEhB,SAAC3uC,EAAaC,GAChC,IAEM+B,EAAe3G,GADLswC,GAAsB,CAAEJ,SADpBA,EAAYjrD,EAAwB7mB,OAAS8xE,EAAW,EAAIA,EACjBG,YAAAA,GAAeJ,IAC3B,GAEnD,MAAO,CACLl1D,MAAKnE,EAAAA,EAAA,CAAA,EACAguB,GACHvc,CAAAA,EAAAA,CAAAA,UAAWse,IAGjB,GAvBC,CAwBH,CAegB,SAAA4sC,GAAiBC,GAC/B,IAAAvuD,EAAIuuD,EAAJvuD,KACA6S,EAAa07C,EAAb17C,cACAm4C,EAAOuD,EAAPvD,QACA36C,EAAQk+C,EAARl+C,SACAC,EAAOi+C,EAAPj+C,QAEA,IACED,QACSv3B,IAATknB,GACC6S,EAAczP,WACdoZ,GAAqB3J,EAAczP,WAJtC,CASA,IAAQ6nD,EAAaC,GAAoBvxC,GAAa9G,EAAczP,WAAY4nD,GAAxEC,SAER78D,GAAM,oBAAqB,CAAE68D,SAAAA,IAO7B36C,EAFmBjzB,GAAa2iB,EAHhB,CAACe,OAAOkqD,IAET,CAAC,CAAEprE,IAAK,GAAIvF,MADVm7B,EAAczV,EAAwB,IAAM,CAAE,EAAG,MAPjE,CAYH,CAegB,SAAAwuD,GAAgBC,GAC9B,IAAAzuD,EAAIyuD,EAAJzuD,KACA6S,EAAa47C,EAAb57C,cACAm4C,EAAOyD,EAAPzD,QACA36C,EAAQo+C,EAARp+C,SACAC,EAAOm+C,EAAPn+C,QAEA,IACED,QACSv3B,IAATknB,GACC6S,EAAczP,WACdoZ,GAAqB3J,EAAczP,WAJtC,CASA,IAAAsrD,EAAkCxD,GAChCvxC,GAAa9G,EAAczP,WAC3B4nD,GAFMC,EAAQyD,EAARzD,SAAUG,EAAWsD,EAAXtD,YAKlBh9D,GAAM,mBAAoB,CAAE68D,SAAAA,IAE5B,IAAM0D,EAAe1D,EAAW,EAC1B2D,EAAc,CAAC7tD,OAAO4tD,IAEtBhxD,EAAS,CAAC,CAAE9d,IAAK,GAAIvF,MADVm7B,EAAczV,EAAwB,IAAM,CAAE,EAAG,KAQlEsQ,EAJEq+C,EAAgB3uD,EAAwB7mB,OACpCkE,GAAa2iB,EAAM4uD,EAAajxD,GAChChiB,GAAOqkB,EAAM,GAAIrC,IAEH,SAAC+hB,EAAaC,GAChC,IACM+B,EAAe3G,GADJswC,GAAsB,CAAEJ,SAAU0D,EAAcvD,YAAAA,GAAeJ,IAC5B,GAEpD,MAAO,CACLl1D,MAAKnE,EAAAA,EACAguB,CAAAA,EAAAA,GACHvc,CAAAA,EAAAA,CAAAA,UAAWse,IAGjB,GA7BC,CA8BH,CAegB,SAAAmtC,GAAWC,OACzB9uD,EAAI8uD,EAAJ9uD,KACA6S,EAAai8C,EAAbj8C,cACAm4C,EAAO8D,EAAP9D,QACA36C,EAAQy+C,EAARz+C,SACAC,EAAOw+C,EAAPx+C,QAEA,IACED,QACSv3B,IAATknB,GACC6S,EAAczP,WACdoZ,GAAqB3J,EAAczP,WAJtC,CASA,IAAA2rD,EAAkC7D,GAChCvxC,GAAa9G,EAAczP,WAC3B4nD,GAFMC,EAAQ8D,EAAR9D,SAAUG,EAAW2D,EAAX3D,YAKlBh9D,GAAM,aAAc,CAAE68D,SAAAA,IAKtB36C,EAFmByQ,GAAU,CADb,CAAChgB,OAAOkqD,OAGJ,SAACvrC,EAAaC,GAChC,IAAMqvC,EACJ/D,EAAYvrC,EAA+BvmC,OACvC8xE,EACAA,EAAW,EACTA,EAAW,OACXnyE,EAEF4oC,OACY5oC,IAAhBk2E,EACIj0C,GACEswC,GAAsB,CAAEJ,SAAU+D,EAAa5D,YAAAA,GAAeJ,IAC9D,GAEF,KAIN,OAFA58D,GAAM,2BAA4B,CAAE68D,SAAAA,EAAU+D,YAAAA,EAAattC,aAAAA,IAEpD,CACL5rB,MAAKnE,EAAAA,KACAguB,GAAY,CAAA,EAAA,CACfvc,UAAWse,IAGjB,GApCC,CAqCH,CAeM,SAAUk3B,GAAQqW,GAUb,IATTC,EAAUD,EAAVC,WACAC,EAAYF,EAAZE,aACAC,EAAaH,EAAbG,cACApvD,EAAIivD,EAAJjvD,KACAoD,EAAS6rD,EAAT7rD,UACAiN,EAAQ4+C,EAAR5+C,SACAxU,EAAMozD,EAANpzD,OACAyU,EAAO2+C,EAAP3+C,QACA++C,EAAaJ,EAAbI,cAEA,IAAIh/C,EAAJ,CAIA,IAAMqO,WjEoBN1e,EACAoD,EACAxH,GAEA,GAAkB,WAAdA,EACF,MAAO,GAGT,GAAkB,UAAdA,EACF,MAAO,GAGT,GAAkB,cAAdA,QAAsC9iB,IAATknB,EAAoB,CACnD,IAAMwW,EAAapT,EAAYmX,GAAcnX,GAAa,GACpDsB,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAI7sB,MAAMmS,QAAQ4I,KAAY0F,EAAQ1F,GAAS,CAC7C,IAAM4qD,EAAcpkE,GAAMwZ,GAC1B,OAAIzJ,GAAgBq0D,GACXC,GAAcD,GAAa,SAACh1E,GACjC,OAAOqP,MAAMmS,QAAQxhB,GACjB,GACA0gB,GAAS1gB,QACPxB,EACA,EACR,IAGO,EAEV,CACF,CAKD,MAAO,EACT,CiEzDmB02E,CAAexvD,EAAMoD,EAAW8rD,GAEjD,QAAap2E,IAATknB,EAAoB,CACtB,IAAM9hB,EAAO2d,EAAOG,UAAU0iB,GACxB7J,EAAa13B,GAAO6iB,EAAMoD,EAAWllB,EAAM2d,GACjDzN,GAAM,WAAY,CAAE8gE,WAAAA,EAAYr6C,WAAAA,EAAY6J,SAAAA,EAAUxgC,KAAAA,IAEtD,IAAMg3B,EAAYyB,EAChB9B,EAAW/wB,QAAO,SAACoxB,GAAc,MAAiB,QAAjBA,EAAU3E,IAAiC,YAAjB2E,EAAU3E,OAGvED,EAAQuE,GAAY,SAAC6K,EAAaC,GAEhC,GAAIzK,EAAJ,CACE,IAAMjY,EAAOsZ,EAAUmJ,EAAaxK,EAAUjY,MAE9C,GAAIhC,GAAgByjB,GAClB,MAAO,CACL5oB,MAAKnE,EAAAA,EAAA,CAAA,EACAwhB,GAAmBuM,EAAaC,EAAc1iB,EAAM4b,KACvDzV,CAAAA,EAAAA,CAAAA,UAAW+rD,EAAenzC,GAAsB/e,GAAQ0iB,EAAavc,aAK3E,GAAiB,KAAbsb,EAAiB,CAEnB,IAAMha,EAAU0F,EAAQnN,GAA4C,KAApC4W,EAAM6L,EAAajJ,EAAQxZ,IAE3D,MAAO,CAELnH,MAAO4d,GACLgM,EAAW/tB,EAAAA,EAAA,CAAA,EAENguB,GAAY,CAAA,EAAA,CACfvc,UAAWpI,GAAS0J,GAChBsW,GAAmB/d,GAAM,GACzB8d,GAAqB9d,GAAM,KAEjCA,GAGL,CAGF,MACH,IAEA7O,GAAM,eAEF8mB,GACe,KAAbwJ,GAEF+wC,IAAM,WAAM,OAAA/rD,GAA4B0rD,EAAe,IAAI,EAAMM,GAAoB,GAG1F,KAAM,CAELthE,GAAM,WAAY,CAAE8gE,WAAAA,EAAYxwC,SAAAA,IAEhC,IAAMzhB,EAAiB,GACvBoyD,EAAc3wC,GAAU,SAACgB,EAAaC,GAAY,MAAM,CACtD7pB,MAAKnE,EAAAA,EAAA,CAAA,EACAgnB,GAAgB+G,EAAaC,EAAc1iB,IAAK,CAAA,EAAA,CACnDmG,UAAWnI,GAAgByjB,GACvB1C,GAAsB/e,GACtB8d,GAAqB9d,GAAM,KAElC,GACF,CAvEA,CAwEH,CAeA,SACsB0yD,GAAiBC,UAAAC,GAAAvjE,MAAAvN,KAAAwC,UAAA,CAAA,SAAAsuE,KAuFtC,OAvFsCA,GAAAj/C,EAAAC,IAAAC,MAAhC,SAAAg/C,EAAAC,GAAA,IAAAC,EAAAb,EAAAC,EAAApvD,EAAAoD,EAAAiN,EAAAxU,EAAAyU,EAAA++C,EAAA/vC,EAAA1b,EAAAqsD,EAAA,OAAAp/C,IAAAhf,MAAAq+D,SAAAC,GAAA,cAAAA,EAAA/+C,KAAA++C,EAAAtsE,MACLmmB,KAAAA,KAAAA,EAAI+lD,OACJZ,EAAYY,EAAZZ,aACAC,EAAaW,EAAbX,cACApvD,EAAI+vD,EAAJ/vD,KACAoD,EAAS2sD,EAAT3sD,UACAiN,EAAQ0/C,EAAR1/C,SACAxU,EAAMk0D,EAANl0D,OACAyU,EAAOy/C,EAAPz/C,QACA++C,EAAaU,EAAbV,cACA/vC,EAAQywC,EAARzwC,UAIIjP,EAAQ,CAAA8/C,EAAAtsE,KAAA,EAAA,KAAA,CAAA,OAAAssE,EAAAvkC,OAIR3S,UAAAA,KAAAA,EAAAA,IAAAA,GAAe7V,GAAU,CAAA+sD,EAAAtsE,aAS1B,OANK+f,GAAmBR,EAAU2Y,KAEnCuD,EAAQ3tB,EAAAA,KAAMyR,GAAS,CAAA,EAAA,CAAE2Y,MAAM,KAC/B0zC,IAAM,kBAEJ/rD,GAA4B0rD,EAAeplD,EAAMpG,EAAiB8rD,OACnES,EAAAvkC,OAIC5hB,UAAAA,KAAAA,EAAAA,GAAS,MAATA,EAAYmmD,CAAAA,EAAAtsE,cACd+0D,GAAS,CACPsW,WAAY,SACZC,aAAAA,EACAC,cAAAA,EACApvD,KAAAA,EACAoD,UAAAA,EACAiN,SAAAA,EACAxU,OAAAA,EACAyU,QAAAA,EACA++C,cAAAA,IACAc,EAAAtsE,KAAA,GAAA,MAAA,KAAA,GAAA,GACgB,MAATmmB,EAAYmmD,CAAAA,EAAAtsE,KACrB+0D,GAAAA,KAAAA,CAAAA,GAAS,CACPsW,WAAY,QACZC,aAAAA,EACAC,cAAAA,EACApvD,KAAAA,EACAoD,UAAAA,EACAiN,SAAAA,EACAxU,OAAAA,EACAyU,QAAAA,EACA++C,cAAAA,IACAc,EAAAtsE,KAEEq1B,GAAAA,MAAAA,KAAAA,GAAAA,IAAAA,GAAiB9V,SAAuBtqB,IAATknB,EAAkB,CAAAmwD,EAAAtsE,KACnD,GAAA,KAAA,CAAKoX,GAAgB4Y,EAAM7T,EAAMoD,EAAUnG,SAGnC2G,GAAmBR,EAAU2Y,KAEnCuD,EAAQ3tB,EAAAA,KAAMyR,GAAS,CAAA,EAAA,CAAE2Y,MAAM,KAC/B0zC,IAAM,kBAEJ/rD,GAA4B0rD,EAAeplD,EAAMpG,EAAiB8rD,QAOrES,EAAAtsE,sBAE4C,OAA7CuK,GAAM,6BAA8B,CAAE4b,KAAAA,IAAOmmD,EAAAtsE,KAAA,GACvCusE,GAA2B,CAC/BpmD,KAAAA,EACAolD,cAAAA,EACApvD,KAAAA,EACAoD,UAAAA,EACAiN,SAAAA,EACAxU,OAAAA,EACAyU,QAAAA,EACA++C,cAAAA,IACAc,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAtkC,OAAA,GAAAikC,EAGP,KAAAD,GAAAvjE,WAAA/K,UAAA,CAAA,SAac6uE,GAA0BC,GAAAC,OAAAA,GAAAhkE,MAAAvN,KAAAwC,UAkCzC,CAAA,SAAA+uE,KAFCA,OAEDA,GAAA1/C,EAAAC,IAAAC,MAlCA,SAAAy/C,EAAAC,OAAAC,EAAArB,EAAApvD,EAAAoD,EAAAiN,EAAAxU,EAAAyU,EAAA++C,EAAAzrD,EAAA,OAAAiN,IAAAhf,MAAA,SAAA6+D,GAAA,cAAAA,EAAAt/C,KAAAs/C,EAAA7sE,MACEmmB,KAAAA,EAOa,GAPbA,EAAIwmD,OACJpB,EAAaoB,EAAbpB,cACApvD,EAAIwwD,EAAJxwD,KACAoD,EAASotD,EAATptD,UACAiN,EAAQmgD,EAARngD,SACAxU,EAAM20D,EAAN30D,OACAyU,EAAOkgD,EAAPlgD,QACA++C,EAAamB,EAAbnB,eAEIh/C,EAAQ,CAAAqgD,EAAA7sE,KAAA6sE,EAAAA,KAAAA,CAAAA,OAAAA,EAAA9kC,wBAKZgtB,GAAS,CACPsW,WAAY,QACZC,cAAc,EACdC,cAAAA,EACApvD,KAAAA,EACAoD,UAAAA,EACAiN,SAAAA,EACAxU,OAAAA,EACAyU,QAAAA,EACA++C,cAAAA,IAKIzrD,GAAmB2Y,GAAmBnZ,GAE5CqsD,IAAM,WAAA,OAAM/rD,GAA4B0rD,EAAeplD,EAAMpG,EAAiB8rD,GAAmB,IAAC,KAAA,EAAA,IAAA,MAAA,OAAAgB,EAAA7kC,OAAA,GAAA0kC,EAAA,KACnGD,GAAAhkE,MAAA/K,KAAAA,UAOD,CAAA,SAASkuE,GAAM9oE,GACbw1C,YAAW,WAAM,OAAAA,WAAWx1C,EAAU,GACxC,CAEA,SAAS+oE,GAAmBpzE,GAO1BA,SAAAA,EAASmqB,SACX,uiBC3tBGnuB,EAAS,oEADZ6E,GAEKvB,EAAA8f,EAAAte,8CADF9E,EAAS,mEAVC2F,EAAwB6U,EAAxB7U,KACA+hB,EAAyBlN,EAAzBkN,KACAK,EAA4BvN,EAA5BuN,YACAxE,EAAkB/I,EAAlB+I,kMAERhF,EAAA,EAAAkJ,OAAmBjnB,IAATknB,EAAuB,CAAAA,KAAAA,GAAW,CAAA/hB,KAAMA,GAAQ,oBAC1D4Y,EAAA,EAAA85D,EAAY9lD,GAASrK,GAAQT,EAASM,EAAaxE,GAASzC,ugECsiEhDgK,UAAA9qB,MAAc8qB,uDAIZ9qB,EAAe,kBACbA,EAAiB,WACxBA,EAAU,WACVA,EAAU,WACVA,EAAa,gBACRA,EAAkB,kBAChBA,EAA6B,WACpCA,EAAU,8PAXP,KAAAM,EAAA,KAAAg4E,EAAAxtD,UAAA9qB,MAAc8qB,sWAmBdA,UAAA9qB,MAAc8qB,mBACf9qB,EAAyB,wJADxB,KAAAM,EAAA,KAAAi4E,EAAAztD,UAAA9qB,MAAc8qB,qaA2I3BjmB,GAGKvB,EAAA6U,EAAArT,gHA5HA,YAAStE,IAATR,MAAkB,+HAPT,+HAHd6E,GASOvB,EAAAuuB,EAAA/sB,GARLzB,GAOCwuB,EAAA/pB,oEADW9H,EAAW,oXA0CbA,EAAU,IACH8vE,aAAc0I,QAAdA,EAAAx4E,EAAc,eAAAw4E,GAAKA,QAALA,EAAdA,EAAczuC,iBAAKyuC,SAAnBA,EAAqB33E,SAAU,eACnB43E,QAAZA,EAAAz4E,EAAY,eAAAy4E,SAAZA,EAAc3uC,cAAe,2DAIhC9pC,EAAgB,WAClBA,EAAsB,eAClBA,EAA0B,cAC3BA,EAAa,iBACVA,EAAgB,YACrBA,EAAiB,8BAKnBA,EAAI,YAEEw6B,YAAAx6B,MAAcw6B,YACTC,iBAAAz6B,MAAcy6B,iBACZC,mBAAA16B,MAAc06B,6CAEZotC,6BAAA4Q,EAAA14E,0BAAA04E,EAAczuC,SACzBnf,UAAA9qB,MAAc8qB,6CAEHtsB,YAIrBwB,EAAU,KAAAmnD,GAAAnnD,KA0BVA,EAAc,KAAA61B,GAAA71B,8DAwBuCA,EAA2B,+RAjEtB,oBAhB/D6E,GAeKvB,EAAAoU,EAAA5S,0BACLD,GAaKvB,EAAAuU,EAAA/S,oJA3BK9E,EAAU,KACH,OAAAM,EAAA,KAAAq4E,EAAA7I,qBAAA8I,EAAA54E,EAAc,WAAA,IAAA44E,GAAK,QAALA,EAAdA,EAAc7uC,aAAK,IAAA6uC,OAAA,EAAnBA,EAAqB/3E,SAAU,gCACnB,QAAZg4E,EAAA74E,EAAY,WAAZ64E,IAAYA,OAAZA,EAAAA,EAAc/uC,cAAe,0IAcnC9pC,EAAI,KAEE,KAAAM,EAAA,KAAA0nE,EAAAxtC,YAAAx6B,MAAcw6B,aACT,KAAAl6B,EAAA,KAAA0nE,EAAAvtC,iBAAAz6B,MAAcy6B,kBACZ,KAAAn6B,EAAA,KAAA0nE,EAAAttC,mBAAA16B,MAAc06B,iEAEZ,OAAAp6B,EAAA,KAAA0nE,EAAAF,+BAAA9nE,0BAAA84E,EAAc7uC,UACzB,KAAA3pC,EAAA,KAAA0nE,EAAAl9C,UAAA9qB,MAAc8qB,mDAMxB9qB,EAAU,gIA0BVA,EAAc,giBA7Fd,MAAS,KAATA,EAAS,UAAeQ,IAATR,MAAkB,saAuEhCgnB,6BAAA3c,OAAAgH,MAAMmS,QAAQxjB,MAAWwnC,UAAY,QAAU,SAAO,sBAIpDhQ,KAAMomC,GACNj4D,KAAM,wBACN2zD,MAAO,yCAKPW,YAAaj6D,EAAA,MAGb2F,KAAM,cACN2zD,MAAO,sCACPQ,QAAS95D,EAAA,mGAhBX,OAAAM,EAAA,KAAAm8D,EAAAz1C,QAAA3c,qBAAAA,OAAAgH,MAAMmS,QAAQxjB,MAAWwnC,UAAY,QAAU,SAAO,gRA0B9CmyB,QAAA35D,EAAA,QAGFw3B,KAAMimC,GACN93D,KAAM,KACN2zD,MAAO,+BACPQ,QAAS95D,EAAA,KAGTw3B,KAAMuhD,GACNpzE,KAAM,0BACN2zD,MAAO,8DACPQ,QAAS95D,EAAA,cAIRA,EAAK,gGAhBJ,EAAAM,EAAA,KAAAm8D,EAAA9C,QAAA35D,EAAA,QAGFw3B,KAAMimC,GACN93D,KAAM,KACN2zD,MAAO,+BACPQ,QAAS95D,EAAA,KAGTw3B,KAAMuhD,GACNpzE,KAAM,0BACN2zD,MAAO,8DACPQ,QAAS95D,EAAA,sRAvFP25D,QAAA35D,EAAA,QAGFw3B,KAAMuhD,GACNpzE,KAAM,kBACN2zD,MAAO,0DACPQ,QAAS95D,EAAA,uNANP,EAAAM,EAAA,KAAAm8D,EAAA9C,QAAA35D,EAAA,QAGFw3B,KAAMuhD,GACNpzE,KAAM,kBACN2zD,MAAO,0DACPQ,QAAS95D,EAAA,+rBArEpBA,EAAW,IAAAgnD,GAAAhnD,KAmBXA,EAAa,IAAAg5E,GAAAh5E,gDAUZA,EAAK,MAAA,gMAnCUA,EAAW,qBAJlC6E,GAgLKvB,EAAA8f,EAAAte,uGAlLwB9E,EAAqB,oBAOpCA,EAAa,sBACXA,EAAe,wBACbA,EAAiB,6BAG5BA,EAAW,+GAmBXA,EAAa,2JAzBGA,EAAW,0LAr4D1B8V,EAAQH,GAAY,uBAEpBsjE,EAA0B,oBAAX52E,OACrByT,EAAM,SAAUmjE,OASZC,EACA3oD,EACAumD,EAsDApvD,EACA/hB,EAhEI0Y,EAASxR,GAAoB,gBAA7BwR,KACF86D,EAAc/2D,KACdg3D,EAAmBh3D,KAEjBi3D,EACNxsE,GAAiC,kBAD3BmkB,EAAiBqoD,EAAjBroD,kBAAmBP,EAAkB4oD,EAAlB5oD,mBAMvBmW,GAAW,EACT0yC,EAAOxiB,KAEF/+B,EAAiBvd,EAAjBud,SACAwhD,EAAwB/+D,EAAxB++D,gBACAC,EAA6Ch/D,EAA7Cg/D,kBACAC,EAAoBj/D,EAApBi/D,YACAC,EAAsBl/D,EAAtBk/D,cACA3wD,EAAgCvO,EAAhCuO,wBACAC,EAAgCxO,EAAhCwO,wBACAzF,EAAkB/I,EAAlB+I,OACAo2D,EAAoCn/D,EAApCm/D,gBACAzhB,EAA2B19C,EAA3B09C,UACAC,EAA4B39C,EAA5B29C,iBACAiW,EAA0B5zD,EAA1B4zD,WACArmD,EAA4BvN,EAA5BuN,YACAsmD,EAAgB7zD,EAAhB6zD,QACAl2C,EAAkB3d,EAAlB2d,SACAyhD,EAA0Bp/D,EAA1Bo/D,aACA5yC,EAAkBxsB,EAAlBwsB,SACAo9B,EAA4B5pD,EAA5B4pD,cACAwH,EAAkCpxD,EAAlCoxD,aACAhM,EAAgDplD,EAAhDolD,oBACAsI,EAAoC1tD,EAApC0tD,YACApP,GAAgBt+C,EAAhBs+C,QACAC,GAAcv+C,EAAdu+C,OACA8gB,GAAwBr/D,EAAxBq/D,YACAC,GAAkCt/D,EAAlCs/D,iBACAC,GAAoCv/D,EAApCu/D,kBAIPC,IAAY,EAEhBrhB,GAAkB,CAChB1sD,QAAAA,GACAI,UAAAA,GACAmf,UAAS,WAAQA,OAAAA,GAAUsrD,EAAa,EACxClwC,SAAQ,WAAS,OAAAozC,IAAa51E,SAASwiC,YAAejb,GAAuBmrD,EAAa,EAC1Fhe,QAAO,WACLlyB,GAAW,EACPkyB,IACFA,MAGJC,OAAM,WACJnyB,GAAW,EACPmyB,IACFA,QAOF,IAAAL,QAAqCl4D,EAEhC,SAAA2mC,GACPrc,GAKAhV,EAAM,kBAAmBgV,OAEnBg6C,EACiB,mBAAdh6C,EAA2BA,EAAUyP,GAAczP,YAAc,KAAOA,EAE5E0U,GAAQslC,EAAkBvqC,GAAczP,kBAC3CyP,GAAalhB,EAAAA,EACRkhB,CAAAA,EAAAA,QACHzP,UAAWg6C,KAGb99B,EAAS89B,IAIT,IAEAl7B,GAEA9C,GAQAS,GAZA0yC,IAA2B,EAC3B1/C,GAAgBD,KAahBgxC,IAAa,EACb2E,IAAc,EACdL,IAAY,EACZplC,GAAa,GAAE,SAEJ0vC,GAAgBC,GAAAC,OAAAA,GAAApmE,WAAA/K,UAAA,CAAA,SAAAmxE,YAAAA,GAAA9hD,EAAAC,IAAAC,MAAhB,SAAA6hD,EAAiB10E,UAAY4yB,IAAAhf,MAAA+gE,SAAAC,GAAA,cAAAA,EAAAzhD,KAAAyhD,EAAAhvE,MAAA,KAAA,EAEzB,OADjBuK,EAAM,sBAAuBnQ,GAC7B4Y,EAAA,GAAAisB,GAAa7kC,GAAI40E,EAAAhvE,KAAA,EACXoC,KAAI4sE,KAAAA,EAAA,OAAAA,EAAAhvE,KAAA,EACJivE,6BAAuBD,EAAAhnC,OAAA,GAAA8mC,EAAA,8BAGMI,SAAAA,YAAAA,GAAAniD,EAAAC,IAAAC,6EACnCja,KAAAA,EAEM,OAFNA,EAAA,GAAAqrB,GAAeA,GAAeD,GAAWC,SAAgBppC,GAASk6E,EAAAnvE,KAE5D,EAAAivE,KAAuBE,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAnnC,UAAAonC,EAAA,2BAGhB,UAA0BC,YAAAA,GAAAtiD,EAAAC,IAAAC,6EACvCja,KAAAA,EAEM,OAFNA,EAAA,GAAAqrB,GAAeA,GAAeQ,GAAeR,SAAgBppC,GAASq6E,EAAAtvE,KAEhE,EAAAivE,6BAAuBK,EAAAtnC,OAAA,GAAAunC,EAAA,qCAGHC,YAAAA,GAAAziD,EAAAC,IAAAC,iBAAC7yB,EAAc2lC,GAAuB0vC,IAAAA,EAAA7wC,EAAA8wC,EAAA1+C,EAAA6M,SAAA7Q,IAAAhf,MAAA,SAAA2hE,iBAAAA,EAAApiD,KAAAoiD,EAAA3vE,MAC1D4+B,KAAAA,EAC8C,GAD9CA,UAAU6wC,EAAGpxC,UAAY,IAAAoxC,OAAA,EAAZA,EAAc7wC,WACjCr0B,EAAM,gBAAmB,CAAAw1B,gBAAAA,EAAiBnB,WAAAA,IAErCA,QAAuB3pC,IAATknB,GAAkBwzD,EAAA3vE,KAAA2vE,EAAAA,KAAAA,CAAAA,OAAAA,EAAA5nC,OAAA2nC,UAAAA,KAAAA,SAAAA,EAIArvC,GACnClkB,EACA6S,GACA+Q,EACAnB,EACA5mB,GALMgZ,EAAU0+C,EAAV1+C,WAAY6M,EAAY6xC,EAAZ7xC,aAQpB+xC,GAAY5+C,GAAa,SAAA6K,EAAaC,GAAY,MAAA,CAChD7pB,MAAKnE,EAAAA,EAAOguB,CAAAA,EAAAA,OAAcvc,UAAWse,iBAGjCz7B,YAAI,OAAAutE,EAAA3vE,KAAA,GAEJivE,KAAuB,KAAA,GAAA,IAAA,MAAA,OAAAU,EAAA3nC,UAAA6nC,EAAA,4BAGA,SAAAC,YAAAA,GAAA/iD,EAAAC,IAAAC,iBAAC7yB,EAAc2lC,GAAuB,IAAAgwC,EAAA/+C,EAAA6M,EAAA7Q,OAAAA,IAAAhf,MAAA,SAAAgiE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAhwE,oBACnEuK,EAAM,mBAAsB,CAAAnQ,KAAAA,EAAM2lC,gBAAAA,IAAegwC,EAEZtvC,GACnCtkB,EACA6S,GACA50B,EACA2lC,EACA/nB,GALMgZ,EAAU++C,EAAV/+C,WAAY6M,EAAYkyC,EAAZlyC,aAQpB+xC,GAAY5+C,GAAa,SAAA6K,EAAaC,GAAY,MAAA,CAChD7pB,MAAKnE,EAAAA,EAAA,CAAA,EAAOguB,GAAcvc,CAAAA,EAAAA,CAAAA,UAAWse,iBAGjCz7B,KAAI4tE,KAAAA,EAAA,OAAAA,EAAAhwE,KAAA,EAEJivE,6BAAuBe,EAAAhoC,OAAA,GAAAioC,EAAA,uCAUhBhB,KAAuB,OAAAiB,GAAAznE,MAAA/K,KAAAA,uIAGS,GAFvCkhC,UAAUuxC,EAAG9xC,UAAY,IAAA8xC,OAAA,EAAZA,EAAcvxC,WAEjCr0B,EAAM,0BAA2B8zB,KAE7BO,QAAuB3pC,IAATknB,EAAkB,CAAAi0D,EAAApwE,oBAC5BoZ,EAAOwlB,EAAWxlB,UACxB4V,GAAalhB,EAAAA,EACR+hB,CAAAA,EAAAA,GAAW1T,EAAM6S,GAAe5V,IACnCmG,CAAAA,EAAAA,CAAAA,UAAW,iBAEPnd,YACA,OADIguE,EAAApwE,KACJ,EAAA4T,GAASwF,GAAI,KAAA,EAAA,IAAA,MAAA,OAAAg3D,EAAApoC,OAAAqoC,GAAAA,8BAuCjB,IAAAC,GAAUtkB,GAAa,CAC3Bp/B,SAAW,SAAA3a,GACTe,EAAA,GAAAgtD,GAAe/tD,MAGf+tD,GAAesQ,GAAQlkB,WAqBrB,IAQFkQ,GAwlDAj7D,GAhmDEkvE,GAAuBC,aA3DRvxC,EAAoB9iB,GACnC,GAAe,KAAf8iB,SACF10B,EAAM,oCAEetV,IAAjBopC,IACFrrB,EAAA,GAAAqrB,QAAeppC,IAMnB+d,EAAA,GAAAqxD,IAAY,GAGZ/rB,YAAU,WACR/tC,EAAM,eAAgB00B,GAGhB,IAAAwxC,EAAiBzxC,GAAOC,EAAY9iB,EAAM/G,IAChDpC,EAAA,GAAAqrB,YlEtWJliB,EACAs0D,EACAC,GAEA,IAAMC,EAAaD,SAAAA,EAAgB9xC,WAC/BmC,GAAoB2vC,EAAe9xC,iBACnC3pC,EAEE27E,EAAsBH,EAAejrD,WAAU,SAAC2C,GACpD,OAAO8L,GAAQ08C,EAAY5vC,GAAoB5Y,GACjD,IAEMoW,GACqB,IAAzBqyC,EACIA,OACgC37E,KAAhCy7E,aAAc,EAAdA,EAAgBnyC,eACdmyC,aAAAA,EAAAA,EAAgBnyC,aAAckyC,EAAen7E,OAC7Co7E,aAAc,EAAdA,EAAgBnyC,YAChBkyC,EAAen7E,OAAS,EACtB,GACC,EAELkpC,EAAoCiyC,EAAejoE,KAAI,SAAC2f,EAAMlgB,GAClE,OAAA6F,EAAAA,KAAYqa,GAAI,CAAA,EAAA,CAAE9pB,OAAQ4J,IAAUs2B,GACtC,IAEMK,EAAaJ,EAAMD,GAEzB,MAAO,CACLC,MAAAA,EACAE,SAAUC,GAAQH,GAAO,SAACrW,UAAS9O,EAAmB8O,EAAK/O,KAAK,IAChEwlB,WAAAA,EACAL,YAAAA,EAEJ,CkEoUqBsyC,CAAmB10D,EAAMs0D,EAAgBpyC,KAGxDrrB,EAAA,GAAAqxD,IAAY,Q7F7XoB,K6FqahCyM,IAAiB,EAEjBhkB,GAAgB,GAQdikB,GAAmBC,GAAWtkB,IAE3B,SAAAukB,GACP90D,EACAwwC,EACA30C,EACA40C,GAEAJ,mBAEQ0kB,MAEFA,EAAsBH,GAAiB50D,EAAMwwC,EAAW30C,EAAQ40C,SACzDj1C,GACPu5D,EAAmB,EAEf93D,KAAI,GACJqC,QAAS,uBAA0B9D,EAAc8D,QACjDsxC,SAAUn4C,GAAmB4zD,UAK9Bv0C,GAAQi9C,EAAqBpkB,MAChCviD,EAAM,4BAA6B2mE,GACnCl+D,EAAA,GAAA85C,GAAmBokB,OAGtB,SAAA3yE,GAAQ,OAAKgM,EAAKzL,+BAAAA,OAAgCP,SAAQ,aAI/C4yE,YACd5mE,EAAM,YAEF4iD,IAEAA,WAAAA,GACAF,cAAc,IAMlBgkB,GAAuB90D,EAAMwwC,EAAW30C,EAAQ40C,GACxCrmC,EAAQumC,IAA2C,KAArB,CAAAA,iBAAAA,cAGxByK,YACPp7C,WAGA4hD,YACA/uC,GAGA,SAAAoiD,GAAqBC,GACxB/0D,GAAc+0D,GAOX,SAAkBpgD,GACrB,QAAgBh8B,IAAhBg8B,SAKE,IAAAqgD,GAAar9C,GAAQ9X,EAAM8U,MAEjC1mB,EAAM,uBAAsB,CAAI+mE,UAAAA,EAAWC,mBAAwBt8E,IAATknB,KAErDm1D,aAKCE,EAAe,CAAcr1D,KAAAA,EAAM/hB,KAAAA,GACnCq3E,EAAgBziD,GAChB0iD,EAAev1D,EACfmpD,EAAelrE,EACfu3E,EAAyBb,GAE/B99D,EAAA,GAAAmJ,EAAO8U,GACP2gD,GAAyBz1D,GACzBnJ,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB3jB,QAAal4D,EACb48E,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IASFI,GAAaP,EAFO,MA7ClBQ,CAAkBX,EAAel1D,MACxBE,GAAcg1D,IAiDlB,SAAkBnxC,GACrB,QAAgBjrC,IAAhBirC,GAA6B5jB,GAAc0xD,cAIzCsD,EAAYpxC,IAAgB9lC,KAElCmQ,EAAM,uBAAsB,CAAI+mE,UAAAA,KAE3BA,aAKCE,EAAe,CAAcr1D,KAAAA,EAAM/hB,KAAAA,GACnCs3E,EAAev1D,EACfs1D,EAAgBziD,GAChBs2C,EAAelrE,EACfu3E,EAAyBb,YAG7B30D,EAAOiyD,EAAgBluC,IACvB0xC,GAAyBz1D,GACzBnJ,EAAA,GAAA5Y,EAAO8lC,GACPltB,EAAA,GAAA89D,IAAiB,GACjB3jB,QAAal4D,QACN0iB,OAEL3E,EAAA,GAAAmJ,EAAOiyD,EAAgB9zD,EAAW4lB,KAClC0xC,GAAyBz1D,GACzBnJ,EAAA,GAAA5Y,EAAO8lC,GACPltB,EAAA,GAAA89D,IAAiB,GACjB3jB,QAAal4D,EACb48E,GAA8B11D,SACvB81D,GAEPj/D,EAAA,GAAAmJ,OAAOlnB,QACPmF,EAAO4zE,EAAsB,MAC7Bh7D,EAAA,GAAA89D,IAAiB,GACjB3jB,QACWl4D,IAATmF,GAA+B,KAATA,EAClB0gB,GAAwB1gB,EAAOud,EAAc8D,SAAWyB,OAAOvF,SAC/D1iB,GAIV48E,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IASFI,GAAaP,EAFO,MA3GlBU,CAAkBb,EAAej3E,MA0H5B,SAAAw3E,GAAyBz1D,GAC3BuyD,KACHA,IAA2B,OAC3B1/C,GAAgBM,GAAmBnT,EAAM6S,GAAa,GzE8OtD,SAA2B7S,GAC/B,OAAOS,GAAe,CAAET,KAAAA,GAAQvG,IAAgCqf,GAAgBD,EAClF,CyEhPkEm9C,CAAiBh2D,MAIxE,SAAA01D,GAA8B11D,GAChC6S,GAAczP,YAKjBwU,EAAS5X,EAAM0Z,GAAc7G,GAAczP,aAC3CwU,EAAS5X,EAAM2Z,GAAa9G,GAAczP,cAK5ChV,EAAM,kDAAmDykB,GAAczP,gBACvEyP,GAAalhB,EAAAA,EAAA,CAAA,EACRkhB,IAAa,CAAA,EAAA,CAChBzP,UAAWgY,GAAoBpb,EAAM6S,SAIhC,SAAA8iD,GAAcM,GACrB,IAAAV,EAAYU,EAAZV,aACAD,EAAaW,EAAbX,cACAnM,EAAY8M,EAAZ9M,aACAqM,EAAsBS,EAAtBT,4BAOqB18E,IAAjBy8E,QAA+Cz8E,IAAjBqwE,SAKrBrwE,IAATknB,OACmBlnB,IAAjBy8E,EAEFpB,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,MAAK,EAAK3lD,GAAI,UAAWtT,KAAM,GAAI3iB,MAAOi7E,IAC1Cz/D,MAAOgmB,GAA4Bw5C,GACnCt1D,UAAMlnB,EACNmF,KAAMkrE,EACNwL,eAAgBa,GAElBplB,KAAI,CACF8lB,MAAK,CAAA,CAAK3lD,GAAI,UAAWtT,KAAM,GAAI3iB,MAAO0lB,IAC1ClK,MAAOgmB,GAA4BjJ,IACnC7S,UAAMlnB,EACNmF,KAAAA,EACA02E,eAAAA,MAIJR,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,WAAOp9E,EACPknB,UAAMlnB,EACNmF,KAAMkrE,EACNrzD,MAAOgmB,GAA4Bw5C,GACnCX,eAAgBa,GAElBplB,KAAI,CACF8lB,WAAOp9E,EACPknB,KAAAA,EACAlK,MAAOgmB,GAA4BjJ,IACnC50B,KAAAA,EACA02E,eAAAA,WAKe77E,IAAjBy8E,GACFpB,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,WAAOp9E,EACPknB,KAAMu1D,EACNz/D,MAAOgmB,GAA4Bw5C,GACnCr3E,KAAMkrE,EACNwL,eAAgBa,GAElBplB,KAAI,CACF8lB,WAAOp9E,EACPknB,UAAMlnB,EACNmF,KAAAA,EACA02E,eAAAA,GACA7+D,MAAOgmB,GAA4BjJ,iBAkB7BqjD,GACdrhD,EACAshD,GAII,GAFJ/nE,EAAM,QAASymB,EAAYshD,QAEdr9E,IAATknB,EACQ,MAAA,IAAA1b,MAAM,mCAGZ+wE,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bs3E,EAAev1D,EACfs1D,EAAgBziD,GAChBs2C,EAAelrE,EACfu3E,EAAyBb,GAGzBxkB,EAA0BvuB,GAC9B5hB,EACA6U,GAEIuhD,EAAUxhD,GAAmB5U,EAAM6S,GAAegC,GAGlDuoC,EAAmB/hC,GAA8Brb,EAAM6U,GACvDwhD,ExE3CJ,SACJxjD,EACAzP,GAGA,OAAKA,KAFa7hB,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,KAAAA,UAAG,GAMrBoQ,EAAAA,EAAA,CAAA,EACKkhB,GACHzP,CAAAA,EAAAA,CAAAA,UAAAA,IALOyP,CAOX,CwE8BiCyjD,CAC3BF,EAAQvjD,cACRuqC,GACA,GAEFhvD,EAAM,yBAA0BgvD,OAE1Bz2D,EACkB,mBAAfwvE,EAA4BA,EAAWC,EAAQp2D,KAAMq2D,QAAwBv9E,EAEtF+d,EAAA,GAAAmJ,EAAOrZ,QAA8B7N,IAAlB6N,EAASqZ,KAAqBrZ,EAASqZ,KAAOo2D,EAAQp2D,MACnE,IAAAu2D,EACJ5vE,QAA+B7N,IAAnB6N,EAASmP,MAAsBnP,EAASmP,MAAQugE,EAC9Dx/D,EAAA,GAAAgc,GAAgB0jD,GAChB1/D,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAgpB,QAAa/mC,GACbk4D,QAAal4D,EAGb48E,GAA8B11D,GAE9Bm0D,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,MAAO/lB,EACPnwC,UAAMlnB,EACNmF,KAAMkrE,EACNrzD,MAAOgmB,GAA4Bw5C,GACnCX,eAAgBa,GAElBplB,KAAI,CACF8lB,MAAOrhD,EACP7U,UAAMlnB,EACNgd,MAAOgmB,GAA4By6C,GACnCt4E,KAAAA,EACA02E,eAAAA,UAIE3G,EAAW,CACfhuD,KAAAA,EACAu1D,aAAAA,EACAplB,KAAAA,EACAC,KAAMv7B,UAGR+gD,GAAaP,EAAiBrH,GAEvBA,WAQAwI,MACHnmD,GAAawC,GAAczP,WAI/Bqc,GAAgBzE,GAAmBrB,GAAa9G,GAAczP,YAAY,aAGnEqzD,SACHpmD,GAAawC,GAAczP,WAIzB,IAAAnG,EAAO0c,GAAa9G,GAAczP,WAClC9oB,EAAQu5B,EAAM7T,EAAM/C,GACtBhC,GAAgB3gB,YAgfO2iB,EAAgB3iB,GAC3C8T,EAAM,sBAAyB,CAAA6O,KAAAA,EAAM3iB,MAAAA,IAErCg4E,IAAY,EAGZD,GAAiB,CACftyD,QAAO,CACLC,KAAM1lB,GAER2iB,KAAAA,EACAqT,QAASprB,GAAQorB,QACjB9Z,QAAO,WACL87D,IAAY,EACZl6D,QA7fFs+D,CAAoBz5D,EAAM3iB,GAE1BmlC,GAAgB1E,GAAqB9d,GAAM,cAItC05D,KACH,IAAAtmD,GAAa6I,GAAiBrG,GAAczP,WAA5C,CAIE,IAAAnG,EAAO0c,GAAa9G,GAAczP,WAClCiQ,EAAUnW,EAAmBD,GAC7B3iB,EAAQu5B,EAAM7T,EAAM/C,GACpByX,GAAiBsD,GAAiB19B,EAAOu4B,GAAcE,iBAAkBM,EAASxX,GAClFgc,EAAenD,EAAgB3T,OAAOzmB,GAAS6hB,GAAc4E,OAAOzmB,GAAQuhB,GAElFzN,EAAM,4BAA2B,CAAIsmB,cAAAA,EAAep6B,MAAAA,EAAOu9B,aAAAA,IAE3D47C,KAGMljD,GAAI,UACJtT,KAAMoW,EACN/4B,MAAOu9B,KAGV,SAAA6H,EAAaC,UAEV7pB,MAAO2e,GAAiBkL,EAActM,EAASqB,iBAcxCkiD,YAASC,GAAAvqE,MAAAvN,KAAAwC,UAAA,CAAA,SAAAs1E,YAAAA,GAAAjmD,EAAAC,IAAAC,6GAACgmD,IAAMC,EAAA59E,OAAA49E,QAAAj+E,IAAAi+E,OAAAA,EAAG,GAAIC,EAAAnzE,OAC9By0D,GAAK,CACTt4C,KAAAA,EACA6S,cAAAA,GACAxS,YAAay2D,EAASz2D,OAAcvnB,EACpCu3B,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,wEAIE,CAAA,SAAAwD,YAAUC,GAAA5qE,MAAA/K,KAAAA,oBAAA21E,YAAAA,GAAAtmD,EAAAC,IAAAC,yGAACgmD,IAAMK,EAAAh+E,OAAA,QAAAL,IAAAq+E,EAAA,KAAAA,EAAG,QACpBr+E,IAATknB,EAAkBo3D,CAAAA,EAAAvzE,KAAA,EAAA,KAAA,CAAA,OAAAuzE,EAAAxrC,wBAIhB,OAJgBwrC,EAAAvzE,KAIhB,EAAA00D,GAAM,CACVv4C,KAAAA,EACA6S,cAAAA,GACAxS,YAAay2D,EAASz2D,OAAcvnB,EACpC+iB,OAAAA,uEAIK,UAoBAw7D,KACP1gE,EACE2gE,UAGK59D,CAAAA,EAAAA,QACHnF,YAAW,CACTuC,MAAO,WAIT,CAAAN,0BAAe4B,iBAKZs1D,GAAgBzvE,EAAcs3D,GACrC5+C,EACE4gE,IAEEt5E,KAAAA,EACAm3D,QAAU,SAAAn3D,GAAY,OAAKqgB,GAAiBrgB,GAAO,SAAAyE,GAAM,OAAAub,GAAevb,EAAGmZ,KAC3Ew5C,EAAAA,SAAU72C,GACV+2C,QAAAA,OAGG77C,CAAAA,EAAAA,IACHnF,CAAAA,EAAAA,CAAAA,aACEuC,MAAO,QACPE,OAAQ,SAEVvC,cACE60B,QAAS,EACTtyB,OAAQ,UAIV,CAAAR,mBAAe,OAAA4B,iBAKZo/D,KACPhf,GAAQ,CACNx4C,KAAAA,EACA/hB,KAAAA,EACA40B,cAAAA,GACAi7C,eAAe,EACfz9C,SAAAA,EACAI,SAAAA,EACAH,QAASmjD,cAIJgE,MAELpnD,QACSv3B,IAATknB,GACC6S,GAAczP,WACdoZ,GAAqB3J,GAAczP,aACpCgH,EAAQuP,GAAa9G,GAAczP,cAKrChV,EAAM,YAAW,CAAIgV,UAAWyP,GAAczP,YAI9CqwD,GAFmBjzC,GAAUxgB,EAAMyZ,GAAkBzZ,EAAM6S,GAAczP,uBAKlEs0D,SAELrnD,GACCwC,GAAczP,YACb+V,GAAiBtG,GAAczP,YAAe8V,GAAiBrG,GAAczP,cAC/EgH,EAAQuP,GAAa9G,GAAczP,aAKrChV,EAAM,UAAS,CAAIgV,UAAWyP,GAAczP,YAEtC,IAAAyR,EnEzsBM,SAAQ7U,EAAeoD,GACrC,GAAI8V,GAAiB9V,GACnB,MAAO,CACL,CACEmN,GAAI,OACJ3mB,KAAMsT,EAAmBkG,EAAUnG,MACnCA,KAAM,KAKZ,IAAIkc,GAAiB/V,GAkCnB,MAAM,IAAI9e,MAAM,uEAjChB,IAAMkyB,EAAaC,EAAQrT,EAAUiW,WAC/B3U,EAASmP,EAAM7T,EAAMwW,GAE3B,GAAId,EAAYhR,GAMd,MAAO,CACL,CACE6L,GAAI,UACJtT,KAAM,GACN3iB,MATUm/B,GAAkBzZ,EAAMoD,GAAW/W,KAAI,SAAC4Q,GACpD,IAAMnR,EAAQ6O,GAAIgc,EAAK1Z,IACvB,OAAOyH,EAAO5Y,EAChB,MASK,GAAI2pB,EAAa/Q,GAAS,CAE/B,IAAMpqB,EAAiC,CAAA,EAMvC,OALAm/B,GAAkBzZ,EAAMoD,GAAWxrB,SAAQ,SAACqlB,GAC1C,IAAMpd,EAAMkhB,OAAO4V,EAAK1Z,IACxB3iB,EAAMuF,GAAO6kB,EAAO7kB,EACtB,IAEO,CACL,CACE0wB,GAAI,UACJtT,KAAM,GACN3iB,MAAAA,GAGL,CAMH,MAAU,IAAAgK,MAAM,iDAAmDgc,KAAKtE,UAAUoH,GACpF,CmEupBuBu0D,CAAQ33D,EAAM6S,GAAczP,WAE/CqwD,GAAY5+C,GAAa,SAAA6K,EAAaC,GAChC,GAAA1kB,GAAgBykB,GAAW,QAI3B5pB,MAAO6iB,GAAgB+G,EAAaC,EAF5B,UAQP,SAAAi4C,GAAa1I,QACPp2E,IAATknB,GAIJ44C,GAAQ,CACNsW,WAAAA,EACAC,cAAc,EACdC,cAAAA,EACApvD,KAAAA,EACAoD,UAAWyP,GAAczP,UACzBiN,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,GACTpE,cAAewI,KAIV,SAAAC,GAA4B12E,GAC/B63B,GAAepG,GAAczP,YAE/Bqc,GAAgB1E,GAAqBlI,GAAczP,UAAUnG,MAAM,IAGhE4V,GAAczP,WACjBqc,GAAgBrE,GAAoBpb,EAAM6S,KAG5C+kD,GAAax2E,GAGN,SAAA22E,GAAc32E,OACjBivB,GAAawC,GAAczP,aAI1BqZ,GAAW5J,GAAczP,eAMtB,IAAAnG,EAAOyc,GAAc7G,GAAczP,WACnCghB,EAAwBvQ,EAAM7T,EAAM/C,GACpC+6D,WxFrzBV19E,EACA8G,EACAya,GAGA,GAAa,UAATza,EAAkB,CACpB,GAAIuI,MAAMmS,QAAQxhB,GAEhB,OAAOA,EAGT,GAAI0gB,GAAS1gB,GACX,OAAOmjB,GAAcnjB,GAGvB,GAAqB,iBAAVA,EACT,IACE,IAAM29E,EAAcp8D,EAAOS,MAAMhiB,GAEjC,GAAIqP,MAAMmS,QAAQm8D,GAChB,OAAOA,EAGT,GAAIj9D,GAASi9D,GAGX,OAAOx6D,GAAcw6D,EAExB,CAAC,MAAOxxE,GAEP,MAAO,CAACnM,EACT,CAIH,MAAO,CAACA,EACT,CAED,GAAa,WAAT8G,EAAmB,CACrB,GAAIuI,MAAMmS,QAAQxhB,GAChB,OAAOkjB,GAAcljB,GAGvB,GAAI0gB,GAAS1gB,GAEX,OAAOA,EAGT,GAAqB,iBAAVA,EACT,IACE,IAAM29E,EAAcp8D,EAAOS,MAAMhiB,GAEjC,GAAI0gB,GAASi9D,GACX,OAAOA,EAGT,GAAItuE,MAAMmS,QAAQm8D,GAChB,OAAOz6D,GAAcy6D,EAExB,CAAC,MAAOxxE,GAEP,MAAO,CAAEnM,MAAOA,EACjB,CAIH,MAAO,CAAEA,MAAOA,EACjB,CAED,GAAa,UAAT8G,EACF,OAAI6Z,GAAgB3gB,GACXuhB,EAAOG,UAAU1hB,GAInBA,EAGT,UAAUgK,MAAK3B,kBAAAA,OAAmBiZ,GAAUthB,EAAOuhB,GAAOlZ,QAAAA,OAAOvB,GACnE,CwFsuB6B82E,CAAa9zC,EAAchjC,EAAMya,GACpD,GAAAm8D,IAAmB5zC,aAKjBvP,EAAU,EACZtE,GAAI,UAAWtT,KAAMC,EAAmBD,GAAO3iB,MAAO09E,IAG1D5pE,EAAM,gBAAe,CAAIgV,UAAWyP,GAAczP,UAAWnG,KAAAA,EAAM7b,KAAAA,EAAMyzB,WAAAA,IAEzE4+C,GAAY5+C,GAAa,SAAA6K,EAAaC,UAGlC7pB,MAAO+c,GAAczP,UACjBuV,GAAgB+G,EAAaC,EAAchG,GAAa9G,GAAczP,YACtEyP,aAGDrX,GACPmrD,EAAQnrD,QA5BRmrD,EAAO,IAAKriE,MAAK3B,uCAAAA,OAAwCvB,cAgCpD+2E,KACF,GAAAtlD,GAAczP,UAAd,CAIC,IAAAg1D,EAAkB39C,GAAeza,EAAM6S,IAAe,GACtD2D,EAAaC,EAAQkD,GAAa9G,GAAczP,YAGpDg1D,IACChuD,EAAQuP,GAAay+C,KACtBtgD,GAAQtB,EAAYC,EAAQkD,GAAay+C,KAEzC34C,GAAgBxD,GAAqBtC,GAAay+C,KAElD34C,GAAgBzD,GAAsBxF,IAGxCpoB,EAAM,gBAAe,CAAIgV,UAAWyP,GAAczP,UAAWg1D,gBAAAA,EAAiB5hD,WAAAA,IAE9EvwB,KAAOF,MAAI,WAAO,OAAAsyE,IAAiB,cAG5BC,KACF,GAAAzlD,GAAczP,UAAd,CAIC,IAAAnG,EAAOid,GAAWla,EAAM6S,GAAczP,WAE5ChV,EAAM,eAAgB6O,GAEtBwiB,GAAgBxD,GAAqBhf,IAErChX,KAAOF,MAAI,WAAO,OAAAsyE,kBAGLE,GAAqBC,GAAAC,OAAAA,GAAAnsE,MAAAvN,KAAAwC,UAAA,CAAA,SAAAk3E,YAAAA,GAAA7nD,EAAAC,IAAAC,MAArB,SAAA4nD,EAAsB1uD,GAAY6G,OAAAA,IAAAhf,MAAA,SAAA8mE,GAAAA,cAAAA,EAAAvnD,KAAAunD,EAAA90E,MAAA,KAAA,EACzC,OADyC80E,EAAA90E,KACzC,EAAA8rE,GAAiB,CACrB3lD,KAAAA,EACAmlD,cAAc,EACdC,cAAAA,EACApvD,KAAAA,EACAoD,UAAWyP,GAAczP,UACzBiN,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,GACTpE,cAAewI,GACfv4C,SAAUG,gFAILm5C,SACHvoD,GAIC8jD,GAAQlkB,WAAWF,aAIlB/jC,EAAOmoD,GAAQhkB,UAChBnkC,OAICqpD,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAEhC4Y,EAAA,GAAAmJ,EAAOgM,EAAKmkC,KAAK+lB,MAAQnhD,EAAmB/U,EAAMgM,EAAKmkC,KAAK+lB,OAASlqD,EAAKmkC,KAAKnwC,MAC/EnJ,EAAA,GAAAgc,GAAgB7G,EAAKmkC,KAAKr6C,OAC1Be,EAAA,GAAA5Y,EAAO+tB,EAAKmkC,KAAKlyD,MACjB4Y,EAAA,GAAA89D,GAAiB3oD,EAAKmkC,KAAKwkB,gBAC3B3jB,QAAal4D,EAEbsV,EAAM,OAAM,CAAI4d,KAAAA,EAAMhM,KAAAA,EAAM6S,cAAAA,KAY5B+iD,GAAaP,EATXrpD,EAAKmkC,KAAK+lB,OAASlqD,EAAKokC,KAAK8lB,OAEvBl2D,KAAAA,EACAu1D,aAAcF,EAAgBr1D,KAC9BowC,KAAMpkC,EAAKmkC,KAAK+lB,MAChB/lB,KAAMnkC,EAAKokC,KAAK8lB,OAElB,MAIN99D,KACIya,GAAczP,WAChB3L,GAASkiB,GAAa9G,GAAczP,YAAY,cAI3Cy1D,SACHxoD,GAIC8jD,GAAQlkB,WAAWD,aAIlBhkC,EAAOmoD,GAAQ/jB,UAChBpkC,OAICqpD,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAEhC4Y,EAAA,GAAAmJ,EAAOgM,EAAKokC,KAAK8lB,MAAQnhD,EAAmB/U,EAAMgM,EAAKokC,KAAK8lB,OAASlqD,EAAKokC,KAAKpwC,MAC/EnJ,EAAA,GAAAgc,GAAgB7G,EAAKokC,KAAKt6C,OAC1Be,EAAA,GAAA5Y,EAAO+tB,EAAKokC,KAAKnyD,MACjB4Y,EAAA,GAAA89D,GAAiB3oD,EAAKokC,KAAKukB,gBAC3B3jB,QAAal4D,EAEbsV,EAAM,OAAM,CAAI4d,KAAAA,EAAMhM,KAAAA,EAAM6S,cAAAA,KAY5B+iD,GAAaP,EATXrpD,EAAKmkC,KAAK+lB,OAASlqD,EAAKokC,KAAK8lB,OAEvBl2D,KAAAA,EACAu1D,aAAcF,EAAgBr1D,KAC9BowC,KAAMpkC,EAAKokC,KAAK8lB,MAChB/lB,KAAMnkC,EAAKmkC,KAAK+lB,OAElB,MAIN99D,KACIya,GAAczP,WAChB3L,GAASkiB,GAAa9G,GAAczP,YAAY,KAI3C,SAAA01D,GAAc7T,GAWb,IAAA8T,EAVJ1oD,QAAqBv3B,IAATknB,IAIhBsyD,IAAY,EAEZH,GAAW,CACT51E,GAAIk1E,EACJzxD,KAAAA,EACAilD,SAAAA,EACAlM,QAAMggB,EAAAnoD,EAAAC,IAAAC,oFAAW+D,KAAAA,EAAAA,EAAUmkD,EAAVnkD,WACfzmB,EAAM,SAAU62D,EAAUpwC,GAE1B4+C,GAAY5+C,GAAa,SAAA6K,EAAaC,GAAY,MAAA,CAEhD7pB,MAAKnE,EAAAA,EAAA,CAAA,EACAgnB,GAAgB+G,EAAaC,EAAcslC,QAC9C7hD,UAAW2X,GAAqBkqC,GAAU,iGAIhDzuD,QAAO,WACL87D,IAAY,EACZl6D,kBAKG6gE,KACFpmD,GAAczP,WAKnB01D,GADiBl9C,GAAa5b,EAAM6S,GAAczP,YAYpC,SAAA81D,GAAmBz6E,GAC7B,QAAS3F,IAATknB,EAAA,CAII,IAAAzjB,EAA6BkC,EAA7BlC,GAAIy8D,EAAyBv6D,EAAzBu6D,YAAaxiD,EAAY/X,EAAZ+X,QACnByuD,EAAWxmE,EAAQwmE,UAAQ,GAEjCqN,IAAY,EAEZF,GAAgB,CACd71E,GAAIA,GAAMm1E,EACV1xD,KAAAA,EACAilD,SAAAA,EACAjM,YAAc,SAAAnkC,GACRmkC,EACFA,EAAW,CACTnkC,WAAAA,EACA7U,KAAAA,EACAm5D,gBAAiBpkD,EAAmB/U,EAAM6U,MAG5CzmB,EAAM,cAAe62D,EAAUpwC,GAE/B4+C,GAAY5+C,GAAa,SAAA6K,EAAaC,GAAY,MAAA,CAEhD7pB,MAAKnE,EAAAA,EACAgnB,CAAAA,EAAAA,GAAgB+G,EAAaC,EAAcslC,IAC9C7hD,CAAAA,EAAAA,CAAAA,UAAW2X,GAAqBkqC,GAAU,WAKlDzuD,QAAO,WACL87D,IAAY,EACZl6D,KACI5B,GACFA,iBAMC4iE,KACFvmD,GAAczP,WAKnB81D,GACE,CAAAjU,SAFerpC,GAAa5b,EAAM6S,GAAczP,sBAmC9B3L,GAAQ4hE,GAAAC,OAAAA,GAAAhtE,MAAAvN,KAAAwC,UAAA,CAAA,SAAA+3E,YAAAA,GAAA1oD,EAAAC,IAAAC,MAAR,SAAAyoD,EAASt8D,GAAcu8D,IAAAA,EAAAC,EAAAC,EAAAC,EAAA77D,EAAA87D,EAAAr4E,UAAAsvB,OAAAA,IAAAhf,MAAA,SAAAgoE,GAAAA,cAAAA,EAAAzoD,KAAAyoD,EAAAh2E,MAAE21E,KAAAA,EAEvC,OAFuCA,IAAmBI,EAAAzgF,OAAA,QAAAL,IAAA8gF,EAAA,KAAAA,EAAA,GAChE/iE,EAAA,GAAAgc,GAAgBa,GAAW1T,EAAM6S,GAAe5V,IAAI48D,EAAAh2E,KAC9C,EAAAoC,KAAI,KAAA,EAIiC,GAFrCwzE,EAAOpY,GAAYpkD,GAEzB7O,EAAM,WAAU,CAAI6O,KAAAA,EAAMw8D,KAAAA,EAAMjI,YAAAA,IAE3BiI,GAASjI,GAAWqI,EAAAh2E,KAAAg2E,EAAAA,KAAAA,CAAAA,OAAAA,EAAAjuC,OAAA,SAChBjmC,QAAQC,WAGX8zE,KAAAA,EACqC,GADrCA,EAAelI,EAAYjsD,wBAC3Bo0D,EAAWF,EAAKl0D,wBACjBi0D,EAAmBK,CAAAA,EAAAh2E,KAAA,GAAA,KAAA,CAAA,KAClB81E,EAASnxD,OAASkxD,EAAaliE,KAAOmiE,EAASniE,IAAMkiE,EAAalxD,SAAMqxD,EAAAh2E,KAAAg2E,GAAAA,KAAAA,CAAAA,OAAAA,EAAAjuC,OAAA,SAEnEjmC,QAAQC,WAIbkY,KAAAA,GAAkC,OAAlCA,GAAW47D,EAAa1iE,OAAS,EAAC6iE,EAAAjuC,gBAE7B,IAAAjmC,SAAe,SAAAC,GACxBgsE,EAAK6H,EAAI,CACP91D,UAAW6tD,EACX1zD,OAAAA,EACA1b,S7F11CuB,I6F21CvBuE,oBAAgB,OAAAf,gFASN,SAAAy7D,GAAYpkD,GACnB,OAAAu0D,EACHA,EAAY7hB,cAAa,kBAAAhtD,OAAmB4hB,GAAetH,UAC3D,KAOG,SAAAorC,GAAeprC,OAChBw8D,EAAOpY,GAAYpkD,GAEpB,GAAAw8D,GAASjI,EAAT,KAICkI,EAAelI,EAAYjsD,wBAC3Bo0D,EAAWF,EAAKl0D,wBAEhBu0D,EAAa7+D,GAAgB4Y,EAAM7T,EAAM/C,IADhC,GAGX08D,EAAS3iE,OAET2iE,EAASniE,IAAMkiE,EAAaliE,IALjB,GAObo6D,EAAK6H,EAAI,CACP91D,UAAW6tD,EACX1zD,QATW,GAUX1b,SAAU,IAEHu3E,EAASniE,IAAMsiE,EAAaJ,EAAalxD,OAZrC,IAcbopD,EAAK6H,EAAI,CACP91D,UAAW6tD,EACX1zD,SAAU47D,EAAa1iE,OAAS8iE,EAhBrB,IAiBX13E,SAAU,cAKPwzE,GAAaP,EAA0BrH,GAUxB,IAAA+L,UAPOjhF,IAAzBu8E,EAAgBr1D,WAAgDlnB,KAA1Bu8E,eAAAA,EAAiBp3E,MAOvD,QAASnF,IAATmF,EAEM,QAAR87E,EAAAtpD,SAAAspD,IAAQA,GAARA,EADkB,CAAA97E,KAAAA,EAAM+hB,UAAMlnB,GACVu8E,GAClB/gB,cAAe0gB,KACfhH,YAAAA,SAEOhuD,QAASlnB,IAATknB,EAAkB,CAAA,IAAAg6D,EAEnB,QAARA,EAAAvpD,SAAQ,IAAAupD,GAARA,EADkB,CAAA/7E,UAAMnF,EAAWknB,KAAAA,GACfq1D,GAClB/gB,cAAe0gB,KACfhH,YAAAA,cAKGyF,GACP5+C,EACAshD,UAEI9lD,GAGArQ,KAAAA,EACAu1D,aAAcv1D,EACdmwC,KAAI,GACJC,KAAI,KAIRhiD,EAAM,cAAeymB,EAAYshD,GAE1BD,GAAMrhD,EAAYshD,aAGlB0B,GAAkB/iD,EAAsBqhD,GACzC,IAAAb,EAAgBziD,GAChB0iD,EAAev1D,EACfmpD,EAAelrE,EACfo3E,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bu3E,EAAyBb,GAEzBv+C,EAAejD,GAAmBnT,EAAM6S,MAAmBiG,IAE3DnyB,EACkB,mBAAfwvE,EAA4BA,EAAWrhD,EAAasB,QAAgBt9B,EAE7E+d,EAAA,GAAAmJ,EAAOrZ,QAA8B7N,IAAlB6N,EAASqZ,KAAqBrZ,EAASqZ,KAAO8U,GACjEje,EAAA,GAAAgc,GAAgBlsB,QAA+B7N,IAAnB6N,EAASmP,MAAsBnP,EAASmP,MAAQsgB,GAC5Evf,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB3jB,QAAal4D,EAGb48E,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IAQFI,GAAaP,EAFO,eAKb4E,GAAiBl2C,EAAqBoyC,GAC7C/nE,EAAM,oBAEA,IAAAknE,EAAgBziD,GAChB0iD,EAAev1D,EACfmpD,EAAelrE,EACfo3E,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bu3E,EAAyBb,YAG7B30D,EAAOiyD,EAAgBluC,IACvBltB,EAAA,GAAAgc,GAAgBM,GAAmBnT,EAAM6S,MAAmBiG,KAC5DjiB,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB3jB,QAAal4D,QACN0iB,OAEL3E,EAAA,GAAAmJ,EAAOiyD,EAAgB9zD,EAAW4lB,KAClCltB,EAAA,GAAAgc,GAAgBM,GAAmBnT,EAAM6S,MAAmBiG,KAC5DjiB,EAAA,GAAA5Y,EAAO8lC,GACPltB,EAAA,GAAA89D,IAAiB,GACjB3jB,QAAal4D,QACNg9E,GAEPj/D,EAAA,GAAAmJ,OAAOlnB,GACP+d,EAAA,GAAAgc,GAAgBD,GAAmB,CAAG5S,KAAAA,EAAMkT,OAAQ4F,MACpDjiB,EAAA,GAAA5Y,EAAO8lC,GACPltB,EAAA,GAAA89D,IAAiB,GACjB3jB,GACW,KAAT/yD,EACI0gB,GAAwB1gB,EAAOud,EAAc8D,SAAWyB,OAAOvF,SAC/D1iB,GAIC,GAAe,mBAAfq9E,EAAyB,CAC5B,IAAAxvE,EAAWwvE,EAAWn2D,EAAM6S,SAElC7S,EAAOrZ,GAAYA,EAASqZ,KAAOrZ,EAASqZ,KAAOA,GACnDnJ,EAAA,GAAAgc,GAAgBlsB,GAAYA,EAASmP,MAAQnP,EAASmP,MAAQ+c,IAIhE6iD,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IAMFI,GAAaP,EAFO,MAWb,SAAA6E,GAAaj9D,EAAgBg2C,GAAmB,IAAAsP,EAAShhE,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,IAAAyI,UAAG,GACnE6M,EAAM,SAAQ,CAAI6O,KAAAA,EAAMg2C,SAAAA,EAAUsP,UAAAA,SAI9B1vC,GAFAogC,EACEsP,EACcpvC,GAAmBnT,EAAM6S,GAAe5V,EAAM4b,IzE11CtD,SAAiBhG,EAA8B5V,GAC7D,OAAAtL,EAAAA,EACKkhB,CAAAA,EAAAA,OACHC,YAAWnhB,EAAAA,EACNkhB,CAAAA,EAAAA,EAAcC,gBAAWnlB,EAAA,CAAA,EAC3BuP,EAAmBD,IAAQ,KAGlC,CyEo1CwBk9D,CAAiBtnD,GAAe5V,GAGlCsX,GAAa1B,GAAe5V,IAG1C4V,GAAczP,YAAc6vC,GxE71CpB,SAAsB7vC,EAA0BnG,GAC9D,OACE4e,GAAelC,GAAavW,GAAYnG,KACvC0c,GAAavW,GAAWjqB,OAAS8jB,EAAK9jB,QAAU6/B,GAAkB5V,GAEvE,CwE01CUg3D,CAAsBvnD,GAAczP,UAAWnG,IAEjDwiB,GAAgB,MAKpBrnB,KAWO,SAAAiiE,GAASC,GAChBlsE,EAAM,WAAU,CAAIksE,eAAAA,IAEpBzjE,EAAA,GAAA+sD,IAAa,GACb/sD,EAAA,GAAA0xD,IAAc,GAEdtiE,KAAOF,MAAI,WAET8Q,EAAA,GAAA+sD,IAAa,GACb/sD,EAAA,GAAA0xD,GAAc+R,eAITC,GAAoBt9D,EAAgBmV,GAC3ChkB,EAAM,sBAAuB6O,EAAMmV,OAE7BiB,EAAUnW,EAAmBD,QACnC4V,GzE90CE,SACJ7S,EACA6S,EACAQ,EACAjB,GAEA,OAAAzgB,EAAAA,EAAA,CAAA,EACKkhB,GACHG,CAAAA,EAAAA,CAAAA,mBAAkBrhB,EAAAA,KACbkhB,EAAcG,oBAAkBrlB,CAAAA,EAAAA,KAClC0lB,EAAUrB,GAAcoB,GAAmBP,EAAeQ,GAAS1wB,OAAOyvB,OAGjF,CyEi0CoBooD,CAAcx6D,EAAM6S,GAAeQ,EAASjB,IAGrD,SAAAqoD,GAAgBC,GACvBtsE,EAAM,sBAAuBssE,GAE7B7jE,EAAA,GAAAgpB,GAAa66C,GAmMN,SAAAC,GAAeC,GACtB,IAAAx9E,EAAMw9E,EAANx9E,OACAsa,EAAIkjE,EAAJljE,KACAF,EAAGojE,EAAHpjE,IACAV,EAAK8jE,EAAL9jE,MACAE,EAAM4jE,EAAN5jE,OACAoR,EAASwyD,EAATxyD,UACAE,EAAUsyD,EAAVtyD,WACA2vC,EAAO2iB,EAAP3iB,QAmCAqa,IAAY,EAEN,IAAAnpD,EAAUG,EAAkBuxD,GAnCvB,CACT76D,KAAAA,EACe6S,cAAAA,GACfhX,OAAAA,EACAo8C,QAAAA,EAEAE,UAAWqe,GACXpe,YAAaqe,GACbpe,sBAAuBse,GAEvBre,MAAOse,GACPre,OAAQ0e,GACRh5C,QAASo5C,GAET7e,SAAUgf,GACV/e,YAAagf,GACb/e,UAAWgf,GAEX/e,eAAgBwf,GAChBvf,SAAUkf,GACVjf,UAAWkf,GACXjf,cAAewf,GAEfvf,OAAQkgB,GACRjgB,YAAaogB,GAEblhB,oBAAAA,EACA3B,mBAAkBA,WAChBxtC,EAAmBI,GACnB/Q,OAMoD,CACtDV,KAAAA,EACAF,IAAAA,EACA4Q,UAAAA,EACAE,WAAAA,EACAxR,MAAAA,EACAE,OAAAA,EACA5Z,OAAAA,EACA8W,mBAAmB,EACnBsC,QAAO,WACL87D,IAAY,EACZl6D,QAKG,SAAAigE,GAAkB95E,GACrB,IAAA8xB,IAAYkM,GAAmB1J,GAAczP,WAA7C,IAIA7kB,IACFA,EAAMU,kBACNV,EAAMM,kBAGJN,GAAwB,gBAAfA,EAAM6C,MAA0B7C,EAAM3C,SAAWitB,EAE5D8xD,GAAe,CACbjjE,KAAOnZ,EAAqBu8E,QAC5BtjE,IAAMjZ,EAAqBkjE,QAC3B3qD,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,eAKL76D,EAAoB,QAAd29E,EAAGvJ,SAAW,IAAAuJ,OAAA,EAAXA,EAAaprB,cAAc,6CACtCvyD,EACFu9E,GAAe,CACbv9E,OAAAA,EACAgrB,UAAW,EACXtR,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,eAIL3yC,EAAkB,QAAd01D,EAAGxJ,SAAAwJ,IAAWA,OAAXA,EAAAA,EAAaz1D,wBACtBD,GACFq1D,GAAe,CACbnjE,IAAK8N,EAAK9N,IAAM,EAChBE,KAAM4N,EAAK5N,KAAO,EAClBZ,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,YAMV,GAiB2BgjB,SAAAA,YAAAA,GAAArqD,EAAAC,IAAAC,kGACG,GAArC1iB,EAAM,oBAAqByxB,IACtBA,GAAUq7C,CAAAA,EAAAr3E,KAAA,EAAA,KAAA,CAAA,OAAAq3E,EAAAtvC,OAAA,UAAA,KAAA,EAIP3uB,GAJOk+D,EAIYt7C,IAAnB5iB,KAAM6iB,EAAQq7C,EAARr7C,SACdjpB,EAAA,GAAAgpB,QAAa/mC,GAIT0tB,GADE40D,GAA4B,QAAXC,EAAA7J,SAAW,IAAA6J,OAAA,EAAXA,EAAa1rB,cAAc,uBAAwB,OAExEyrB,EAAe10D,SAYjB+sD,GARgB,EAEZljD,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOwlC,KAIc,SAAAJ,EAAaC,UAElC7pB,MAAO6iB,GAAgB+G,EAAaC,EAAc1iB,OAKtDk/B,WAAW/jC,IAAK,yBAAA8iE,EAAArvC,OAAAyvC,GAAAA,uCAoBFljE,KACdhK,EAAM,SAIFya,IACFA,EAAezQ,QACfyQ,EAAenoB,UAmCV,SAAA6+B,GAAetiB,GACf,gBxElpDT+C,EACA6S,EACA5V,GAGA,IAAMuZ,EAAaC,EAAQxZ,GACrBs+D,EAAY,CAAC5kD,EAAK1Z,IAElByH,EAA8BmP,EAAM7T,EAAMwW,GAC1CglD,EAAiB92D,EAAS+T,GAAmB/T,EAAQmO,EAAe0oD,QAAaziF,EAEvF,OAAI0iF,EACKzgD,GAAqBvE,EAAW7zB,OAAO64E,IAAiB,GAExDv/C,GAAqBhf,EAEhC,CwEkoDWw+D,CAAuBz7D,EAAM6S,GAAe5V,GAK5C,SAAAy+D,GAAWn9E,GACdo9E,GACFA,EAAkB3a,OAAOziE,YAIpBq9E,KACHD,GACFA,EAAkBza,0sCA5vDrBrqD,EAAA,GAAEuoB,GAAgBje,GAA4B,CAC7CE,wBAAAA,EACAC,wBAAAA,yBAGClT,EAAM,YAAaykB,GAAczP,kCAyJjC6xD,GAAqBpD,0BA6Lf,SAAuBC,GACzBh6C,GAAQjF,GAAczP,UAAW0uD,KACpC1jE,EAAM,yBAA0B0jE,IAE5Bv4C,GAAgBu4C,IAA4C,OAAtBA,IACxCryC,GAAgBqyC,IAhMnB+J,CAAuB/J,2CAGvBsC,GAAqBtxC,GAAY9iB,+CAKjC80D,GAAuB90D,EAAMwwC,EAAW30C,EAAQ40C,uBAGhD55C,EAAA,GAAAspD,GvCxZC,SACJxP,GAEA,IAAMtkD,EAAoE,CAAA,EA0B1E,OAvBAskD,EAAiB/4D,SAAQ,SAACs7D,GACxB7mD,EAAI6Q,EAAmBg2C,EAAgBj2C,OAASi2C,CAClD,IAGAvC,EAAiB/4D,SAAQ,SAACs7D,GAGxB,IAFA,IAAI18B,EAAa08B,EAAgBj2C,KAE1BuZ,EAAWr9B,OAAS,GAAG,CAC5Bq9B,EAAaC,EAAQD,GACrB,IAAME,EAA6BxZ,EAAmBsZ,GAEhDE,KAAiBrqB,IACrBA,EAAIqqB,GAAiB,CACnBg+B,cAAc,EACdz3C,KAAMuZ,EACNlX,QAAS,wBACTsxC,SAAUn4C,GAAmB4zD,SAGlC,CACH,IAEOhgE,CACT,CuC0X2ByvE,CAAoBnrB,0BAukD1CgrB,EAAoBnK,E5C9+DnB,SAAkCuK,GAGtC,IAAIC,EACAC,EAEJ,SAASC,EAAeC,GACtB,OAAOA,EAAO,GACVrjE,GACAqjE,EAAO,GACLpjE,GACAC,EACP,CAED,SAASojE,IACP,GAAIL,EAAmB,CAErB,IAAMI,GAAQH,GAAmB,IAAMnjE,GAAuB,KAE9DkjE,EAAkBlnC,WAAasnC,CAChC,CACF,CAED,SAASE,EAAgBC,GAClBL,GAAmBK,IAAUN,IAChCO,IAEAnuE,GAAM,kBAAmBkuE,GACzBN,EAAkBM,EAClBL,EAAkBO,YAAYJ,EAAoBvjE,IAErD,CAED,SAAS0jE,IACHN,IACF7tE,GAAM,kBAENquE,cAAcR,GACdA,OAAkBnjF,EAClBkjF,OAAkBljF,EAErB,CAuBD,OA/DAsV,GAAM,0BAA2B2tE,GA+D1B,CACL/a,OAtBF,SAAgBziE,GACd,GAAIw9E,EAAmB,CACrB,IAAMt2D,EAAIlnB,EAAMkjE,QAChBib,EAAwBX,EAAkBx2D,wBAAlC/N,EAAGklE,EAAHllE,IAAKgR,EAAMk0D,EAANl0D,OAET/C,EAAIjO,EAEN6kE,GADcH,EAAe1kE,EAAMiO,IAE1BA,EAAI+C,EAEb6zD,EADcH,EAAez2D,EAAI+C,IAGjC+zD,GAEH,CACF,EAQCrb,UANF,WACEqb,GACD,EAMH,C4C06DuCI,CAAwBnL,QAAe14E,6CAiBzEoM,GAAO,CACRmrB,SAAAA,EACAxU,OAAAA,EACAujB,cAAAA,GACAg8B,QAAAA,GACAwG,iBAAAA,GACAP,YAAAA,GACA9hC,eAAAA,GACAnnB,MAAAA,GACAkY,QAASmjD,GACT7a,SAAUgf,GACV3Y,SAAUib,GACV56C,SAAUG,GACV1B,OAAQs8C,GACRnf,gBAAiBqf,GACjBl7C,YAAao7C,GACb/d,cAAAA,EACAX,cAAe4e,GACfna,YAAaA,GAAW,aACxBQ,OAAQ0a,GACRxa,UAAW0a,0BAGVxtE,EAAM,kBAAmBlJ,wCAhsCtByvE,SAA2B77E,IAATknB,GACpB63D,GAAkB73D,QAGJlnB,IAATknB,EAAuB,CAAAA,KAAAA,IAAW/hB,KAAMA,GAAQ,0EAzkBpB80E,GAAAzmE,MAAA/K,KAAAA,UAAAwxE,EAMtB,kBAA0BG,GAAA5mE,MAAA/K,KAAAA,qBAMbq7E,EAAAC,UAAAxJ,GAAA/mE,MAAA/K,KAAAA,qBAyBGu7E,EAAAC,GAAApJ,OAAAA,GAAArnE,WAAA/K,UAAA,aAqB7BsV,EAAA,GAAA+sD,IAAa,GACb/sD,EAAA,GAAA0xD,IAAc,GACdiK,GAAiB,IACjBp6D,MA+CO,SAA4B9J,GACnCF,EAAM,0BAA2BE,GAEjCmxB,GAAgB1E,GAAqBzsB,EAAM2O,MAAM,IACjDxF,GAASnJ,EAAM2O,UAofR,SAAY1e,GAAqB,IAAAy+E,EACxCz+E,EAAMM,iBAEA,IAAAmgC,EAAmCg+C,QAAtBA,EAAGz+E,EAAMwgC,qBAANi+C,IAAmBA,OAAnBA,EAAAA,EAAqB/9C,QAAQ,mBAC7BnmC,IAAlBkmC,GAIJf,GAAO,CACLe,cAAAA,EACAhf,KAAAA,EACAoD,UAAWyP,GAAczP,UACzBiN,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,GACThG,aAAcwM,GACdvM,gBAAAA,0BA0VFoL,GADc,gBA8DdI,IACEjU,SAAQ,iBAmRViV,GAAY,IAAK,GAAM,eAIvBA,GAAY,IAAK,GAAO,IA6BjB,SAAc37E,OACfsgC,EAAQlY,GAAkBpoB,GAC1Bm8B,EAAiBn8B,EAAM4Z,SA8CzB,GA7CJ/J,EAAM,UAAa,CAAAywB,MAAAA,EAAOh/B,IAAKtB,EAAMsB,MAEvB,WAAVg/B,IAEFtgC,EAAMM,iBACN+3E,IAAU,IAEE,iBAAV/3C,IAEFtgC,EAAMM,iBACN+3E,IAAU,IAEE,WAAV/3C,IAEFtgC,EAAMM,iBACNo4E,IAAW,IAEC,iBAAVp4C,IAEFtgC,EAAMM,iBACNo4E,IAAW,IAIC,WAAVp4C,IACFtgC,EAAMM,iBACN44E,MAEY,WAAV54C,GAAgC,cAAVA,IACxBtgC,EAAMM,iBACN24E,MAEY,WAAV34C,IACFtgC,EAAMM,iBACN+4E,GAAa,cAED,WAAV/4C,IACFtgC,EAAMM,iBACN4gC,GxEv6BG1E,GAAqB,IAAI,KwE06BhB,WAAV8D,GACFw5C,GAAkB95E,GAGN,YAAVsgC,GAAiC,kBAAVA,EAAyB,CAClDtgC,EAAMM,qBAEA6iC,EAAe7O,GAAczP,UAC/BqX,GAAeza,EAAM6S,GAAe6H,IAAmB7H,GAAczP,UACrEgY,GAAoBpb,EAAM6S,IAE9B4M,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAE1B,GAAU,cAAV7C,GAAmC,oBAAVA,EAA2B,CACtDtgC,EAAMM,qBAEA6iC,EAAe7O,GAAczP,UxEp4CnC,SACJpD,EACA6S,GACA,IAAA6H,EAAcn5B,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,IAAAA,UAAA,GAER6hB,EAAYyP,EAAczP,UAChC,IAAKA,EACH,OAAW,KAEb,IAAMiW,EAAYqB,EAAiBf,GAAavW,GAAa8W,GAAWla,EAAMoD,GAIxE65D,EAAiBhiE,GAAgB4Y,EAAM7T,EAAMqZ,IAC/C9E,GAAa1B,EAAewG,GAC5BxG,EAEEqqD,EAAWzkD,GAAmBzY,EAAM6S,EAAewG,GACnD8jD,EAAgB1kD,GAAmBzY,EAAMi9D,EAAgB5jD,GAE/D,GAAIqB,EAEF,OAAI1B,GAAkB5V,GACA,OAAb85D,EAAoBpjD,GAAqBojD,EAAUA,GAAY,KAGpEnkD,GAAiB3V,GACM,OAAlB+5D,EAAyBrjD,GAAqBqjD,EAAeA,GAAiB,KAG9D,OAAlBA,EACHrjD,GAAqBJ,GAActW,GAAY+5D,GAC/C,KAGN,GAAIpkD,GAAiB3V,GACnB,OAAyB,OAAlB+5D,EAAyBpiD,GAAqBoiD,GAAe,GAAS,KAG/E,GAAInkD,GAAkB5V,GACpB,OAAoB,OAAb85D,EAAoBniD,GAAqBmiD,GAAU,GAAS,KAGrE,GAAIhkD,GAAiB9V,GACnB,OAAoB,OAAb85D,EAAoBniD,GAAqBmiD,GAAU,GAAS,KAGrE,GAAIjkD,GAAe7V,GAAY,CAC7B,GAAiB,OAAb85D,GAAyC,IAApBA,EAAS/jF,OAChC,OAAW,KAGb,IAAMq9B,EAAaC,EAAQymD,GACrBx4D,EAASmP,EAAM7T,EAAMwW,GAC3B,OAAI7sB,MAAMmS,QAAQ4I,GAETqW,GAAqBmiD,GAAU,GAE/BliD,GAAmBkiD,GAAU,EAEvC,CAED,OAAI/jD,GAAiB/V,GACM,OAAlB+5D,EACHpiD,GAAqBoiD,GAAe,GACvB,OAAbD,EACEniD,GAAqBmiD,GAAU,GAC/B,KAGG,IACb,CwE8zCUE,CAAiBp9D,EAAM6S,GAAe6H,IAAmB7H,GAAczP,UACvEgY,GAAoBpb,EAAM6S,IAE9B4M,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAE1B,GAAU,cAAV7C,GAAmC,oBAAVA,EAA2B,CACtDtgC,EAAMM,qBAEA6iC,EAAe7O,GAAczP,UxE5wCzB,SACdpD,EACA6S,GAEoB,IADpB6H,EAAcn5B,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,IAAAyI,UAAG,GACjBg3B,IAAah3B,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,KAAAA,UAAA,GAEP6hB,EAAYyP,EAAczP,UAChC,IAAKA,EACH,OAAW,KAGb,IAAAi6D,EAA4BpiD,GAAqBjb,EAAM6S,EAAe0F,GAA9D2C,EAAKmiD,EAALniD,MAAOv3B,EAAQ05E,EAAR15E,SAEf,GAAI+2B,EACF,OAAKvB,GAAiB/V,GAIX,KAHF0W,GAAqB1W,EAAUnG,KAAMmG,EAAUnG,MAM1D,GAAIie,GAASv3B,EACX,OAAO+4B,GAAkB/4B,GAG3B,IAAM6yB,EAAaC,EAAQkD,GAAavW,IAClCsB,EAASmP,EAAM7T,EAAMwW,GAE3B,OAAI0C,GAAiB9V,IAAczZ,MAAMmS,QAAQ4I,GACxCoV,GAAqB1W,EAAUnG,KAAMmG,EAAUnG,MAGpDkc,GAAiB/V,KAAezZ,MAAMmS,QAAQ4I,GACzCsW,GAAmB5X,EAAUiW,WAAW,GAGtC,IACb,CwEwuCUikD,CAAiBt9D,EAAM6S,GAAe6H,GAAiBrK,IACvDwC,GAAczP,UACdgY,GAAoBpb,EAAM6S,IAE9B4M,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAE1B,GAAU,eAAV7C,GAAoC,qBAAVA,EAA4B,CACxDtgC,EAAMM,iBAEA,IAAA6iC,EACJ7O,GAAczP,gBAAsBtqB,IAATknB,ExEjvCnB,SACdA,EACA6S,GAEoB,IADpB6H,EAAcn5B,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,IAAAyI,UAAG,GACjBg3B,IAAah3B,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,KAAAA,UAAA,GAEP6hB,EAAYyP,EAAczP,UAChC,IAAKA,EACH,OAAW,KAGb,IAAAm6D,EAAwBtiD,GAAqBjb,EAAM6S,EAAe0F,GAA1D2C,EAAKqiD,EAALriD,MAAOr3B,EAAI05E,EAAJ15E,KAEf,OAAI62B,EACGvB,GAAiB/V,GAIX,KAHF0W,GAAqB1W,EAAUnG,KAAMmG,EAAUnG,MAMtDie,GAASr3B,EACJ64B,GAAkB74B,GAGvBs1B,GAAiB/V,GACZ2X,GAAqB3X,EAAUiW,WAAW,GAG5C,IACT,CwEotCYmkD,CAAkBx9D,EAAM6S,GAAe6H,GAAiBrK,IACxDwC,GAAczP,UACdgY,GAAoBpb,EAAM6S,IAEhC4M,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAG1B,GAAU,UAAV7C,GAAqBhM,GAAczP,UAAS,IAE1CgW,GAA4BvG,GAAczP,WAAS,CAC/C,IAAAnG,EAAO4V,GAAczP,UAAUiW,UAC/B3U,EAASmP,EAAM7T,EAAMyW,EAAQxZ,IAC/BtT,MAAMmS,QAAQ4I,IAEhB+a,GAAgB1E,GAAqB9d,GAAM,OAI3Cgc,GAAepG,GAAczP,aAE/B7kB,EAAMM,iBACN4gC,GAAe9tB,EAAAA,EAAA,CAAA,EAAMkhB,GAAczP,WAAS,CAAA,EAAA,CAAE2Y,MAAM,MAGlD7C,GAAiBrG,GAAczP,WACjC7kB,EAAMM,iBAGFoc,GADU4Y,EAAM7T,EAAM6S,GAAczP,UAAUnG,OAGhDi9D,GAAarnD,GAAczP,UAAUnG,MAAM,GAG3CwiB,GAAe9tB,EAAAA,EAAMkhB,CAAAA,EAAAA,GAAczP,WAAW2Y,CAAAA,EAAAA,CAAAA,MAAM,KAMtD,GAA2B,IADP8C,EAAM5oB,QAAQ,WAAY,IAC9B9c,QAAgB05B,GAAczP,iBAGhD7kB,EAAMM,sBACN05E,GAAsBh6E,EAAMsB,KAK5B,GAAU,UAAVg/B,IACC9F,GAAiBlG,GAAczP,YAAc4V,GAAkBnG,GAAczP,mBAG9E7kB,EAAMM,sBACN05E,GAAsB,IAIpB,GAAU,eAAV15C,GAA0B3F,GAAiBrG,GAAczP,WAAS,KAC9D9oB,EAAQu5B,EAAM7T,EAAM6S,GAAczP,UAAUnG,MAE9Cf,GAAM5hB,IAERK,OAAOgc,KAAKoK,OAAOzmB,GAAQ,UAIjB,WAAVukC,GAAsBhM,GAAczP,YACtC7kB,EAAMM,iBACN4gC,GAAgB,OAGJ,WAAVZ,IACFtgC,EAAMM,iBACNw7E,IAAS,IAGG,WAAVx7C,IACFtgC,EAAMM,iBACNw7E,IAAS,IAGG,WAAVx7C,IACFtgC,EAAMM,iBACN+5E,MAGY,iBAAV/5C,IACFtgC,EAAMM,iBACNg6E,OAIK,SAAgBt6E,GACvB6P,EAAM,kBAAmB7P,OAEnB3C,EAAS2C,EAAM3C,OAEhB4mB,GAAkB5mB,EAAQ,WAAcA,EAAOmoB,oBAElD3L,KAEKya,GAAczP,gBAAsBtqB,IAATknB,GAAgC,KAAT/hB,QAAwBnF,IAATmF,IAlkCxEmQ,EAAM,+BAENykB,GAAalhB,EAAAA,EACRkhB,CAAAA,EAAAA,IACHzP,CAAAA,EAAAA,CAAAA,UAAW2X,GAAoB,IAAK,YAkrC/B,SAA8Bx8B,GACjC8xB,GAIJsqD,GAAe,CACbv9E,OAAQ8mB,GAAuB3lB,EAAM3C,OAAuB,UAC5DwsB,UAAW,EACXtR,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,gBAIuBgjB,OAAAA,GAAA3uE,MAAAvN,KAAAwC,UAAA05E,aAmClC7sE,EAAM,qBACNyI,EAAA,GAAAgpB,QAAa/mC,GACbsf,iBAIA85D,EAAa55D,GAAKra,OAGX,SAA0ByjC,GACjCjC,GAAgBiC,GAEhBtpB,KACAX,GAASkiB,GAAa+H,KAcf,SAAsBnjC,OACvBk/E,GAAiB/6D,GACrBnkB,EAAM3C,QACL,SAAAU,UAAYA,IAAY8yE,CAAa,IAEpCqO,GACElhD,GAAmB1J,GAAczP,aACnChV,EAAM,4CACNqxB,IAAiB,SAAArc,GACX,OAAA6V,GAAe7V,IAER8V,GAAiB9V,OADdA,CAAAA,EAAAA,OAAW2Y,MAAM,IAItB3Y,KAIP8b,GAAYrW,IACdA,EAAezQ,QACfyQ,EAAeg+B,QAGjBz4C,EAAM,yBACFya,GACFA,EAAeg+B,6DAzlD8B,IAA9BlgD,sDAAqBkyB,GAAAA,GAC1CzqB,EAAM,cAGAsvE,EAAkB/rE,EAAAA,EACnBkhB,CAAAA,EAAAA,IACHC,CAAAA,EAAAA,CAAAA,YAAW,CAAA,EACXE,mBAAkB,CAAA,IAGpBnc,EAAA,GAAAgc,GAAgBM,GAAmBnT,EAAM09D,KAAwB/2E,yGAorDlDkiB,EAAcxQ,kBASrBD,KACAmgE,GAAsB,iBAGtBngE,KACAmgE,GAAsB,iBAMtBngE,0DAqC0Eo5D,EAAWn5D,2DA/FpF+2D,EAAa/2D,igTCtzDT1O,MAAMmS,QAAQxjB,EAAY,2aAEzB,2LADkCA,EAAY,aAAYA,EAAmB,wJAA3CA,EAAY,4LAyB/BA,EAAe,sBACb,eACT,eACG,iBACE,+KASNquE,QAAAz3D,QAAQZ,eACPxX,gBACIA,YACJA,WACDA,UACDA,eACKA,oBACKA,qBACCA,+BAER,wKAvBMwB,EAAe,qjBAgE/BA,EAAY,0EADf6E,GAEKvB,EAAA8f,EAAAte,+CADF9E,EAAY,wGA7BIA,EAAc,sBACZ,eACT,eACG,iBACE,+KASNquE,QAAAz3D,QAAQZ,eACPxX,gBACIA,YACJA,WACDA,UACDA,eACKA,oBACKA,qBACCA,+BAER,yKAvBMwB,EAAc,4mBApF5BA,EAAwB,IAACA,EAAe,IAAEqlF,YAAW,mFAV3CrlF,EAAyB,6BA2B1BA,EAAU,IAAGm+D,GAAcoJ,YAKxCvnE,EAAU,KAAAg2B,GAAAh2B,yBAoBKA,EAAY,IAAGm+D,GAAcoJ,YAK1CvnE,EAAY,KAAAyX,GAAAzX,0CAmCXA,EAAY,MAAA,mYAjEwC,yPAyBI,0MAqFlE,kPApHY8H,EAAA9F,MAAAsjF,EAAAxzD,EAAQ9xB,EAAQ,IAAkC,kBAA9BixB,GAAkBjxB,EAAQ,iQAuBpDA,EAAK,gQAIuCA,EAAY,2KADAA,EAAY,oIAyF5DA,EAAY,oIAtI9B6E,GA2IKvB,EAAAiiF,EAAAzgF,GA1IHzB,GA6HKkiF,EAAAC,GA5HHniF,GA0CKmiF,EAAAtqB,GAzCH73D,GAEK63D,EAAArjD,WACLxU,GAGK63D,EAAA/iD,yBAEL9U,GAEK63D,EAAAE,WACL/3D,GAMC63D,EAAApzD,WAEDzE,GAOK63D,EAAAG,GANHh4D,GAKKg4D,EAAAC,GAJHj4D,GAGQi4D,EAAA4Q,uDAWZ7oE,GAEK63D,EAAAK,WACLl4D,GAEA63D,EAAAwB,WAEFr5D,GAgFKmiF,EAAAC,GA/EHpiF,GAuCKoiF,EAAAC,GAtCHriF,GAOKqiF,EAAAC,GANHtiF,GAKKsiF,EAAA1qB,GAJH53D,GAGQ43D,EAAAkR,uDAkCd9oE,GAsCKoiF,EAAAG,GArCHviF,GAEKuiF,EAAAC,kCAuCXxiF,GAUKkiF,EAAAO,GATHziF,GAQQyiF,EAAAtW,oCAjH8BxvE,EAAgB,kBAiBKA,EAAiB,kBAQpCA,EAAkB,kBAmF9CA,EAAe,4JA5HhBA,EAAwB,IAACA,EAAe,IAAEqlF,YAAW,MAAAltE,EAAA4tE,UAAAC,KAWpDttE,GAAA,EAAApY,EAAA,IAAAglF,KAAAA,EAAAxzD,EAAQ9xB,EAAQ,IAAkC,kBAA9BixB,GAAkBjxB,EAAQ,MAAqB8H,EAAA9F,QAAAsjF,8CAM3DtlF,EAAU,IAAGm+D,GAAcoJ,cAKxCvnE,EAAU,gJAYXA,EAAK,mCAQWA,EAAY,IAAGm+D,GAAcoJ,cAK1CvnE,EAAY,4JAT6BA,EAAY,qMADAA,EAAY,iCAyF5DA,EAAY,6gBA7IlC6E,GAoJKvB,EAAA8f,EAAAte,6CApJ8C9E,EAAK,kOAf7C,SAAA8f,GAAM9b,GACbA,EAAQ8b,+BAxINmmE,EAEAC,EA3BEpwE,EAAQH,GAAY,+BAEmB6E,EAAlCvW,GAAAA,OAAE,IAAAkiF,EAAG,mBAAqB/jE,KAAQ+jE,EAClCz+D,EAAalN,EAAbkN,OACQlN,EAARmyD,SAAAA,WAAQyZ,EAAA,GAAAA,EAERr+D,EAA4BvN,EAA5BuN,YACAgB,EAAgCvO,EAAhCuO,wBACAC,EAAgCxO,EAAhCwO,wBACAzF,EAAkB/I,EAAlB+I,OACAo2D,EAAoCn/D,EAApCm/D,gBACAxhB,EAA4B39C,EAA5B29C,iBACAiW,EAA0B5zD,EAA1B4zD,WAEAlY,EAA+B17C,EAA/B07C,eACAC,EAAuB37C,EAAvB27C,gBACAC,EAA4C57C,EAA5C47C,sBAEAgO,EAA4B5pD,EAA5B4pD,cACAwH,EAAkCpxD,EAAlCoxD,aACAhM,EAAgDplD,EAAhDolD,oBACAsI,EAAwB1tD,EAAxB0tD,YAEAxH,EAAoBlmD,EAApBkmD,YAOH7hD,EAAUhS,GAAoB,gBAA9BgS,MAEFwnE,KAAOh8E,OAAMpG,EAAE,KAAAoG,OAAIua,EAAmB+nD,IAEtCnvD,EAAQgxB,GAAqB63C,IAAO,CAAA,EAGtC33C,GAAsD,IAAzCD,GAA0BC,WACvCC,GAA0D,IAA3CF,GAA0BE,aAEzC1b,EAAezV,EAAMyV,cAAY,GACjCU,EACFwiC,IAAoB34C,EAAM24C,iBAAmB34C,EAAMmW,MAC/CnW,EAAMmW,MACN2yD,EAAyBnwB,GAAiBowB,YAAY7+D,EAAMlK,EAAMyV,cAAY,CAAA,GAChFuzD,EAAWhpE,EAAMgpE,WAAY,EAE7BC,OAAmCjmF,EACnCkmF,EAAc,CAAc/gF,KAAM,IAE7B,SAAA2gF,EAAyBnwB,GACzB,OAAAD,EAAe7I,MAAM,SAAA35B,GAAS,OAAAA,EAAKzvB,KAAOkyD,CAAe,KAAKD,EAAe,GA2ChF,IAAAywB,EAA4Bt7B,aA1BR3jC,EAA2BiM,GAC/C,QAASnzB,IAATknB,cACFg/D,EAAc,CAAK/gF,KAAM,UACzB4Y,EAAA,GAAAkoE,EAAe,sBAKf3wE,EAAM,mBACJ,CAAA6d,MAAAA,QAGIizD,EAAkBN,EAAyBnwB,GAAiB0wB,aAChEn/D,EACAiM,EACApQ,QAGFmjE,EAAc,CAAKh/D,KAAMk/D,IACzBroE,EAAA,GAAAkoE,OAAejmF,SACR0iB,QACPwjE,EAAc,CAAK/gF,KAAM,UACzB8gF,EAAeh+D,OAAOvF,O9FxHE,83B8FwDzB+iE,EAAe1qD,EAAM7T,EAAMilD,yBAE7BpuD,EAAA,GAAE2nE,EAAkBD,EAAY,CAAKv+D,KAAMu+D,GAAY,CAAOtgF,KAAM,0BAqEnEghF,EAA0BV,EAActyD,+CAMxC6a,GAAqB63C,GAAO,CAC1BpzD,aAAAA,EACAU,MAAAA,EACAwiC,gBAAAA,EACAqwB,SAAAA,OAGF1wE,EAAM,wBAAyBuwE,EAAS73C,GAAqB63C,uDAxDtD,SAAoBS,GAC3BvoE,EAAA,GAAA0U,EAAe6zD,QACfnzD,EAAQ2yD,EAAyBnwB,GAAiBowB,YAAY7+D,EAAMo/D,IACpEvoE,EAAA,GAAAioE,GAAW,GAEX1wE,EAAM,sBAAqB,CAAImd,aAAAA,EAAcU,MAAAA,EAAO6yD,SAAAA,KAG7C,SAAkBvgF,GACzBsY,EAAA,GAAAoV,EAAS1tB,EAAM3C,OAA+BtB,OAC9Cuc,EAAA,GAAAioE,GAAW,GACX1wE,EAAM,oBAAuB,CAAA6d,MAAAA,EAAO6yD,SAAAA,gBAiDhC,QAAiBhmF,IAAjBylF,cACFS,EAAc,CAAK/gF,KAAM,UACzB4Y,EAAA,GAAAkoE,EAAe,sBAKf3wE,EAAM,kBAAiB,CAAI6d,MAAAA,QACrBizD,EAAkBN,EAAyBnwB,GAAiB0wB,aAChEZ,EACAtyD,EACApQ,GAGFm9C,EAAW,EAEPzoC,GAAI,UACJtT,KAAMC,EAAmB+nD,GACzB3qE,MAAO4kF,KAIX/nE,UACOqE,GAGPtM,QAAQZ,MAAMkN,QACdwjE,EAAc,CAAK/gF,KAAM,UACzB8gF,EAAeh+D,OAAOvF,iBAKxB3E,EAAA,GAAAmwB,GAAcA,GAGdD,GAA0BC,WAAaA,cAIvCnwB,EAAA,GAAAowB,GAAgBA,GAGhBF,GAA0BE,aAAeA,GAOlC,SAA0B2nB,GACjCxgD,EAAM,4BAA6BwgD,GACnC/3C,EAAA,EAAA43C,EAAkBG,GAClBF,EAAsBE,OAEhBywB,EAA2BT,EAAyBnwB,GAC1D53C,EAAA,GAAAoV,EAAQozD,EAAyBR,YAAY7+D,EAAMuL,IACnD1U,EAAA,GAAAioE,GAAW,ocCtMFQ,GAAkD,CAAE,mwICiGxBhnF,EAAU,gBAA8B,IAAhBA,EAAgB,aAAhBA,EAAgB,oPAHvE6E,GAKIvB,EAAA+2D,EAAAv1D,GAJFzB,GAAgBg3D,EAAA4sB,WAChB5jF,GAEIg3D,EAAA6sB,8DADyBlnF,EAAU,2BAAcA,EAAgB,6NAqBtEA,EAAS,6DADZ6E,GAEKvB,EAAA8f,EAAAte,uCADF9E,EAAS,0IA9CHA,EAAW,GAAG,mBAAqB,4BAqBvCA,EAAW,KAAMA,EAAU,aAAImnF,EAAAnnF,EAAU,UAAA,IAAAmnF,OAAA,EAAVA,EAAYtmF,QAAS,QAA2BL,IAArBR,EAAgB,KAAcyX,GAAAzX,2DAa5E,QACJA,EAAU,SACY,IAAjBA,EAAiB,aAAjBA,EAAiB,4EAQhCA,EAAS,IAAAmZ,GAAAnZ,+aAcd,6IAzCgB8H,EAAA9F,MAAAsjF,EAAAxzD,EAAQ9xB,EAAQ,IAAkC,kBAA9BixB,GAAkBjxB,EAAQ,oOAwClDiZ,EAAA2B,SAAA2+C,KAAAv5D,MAAeA,EAAU,KAAgB,QAAZonF,EAAApnF,EAAY,UAAA,IAAAonF,OAAA,EAAZA,EAAYvmF,QAAS,KAAKb,EAAgB,gKA1DzF6E,GAgEKvB,EAAAgV,EAAAxT,wBA7DHzB,GA4DKiV,EAAAH,GA3DH9U,GAsCO8U,EAAAm7C,GArCLjwD,GAGUiwD,EAAA+zB,WACVhkF,GAgCOiwD,EAAA8G,GA/BL/2D,GAWI+2D,EAAA7G,GAVFlwD,GAAYkwD,EAAAC,WACZnwD,GAQIkwD,EAAAE,GAPFpwD,GAMCowD,EAAA3rD,kCAWLzE,GAUI+2D,EAAA1G,GATFrwD,GAAiBqwD,EAAAC,WACjBtwD,GAOIqwD,EAAAE,wBAKVvwD,GAMK8U,EAAAT,0BAELrU,GAUK8U,EAAAN,GATHxU,GAQQwU,EAAAoB,oCALIjZ,EAAU,0CAxDkBA,EAAK,oEAClCA,EAAW,GAAG,mBAAqB,gCAiB9B0Y,GAAA,EAAApY,GAAAglF,KAAAA,EAAAxzD,EAAQ9xB,EAAQ,IAAkC,kBAA9BixB,GAAkBjxB,EAAQ,MAAqB8H,EAAA9F,QAAAsjF,gBAI5EtlF,EAAW,KAAMA,EAAU,KAAc,QAAVsnF,EAAAtnF,EAAU,UAAA,IAAAsnF,OAAA,EAAVA,EAAYzmF,QAAS,QAA2BL,IAArBR,EAAgB,8IAe7DA,EAAiB,4CAQhCA,EAAS,+DAaF0Y,GAAA,GAAApY,GAAAi5D,KAAAA,KAAAv5D,MAAeA,EAAU,KAAgB,QAAZunF,EAAAvnF,EAAY,UAAZunF,IAAYA,OAAZA,EAAAA,EAAY1mF,QAAS,KAAKb,EAAgB,iOA/D9E,SAAA8f,GAAM9b,GACbA,EAAQ8b,yCAxDJhK,EAAQH,GAAY,wBAEf1R,EAAUuW,EAAVvW,GACAyjB,EAAalN,EAAbkN,KACAilD,EAAkBnyD,EAAlBmyD,SACAlM,EAAcjmD,EAAdimD,OAEH5hD,EAAUhS,GAAoB,gBAA9BgS,MAEFwnE,EAAO,GAAAh8E,OAAMpG,EAAE,KAAAoG,OAAIua,EAAmB+nD,IACtCsZ,EAAe1qD,EAAM7T,EAAMilD,GAK3BzqD,GACJlgB,MAAO,EACP6vB,MAAO,aAMH21D,EAAU,CAAItlE,GAHlBlgB,OAAQ,EACR6vB,MAAO,eAIL41D,UAAgBC,EAAGV,GAAgBX,uBAAhBqB,EAA0BD,iBAC7CE,GAA8CC,QAA1BA,EAAAZ,GAAgBX,UAAhBuB,IAA0BA,OAA1BA,EAAAA,EAA0BD,oBAAqBzlE,EACnE2lE,OAAgCrnF,0LAfjCizB,EAAQwhC,QAAgCz0D,IAAjBylF,EAA6B5hE,GAAe4hE,QAAgBzlF,oBACrF+d,EAAA,EAAEupE,EAAar0D,EAAQA,EAAM1f,IAAI6d,SAAgBpxB,qBAmBhD+d,EAAA,GAAAyoE,GAAgBX,GACd,CAAAoB,iBAAAA,EACAE,kBAAAA,GAAAX,IAGFlxE,EAAM,wBAAyBuwE,EAASW,GAAgBX,UA1BvDpxB,EAAc5jD,MAAMmS,QAAQyiE,8CA+B3B1nE,EAAA,EAAAspE,OAAYrnF,OAEN6+B,GAAqC0oD,QAAhBA,EAAAN,SAAAM,IAAgBA,OAAhBA,EAAAA,EAAkB/lF,SAAmB,QAAdgmF,EAAIF,SAAU,IAAAE,GAAI,QAAJA,EAAVA,EAAa,UAAC,IAAAA,OAAA,EAAdA,EAAiBhmF,QAAK,GACtE2M,EAA6Bs5E,QAApBA,EAAGN,SAAAM,IAAiBA,OAAjBA,EAAAA,EAAmBjmF,MAC/Bu6B,EAAamwC,GAAShlD,EAAMilD,EAAUttC,EAAU1wB,GACtD8xD,EAAM,CAAGlkC,WAAAA,EAAYowC,SAAAA,EAAUttC,SAAAA,EAAU1wB,UAAAA,IAEzCkQ,UACOqE,OACP2kE,EAAYp/D,OAAOvF,iCAmCwCukE,EAAgBzlF,oBAWvD2lF,EAAiB3lF,kLCnH3BxD,KAEhB,UCMgB0pF,GAAWjlF,GAAyB,IAAXklF,EAAIl/E,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,IAC9C,GAAIhG,EAAO,GAAMklF,EACf,OAAOllF,EAAKmlF,UAAY,KAG1B,IAAMC,EAAKplF,EAAOklF,EAClB,GAAIE,EAAK,GAAMF,EACb,OAAOE,EAAGD,QAAQ,GAAK,MAGzB,IAAME,EAAKD,EAAKF,EAChB,GAAIG,EAAK,GAAMH,EACb,OAAOG,EAAGF,QAAQ,GAAK,MAGzB,IAAMG,EAAKD,EAAKH,EAChB,OAAII,EAAK,GAAMJ,EACNI,EAAGH,QAAQ,GAAK,OAGdG,EAAKJ,GACNC,QAAQ,GAAK,KACzB,qUCQM1oB,EAxBO8oB,EAAgBhuE,EAAhBud,SAAAA,OAAW,IAAHywD,GAAQA,EAChBC,EAAuBjuE,EAAvBiuE,SACAC,EAAwBluE,EAAxBkuE,UACAjoB,EAAkBjmD,EAAlBimD,OACAC,EAAuBlmD,EAAvBkmD,YACAioB,EAA0BnuE,EAA1BmuE,eACAjd,EAAkBlxD,EAAlBkxD,OACAC,EAAkBnxD,EAAlBmxD,OACAlU,EAAgBj9C,EAAhBi9C,QACAC,EAAgBl9C,EAAhBk9C,QACAkxB,EAAkBpuE,EAAlBouE,UACAC,EAAmBruE,EAAnBquE,WACAC,EAAgBtuE,EAAhBsuE,QACAC,EAAqBvuE,EAArBuuE,aACAnd,EAAkCpxD,EAAlCoxD,aAELod,EAAU,CACdlgF,KAAM,SACN0uB,KAAMs0C,GACNxS,MAAO,kBACPvkC,UAAW,aACX+kC,QAAS6uB,omBAIVpqE,EAAA,GAAEmhD,EAAgB3nC,GA8DbixD,EAAU,CAERlgF,KAAM,YA7DNA,KAAM,SACN0uB,KAAMwzC,GACN1R,MAAO,6DACPvkC,UAAW,aACX+kC,QAAS2uB,EACT7tE,SAAUmd,IAAa6wD,IAGvB9/E,KAAM,SACN0uB,KAAMyzC,GACN3R,MAAO,sEACPvkC,UAAW,cACX+kC,QAAS4uB,EACT9tE,SAAUmd,IAAa8wD,GAGvB,CAAA//E,KAAM,cAGNA,KAAM,SACN0uB,KAAM0qC,GACN5I,MAAO,OACPvkC,UAAW,WACX+kC,QAAS2G,EACT7lD,SAAUmd,IAAa+wD,IAGvBhgF,KAAM,SACN0uB,KAAM2qC,GACN7I,MAAO,6CACPvkC,UAAW,gBACX+kC,QAAS4G,EACT9lD,SAAUmd,IAAagxD,GAEzBC,EAEE,CAAAlgF,KAAM,cAGNA,KAAM,SACN0uB,KAAMw0C,GACN1S,MAAO,gBACPvkC,UAAW,WACX+kC,QAAS4R,EACT9wD,UAAW68C,IAGX3uD,KAAM,SACN0uB,KAAMy0C,GACN3S,MAAO,sBACPvkC,UAAW,WACX+kC,QAAS6R,EACT/wD,UAAW88C,GAGX,CAAA5uD,KAAM,iCAUXihC,EAAQ6hC,EAAalM,IAAiBA,ipCClFN,eAAO1/D,EAAU,uEAAlD6E,GAAwDvB,EAAA8f,EAAAte,8CAAhB9E,EAAU,4FAIjB,iBAASA,EAAY,uEAAtD6E,GAA4DvB,EAAA8f,EAAAte,8CAAlB9E,EAAY,8FAIrB,oBAAYA,EAAS,SAAC,kFAAvD6E,GAAuEvB,EAAA8f,EAAAte,sDAA1B9E,EAAS,uDATnD41B,OAAep1B,IAAfR,MAAwBg2B,GAAAh2B,GAIxB81B,OAAiBt1B,IAAjBR,MAA0ByX,GAAAzX,GAI1Bi2B,OAAcz1B,IAAdR,EAAc,IAAaA,KAAY,GAACmZ,GAAAnZ,0IAT/C6E,GAYKvB,EAAA8f,EAAAte,sGAXiBtE,IAAfR,iEAIiBQ,IAAjBR,iEAIcQ,IAAdR,EAAc,IAAaA,KAAY,kJA3BxCipF,EAGAviE,EAGAwiE,EAGAC,EAGAC,EAdOC,EAAoC7uE,EAApC6uE,+HAGV9qE,EAAA,EAAE0qE,UAAGK,EAAGD,SAAW,IAAAC,GAAW,QAAXA,EAAXA,EAAax+D,iBAAS,IAAAw+D,GAAM,QAANA,EAAtBA,EAAwB1qB,YAAI,IAAA0qB,OAAA,EAA5BA,EAA8B1kF,qBAGpC2Z,EAAA,EAAAmI,EAAOuiE,EAAiB,QAAdM,EAAGF,SAAW,IAAAE,GAAK,QAALA,EAAXA,EAAa7+E,WAAG,IAAA6+E,OAAA,EAAhBA,EAAkBC,OAAOP,QAAOzoF,mBAG/C+d,EAAA,EAAE2qE,EAAaxiE,EAAOA,EAAK+iE,YAASjpF,kBAGpC+d,EAAA,EAAE4qE,OAAwB3oF,IAATkmB,QAA8BlmB,IAARyoF,EAAoBA,EAAMviE,EAAKpV,KAAO,OAAI9Q,kBAGjF+d,EAAA,EAAE6qE,EAAuB,QAAdM,EAAGL,SAAW,IAAAK,GAAWA,QAAXA,EAAXA,EAAa5+D,iBAAS4+D,IAAAA,GAAQA,QAARA,EAAtBA,EAAwBC,cAAxBD,IAA8BA,OAA9BA,EAAAA,EAAgChsE,QAAQ,SAAA6H,EAAOqF,GACrD,OAAArF,EAAQqF,EAAMg/D,GAAKh/D,EAAMtZ,OAC/B,mKChBDu4E,GAAa,EAYXC,GACN,WAGI,SAAAA,IAAyB,IAAbj6E,EAAM5G,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,GAAEmM,EAAA3O,KAAAqjF,GACnBrjF,KAAKxC,GAAK4lF,KACVpjF,KAAKsjF,UAAYl6E,EAAOk6E,QACxBtjF,KAAKujF,YAAcn6E,EAAOm6E,aAAgB,WACtC,MAAU,IAAAh+E,MAAM,uDAC5B,CACK,CAmBA,OAlBLsJ,EAAAw0E,EAAAviF,CAAAA,CAAAA,UAAAvF,MASI,SAAIqyB,GAAO,IAAA41D,EAAAxjF,KACP,GAAIA,KAAKsjF,QACL,MAAU,IAAAG,WAAW,0CAGzB,MAFoB,mBAAT71D,IACPA,EAAQ81D,GAAS91D,MAAMA,aACnBvrB,GACJ,IAAIrH,EAAS4yB,EAAMvrB,GACnB,YAAkBtI,IAAXiB,EAAuB,KAAO,CAACwoF,EAAMxoF,EACxD,CACK,KAAAqoF,CAEL,CA9BA,GAoCAA,GAASM,SAAW,IAAIN,GAAS,CAAEE,YAAa,SAAAz/E,GAAG,OAAIA,EAAIe,MAAM,IAAI,IAMrEw+E,GAASO,SAAW,IAAIP,GAAS,CAAEE,YAAa,SAAAz/E,GAAG,OAAIA,EAAIe,MAAM,IAAI,IAMrEw+E,GAASv5E,MAAQ,IAAIu5E,GAAS,CAAEE,YAAa,SAAAz/E,GAAG,OAAIA,EAAIe,MAAM,IAAI,IAMlEw+E,GAASQ,YAAc,IAAIR,GAAS,CAAEC,SAAS,IAO/CD,GAASS,UAAY,IAAIT,GAAS,CAAEC,SAAS,IAM7CD,GAASU,QAAU,IAAIV,GAAS,CAAEC,SAAS,IAC3C,IAKMU,GAAW,WACb,SAAAA,EAIAC,EAUAC,EAIApnE,GAAQnO,EAAA3O,KAAAgkF,GACJhkF,KAAKikF,KAAOA,EACZjkF,KAAKkkF,QAAUA,EACflkF,KAAK8c,OAASA,CACjB,CAMAknE,OALLn1E,EAAAm1E,EAAA,KAAA,CAAA,CAAAljF,IAAAvF,MAAAA,MAGI,SAAW0oF,GACP,OAAOA,GAAQA,EAAKlpF,OAASkpF,EAAKlpF,MAAMsoF,GAASU,QAAQvmF,GAC5D,KAAAwmF,EA7BY,GA+BXG,GAAU1rF,OAAOC,OAAO,MAIxBgrF,GACN,WAGI,SAAAA,EAOA5kF,EAIA/D,EAKAyC,GAIA,IAAA4mF,EAAK5hF,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAG,EAACmM,EAAA+0E,KAAAA,GACL1jF,KAAKlB,KAAOA,EACZkB,KAAKjF,MAAQA,EACbiF,KAAKxC,GAAKA,EACVwC,KAAKokF,MAAQA,CAChB,CA4EA,OA3ELv1E,EAAA60E,IAAA5iF,IAAA,OAAAvF,MAwBI,SAAKyvB,GAAQ,OAAOhrB,KAAKjF,MAAMiwB,EAAKxtB,GAAM,IAC9CsD,IAAA,QAAAqD,IAGI,WAAc,OAAqB,EAAbnE,KAAKokF,OAAgC,CAAI,IACnEtjF,IAAA,YAAAqD,IAGI,WAAkB,OAAqB,EAAbnE,KAAKokF,OAAoC,CAAI,IAC3EtjF,IAAA,UAAAqD,IAGI,WAAgB,OAAqB,EAAbnE,KAAKokF,OAAkC,CAAI,IACvEtjF,IAAA,cAAAqD,IAII,WAAoB,OAAqB,EAAbnE,KAAKokF,OAAsC,CAAI,GAC/EtjF,CAAAA,IAAAvF,KAAAA,MAII,SAAGuD,GACC,GAAmB,iBAARA,EAAkB,CACzB,GAAIkB,KAAKlB,MAAQA,EACb,OAAO,EACX,IAAIgL,EAAQ9J,KAAKgrB,KAAKq4D,GAASv5E,OAC/B,QAAOA,GAAQA,EAAM7I,QAAQnC,IAAS,CACzC,CACD,OAAOkB,KAAKxC,IAAMsB,CACrB,MACLgC,IAAA,SAAAvF,MApDI,SAAc8oF,GACV,IAAItpF,EAAQspF,EAAKtpF,OAASspF,EAAKtpF,MAAMX,OAAS3B,OAAOC,OAAO,MAAQyrF,GAChEC,GAASC,EAAK5rE,IAAM,EAAuB,IAAM4rE,EAAKC,QAAU,EAA2B,IAC1FD,EAAK90E,MAAQ,EAAyB,IAAmB,MAAb80E,EAAKvlF,KAAe,EAA6B,GAC9FuD,EAAO,IAAIqhF,EAASW,EAAKvlF,MAAQ,GAAI/D,EAAOspF,EAAK7mF,GAAI4mF,GACzD,GAAIC,EAAKtpF,MAAK,CAAA,IACgBwpF,EADhBC,EAAAnvD,EACMgvD,EAAKtpF,OAArB,IAAA,IAAAypF,EAAAlvD,MAAAivD,EAAAC,EAAAh5E,KAAA+pB,MAA4B,KAAnBn9B,EAAGmsF,EAAAhpF,MAGR,GAFKqP,MAAMmS,QAAQ3kB,KACfA,EAAMA,EAAIiK,IACVjK,EAAK,CACL,GAAIA,EAAI,GAAGkrF,QACP,UAAUG,WAAW,8CACzB1oF,EAAM3C,EAAI,GAAGoF,IAAMpF,EAAI,EAC1B,CACJ,CAAA,CAAAqkB,MAAAA,GAAA+nE,EAAA98E,EAAA+U,WAAA+nE,EAAAjoF,GACL,CAAA,CAAA,OAAO8F,CACV,GAAA,CAAAvB,IAAAvF,QAAAA,MA4CD,SAAa+R,GACT,IAAIm3E,EAAShsF,OAAOC,OAAO,MAC3B,IAAK,IAAIsyB,KAAQ1d,EAAGo3E,CAAAA,IACgBC,EADhBD,EAAArvD,EACCrK,EAAKnmB,MAAM,MAAI,IAAhC,IAAA6/E,EAAApvD,MAAAqvD,EAAAD,EAAAl5E,KAAA+pB,MACI,CAAA,IADKz2B,EAAI6lF,EAAAppF,MACTkpF,EAAO3lF,GAAQwO,EAAI0d,EAAK,CAAC,OAAAvO,GAAAioE,EAAAh9E,EAAA+U,EAAA,CAAA,QAAAioE,EAAAnoF,KACjC,OAAO,SAACO,GACJ,IAAK,IAAIkmD,EAASlmD,EAAKkuB,KAAKq4D,GAASv5E,OAAQzP,GAAK,EAAGA,GAAK2oD,EAASA,EAAO5oD,OAAS,GAAIC,IAAK,CACxF,IAAIuqF,EAAQH,EAAOpqF,EAAI,EAAIyC,EAAKgC,KAAOkkD,EAAO3oD,IAC9C,GAAIuqF,EACA,OAAOA,CACd,CACb,CACK,KAAAlB,CAEL,CA1GA,GA6GAA,GAASmB,KAAO,IAAInB,GAAS,GAAIjrF,OAAOC,OAAO,MAAO,EAAG,GA+CzD,IAKIosF,GALEC,GAAa,IAAIC,QAAWC,GAAkB,IAAID,SAMxD,SAAWF,GAMPA,EAASA,EAAyB,eAAI,GAAK,iBAM3CA,EAASA,EAA2B,iBAAI,GAAK,mBAM7CA,EAASA,EAAuB,aAAI,GAAK,eAOzCA,EAASA,EAAyB,eAAI,GAAK,gBAC9C,CA1BD,CA0BGA,KAAaA,GAAW,CAAE,IAC7B,IAgBMI,GACN,WAGI,SAAAA,EAIA7iF,EAIAmM,EAKA22E,EAIA/qF,EAIAW,GASI,GATG4T,EAAAu2E,KAAAA,GACHllF,KAAKqC,KAAOA,EACZrC,KAAKwO,SAAWA,EAChBxO,KAAKmlF,UAAYA,EACjBnlF,KAAK5F,OAASA,EAId4F,KAAKjF,MAAQ,KACTA,GAASA,EAAMX,OAAQ,CACvB4F,KAAKjF,MAAQtC,OAAOC,OAAO,MAAM,IACF0sF,EADEC,EAAAhwD,EACPt6B,GAA1B,IAAA,IAAAsqF,EAAA/vD,MAAA8vD,EAAAC,EAAA75E,KAAA+pB,MACI,CAAA,IAAA+vD,EAAAx0D,EAAAs0D,EAAA7pF,MADMyvB,GAAAA,EAAIs6D,EAAA,GAAE/pF,EAAK+pF,KACjBtlF,KAAKjF,MAAqB,iBAARiwB,EAAmBA,EAAOA,EAAKxtB,IAAMjC,CAAM,CAAA,CAAA,MAAAkhB,GAAA4oE,EAAA39E,EAAA+U,EAAA,CAAA,QAAA4oE,EAAA9oF,GACpE,CAAA,CACJ,CAkJ6C,OAjJlDsS,EAAAq2E,IAAApkF,IAAA,WAAAvF,MAGI,WACI,IAAIwoF,EAAUC,GAAY7/E,IAAInE,MAC9B,GAAI+jF,IAAYA,EAAQG,QACpB,OAAOH,EAAQE,KAAK7gE,WACxB,IAC4BmiE,EADxB/2E,EAAW,GAAGg3E,EAAAnwD,EACHr1B,KAAKwO,cAApB,IAAAg3E,EAAAlwD,MAAAiwD,EAAAC,EAAAh6E,KAAA+pB,MAA8B,KACtBzxB,EADGyhF,EAAAhqF,MACM6nB,WACTtf,IACI0K,IACAA,GAAY,KAChBA,GAAY1K,EAEnB,CAAA,CAAA2Y,MAAAA,GAAA+oE,EAAA99E,EAAA+U,EAAA+oE,CAAAA,QAAAA,EAAAjpF,GAAA,CACD,OAAQyD,KAAKqC,KAAKvD,MACb,KAAKkd,KAAKhc,KAAKqC,KAAKvD,QAAUkB,KAAKqC,KAAKojF,QAAUlkE,KAAKtE,UAAUjd,KAAKqC,KAAKvD,MAAQkB,KAAKqC,KAAKvD,OACzF0P,EAASpU,OAAS,IAAMoU,EAAW,IAAM,IAFzBA,CAG5B,IACL1N,IAAA,SAAAvF,MAKI,WAAO,IAAAmqF,EAAIljF,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAG,GAAA,EACV,WAAWmjF,GAAW3lF,KAAK4lF,QAASF,EACvC,IACL5kF,IAAA,WAAAvF,MAKI,SAASinF,OAAKv4C,EAAIznC,UAAApI,OAAAoI,QAAAzI,IAAAyI,aAAAA,UAAG,GAAA,EACbqjF,EAAQd,GAAW5gF,IAAInE,OAASA,KAAK4lF,QACrCr4D,EAAS,IAAIo4D,GAAWE,GAG5B,OAFAt4D,EAAOu4D,OAAOtD,EAAKv4C,GACnB86C,GAAW/jF,IAAIhB,KAAMutB,EAAOw4D,OACrBx4D,CACV,GACL,CAAAzsB,IAAAqD,UAAAA,IAII,WACI,OAAO,IAAI6hF,GAAShmF,KAAM,EAAG,EAAG,KACnC,GACLc,CAAAA,IAAAvF,UAAAA,MAWI,SAAQinF,GAAe,IAAVv4C,EAAIznC,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,EACZ1F,EAAOmpF,GAAYlB,GAAW5gF,IAAInE,OAASA,KAAK4lF,QAASpD,EAAKv4C,GAAM,GAExE,OADA86C,GAAW/jF,IAAIhB,KAAMlD,GACdA,CACV,GACLgE,CAAAA,IAAAvF,eAAAA,MAOI,SAAainF,GAAe,IAAVv4C,EAAIznC,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,EACjB1F,EAAOmpF,GAAYhB,GAAgB9gF,IAAInE,OAASA,KAAK4lF,QAASpD,EAAKv4C,GAAM,GAE7E,OADAg7C,GAAgBjkF,IAAIhB,KAAMlD,GACnBA,CACV,IACLgE,IAAA,eAAAvF,MAOI,SAAainF,GACT,OAscR,SAAuByB,EAAMzB,EAAKv4C,GAE9B,IADA,IAAIi8C,EAAQjC,EAAKkC,aAAa3D,EAAKv4C,GAAOm8C,EAAS,KAC1CC,EAAOH,aAAiBF,GAAWE,EAAQA,EAAM//E,QAAQwf,OAAQ0gE,EAAMA,EAAOA,EAAK1gE,OACxF,GAAI0gE,EAAKt5E,MAAQ,EAAG,CAChB,IAAI4Y,EAAS0gE,EAAK1gE,QACjBygE,IAAWA,EAAS,CAACF,KAASvgF,KAAKggB,EAAO9e,QAAQ27E,EAAKv4C,IACxDo8C,EAAO1gE,CACV,KACI,CACD,IAAI2gE,EAAQtC,GAAY7/E,IAAIkiF,EAAKpC,MAEjC,GAAIqC,GAASA,EAAMpC,SAAWoC,EAAMpC,QAAQ,GAAGr5E,MAAQ23E,GAAO8D,EAAMpC,QAAQoC,EAAMpC,QAAQ9pF,OAAS,GAAG+oF,IAAMX,EAAK,CAC7G,IAAI5kF,EAAO,IAAIooF,GAASM,EAAMrC,KAAMqC,EAAMpC,QAAQ,GAAGr5E,KAAOw7E,EAAKx7E,MAAO,EAAGw7E,IAC1ED,IAAWA,EAAS,CAACF,KAASvgF,KAAKsgF,GAAYroF,EAAM4kF,EAAKv4C,GAAM,GACpE,CACJ,CAEL,OAAOm8C,EAASG,GAAUH,GAAUF,CACxC,CAxdeM,CAAcxmF,KAAMwiF,EADThgF,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAA,GAAG,EAExB,IACL1B,IAAA,UAAAvF,MAOI,SAAQ8oF,GAGJ,IAFA,IAAMoC,EAA6CpC,EAA7CoC,MAAOC,EAAsCrC,EAAtCqC,MAAKC,EAAiCtC,EAA/Bx5E,KAAAA,WAAI87E,EAAG,EAACA,EAAAC,EAAuBvC,EAArBlB,GAAAA,OAAE,IAAAyD,EAAG5mF,KAAK5F,OAAMwsF,EAC1ClB,EAAOrB,EAAKqB,MAAQ,EAAGmB,GAAQnB,EAAOZ,GAASgC,kBAAoB,EAC9DxqF,EAAI0D,KAAKutB,OAAOm4D,EAAOZ,GAASgC,oBAAqB,CAC1D,IAAIC,GAAU,EACd,GAAIzqF,EAAEuO,MAAQs4E,GAAM7mF,EAAE6mF,IAAMt4E,KAAUg8E,GAAQvqF,EAAE+F,KAAK2kF,cAA4B,IAAbP,EAAMnqF,IAAe,CACrF,GAAIA,EAAE4nB,aACF,SACJ6iE,GAAU,CACb,CACD,KACQA,GAAWL,IAAUG,IAASvqF,EAAE+F,KAAK2kF,cACrCN,EAAMpqF,IACNA,EAAE2qF,eAHD,CAKL,IAAK3qF,EAAEqpB,SACH,OACJohE,GAAU,CACb,CACJ,CACJ,IACLjmF,IAAA,OAAAvF,MAII,SAAKyvB,GACD,OAAQA,EAAKs4D,QAAiCtjF,KAAKjF,MAAQiF,KAAKjF,MAAMiwB,EAAKxtB,SAAMzD,EAA1DiG,KAAKqC,KAAK2oB,KAAKA,EACzC,GACL,CAAAlqB,IAAAqD,aAAAA,IAKI,WACI,IAAInJ,EAAS,GACb,GAAIgF,KAAKjF,MACL,IAAK,IAAIyC,UAAWzC,MAChBC,EAAO2K,KAAK,EAAEnI,EAAIwC,KAAKjF,MAAMyC,KACrC,OAAOxC,CACV,GACL,CAAA8F,IAAA,UAAAvF,MAKI,WAAqB,IAAA2rF,EAAAlnF,KAAboJ,EAAM5G,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,GACb,OAAOxC,KAAKwO,SAASpU,QAAU,EAA+B4F,KAC1DmnF,GAAazD,GAASmB,KAAM7kF,KAAKwO,SAAUxO,KAAKmlF,UAAW,EAAGnlF,KAAKwO,SAASpU,OAAQ,EAAG4F,KAAK5F,QAAQ,SAACoU,EAAU22E,EAAW/qF,GAAM,OAAS,IAAA8qF,EAAKgC,EAAK7kF,KAAMmM,EAAU22E,EAAW/qF,EAAQ8sF,EAAKE,cAAah+E,EAAOi+E,UAAa,SAAC74E,EAAU22E,EAAW/qF,GAAW,OAAA,IAAI8qF,EAAKxB,GAASmB,KAAMr2E,EAAU22E,EAAW/qF,EAAO,EACxT,IACL,CAAA,CAAA0G,IAAAvF,QAAAA,MAII,SAAa4D,GAAQ,OAAOmoF,GAAUnoF,EAAQ,KAAA+lF,CAElD,CA1LA,GA6LAA,GAAK5lF,MAAQ,IAAI4lF,GAAKxB,GAASmB,KAAM,GAAI,GAAI,GAAG,IAC1C0C,cACF,SAAAA,EAAYC,EAAQz6E,GAAO4B,OAAA44E,GACvBvnF,KAAKwnF,OAASA,EACdxnF,KAAK+M,MAAQA,CAChB,CAO+Dw6E,OAP/D14E,EAAA04E,IAAAzmF,IAAA,KAAAqD,IACD,WAAW,OAAWnE,KAACwnF,OAAOxnF,KAAK+M,MAAQ,EAAK,IAAAjM,IAAA,QAAAqD,IAChD,WAAc,OAAWnE,KAACwnF,OAAOxnF,KAAK+M,MAAQ,EAAK,GAAA,CAAAjM,IAAA,MAAAqD,IACnD,WAAY,OAAWnE,KAACwnF,OAAOxnF,KAAK+M,MAAQ,EAAK,GAAAjM,CAAAA,IAAAqD,OAAAA,IACjD,WAAa,OAAWnE,KAACwnF,OAAOxnF,KAAK+M,MAAQ,EAAK,GAAAjM,CAAAA,UAAAqD,IAClD,WAAY,OAAWnE,KAAC+M,KAAQ,IAAAjM,IAAA,OAAAvF,MAChC,WAASyE,KAAK+M,OAAS,CAAI,GAAA,CAAAjM,IAAA,OAAAvF,MAC3B,WAAS,OAAW,IAAAgsF,EAAiBvnF,KAAKwnF,OAAQxnF,KAAK+M,MAAS,KAAAw6E,CAEpE,IAMME,GACN,WAGI,SAAAA,EAIAD,EAIAptF,EAIA4G,GAAK2N,EAAA3O,KAAAynF,GACDznF,KAAKwnF,OAASA,EACdxnF,KAAK5F,OAASA,EACd4F,KAAKgB,IAAMA,CACd,CA8DA,OA7DL6N,EAAA44E,IAAA3mF,IAAA,OAAAqD,IAGI,WAAa,OAAOu/E,GAASmB,IAAO,GACxC/jF,CAAAA,IAAAvF,WAAAA,MAGI,WAEI,IADA,IAAIP,EAAS,GACJ+R,EAAQ,EAAGA,EAAQ/M,KAAKwnF,OAAOptF,QACpCY,EAAO2K,KAAK3F,KAAK0nF,YAAY36E,IAC7BA,EAAQ/M,KAAKwnF,OAAOz6E,EAAQ,GAEhC,OAAO/R,EAAOkK,KAAK,IACtB,GACLpE,CAAAA,IAAAvF,cAAAA,MAGI,SAAYwR,GACR,IAAIvP,EAAKwC,KAAKwnF,OAAOz6E,GAAQuuB,EAAWt7B,KAAKwnF,OAAOz6E,EAAQ,GACxD1K,EAAOrC,KAAKgB,IAAI2mF,MAAMnqF,GAAKxC,EAASqH,EAAKvD,KAI7C,GAHI,KAAKkd,KAAKhhB,KAAYqH,EAAKojF,UAC3BzqF,EAASumB,KAAKtE,UAAUjiB,IAExBsgC,IADJvuB,GAAS,GAEL,OAAO/R,EAEX,IADA,IAAIwT,EAAW,GACRzB,EAAQuuB,GACX9sB,EAAS7I,KAAK3F,KAAK0nF,YAAY36E,IAC/BA,EAAQ/M,KAAKwnF,OAAOz6E,EAAQ,GAEhC,OAAO/R,EAAS,IAAMwT,EAAStJ,KAAK,KAAO,GAC9C,IACLpE,IAAA,YAAAvF,MAGI,SAAU6/B,EAAYE,EAAUssD,EAAKpF,EAAKv4C,GAEtC,IADI,IAAEu9C,EAAWxnF,KAAXwnF,OAAiBK,GAAQ,EACtBxtF,EAAI+gC,EAAY/gC,GAAKihC,KACtBwsD,GAAU79C,EAAMu4C,EAAKgF,EAAOntF,EAAI,GAAImtF,EAAOntF,EAAI,MAC/CwtF,EAAOxtF,EACHutF,EAAM,IAHsBvtF,EAAImtF,EAAOntF,EAAI,IAOvD,OAAOwtF,CACV,GACL,CAAA/mF,IAAA,QAAAvF,MAGI,SAAMwsF,EAAQC,EAAMn9E,GAGhB,IAFA,IAAI3R,EAAI8G,KAAKwnF,OACTxoE,EAAO,IAAIipE,YAAYD,EAAOD,GAAS9tF,EAAM,EACxCI,EAAI0tF,EAAQG,EAAI,EAAG7tF,EAAI2tF,GAAO,CACnChpE,EAAKkpE,KAAOhvF,EAAEmB,KACd2kB,EAAKkpE,KAAOhvF,EAAEmB,KAAOwQ,EACrB,IAAIs4E,EAAKnkE,EAAKkpE,KAAOhvF,EAAEmB,KAAOwQ,EAC9BmU,EAAKkpE,KAAOhvF,EAAEmB,KAAO0tF,EACrB9tF,EAAMC,KAAKC,IAAIF,EAAKkpF,EACvB,CACD,OAAW,IAAAsE,EAAWzoE,EAAM/kB,EAAK+F,KAAKgB,IACzC,KAAAymF,CAAA,CAjFL,GAmFA,SAASK,GAAU79C,EAAMu4C,EAAK33E,EAAMs4E,GAChC,OAAQl5C,GACJ,KAAM,EAAqB,OAAOp/B,EAAO23E,EACzC,KAAM,EAAyB,OAAOW,GAAMX,GAAO33E,EAAO23E,EAC1D,KAAK,EAAqB,OAAO33E,EAAO23E,GAAOW,EAAKX,EACpD,KAAM,EAAuB,OAAO33E,GAAQ23E,GAAOW,EAAKX,EACxD,KAAK,EAAoB,OAAOW,EAAKX,EACrC,KAAK,EAAuB,OAAW,EAE/C,CACA,SAASyD,GAAYnpF,EAAM0lF,EAAKv4C,EAAMk+C,GAGlC,IAFA,IAAIC,EAEGtrF,EAAK+N,MAAQ/N,EAAKqmF,KACpBl5C,EAAO,EAAIntC,EAAK+N,MAAQ23E,EAAM1lF,EAAK+N,KAAO23E,KAC1Cv4C,GAAQ,EAAIntC,EAAKqmF,IAAMX,EAAM1lF,EAAKqmF,GAAKX,IAAM,CAC9C,IAAI78D,GAAUwiE,GAAYrrF,aAAgBkpF,IAAYlpF,EAAKiQ,MAAQ,EAAI,KAAOjQ,EAAK6oB,OACnF,IAAKA,EACD,OAAO7oB,EACXA,EAAO6oB,CACV,CACD,IAAI+/D,EAAOyC,EAAW,EAAIrD,GAASuD,eAEnC,GAAIF,EACA,IAAK,IAAI9B,EAAOvpF,EAAM6oB,EAAS0gE,EAAK1gE,OAAQA,EAAuBA,GAAf0gE,EAAO1gE,GAAsBA,OACzE0gE,aAAgBL,IAAYK,EAAKt5E,MAAQ,IAA+C,QAAxCq7E,EAAKziE,EAAO8gE,MAAMjE,EAAKv4C,EAAMy7C,UAA0B,IAAP0C,OAAgB,EAASA,EAAGv9E,OAASw7E,EAAKx7E,OAC1I/N,EAAO6oB,GAEnB,OAAS,CACL,IAAIugE,EAAQppF,EAAK2pF,MAAMjE,EAAKv4C,EAAMy7C,GAClC,IAAKQ,EACD,OAAOppF,EACXA,EAAOopF,CACV,CACL,CAAC,IACKoC,GAAQA,WAAAA,SAAAA,IAAA35E,EAAA25E,KAAAA,EAAAz5E,CAmCwBy5E,OAnCxBz5E,EAAAy5E,EAAAxnF,CAAAA,CAAAA,IAAAvF,SAAAA,MACV,WAAmB,OAAW,IAAAoqF,GAAW3lF,KAA9BwC,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,EAAyC,GAAA1B,CAAAA,IAAAvF,WAAAA,MACvD,SAAS8G,GAAmC,IACpCmG,EAAI+/E,GAAYvoF,KAAMqC,EADTG,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,KAAWA,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAG,GAAA,MAElC,OAAOgG,EAAEpO,OAASoO,EAAE,GAAK,IAC5B,GAAA,CAAA1H,IAAA,cAAAvF,MACD,SAAY8G,GACR,OAAOkmF,GAAYvoF,KAAMqC,EADLG,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,KAAWA,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,KAExC,GAAA1B,CAAAA,IAAAvF,UAAAA,MACD,SAAQinF,GACJ,OAAOyD,GAAYjmF,KAAMwiF,EADZhgF,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,GACoB,EACvC,GAAA,CAAA1B,IAAA,eAAAvF,MACD,SAAainF,GACT,OAAOyD,GAAYjmF,KAAMwiF,EADPhgF,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,GACe,EACvC,GAAA1B,CAAAA,IAAAvF,eAAAA,MACD,SAAa4K,GACT,OAAOqiF,GAAiBxoF,KAAMmG,EACjC,GAAArF,CAAAA,IAAAvF,6BAAAA,MACD,SAA2BinF,GAEvB,IADA,IAAI6D,EAAOrmF,KAAKyoF,YAAYjG,GAAM1lF,EAAOkD,KAClCqmF,GAAM,CACT,IAAIzuD,EAAOyuD,EAAKqC,UAChB,IAAK9wD,GAAQA,EAAKurD,IAAMkD,EAAKlD,GACzB,MACAvrD,EAAKv1B,KAAKojF,SAAW7tD,EAAK/sB,MAAQ+sB,EAAKurD,IACvCrmF,EAAOupF,EACPA,EAAOzuD,EAAK+wD,aAGZtC,EAAOzuD,CAEd,CACD,OAAO96B,CACV,GAAA,CAAAgE,IAAA,OAAAqD,IACD,WAAa,OAAOnE,IAAO,GAAAc,CAAAA,IAAAqD,OAAAA,IAC3B,WAAa,OAAOnE,KAAK2lB,MAAS,KAAA2iE,CAEhC,CArCQA,GAqCRtC,GAAQ,SAAA4C,GAAAC,EAAA7C,EAASsC,IAAT,IAAAQ,EAAAC,EAAA/C,GACV,SAAAA,EAAYD,EAAOl7E,EAEnBkC,EAAOi8E,GAASC,IAAAA,EAKW,OALXt6E,EAAAq3E,KAAAA,IACZiD,EAAAH,EAAA/oF,KAAAC,OACK+lF,MAAQA,EACbkD,EAAKp+E,KAAOA,EACZo+E,EAAKl8E,MAAQA,EACbk8E,EAAKD,QAAUA,EAAQC,CAC1B,CAyE2CjD,OAzE3Cn3E,EAAAm3E,EAAAllF,CAAAA,CAAAA,IAAAqD,OAAAA,IACD,WAAa,OAAWnE,KAAC+lF,MAAM1jF,IAAO,GAAAvB,CAAAA,IAAAqD,OAAAA,IACtC,WAAa,OAAWnE,KAAC+lF,MAAM1jF,KAAKvD,IAAO,GAAA,CAAAgC,IAAA,KAAAqD,IAC3C,WAAW,OAAWnE,KAAC6K,KAAO7K,KAAK+lF,MAAM3rF,MAAS,GAAA,CAAA0G,IAAA,YAAAvF,MAClD,SAAUlB,EAAGutF,EAAKpF,EAAKv4C,GACnB,IADyB,IAAAy7C,EAAIljF,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,GAAAyI,UAAG,GAAA,EACvBmjB,EAAS3lB,OAAQ,CACtB,IAAK,IAAAkpF,EAA8BvjE,EAAOogE,MAA/Bv3E,EAAQ06E,EAAR16E,SAAU22E,EAAS+D,EAAT/D,UAA4Bz9E,EAAIkgF,EAAM,EAAIp5E,EAASpU,QAAU,EAAGC,GAAKqN,EAAGrN,GAAKutF,EAAK,CACnG,IAAI9iF,EAAO0J,EAASnU,GAAIuP,EAAQu7E,EAAU9qF,GAAKsrB,EAAO9a,KACtD,GAAKi9E,GAAU79C,EAAMu4C,EAAK54E,EAAOA,EAAQ9E,EAAK1K,QAE9C,GAAI0K,aAAgB2iF,GAAY,CAC5B,GAAI/B,EAAOZ,GAASqE,eAChB,SACJ,IAAIp8E,EAAQjI,EAAKskF,UAAU,EAAGtkF,EAAK0iF,OAAOptF,OAAQwtF,EAAKpF,EAAM54E,EAAOqgC,GACpE,GAAIl9B,GAAS,EACT,OAAW,IAAAs8E,GAAW,IAAIC,GAAc3jE,EAAQ7gB,EAAMzK,EAAGuP,GAAQ,KAAMmD,EAC9E,MACI,GAAK24E,EAAOZ,GAASgC,mBAAuBhiF,EAAKzC,KAAK2kF,aAAeuC,GAASzkF,GAAQ,CACvF,IAAIi/E,OAAO,EACX,KAAM2B,EAAOZ,GAAS0E,gBAAkBzF,EAAUC,GAAY7/E,IAAIW,MAAWi/E,EAAQG,QACjF,OAAW,IAAA8B,EAASjC,EAAQE,KAAMr6E,EAAOvP,EAAGsrB,GAChD,IAAIugE,EAAQ,IAAIF,EAASlhF,EAAM8E,EAAOvP,EAAGsrB,GACzC,OAAQ+/D,EAAOZ,GAASgC,mBAAsBZ,EAAM7jF,KAAK2kF,YAAcd,EACjEA,EAAMuD,UAAU7B,EAAM,EAAI9iF,EAAK0J,SAASpU,OAAS,EAAI,EAAGwtF,EAAKpF,EAAKv4C,EAC3E,CACJ,CACD,GAAKy7C,EAAOZ,GAASgC,mBAAsBnhE,EAAOtjB,KAAK2kF,YACnD,OAAW,KAMf,GAJI3sF,EADAsrB,EAAO5Y,OAAS,EACZ4Y,EAAO5Y,MAAQ66E,EAEfA,EAAM,GAAK,EAAIjiE,EAAOqjE,QAAQjD,MAAMv3E,SAASpU,SACrDurB,EAASA,EAAOqjE,SAEZ,OAAW,IAClB,CACJ,GAAAloF,CAAAA,IAAAqD,aAAAA,IACD,WAAmB,OAAOnE,KAAKypF,UAAU,EAAG,EAAG,EAAG,EAAyB,GAAA,CAAA3oF,IAAA,YAAAqD,IAC3E,WAAkB,OAAWnE,KAACypF,UAAUzpF,KAAK+lF,MAAMv3E,SAASpU,OAAS,GAAI,EAAG,EAAG,EAAyB,GAAA0G,CAAAA,IAAAvF,aAAAA,MACxG,SAAWinF,GAAO,OAAWxiF,KAACypF,UAAU,EAAG,EAAGjH,EAAK,EAAsB,GAAA,CAAA1hF,IAAA,cAAAvF,MACzE,SAAYinF,GAAO,YAAYiH,UAAUzpF,KAAK+lF,MAAMv3E,SAASpU,OAAS,GAAI,EAAGooF,GAAM,EAAuB,GAAA1hF,CAAAA,IAAAvF,QAAAA,MAC1G,SAAMinF,EAAKv4C,GAAM,IACT85C,EADS2B,EAAIljF,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,EAEpB,KAAMkjF,EAAOZ,GAASuD,kBAAoBtE,EAAUC,GAAY7/E,IAAInE,KAAK+lF,SAAWhC,EAAQG,QAAS,CACjG,IACwCwF,EADpCC,EAAOnH,EAAMxiF,KAAK6K,KAAK++E,EAAAv0D,EACF0uD,EAAQG,SAAjC,IAAA,IAAA0F,EAAAt0D,MAAAo0D,EAAAE,EAAAp+E,KAAA+pB,MAA0C,CAAAs0D,IAAAA,EAAAH,EAAAnuF,MAA/BsP,EAAIg/E,EAAJh/E,KAAMs4E,EAAE0G,EAAF1G,GACb,IAAKl5C,EAAO,EAAIp/B,GAAQ8+E,EAAO9+E,EAAO8+E,KACjC1/C,EAAO,EAAIk5C,GAAMwG,EAAOxG,EAAKwG,GAC9B,OAAO,IAAI3D,EAASjC,EAAQE,KAAMF,EAAQG,QAAQ,GAAGr5E,KAAO7K,KAAK6K,MAAO,EAAG7K,KAClF,CAAA,CAAA,MAAAyc,GAAAmtE,EAAAliF,EAAA+U,EAAA,CAAA,QAAAmtE,EAAArtF,GAAA,CACJ,CACD,OAAWyD,KAACypF,UAAU,EAAG,EAAGjH,EAAKv4C,EAAMy7C,EAC1C,GAAA,CAAA5kF,IAAA,wBAAAvF,MACD,WAEI,IADA,IAAIkrD,EAAMzmD,KACHymD,EAAIpkD,KAAK2kF,aAAevgC,EAAIuiC,SAC/BviC,EAAMA,EAAIuiC,QACd,OAAOviC,CACV,GAAA,CAAA3lD,IAAA,SAAAqD,IACD,WACI,OAAOnE,KAAKgpF,QAAUhpF,KAAKgpF,QAAQc,wBAA0B,IAChE,GAAA,CAAAhpF,IAAA,cAAAqD,IACD,WACI,OAAOnE,KAAKgpF,SAAWhpF,KAAK+M,OAAS,EAAI/M,KAAKgpF,QAAQS,UAAUzpF,KAAK+M,MAAQ,EAAG,EAAG,EAAG,GAAyB,IAClH,GAAA,CAAAjM,IAAA,cAAAqD,IACD,WACI,OAAOnE,KAAKgpF,SAAWhpF,KAAK+M,OAAS,EAAI/M,KAAKgpF,QAAQS,UAAUzpF,KAAK+M,MAAQ,GAAI,EAAG,EAAG,GAAyB,IACnH,IAAAjM,IAAA,OAAAqD,IACD,WAAa,OAAOnE,KAAK+lF,KAAQ,GAAAjlF,CAAAA,IAAAvF,SAAAA,MACjC,WAAW,OAAWyE,KAAC+lF,KAAQ,GACnCjlF,CAAAA,IAAAvF,WAAAA,MAGI,WAAa,OAAWyE,KAAC+lF,MAAM3iE,UAAa,KAAA4iE,EAlFlC,GAoFd,SAASuC,GAAYzrF,EAAMuF,EAAM0gC,EAAQzd,GACrC,IAAIykE,EAAMjtF,EAAKywB,SAAUvyB,EAAS,GAClC,IAAK+uF,EAAI7lE,aACL,OAAOlpB,EACX,GAAc,MAAV+nC,EACA,MAAQgnD,EAAI1nF,KAAK2nF,GAAGjnD,QACXgnD,EAAI9C,cACL,OAAOjsF,EACnB,OAAS,CACL,GAAa,MAATsqB,GAAiBykE,EAAI1nF,KAAK2nF,GAAG1kE,GAC7B,OAAOtqB,EAGX,GAFI+uF,EAAI1nF,KAAK2nF,GAAG3nF,IACZrH,EAAO2K,KAAKokF,EAAIjtF,OACfitF,EAAI9C,cACL,OAAgB,MAAT3hE,EAAgBtqB,EAAS,EACvC,CACL,CACA,SAASwtF,GAAiB1rF,EAAMqJ,GAC5B,IAD6D,IAAxB9L,EAACmI,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAG2D,GAAAA,EAAQ/L,OAAS,EACjDQ,EAAIkC,EAAK6oB,OAAQtrB,GAAK,EAAGO,EAAIA,EAAE+qB,OAAQ,CAC5C,IAAK/qB,EACD,OAAY,EAChB,IAAKA,EAAEyH,KAAK2kF,YAAa,CACrB,GAAI7gF,EAAQ9L,IAAM8L,EAAQ9L,IAAMO,EAAEkE,KAC9B,OAAO,EACXzE,GACH,CACJ,CACD,OAAW,CACf,CAAC,IACKivF,GAAaz6E,GACf,SAAAy6E,EAAY3jE,EAAQ6hE,EAAQz6E,EAAOnD,GAAO+E,EAAA26E,KAAAA,GACtCtpF,KAAK2lB,OAASA,EACd3lB,KAAKwnF,OAASA,EACdxnF,KAAK+M,MAAQA,EACb/M,KAAK4J,MAAQA,CAChB,IAECy/E,GAAU,SAAAY,GAAApB,EAAAQ,EAASf,IAAT4B,IAAAA,EAAAnB,EAAAM,GAIZ,SAAAA,EAAYljF,EAAS6iF,EAASj8E,GAAO,IAAAo9E,EAKkC,OALlCx7E,EAAA3O,KAAAqpF,IACjCc,EAAAD,EAAAnqF,KAAAC,OACKmG,QAAUA,EACfgkF,EAAKnB,QAAUA,EACfmB,EAAKp9E,MAAQA,EACbo9E,EAAK9nF,KAAO8D,EAAQqhF,OAAOxmF,IAAI2mF,MAAMxhF,EAAQqhF,OAAOA,OAAOz6E,IAAQo9E,CACtE,CAoDiE,OApDjEt7E,EAAAw6E,EAAAvoF,CAAAA,CAAAA,IAAAqD,OAAAA,IATD,WAAa,OAAOnE,KAAKqC,KAAKvD,IAAO,GAAAgC,CAAAA,IAAAqD,OAAAA,IACrC,WAAa,OAAOnE,KAAKmG,QAAQyD,MAAQ5J,KAAKmG,QAAQqhF,OAAOA,OAAOxnF,KAAK+M,MAAQ,EAAK,GAAA,CAAAjM,IAAA,KAAAqD,IACtF,WAAW,OAAOnE,KAAKmG,QAAQyD,MAAQ5J,KAAKmG,QAAQqhF,OAAOA,OAAOxnF,KAAK+M,MAAQ,EAAK,GAAAjM,CAAAA,IAAAvF,QAAAA,MAQpF,SAAMqsF,EAAKpF,EAAKv4C,GACZ,IAAMu9C,EAAWxnF,KAAKmG,QAAhBqhF,OACFz6E,EAAQy6E,EAAO4B,UAAUppF,KAAK+M,MAAQ,EAAGy6E,EAAOA,OAAOxnF,KAAK+M,MAAQ,GAAI66E,EAAKpF,EAAMxiF,KAAKmG,QAAQyD,MAAOqgC,GAC3G,OAAOl9B,EAAQ,EAAI,KAAO,IAAIs8E,EAAWrpF,KAAKmG,QAASnG,KAAM+M,EAChE,GAAA,CAAAjM,IAAAqD,aAAAA,IACD,WAAmB,YAAYimF,MAAM,EAAG,EAAG,EAAyB,GAAA,CAAAtpF,IAAA,YAAAqD,IACpE,WAAkB,OAAOnE,KAAKoqF,OAAO,EAAG,EAAG,EAAyB,GAAA,CAAAtpF,IAAA,aAAAvF,MACpE,SAAWinF,GAAO,OAAOxiF,KAAKoqF,MAAM,EAAG5H,EAAK,EAAsB,IAAA1hF,IAAA,cAAAvF,MAClE,SAAYinF,GAAO,OAAOxiF,KAAKoqF,OAAO,EAAG5H,GAAM,EAAuB,GAAA,CAAA1hF,IAAA,QAAAvF,MACtE,SAAMinF,EAAKv4C,GACP,IADiBznC,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,GACTsiF,GAASqE,eAChB,OAAO,KACX,IAAM3B,EAAWxnF,KAAKmG,QAAhBqhF,OACFz6E,EAAQy6E,EAAO4B,UAAUppF,KAAK+M,MAAQ,EAAGy6E,EAAOA,OAAOxnF,KAAK+M,MAAQ,GAAIk9B,EAAO,EAAI,GAAK,EAAGu4C,EAAMxiF,KAAKmG,QAAQyD,MAAOqgC,GACzH,OAAOl9B,EAAQ,EAAI,KAAO,IAAIs8E,EAAWrpF,KAAKmG,QAASnG,KAAM+M,EAChE,IAAAjM,IAAA,SAAAqD,IACD,WACI,OAAWnE,KAACgpF,SAAWhpF,KAAKmG,QAAQwf,OAAOmkE,uBAC9C,GAAAhpF,CAAAA,IAAAvF,kBAAAA,MACD,SAAgBqsF,GACZ,OAAW5nF,KAACgpF,QAAU,KAAOhpF,KAAKmG,QAAQwf,OAAO8jE,UAAUzpF,KAAKmG,QAAQ4G,MAAQ66E,EAAKA,EAAK,EAAG,EAChG,GAAA9mF,CAAAA,IAAAqD,cAAAA,IACD,WACI,IAAMqjF,EAAWxnF,KAAKmG,QAAhBqhF,OACFliE,EAAQkiE,EAAOA,OAAOxnF,KAAK+M,MAAQ,GACvC,OAAIuY,GAAStlB,KAAKgpF,QAAUxB,EAAOA,OAAOxnF,KAAKgpF,QAAQj8E,MAAQ,GAAKy6E,EAAOA,OAAOptF,QACnE,IAAAivF,EAAWrpF,KAAKmG,QAASnG,KAAKgpF,QAAS1jE,GAC/CtlB,KAAKqqF,gBAAgB,EAC/B,GAAAvpF,CAAAA,IAAAqD,cAAAA,IACD,WACI,IAAMqjF,EAAWxnF,KAAKmG,QAAhBqhF,OACF8C,EAActqF,KAAKgpF,QAAUhpF,KAAKgpF,QAAQj8E,MAAQ,EAAI,EAC1D,OAAI/M,KAAK+M,OAASu9E,EACPtqF,KAAKqqF,iBAAiB,GAC1B,IAAIhB,EAAWrpF,KAAKmG,QAASnG,KAAKgpF,QAASxB,EAAO4B,UAAUkB,EAAatqF,KAAK+M,OAAQ,EAAG,EAAG,GACtG,GAAA,CAAAjM,IAAA,OAAAqD,IACD,WAAa,OAAW,IAAG,GAAA,CAAArD,IAAA,SAAAvF,MAC3B,WACI,IAAIiT,EAAW,GAAI22E,EAAY,GACzBqC,EAAWxnF,KAAKmG,QAAhBqhF,OACFO,EAAS/nF,KAAK+M,MAAQ,EAAGi7E,EAAOR,EAAOA,OAAOxnF,KAAK+M,MAAQ,GAC/D,GAAIi7E,EAAOD,EAAQ,CACf,IAAIl9E,EAAO28E,EAAOA,OAAOxnF,KAAK+M,MAAQ,GACtCyB,EAAS7I,KAAK6hF,EAAO7tF,MAAMouF,EAAQC,EAAMn9E,IACzCs6E,EAAUx/E,KAAK,EAClB,CACD,OAAW,IAAAu/E,GAAKllF,KAAKqC,KAAMmM,EAAU22E,EAAWnlF,KAAKmjF,GAAKnjF,KAAK6K,KAClE,GACL/J,CAAAA,IAAAvF,WAAAA,MAGI,WAAa,OAAOyE,KAAKmG,QAAQqhF,OAAOE,YAAY1nF,KAAK+M,MAAS,KAAAs8E,CAAA,CA9DtD,GAgEhB,SAAS9C,GAAUgE,GACf,IAAKA,EAAMnwF,OACP,OAAW,KAEf,IADA,IAAIytF,EAAO,EAAG2C,EAASD,EAAM,GACpBlwF,EAAI,EAAGA,EAAIkwF,EAAMnwF,OAAQC,IAAK,CACnC,IAAIyC,EAAOytF,EAAMlwF,IACbyC,EAAK+N,KAAO2/E,EAAO3/E,MAAQ/N,EAAKqmF,GAAKqH,EAAOrH,MAC5CqH,EAAS1tF,EACT+qF,EAAOxtF,EAEd,CACD,IAAIyK,EAAO0lF,aAAkBxE,IAAYwE,EAAOz9E,MAAQ,EAAI,KAAOy9E,EAAO7kE,OACtE8kE,EAAWF,EAAM5wF,QAKrB,OAJImL,EACA2lF,EAAS5C,GAAQ/iF,EAEjB2lF,EAAS17E,OAAO84E,EAAM,GACf,IAAA6C,GAAcD,EAAUD,EACvC,CAAC,IACKE,cACF,SAAAA,EAAYH,EAAOztF,GAAM6R,OAAA+7E,GACrB1qF,KAAKuqF,MAAQA,EACbvqF,KAAKlD,KAAOA,CACf,CAC2C4tF,OAD3C77E,EAAA67E,EAAA5pF,CAAAA,CAAAA,IAAAqD,OAAAA,IACD,WAAa,OAAOoiF,GAAUvmF,KAAKuqF,MAAS,KAAAG,CAEhD,IAmBA,IAIM/E,GAKN,WAGI,SAAAA,EAAY7oF,GAIZ,IAAA4oF,EAAIljF,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,EAYH,GAZImM,EAAA3O,KAAA2lF,GACJ3lF,KAAK0lF,KAAOA,EAIZ1lF,KAAKwnF,OAAS,KACdxnF,KAAK2qF,MAAQ,GAIb3qF,KAAK+M,MAAQ,EACb/M,KAAK4qF,WAAa,KACd9tF,aAAgBkpF,GAChBhmF,KAAK6qF,UAAU/tF,OAEd,CACDkD,KAAK+lF,MAAQjpF,EAAKqJ,QAAQwf,OAC1B3lB,KAAKwnF,OAAS1qF,EAAKqJ,QACnB,IAAK,IAAIqF,EAAI1O,EAAKksF,QAASx9E,EAAGA,EAAIA,EAAEw9E,QAChChpF,KAAK2qF,MAAMG,QAAQt/E,EAAEuB,OACzB/M,KAAK4qF,WAAa9tF,EAClBkD,KAAK+qF,SAASjuF,EAAKiQ,MACtB,CACJ,CAmRA44E,OAnRA92E,EAAA82E,EAAA7kF,CAAAA,CAAAA,IAAAqD,OAAAA,IA/BD,WAAa,OAAWnE,KAACqC,KAAKvD,IAAO,GAAAgC,CAAAA,gBAAAvF,MAgCrC,SAAUuB,GACN,QAAKA,IAELkD,KAAK+lF,MAAQjpF,EACbkD,KAAKqC,KAAOvF,EAAKuF,KACjBrC,KAAK6K,KAAO/N,EAAK+N,KACjB7K,KAAKmjF,GAAKrmF,EAAKqmF,IACR,EACV,IAAAriF,IAAA,WAAAvF,MACD,SAASwR,EAAO1K,GACZrC,KAAK+M,MAAQA,EACb,IAAAi+E,EAAwBhrF,KAAKwnF,OAAvB59E,EAAKohF,EAALphF,MAAO49E,EAAMwD,EAANxD,OAIb,OAHAxnF,KAAKqC,KAAOA,GAAQmlF,EAAOxmF,IAAI2mF,MAAMH,EAAOA,OAAOz6E,IACnD/M,KAAK6K,KAAOjB,EAAQ49E,EAAOA,OAAOz6E,EAAQ,GAC1C/M,KAAKmjF,GAAKv5E,EAAQ49E,EAAOA,OAAOz6E,EAAQ,IACjC,CACV,GACLjM,CAAAA,IAAAvF,QAAAA,MAGI,SAAMuB,GACF,QAAKA,IAEDA,aAAgBkpF,IAChBhmF,KAAKwnF,OAAS,KACPxnF,KAAK6qF,UAAU/tF,KAE1BkD,KAAKwnF,OAAS1qF,EAAKqJ,QACRnG,KAAC+qF,SAASjuF,EAAKiQ,MAAOjQ,EAAKuF,OACzC,GACLvB,CAAAA,IAAAvF,WAAAA,MAGI,WACI,OAAWyE,KAACwnF,OAASxnF,KAAKwnF,OAAOA,OAAOE,YAAY1nF,KAAK+M,OAAS/M,KAAK+lF,MAAM3iE,UAChF,GACLtiB,CAAAA,IAAAvF,aAAAA,MAGI,SAAWqsF,EAAKpF,EAAKv4C,GACjB,IAAKjqC,KAAKwnF,OACN,OAAWxnF,KAAA,MAAOA,KAAK+lF,MAAM0D,UAAU7B,EAAM,EAAI5nF,KAAK+lF,MAAMA,MAAMv3E,SAASpU,OAAS,EAAI,EAAGwtF,EAAKpF,EAAKv4C,EAAMjqC,KAAK0lF,OACpH,IAAM8B,EAAWxnF,KAAKwnF,OAAhBA,OACFz6E,EAAQy6E,EAAO4B,UAAUppF,KAAK+M,MAAQ,EAAGy6E,EAAOA,OAAOxnF,KAAK+M,MAAQ,GAAI66E,EAAKpF,EAAMxiF,KAAKwnF,OAAO59E,MAAOqgC,GAC1G,QAAIl9B,EAAQ,KAEZ/M,KAAK2qF,MAAMhlF,KAAK3F,KAAK+M,OACV/M,KAAC+qF,SAASh+E,GACxB,GACL,CAAAjM,IAAAvF,aAAAA,MAII,WAAe,OAAOyE,KAAKirF,WAAW,EAAG,EAAG,EAAyB,GACzE,CAAAnqF,IAAAvF,YAAAA,MAGI,WAAc,OAAOyE,KAAKirF,YAAY,EAAG,EAAG,EAAyB,GACzE,CAAAnqF,IAAAvF,aAAAA,MAGI,SAAWinF,GAAO,YAAYyI,WAAW,EAAGzI,EAAK,EAAsB,GAC3E,CAAA1hF,IAAA,cAAAvF,MAGI,SAAYinF,GAAO,OAAOxiF,KAAKirF,YAAY,EAAGzI,GAAM,EAAuB,GAC/E1hF,CAAAA,IAAAvF,QAAAA,MAOI,SAAMinF,EAAKv4C,GAAwB,IAAlBy7C,EAAIljF,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,aAAGxC,KAAK0lF,KACzB,OAAK1lF,KAAKwnF,SAEH9B,EAAOZ,GAASqE,iBAAyBnpF,KAAKirF,WAAW,EAAGzI,EAAKv4C,GAD7DjqC,KAAU,MAACA,KAAK+lF,MAAMU,MAAMjE,EAAKv4C,EAAMy7C,GAErD,GACL,CAAA5kF,IAAAvF,SAAAA,MAGI,WACI,IAAKyE,KAAKwnF,OACN,OAAWxnF,KAAC6qF,UAAW7qF,KAAK0lF,KAAOZ,GAASgC,iBAAoB9mF,KAAK+lF,MAAMiD,QAAUhpF,KAAK+lF,MAAMpgE,QACpG,GAAI3lB,KAAK2qF,MAAMvwF,OACX,OAAO4F,KAAK+qF,SAAS/qF,KAAK2qF,MAAMhjF,OACpC,IAAIge,EAAU3lB,KAAK0lF,KAAOZ,GAASgC,iBAAoB9mF,KAAKwnF,OAAO7hE,OAAS3lB,KAAKwnF,OAAO7hE,OAAOmkE,wBAE/F,OADA9pF,KAAKwnF,OAAS,KACHxnF,KAAC6qF,UAAUllE,EACzB,GACL,CAAA7kB,IAAA,UAAAvF,MAGI,SAAQqsF,GACJ,IAAK5nF,KAAKwnF,OACN,QAAQxnF,KAAK+lF,MAAMiD,SACbhpF,KAAI,MAAOA,KAAK+lF,MAAMh5E,MAAQ,EAAI,KAC9B/M,KAAK+lF,MAAMiD,QAAQS,UAAUzpF,KAAK+lF,MAAMh5E,MAAQ66E,EAAKA,EAAK,EAAG,EAAuB5nF,KAAK0lF,OACnG,IAAE8B,EAAWxnF,KAAKwnF,OAAhBA,OAAwB3oF,EAAImB,KAAK2qF,MAAMvwF,OAAS,EACtD,GAAIwtF,EAAM,EAAG,CACT,IAAI0C,EAAczrF,EAAI,EAAI,EAAImB,KAAK2qF,MAAM9rF,GAAK,EAC9C,GAAImB,KAAK+M,OAASu9E,EACd,OAAWtqF,KAAC+qF,SAASvD,EAAO4B,UAAUkB,EAAatqF,KAAK+M,OAAQ,EAAG,EAAG,GAC7E,KACI,CACD,IAAIuY,EAAQkiE,EAAOA,OAAOxnF,KAAK+M,MAAQ,GACvC,GAAIuY,GAASzmB,EAAI,EAAI2oF,EAAOA,OAAOptF,OAASotF,EAAOA,OAAOxnF,KAAK2qF,MAAM9rF,GAAK,IACtE,OAAOmB,KAAK+qF,SAASzlE,EAC5B,CACD,OAAOzmB,EAAI,GAAImB,KAAI,MAAOA,KAAKwnF,OAAO7hE,OAAO8jE,UAAUzpF,KAAKwnF,OAAOz6E,MAAQ66E,EAAKA,EAAK,EAAG,EAAuB5nF,KAAK0lF,MACvH,IACL5kF,IAAA,cAAAvF,MAGI,WAAgB,YAAY2vF,QAAQ,EAAK,GAC7CpqF,CAAAA,IAAAvF,cAAAA,MAGI,WAAgB,OAAWyE,KAACkrF,SAAS,EAAK,IAAApqF,IAAA,aAAAvF,MAC1C,SAAWqsF,GACH,IAAA76E,EAAO4Y,EAAU6hE,EAAWxnF,KAAXwnF,OACrB,GAAIA,EAAQ,CACR,GAAII,EAAM,GACN,GAAI5nF,KAAK+M,MAAQy6E,EAAOA,OAAOA,OAAOptF,OAClC,cAGJ,IAAK,IAAIC,EAAI,EAAGA,EAAI2F,KAAK+M,MAAO1S,IAC5B,GAAImtF,EAAOA,OAAOA,OAAOntF,EAAI,GAAK2F,KAAK+M,MACnC,OAAY,EAErBA,EAAkBy6E,EAAlBz6E,MAAO4Y,EAAW6hE,EAAX7hE,MACb,KACI,KAAAwlE,EAC6BnrF,KAAK+lF,MAAhCh5E,EAAKo+E,EAALp+E,MAAgB4Y,EAAMwlE,EAAfnC,OACb,CACD,KAAOrjE,EAAU5Y,GAAJq+E,EAA+BzlE,GAA3B5Y,MAAgB4Y,EAAMylE,EAAfpC,QAAOoC,EAAqB,CAAA,IAAAA,EAChD,GAAIr+E,GAAS,EACT,IAAK,IAAI1S,EAAI0S,EAAQ66E,EAAKlgF,EAAIkgF,EAAM,GAAK,EAAIjiE,EAAOogE,MAAMv3E,SAASpU,OAAQC,GAAKqN,EAAGrN,GAAKutF,EAAK,CACzF,IAAIwC,EAAQzkE,EAAOogE,MAAMv3E,SAASnU,GAClC,GAAK2F,KAAK0lF,KAAOZ,GAASgC,kBACtBsD,aAAiB3C,KAChB2C,EAAM/nF,KAAK2kF,aACZuC,GAASa,GACT,OAAY,CACnB,CACR,CACD,OAAW,CACd,GAAA,CAAAtpF,IAAAvF,OAAAA,MACD,SAAKqsF,EAAKnB,GACN,GAAIA,GAASzmF,KAAKirF,WAAWrD,EAAK,EAAG,GACjC,OAAO,EACX,OAAS,CACL,GAAI5nF,KAAKkrF,QAAQtD,GACb,SACJ,GAAI5nF,KAAKqrF,WAAWzD,KAAS5nF,KAAK2lB,SAC9B,OAAY,CACnB,CACJ,GACL7kB,CAAAA,IAAAvF,OAAAA,MAOI,WAAmB,IAAdkrF,IAAKjkF,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,KAAAyI,UAAG,GAAQ,OAAOxC,KAAKsrF,KAAK,EAAG7E,EAAS,GACtD3lF,CAAAA,IAAAvF,OAAAA,MAMI,WAAmB,IAAdkrF,IAAKjkF,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,KAAAyI,UAAA,GAAW,OAAWxC,KAACsrF,MAAM,EAAG7E,EAAS,GACvD,CAAA3lF,IAAA,SAAAvF,MAKI,SAAOinF,GAEH,IAFkB,IAAVv4C,EAAIznC,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAG,GAAA,GAERxC,KAAK6K,MAAQ7K,KAAKmjF,KACpBl5C,EAAO,EAAIjqC,KAAK6K,MAAQ23E,EAAMxiF,KAAK6K,KAAO23E,KAC1Cv4C,GAAQ,EAAIjqC,KAAKmjF,IAAMX,EAAMxiF,KAAKmjF,GAAKX,KACnCxiF,KAAK2lB,WAGd,KAAO3lB,KAAKirF,WAAW,EAAGzI,EAAKv4C,KAC/B,OAAOjqC,IACV,GACL,CAAAc,IAAAqD,OAAAA,IAII,WACI,IAAKnE,KAAKwnF,OACN,YAAYzB,MAChB,IAAInsC,EAAQ55C,KAAK4qF,WAAY5vF,EAAS,KAAMuwF,EAAQ,EACpD,GAAI3xC,GAASA,EAAMzzC,SAAWnG,KAAKwnF,OAC/BnB,EAAM,IAAK,IAAIt5E,EAAQ/M,KAAK+M,MAAOlO,EAAImB,KAAK2qF,MAAMvwF,OAAQyE,GAAK,GAAI,CAC/D,IAAK,IAAIvC,EAAIs9C,EAAOt9C,EAAGA,EAAIA,EAAE0sF,QACzB,GAAI1sF,EAAEyQ,OAASA,EAAO,CAClB,GAAIA,GAAS/M,KAAK+M,MACd,OAAOzQ,EACXtB,EAASsB,EACTivF,EAAQ1sF,EAAI,EACZ,MAAMwnF,CACT,CACLt5E,EAAQ/M,KAAK2qF,QAAQ9rF,EACxB,CAEL,IAAK,IAAIxE,EAAIkxF,EAAOlxF,EAAI2F,KAAK2qF,MAAMvwF,OAAQC,IACvCW,EAAS,IAAIquF,GAAWrpF,KAAKwnF,OAAQxsF,EAAQgF,KAAK2qF,MAAMtwF,IAC5D,OAAW2F,KAAC4qF,WAAa,IAAIvB,GAAWrpF,KAAKwnF,OAAQxsF,EAAQgF,KAAK+M,MACrE,GACL,CAAAjM,IAAAqD,OAAAA,IAKI,WACI,OAAOnE,KAAKwnF,OAAS,KAAOxnF,KAAK+lF,MAAMA,KAC1C,GACL,CAAAjlF,IAAA,UAAAvF,MAMI,SAAQkrF,EAAOC,GACX,IAAK,IAAI6E,EAAQ,IAAK,CAClB,IAAIC,GAAY,EAChB,GAAIxrF,KAAKqC,KAAK2kF,cAA+B,IAAhBP,EAAMzmF,MAAiB,CAChD,GAAIA,KAAKkkB,aAAc,CACnBqnE,IACA,QACH,CACIvrF,KAAKqC,KAAK2kF,cACXwE,GAAY,EACnB,CACD,KACQA,GAAa9E,GACbA,EAAM1mF,MACVwrF,EAAYxrF,KAAKqC,KAAK2kF,aAClBhnF,KAAKinF,eAJJ,CAML,IAAKsE,EACD,OACJvrF,KAAK2lB,SACL4lE,IACAC,GAAY,CACf,CACJ,CACJ,GACL,CAAA1qF,IAAAvF,eAAAA,MAKI,SAAa4K,GACT,IAAKnG,KAAKwnF,OACN,OAAOgB,GAAiBxoF,KAAKlD,KAAMqJ,GAEvC,IADI,IAAEqhF,EAAWxnF,KAAKwnF,OAAhBA,OAA0BG,EAAUH,EAAOxmF,IAAjB2mF,MACvBttF,EAAI8L,EAAQ/L,OAAS,EAAGyE,EAAImB,KAAK2qF,MAAMvwF,OAAS,EAAGC,GAAK,EAAGwE,IAAK,CACrE,GAAIA,EAAI,EACJ,OAAO2pF,GAAiBxoF,KAAKlD,KAAMqJ,EAAS9L,GAChD,IAAIgI,EAAOslF,EAAMH,EAAOA,OAAOxnF,KAAK2qF,MAAM9rF,KAC1C,IAAKwD,EAAK2kF,YAAa,CACnB,GAAI7gF,EAAQ9L,IAAM8L,EAAQ9L,IAAMgI,EAAKvD,KACjC,OAAY,EAChBzE,GACH,CACJ,CACD,QACH,KAAAsrF,CAEL,CAnTA,GAmTA,SAAS4D,GAAStF,GACd,OAAOA,EAAKz1E,SAASklB,MAAK,SAAA+3D,GAAM,OAAAA,aAAchE,KAAegE,EAAGppF,KAAK2kF,aAAeuC,GAASkC,EAAI,GACrG,CACA,SAASnE,GAAUnoF,GACf,IAAIipF,EACEZ,EAA8GroF,EAA9GqoF,OAAQkE,EAAsGvsF,EAAtGusF,QAAOC,EAA+FxsF,EAA7FysF,gBAAAA,OAAe,IAAAD,EA7tCd,KA6tCoCA,EAAAE,EAAwD1sF,EAAtD2sF,OAAAA,WAAMD,EAAG,GAAEA,EAAAE,EAA2C5sF,EAAzC6sF,cAAAA,OAAgBN,IAAHK,EAAGL,EAAQ/D,MAAMvtF,OAAM2xF,EAC3Gx+D,EAAS3iB,MAAMmS,QAAQyqE,GAAU,IAAID,GAAiBC,EAAQA,EAAOptF,QAAUotF,EAC/EG,EAAQ+D,EAAQ/D,MAChB9D,EAAc,EAAGC,EAAY,EACjC,SAASmI,EAAS3B,EAAa4B,EAAQ19E,EAAU22E,EAAWgH,EAAUZ,GAGlE,IAFA,IAAM/tF,EAAyB+vB,EAAzB/vB,GAAIoM,EAAqB2jB,EAArB3jB,MAAOC,EAAc0jB,EAAd1jB,IAAKrN,EAAS+wB,EAAT/wB,KAClB4vF,EAAmBtI,EAChBtnF,EAAO,GAAG,CAEb,GADA+wB,EAAOzoB,QACM,GAATtI,EAAsC,CACtC,IAAIM,EAAOgvF,EAAOtuF,GAGlB,OAFAgR,EAAS7I,KAAK7I,QACdqoF,EAAUx/E,KAAKiE,EAAQ0gF,EAE1B,CACI,IAAa,GAAT9tF,EAEL,YADAqnF,EAAcrmF,GAGThB,IAAS,GAATA,EAEL,YADAsnF,EAAYtmF,GAIZ,MAAM,IAAIimF,wCAAU7/E,OAA8BpH,GAEzD,CACD,IAAsBM,EAAM0qF,EAAxBnlF,EAAOslF,EAAMnqF,GACb6uF,EAAWziF,EAAQ0gF,EACvB,GAAIzgF,EAAMD,GAASgiF,IAAoBpE,EA8G3C,SAAwB7lE,EAASwqE,GAO7B,IAAIG,EAAO/+D,EAAO++D,OACd9vF,EAAO,EAAGoN,EAAQ,EAAG8yC,EAAO,EAAG6vC,EAAWD,EAAKziF,IAAM+hF,EACrD5wF,EAAS,CAAEwB,KAAM,EAAGoN,MAAO,EAAG8yC,KAAM,GACxC2pC,EAAM,IAAK,IAAI6F,EAASI,EAAK9J,IAAM7gE,EAAS2qE,EAAK9J,IAAM0J,GAAS,CAC5D,IAAIM,EAAWF,EAAK9vF,KAEpB,GAAI8vF,EAAK9uF,IAAM2uF,GAAYK,GAAY,EAGnCxxF,EAAOwB,KAAOA,EACdxB,EAAO4O,MAAQA,EACf5O,EAAO0hD,KAAOA,EACdA,GAAQ,EACRlgD,GAAQ,EACR8vF,EAAKxnF,WART,CAWA,IAAIunF,EAAWC,EAAK9J,IAAMgK,EAC1B,GAAIA,EAAW,GAAKH,EAAWH,GAAUI,EAAK1iF,MAAQ2iF,EAClD,MACJ,IAAIE,EAAeH,EAAK9uF,IAAMwuF,EAAgB,EAAI,EAC9CU,EAAYJ,EAAK1iF,MAErB,IADA0iF,EAAKxnF,OACEwnF,EAAK9J,IAAM6J,GAAU,CACxB,GAAIC,EAAK9vF,KAAO,EAAG,CACf,IAAkB,GAAd8vF,EAAK9vF,KAGL,MAAM6pF,EAFNoG,GAAgB,CAGvB,MACQH,EAAK9uF,IAAMwuF,IAChBS,GAAgB,GAEpBH,EAAKxnF,MACR,CACD8E,EAAQ8iF,EACRlwF,GAAQgwF,EACR9vC,GAAQ+vC,CArBP,CAsBJ,EACGN,EAAW,GAAK3vF,GAAQmlB,KACxB3mB,EAAOwB,KAAOA,EACdxB,EAAO4O,MAAQA,EACf5O,EAAO0hD,KAAOA,GAElB,OAAO1hD,EAAOwB,KAAO,EAAIxB,OAASjB,CACrC,CAlKmD4yF,CAAep/D,EAAOi1D,IAAM0J,EAAQC,IAAY,CAI5F,IAFA,IAAIhtF,EAAO,IAAI8oF,YAAYT,EAAOhrF,KAAOgrF,EAAO9qC,MAC5CkwC,EAASr/D,EAAOi1D,IAAMgF,EAAOhrF,KAAMuQ,EAAQ5N,EAAK/E,OAC7CmzB,EAAOi1D,IAAMoK,GAChB7/E,EAAQ8/E,EAAarF,EAAO59E,MAAOzK,EAAM4N,GAC7CjQ,EAAO,IAAI2qF,GAAWtoF,EAAM0K,EAAM29E,EAAO59E,MAAO8hF,GAChDW,EAAW7E,EAAO59E,MAAQ0gF,CAC7B,KACI,CACD,IAAIsC,EAASr/D,EAAOi1D,IAAMhmF,EAC1B+wB,EAAOzoB,OAIP,IAHA,IAAIgoF,EAAgB,GAAIC,EAAiB,GACrCC,EAAgBxvF,GAAMwuF,EAAgBxuF,GAAM,EAC5CyvF,EAAY,EAAGC,EAAUrjF,EACtB0jB,EAAOi1D,IAAMoK,GACZI,GAAiB,GAAKz/D,EAAO/vB,IAAMwvF,GAAiBz/D,EAAO/wB,MAAQ,GAC/D+wB,EAAO1jB,KAAOqjF,EAAUtB,IACxBuB,EAAeL,EAAeC,EAAgBnjF,EAAOqjF,EAAW1/D,EAAO1jB,IAAKqjF,EAASF,EAAeZ,GACpGa,EAAYH,EAAc1yF,OAC1B8yF,EAAU3/D,EAAO1jB,KAErB0jB,EAAOzoB,QAEFymF,EAAQ,KACb6B,EAAaxjF,EAAOgjF,EAAQE,EAAeC,GAG3Cd,EAASriF,EAAOgjF,EAAQE,EAAeC,EAAgBC,EAAezB,EAAQ,GAOtF,GAJIyB,GAAiB,GAAKC,EAAY,GAAKA,EAAYH,EAAc1yF,QACjE+yF,EAAeL,EAAeC,EAAgBnjF,EAAOqjF,EAAWrjF,EAAOsjF,EAASF,EAAeZ,GACnGU,EAAczqD,UACd0qD,EAAe1qD,UACX2qD,GAAiB,GAAKC,EAAY,EAAG,CACrC,IAAII,EA0ChB,SAAsBhrF,GAClB,gBAAQmM,EAAU22E,EAAW/qF,GACzB,IAAgDw9B,EAAM01D,EAAlDxJ,EAAY,EAAGyJ,EAAQ/+E,EAASpU,OAAS,EAC7C,GAAImzF,GAAS,IAAM31D,EAAOppB,EAAS++E,cAAmBrI,GAAM,CACxD,IAAKqI,GAAS31D,EAAKv1B,MAAQA,GAAQu1B,EAAKx9B,QAAUA,EAC9C,OAAOw9B,GACP01D,EAAgB11D,EAAK5M,KAAKq4D,GAASS,cACnCA,EAAYqB,EAAUoI,GAAS31D,EAAKx9B,OAASkzF,EACpD,CACD,OAAOjG,EAAShlF,EAAMmM,EAAU22E,EAAW/qF,EAAQ0pF,EAC/D,CACK,CArDsB0J,CAAanrF,GACxBvF,EAAOqqF,GAAa9kF,EAAMyqF,EAAeC,EAAgB,EAAGD,EAAc1yF,OAAQ,EAAGyP,EAAMD,EAAOyjF,EAAMA,EAC3G,MAEGvwF,EAAOuqF,EAAShlF,EAAMyqF,EAAeC,EAAgBljF,EAAMD,EAAOwiF,EAAmBviF,EAE5F,CACD2E,EAAS7I,KAAK7I,GACdqoF,EAAUx/E,KAAK0mF,EAClB,CACD,SAASe,EAAa9C,EAAa4B,EAAQ19E,EAAU22E,GAGjD,IAFA,IAAI72E,EAAQ,GACRm/E,EAAY,EAAGC,GAAU,EACtBngE,EAAOi1D,IAAM0J,GAAQ,CACxB,IAAM1uF,EAAyB+vB,EAAzB/vB,GAAIoM,EAAqB2jB,EAArB3jB,MAAOC,EAAc0jB,EAAd1jB,IACjB,GAD+B0jB,EAAT/wB,KACX,EACP+wB,EAAOzoB,WAEN,IAAI4oF,GAAU,GAAK9jF,EAAQ8jF,EAC5B,MAGIA,EAAS,IACTA,EAAS7jF,EAAM+hF,GACnBt9E,EAAM3I,KAAKnI,EAAIoM,EAAOC,GACtB4jF,IACAlgE,EAAOzoB,MACV,CACJ,CACD,GAAI2oF,EAAW,CAGX,IAFA,IAAIjG,EAAS,IAAIS,YAAwB,EAAZwF,GACzB7jF,EAAQ0E,EAAMA,EAAMlU,OAAS,GACxBC,EAAIiU,EAAMlU,OAAS,EAAG8tF,EAAI,EAAG7tF,GAAK,EAAGA,GAAK,EAC/CmtF,EAAOU,KAAO55E,EAAMjU,GACpBmtF,EAAOU,KAAO55E,EAAMjU,EAAI,GAAKuP,EAC7B49E,EAAOU,KAAO55E,EAAMjU,EAAI,GAAKuP,EAC7B49E,EAAOU,KAAOA,EAElB15E,EAAS7I,KAAK,IAAI8hF,GAAWD,EAAQl5E,EAAM,GAAK1E,EAAO8hF,IACvDvG,EAAUx/E,KAAKiE,EAAQ0gF,EAC1B,CACJ,CAaD,SAAS6C,EAAe3+E,EAAU22E,EAAWwI,EAAMtzF,EAAGwQ,EAAMs4E,EAAI9gF,EAAMyhF,GAElE,IADA,IAAIgJ,EAAgB,GAAIC,EAAiB,GAClCv+E,EAASpU,OAASC,GACrByyF,EAAcnnF,KAAK6I,EAAS7G,OAC5BolF,EAAepnF,KAAKw/E,EAAUx9E,MAAQgmF,EAAO9iF,GAEjD2D,EAAS7I,KAAK0hF,EAASqE,EAAQ/D,MAAMtlF,GAAOyqF,EAAeC,EAAgB5J,EAAKt4E,EAAMi5E,EAAYX,IAClGgC,EAAUx/E,KAAKkF,EAAO8iF,EACzB,CACD,SAAStG,EAAShlF,EAAMmM,EAAU22E,EAAW/qF,GAA8B,IAAtB0pF,EAASthF,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,EAAGzH,EAAKyH,UAAApI,OAAA,EAAAoI,UAAA,QAAAzI,EACrE,GAAI8pF,EAAa,CACb,IAAI+J,EAAO,CAACvK,GAASQ,YAAaA,GAClC9oF,EAAQA,EAAQ,CAAC6yF,GAAMhqF,OAAO7I,GAAS,CAAC6yF,EAC3C,CACD,GAAI9J,EAAY,GAAI,CAChB,IAAI8J,EAAO,CAACvK,GAASS,UAAWA,GAChC/oF,EAAQA,EAAQ,CAAC6yF,GAAMhqF,OAAO7I,GAAS,CAAC6yF,EAC3C,CACD,OAAO,IAAI1I,GAAK7iF,EAAMmM,EAAU22E,EAAW/qF,EAAQW,EACtD,CAsDD,SAAS8xF,EAAagB,EAAarG,EAAQz6E,GACvC,IAAMvP,EAAyB+vB,EAAzB/vB,GAAIoM,EAAqB2jB,EAArB3jB,MAAOC,EAAc0jB,EAAd1jB,IAAKrN,EAAS+wB,EAAT/wB,KAEtB,GADA+wB,EAAOzoB,OACHtI,GAAQ,GAAKgB,EAAKwuF,EAAe,CACjC,IAAI5wD,EAAaruB,EACjB,GAAIvQ,EAAO,EAEP,IADA,IAAIowF,EAASr/D,EAAOi1D,KAAOhmF,EAAO,GAC3B+wB,EAAOi1D,IAAMoK,GAChB7/E,EAAQ8/E,EAAagB,EAAarG,EAAQz6E,GAElDy6E,IAASz6E,GAASquB,EAClBosD,IAASz6E,GAASlD,EAAMgkF,EACxBrG,IAASz6E,GAASnD,EAAQikF,EAC1BrG,IAASz6E,GAASvP,CACrB,MACiB,GAAThB,EACLqnF,EAAcrmF,GAEA,GAAThB,IACLsnF,EAAYtmF,GAEhB,OAAOuP,CACV,CAED,IADA,IAAIyB,EAAW,GAAI22E,EAAY,GACxB53D,EAAOi1D,IAAM,GAChByJ,EAAS9sF,EAAKyK,OAAS,EAAGzK,EAAK0uF,aAAe,EAAGr/E,EAAU22E,GAAY,EAAG,GAC9E,IAAI/qF,EAAgC,QAAtBguF,EAAKjpF,EAAK/E,cAA2B,IAAPguF,EAAgBA,EAAM55E,EAASpU,OAAS+qF,EAAU,GAAK32E,EAAS,GAAGpU,OAAS,EACxH,OAAO,IAAI8qF,GAAKyC,EAAMxoF,EAAK2uF,OAAQt/E,EAAS6zB,UAAW8iD,EAAU9iD,UAAWjoC,EAChF,CACA,IAAM2zF,GAAgB,IAAI/I,QAC1B,SAASwH,GAASwB,EAAalxF,GAC3B,IAAKkxF,EAAYhH,aAAelqF,aAAgB2qF,IAAc3qF,EAAKuF,MAAQ2rF,EACvE,OAAO,EACX,IAAIxxF,EAAOuxF,GAAc5pF,IAAIrH,GAC7B,GAAY,MAARN,EAAc,CACdA,EAAO,EAAE,IACsByxF,EADtBC,EAAA74D,EACSv4B,EAAK0R,UAAvB,IAAA,IAAA0/E,EAAA54D,MAAA24D,EAAAC,EAAA1iF,KAAA+pB,MAAiC,CAAxB,IAAA60D,EAAK6D,EAAA1yF,MACV,GAAI6uF,EAAM/nF,MAAQ2rF,KAAiB5D,aAAiBlF,IAAO,CACvD1oF,EAAO,EACP,KACH,CACDA,GAAQgwF,GAASwB,EAAa5D,EACjC,CAAA,OAAA3tE,GAAAyxE,EAAAxmF,EAAA+U,EAAAyxE,CAAAA,QAAAA,EAAA3xF,GAAA,CACDwxF,GAAc/sF,IAAIlE,EAAMN,EAC3B,CACD,OAAOA,CACX,CACA,SAAS2qF,GAET6G,EAEAx/E,EAAU22E,EAEVt6E,EAAMs4E,EAENv5E,EAEAxP,EAEA+zF,EAEAC,GAEI,IADA,IAAIlyB,EAAQ,EACH7hE,EAAIwQ,EAAMxQ,EAAI8oF,EAAI9oF,IACvB6hE,GAASswB,GAASwB,EAAax/E,EAASnU,IAC5C,IAAIg0F,EAAWn0F,KAAKo0F,KAAc,IAARpyB,EAAe,GACrC4wB,EAAgB,GAAIC,EAAiB,GA2BzC,OA1BA,SAASwB,EAAO//E,EAAU22E,EAAWt6E,EAAMs4E,EAAIpkE,GAC3C,IAAK,IAAI1kB,EAAIwQ,EAAMxQ,EAAI8oF,GAAK,CACxB,IAAIqL,EAAYn0F,EAAGo0F,EAAatJ,EAAU9qF,GAAIq0F,EAAYlC,GAASwB,EAAax/E,EAASnU,IAEzF,IADAA,IACOA,EAAI8oF,EAAI9oF,IAAK,CAChB,IAAIs0F,EAAWnC,GAASwB,EAAax/E,EAASnU,IAC9C,GAAIq0F,EAAYC,GAAYN,EACxB,MACJK,GAAaC,CAChB,CACD,GAAIt0F,GAAKm0F,EAAY,EAAG,CACpB,GAAIE,EAAYL,EAAU,CACtB,IAAIO,EAAOpgF,EAASggF,GACpBD,EAAOK,EAAKpgF,SAAUogF,EAAKzJ,UAAW,EAAGyJ,EAAKpgF,SAASpU,OAAQ+qF,EAAUqJ,GAAazvE,GACtF,QACH,CACD+tE,EAAcnnF,KAAK6I,EAASggF,GAC/B,KACI,CACD,IAAIp0F,EAAS+qF,EAAU9qF,EAAI,GAAKmU,EAASnU,EAAI,GAAGD,OAASq0F,EACzD3B,EAAcnnF,KAAKwhF,GAAa6G,EAAax/E,EAAU22E,EAAWqJ,EAAWn0F,EAAGo0F,EAAYr0F,EAAQ,KAAMg0F,GAC7G,CACDrB,EAAepnF,KAAK8oF,EAAa1vE,EAASnV,EAC7C,CACJ,CACD2kF,CAAO//E,EAAU22E,EAAWt6E,EAAMs4E,EAAI,IAC9BgL,GAASC,GAAQtB,EAAeC,EAAgB3yF,EAC5D,CA6OqB,IAAIipF,GAAS,CAAEC,SAAS,ICzuD7C,IAAIuL,GAAY,EAoBVC,GACN,WAGI,SAAAA,EAKA9tF,EAKA2sF,EAIAoB,GAAUpgF,EAAA3O,KAAA8uF,GACN9uF,KAAKgB,IAAMA,EACXhB,KAAK2tF,KAAOA,EACZ3tF,KAAK+uF,SAAWA,EAIhB/uF,KAAKxC,GAAKqxF,IACb,CAqCAC,OApCLjgF,EAAAigF,EAAAhuF,KAAAA,CAAAA,CAAAA,IAAAvF,SAAAA,MAOI,SAAcoqB,GACV,GAAIA,aAAuC,EAASA,EAAOgoE,KACvD,MAAU,IAAApoF,MAAM,sCACpB,IAAIypF,EAAM,IAAIF,EAAI,GAAI,KAAM,IAE5B,GADAE,EAAIhuF,IAAI2E,KAAKqpF,GACTrpE,EAAMspE,CAAAA,IACkBC,EADlBD,EAAA55D,EACQ1P,EAAO3kB,KAArB,IAAA,IAAAiuF,EAAA35D,MAAA45D,EAAAD,EAAAzjF,KAAA+pB,MACI,CADK,IAAA5xB,EAACurF,EAAA3zF,MACNyzF,EAAIhuF,IAAI2E,KAAKhC,EAAG,CAAA,CAAA,MAAA8Y,GAAAwyE,EAAAvnF,EAAA+U,EAAA,CAAA,QAAAwyE,EAAA1yF,GAAA,CAAA,CACxB,OAAOyyF,CACV,GACLluF,CAAAA,IAAAvF,iBAAAA,MAYI,WACI,IAAI4zF,EAAM,IAAIC,GACd,OAAQJ,SAAAA,GACJ,OAAIA,EAAID,SAAS9tF,QAAQkuF,IAAQ,EACtBH,EACJI,GAASjrF,IAAI6qF,EAAIrB,MAAQqB,EAAKA,EAAID,SAASnrF,OAAOurF,GAAKj2E,MAAK,SAACjgB,EAAGC,GAAC,OAAKD,EAAEuE,GAAKtE,EAAEsE,EAAG,IACrG,CACK,KAAAsxF,CAEL,CAhEA,GAgEIO,GAAiB,EACfD,GACF,WAAA,SAAAA,IAAczgF,EAAAygF,KAAAA,GACVpvF,KAAKsvF,UAAY,GACjBtvF,KAAKxC,GAAK6xF,IACb,CAgBA,OAhBAxgF,EAAAugF,EAAAtuF,KAAAA,CAAAA,CAAAA,IAAAvF,MAAAA,MACD,SAAWoyF,EAAM4B,GACb,IAAKA,EAAKn1F,OACN,OAAOuzF,EACX,IAAI6B,EAASD,EAAK,GAAGD,UAAU1oC,MAAK,SAAAjjD,GAAK,OAAAA,EAAEgqF,MAAQA,IAcxC10F,EAd0Ds2F,EAcvDr2F,EAd6DyK,EAAEorF,SAe1E91F,EAAEmB,QAAUlB,EAAEkB,QAAUnB,EAAEsjC,OAAM,SAACtkC,EAAGoC,GAAM,OAAApC,GAAKiB,EAAEmB,EAAG,KAD/D,IAAmBpB,EAAGC,CAdyE,IACvF,GAAIs2F,EACA,OAAOA,EACX,IACkBC,EADdzuF,EAAM,GAAIguF,EAAM,IAAIF,GAAI9tF,EAAK2sF,EAAM4B,GAAMG,EAAAr6D,EAC/Bk6D,GAAI,IAAlB,IAAAG,EAAAp6D,MAAAm6D,EAAAC,EAAAlkF,KAAA+pB,MACI,CADMk6D,EAAAl0F,MACJ+zF,UAAU3pF,KAAKqpF,EAAK,CAAA,CAAA,MAAAvyE,GAAAizE,EAAAhoF,EAAA+U,EAAA,CAAA,QAAAizE,EAAAnzF,GAAA,CAC1B,IAC2BozF,EADvBC,EAWZ,SAAkB/xE,GAEd,IADA,IAAIgyE,EAAO,CAAC,IACHx1F,EAAI,EAAGA,EAAIwjB,EAAMzjB,OAAQC,IAC9B,IAAK,IAAI6tF,EAAI,EAAGxgF,EAAImoF,EAAKz1F,OAAQ8tF,EAAIxgF,EAAGwgF,IACpC2H,EAAKlqF,KAAKkqF,EAAK3H,GAAGtkF,OAAOia,EAAMxjB,KAGvC,OAAOw1F,EAAK32E,MAAK,SAACjgB,EAAGC,GAAM,OAAAA,EAAEkB,OAASnB,EAAEmB,MAAM,GAClD,CAnBsB01F,CAASP,GAAMQ,EAAA16D,EACVs4D,EAAK3sF,KAAxB,IAAA,IAAA+uF,EAAAz6D,MAAAq6D,EAAAI,EAAAvkF,KAAA+pB,MACI,CADK,IAAA5P,EAAMgqE,EAAAp0F,MACX,IAAKoqB,EAAOopE,SAAS30F,OAAM,CAAA,IACG41F,EADHC,EAAA56D,EACJu6D,GAAO,IAA1B,IAAAK,EAAA36D,MAAA06D,EAAAC,EAAAzkF,KAAA+pB,MACI,CADK,IAAAnsB,EAAM4mF,EAAAz0F,MACXyF,EAAI2E,KAAKypF,EAASjrF,IAAIwhB,EAAQvc,GAAQ,CAAC,CAAAqT,MAAAA,GAAAwzE,EAAAvoF,EAAA+U,WAAAwzE,EAAA1zF,GAAA,CAAA,CAAD,CAAC,CAAA,MAAAkgB,GAAAszE,EAAAroF,EAAA+U,EAAA,CAAA,QAAAszE,EAAAxzF,GAAA,CACnD,OAAOyyF,CACV,KAAAI,CAAA,CAnBD,GA2HiB,IAAI/L,GAgNzB,IAAM1/E,GAAImrF,GAAIoB,OACRC,GAAUxsF,KAAK7E,GAAO6E,KAAKysF,GAAWzsF,GAAE7E,IAAOuxF,GAAe1sF,GAAE7E,IAAOwxF,GAAU3sF,KAAK4sF,GAAS5sF,GAAE2sF,IAAUtN,GAASr/E,GAAE2sF,IAAUtvE,GAAUrd,KAAK6sF,GAAU7sF,GAAEqd,IAAUyvE,GAAU9sF,KAAK+sF,GAAW/sF,KAAKgtF,GAAchtF,KAAKitF,GAAUjtF,GAAEgtF,IAAcE,GAAOltF,KAqBxPmtF,GAAO,CAITX,QAAAA,GAIAY,YAAaptF,GAAEwsF,IAIfa,aAAcrtF,GAAEwsF,IAIhBc,WAAYttF,GAAEwsF,IAIdrxF,KAAAA,GAIAoyF,aAAcvtF,GAAE7E,IAIhBsxF,SAAUA,GAIVe,QAASxtF,GAAEysF,IAIXC,aAAcA,GAIde,cAAeztF,GAAE0sF,IAIjB/hE,UAAW3qB,GAAE7E,IAIbuyF,UAAW1tF,GAAE7E,IAIbqQ,UAAWxL,GAAE7E,IAIbwyF,UAAW3tF,GAAE7E,IAIbwxF,QAAAA,GAIAC,OAAAA,GAIAgB,UAAW5tF,GAAE4sF,IAIbrwE,UAAWvc,GAAE4sF,IAIbiB,eAAgB7tF,GAAE4sF,IAIlBvN,OAAAA,GAIAyO,QAAS9tF,GAAEq/E,IAIX0O,MAAO/tF,GAAEq/E,IAIT2O,KAAMhuF,GAAE2sF,IAIRsB,OAAQjuF,GAAE2sF,IAKVuB,OAAQluF,GAAE2sF,IAIV1gF,MAAOjM,GAAE2sF,IAITwB,IAAKnuF,GAAE2sF,IAIPG,QAAAA,GAKArwD,KAAMz8B,GAAE8sF,IAIRsB,KAAMpuF,GAAE8sF,IAIRuB,KAAMruF,GAAE8sF,IAIRwB,KAAMtuF,GAAE8sF,IAIRyB,SAAUvuF,GAAE8sF,IAIZ0B,gBAAiBxuF,GAAE8sF,IAInB2B,eAAgBzuF,GAAE8sF,IAIlB4B,kBAAmB1uF,GAAE8sF,IAKrB6B,cAAe3uF,GAAE8sF,IAIjBC,SAAAA,GAIA6B,cAAe5uF,GAAE+sF,IAIjB8B,mBAAoB7uF,GAAE+sF,IAItB+B,cAAe9uF,GAAE+sF,IAIjBgC,gBAAiB/uF,GAAE+sF,IAInBiC,gBAAiBhvF,GAAE+sF,IAInBkC,eAAgBjvF,GAAE+sF,IAIlBmC,mBAAoBlvF,GAAE+sF,IAItBoC,aAAcnvF,GAAE+sF,IAIhBqC,gBAAiBpvF,GAAE+sF,IAInBC,YAAAA,GAKA9oE,UAAWlkB,GAAEgtF,IAIbC,QAAAA,GAKAoC,aAAcrvF,GAAEitF,IAKhBqC,cAAetvF,GAAEitF,IAKjBsC,MAAOvvF,GAAEitF,IAKTuC,MAAOxvF,GAAEitF,IAIT5vE,QAAAA,GAIAwvE,QAAAA,GAIA4C,SAAUzvF,GAAE6sF,IAIZ6C,SAAU1vF,GAAE6sF,IAIZ8C,SAAU3vF,GAAE6sF,IAIZ+C,SAAU5vF,GAAE6sF,IAIZgD,SAAU7vF,GAAE6sF,IAIZiD,SAAU9vF,GAAE6sF,IAIZkD,iBAAkB/vF,GAAEqd,IAIpB3V,KAAM1H,GAAEqd,IAIR2yE,MAAOhwF,GAAEqd,IAIT4yE,SAAUjwF,GAAEqd,IAIZ6yE,OAAQlwF,GAAEqd,IAIV8yE,KAAMnwF,GAAEqd,IAKR+yE,UAAWpwF,GAAEqd,IAKbgzE,cAAerwF,GAAEqd,IAIjBizE,SAAUtwF,KAIVsB,QAAStB,KAITuwF,QAASvwF,KAITwwF,QAASxwF,KAITktF,KAAAA,GAKAuD,aAAczwF,GAAEktF,IAKhBwD,WAAY1wF,GAAEktF,IAKdyD,sBAAuB3wF,GAAEktF,IAMzBv3F,WAAYw1F,GAAIyF,iBAMhBC,SAAU1F,GAAIyF,iBAOdE,SAAU3F,GAAIyF,iBAMdG,SAAU5F,GAAIyF,iBAKd3rF,MAAOkmF,GAAIyF,iBASXI,QAAS7F,GAAIyF,mBAxjBjB,SAAwBzD,EAAMpxF,GAC1B,IACsBk1F,EADlBtnF,EAAM7U,OAAOC,OAAO,MAAMm8F,EAAAx/D,EACZy7D,GAAlB,IAAA,IAAA+D,EAAAv/D,MAAAs/D,EAAAC,EAAArpF,KAAA+pB,MAAwB,CAAA,IAAfj4B,EAAKs3F,EAAAr5F,MACV,GAAKqP,MAAMmS,QAAQzf,EAAM0xF,KACW,CAAA,IAEP8F,EAFOC,EAAA1/D,EAEhB/3B,EAAM0xF,KAAtB,IAAA,IAAA+F,EAAAz/D,MAAAw/D,EAAAC,EAAAvpF,KAAA+pB,MACI,CAAA,IADKy5D,EAAG8F,EAAAv5F,MACR+R,EAAI0hF,EAAIxxF,IAAMF,EAAW,KAAA,CAAC,OAAAmf,GAAAs4E,EAAArtF,EAAA+U,EAAA,CAAA,QAAAs4E,EAAAx4F,GAAA,CAAA,MAH9B+Q,EAAIhQ,EAAM0xF,IAAIxxF,IAAMF,EAAK,KAIhC,CAAA,CAAAmf,MAAAA,GAAAo4E,EAAAntF,EAAA+U,EAAAo4E,CAAAA,QAAAA,EAAAt4F,IACD,IAAAy4F,EAA4Bt1F,GAAW,CAAA,EAAjCmmF,EAAKmP,EAALnP,MAAKoP,EAAAD,EAAE1uE,IAAAA,OAAM,IAAH2uE,EAAG,KAAIA,CAiB3B,CAglByBC,CAAe,CACpC,CAAElG,IAAK8B,GAAKgD,KAAM7lE,MAAO,YACzB,CAAE+gE,IAAK8B,GAAKN,QAASviE,MAAO,eAC5B,CAAE+gE,IAAK8B,GAAK8C,SAAU3lE,MAAO,gBAC7B,CAAE+gE,IAAK8B,GAAK+C,OAAQ5lE,MAAO,cAC3B,CAAE+gE,IAAK8B,GAAKL,QAASxiE,MAAO,eAC5B,CAAE+gE,IAAK8B,GAAKkB,KAAM/jE,MAAO,YACzB,CAAE+gE,IAAK8B,GAAKa,KAAM1jE,MAAO,YACzB,CAAE+gE,IAAK8B,GAAKgB,IAAK7jE,MAAO,WACxB,CAAE+gE,IAAK8B,GAAKO,UAAWpjE,MAAO,iBAC9B,CAAE+gE,IAAK8B,GAAKmD,SAAUhmE,MAAO,gBAC7B,CAAE+gE,IAAK8B,GAAK7rF,QAASgpB,MAAO,eAC5B,CAAE+gE,IAAK8B,GAAKR,QAASriE,MAAO,eAC5B,CAAE+gE,IAAK8B,GAAKP,OAAQtiE,MAAO,cAC3B,CAAE+gE,IAAK8B,GAAK9N,OAAQ/0D,MAAO,cAC3B,CAAE+gE,IAAK,CAAC8B,GAAKc,OAAQd,GAAKe,OAAQf,GAAK6D,QAAQ7D,GAAKP,SAAUtiE,MAAO,eACrE,CAAE+gE,IAAK8B,GAAKI,aAAcjjE,MAAO,oBACjC,CAAE+gE,IAAK8B,GAAKloF,MAAMkoF,GAAKI,cAAejjE,MAAO,8BAC7C,CAAE+gE,IAAK8B,GAAKx3F,WAAWw3F,GAAKI,cAAejjE,MAAO,mCAClD,CAAE+gE,IAAK8B,GAAK6D,QAAQ7D,GAAKI,cAAejjE,MAAO,qBAC/C,CAAE+gE,IAAK8B,GAAKx3F,WAAWw3F,GAAKT,cAAepiE,MAAO,mCAClD,CAAE+gE,IAAK8B,GAAKV,SAAUniE,MAAO,gBAC7B,CAAE+gE,IAAK8B,GAAK3hF,UAAW8e,MAAO,iBAC9B,CAAE+gE,IAAK8B,GAAKxiE,UAAWL,MAAO,iBAC9B,CAAE+gE,IAAK8B,GAAKQ,UAAWrjE,MAAO,iBAC9B,CAAE+gE,IAAK8B,GAAKT,aAAcpiE,MAAO,oBACjC,CAAE+gE,IAAK8B,GAAKJ,SAAUziE,MAAO,gBAC7B,CAAE+gE,IAAK8B,GAAKX,QAASliE,MAAO,eAC5B,CAAE+gE,IAAK8B,GAAKD,KAAM5iE,MAAO,YACzB,CAAE+gE,IAAK8B,GAAKqD,QAASlmE,MAAO,eAC5B,CAAE+gE,IAAK8B,GAAKH,YAAa1iE,MAAO,qBCn3BpC,IAAMknE,GAAiBC,GAAelF,OAAO,CAC3C,CAAElB,IAAK8B,GAAKT,aAAczgF,MAAO,6BACjC,CAAEo/E,IAAK8B,GAAK9N,OAAQpzE,MAAO,sCAC3B,CAAEo/E,IAAK8B,GAAKa,KAAM/hF,MAAO,uCACzB,CAAEo/E,IAAK8B,GAAKP,OAAQ3gF,MAAO,sCAC3B,CAAEo/E,IAAK8B,GAAKL,QAAS7gF,MAAO,sCAGjBylF,GAAcC,GAAmBH,IAUxCI,GAAgBJ,GAAe73F,+/NCi7BO,IAAhByO,EAAI,IAAC3R,8FAIjBb,EAAY,cACXA,EAAa,WAChBA,EAAU,gBACLA,EAAe,mBACZA,EAAkB,WAC1BA,EAAU,WACVA,EAAU,eACNA,EAAa,gBACZA,EAAa,aAChBA,EAAa,kBACRA,EAAa,kMAHhBA,EAAa,+BACZA,EAAa,4BAChBA,EAAa,iCACRA,EAAa,icA0F9B6E,GAGKvB,EAAA6U,EAAArT,2EAjFA9E,EAAc,KAAAg5E,GAAAh5E,MAqCbA,EAAc,KAAAyX,GAAAzX,uIAvCwBA,EAAc,sBAA1D6E,GAAuFvB,EAAA8f,EAAAte,gIAA3C9E,EAAc,KAErDA,EAAc,8HAqCbA,EAAc,8SAJfg2D,EAAAzjC,GAASvyB,EAAQ,KAAA,GAAI8gB,IAA2B,gCA/B3Co5C,mEAEuCguB,GAC3ChnE,GACA,MAAA7W,MAAAA,yEAAAA,OAEyE69E,GACvEloF,EAAK,IAAAa,OACL,MAAA,eAIA8E,KAAM,cACN2zD,MAAO,yEACPQ,QAAS95D,EAAA,MAGT2F,KAAM,oBACN2zD,MAAO,wEACPQ,QAAS95D,EAAA,MAGT2F,KAAM,SACN2zD,MAAO,sCACPQ,QAAS95D,EAAA,cAGJA,EAAK,6JAGhB6E,GAEKvB,EAAA8f,EAAAte,2GA9B0CojF,GAC3ChnE,GACA,MAAA,MAAA,yEAAA7W,OAEyE69E,GACvEloF,EAAK,IAAAa,OACL,MAAA,kBAuBH6X,GAAA,KAAApY,EAAA,KAAA01D,KAAAA,EAAAzjC,GAASvyB,EAAQ,KAAA,GAAI8gB,IAA2B,KAAAlZ,GAAAmxB,EAAAi9B,+JAoB7CyE,GAAAz6D,EAAkB,KAAAA,EAAe,IAAA2oB,GAAgB3oB,EAAI,OAftDA,EAAS,IAAAmnD,GAAAnnD,KAITA,EAAc,KAAA61B,GAAA71B,yEAiCuCA,EAA2B,0MArChFA,EAAS,0HAITA,EAAc,+HAWb,MAAAM,EAAA,KAAAm6D,GAAAz6D,EAAkB,KAAAA,EAAe,IAAA2oB,GAAgB3oB,EAAI,wvBARjDk6D,GACGlzC,QAAAhnB,MAAegnB,gBACfhnB,EAAa,YACbA,EAAY,YACZA,EAAK,gGAHL,MAAAM,EAAA,KAAAm8D,EAAAz1C,QAAAhnB,MAAegnB,gCACfhnB,EAAa,+OAYlBw3B,KAAMwzC,GACNrlE,KAAM,SACN2zD,MAAO,6DACPQ,QAAS95D,EAAA,MAGTw3B,KAAMi/B,GACN9wD,KAAM,YACN2zD,MAAO,qBACPQ,QAAO95D,EAAA,cAGFA,EAAK,qHAZVw3B,KAAMwzC,GACNrlE,KAAM,SACN2zD,MAAO,6DACPQ,QAAS95D,EAAA,MAGTw3B,KAAMi/B,GACN9wD,KAAM,YACN2zD,MAAO,qBACPQ,QAAO95D,EAAA,8JA/FdA,EAAW,IAAAgnD,GAAAi1C,GAAAj8F,8EAuBWwS,EAAiB,IAACA,EAAI,IAAEA,EAAc,yDAD3DxS,EAAK,MAAA,2IAvBmCA,EAAW,qBAA3D6E,GA+GKvB,EAAA8f,EAAAte,wEA9GE9E,EAAW,wKAD8BA,EAAW,iIA7ShD,SAAAk8F,GAAalmF,UAElB1E,KAAM0E,EAAM1E,MAAQ,EACpBs4E,GAAI5zE,EAAM4zE,IAAM,EAChB5iE,QAAShR,EAAMgR,SAAW,GAC1B2yC,QAAS3jD,EAAM2jD,QACfrB,SAAUtiD,EAAMsiD,qCArgBhB6jC,EACAC,EACAC,EACAhT,EArCOtxD,EAAiBvd,EAAjBud,SACA0hD,EAAoBj/D,EAApBi/D,YACA6iB,EAAkB9hF,EAAlB8hF,UACAC,EAAoB/hF,EAApB+hF,YACAhjB,EAAwB/+D,EAAxB++D,gBACAC,EAA6Ch/D,EAA7Cg/D,kBACAzxD,EAA4BvN,EAA5BuN,YACAy0E,EAAehiF,EAAfgiF,QACAxzE,EAAgCxO,EAAhCwO,wBACAzF,EAAkB/I,EAAlB+I,OACA20C,EAA2B19C,EAA3B09C,UACAC,EAA4B39C,EAA5B29C,iBACAhgC,EAAkB3d,EAAlB2d,SACAyhD,EAA0Bp/D,EAA1Bo/D,aACA5yC,EAAkBxsB,EAAlBwsB,SACAqnC,EAAgB7zD,EAAhB6zD,QACAvV,EAAgBt+C,EAAhBs+C,QACAC,EAAcv+C,EAAdu+C,OACA6S,EAAkCpxD,EAAlCoxD,aACAiO,EAAwBr/D,EAAxBq/D,YACAC,EAAkCt/D,EAAlCs/D,iBAELhkE,EAAQH,GAAY,uBAEpB8mF,EAAuB,CAC3Bl1F,IAAK,QACLxI,IAAK29F,GACLnjD,MAAOojD,GACPp2F,gBAAgB,GAGZ0yE,EAA0B,oBAAX52E,OACrByT,EAAM,SAAUmjE,GAQZ,IAAA2jB,GAAiB,EAEjBvkC,EAAgB,GACdwkC,MAAwBC,GACxBC,MAA0BD,GAC1BE,MAA4BF,GAC5BG,MAAyBH,GACzBI,MAAuBJ,GAEzBr1E,EAAmB8xD,EACnB5zE,EAAOuiB,GAAQT,EAASM,EAAaxE,GAerC45E,EAAkCn0E,EAQtC/c,GAAOqsB,EAAAC,IAAAC,MAAA,SAAA4kE,IAAA7kE,OAAAA,IAAAhf,MAAA,SAAA8jF,iBAAAA,EAAAvkE,KAAAukE,EAAA9xF,MAAA,KAAA,EAAA,IACD0tE,EAAK,CAAAokB,EAAA9xF,oBAAA8xF,EAAA/pD,4BAKP+oD,EAAiBiB,GAAoB,CACnCh6F,OAAQ64F,EACRoB,YAAcC,GAAkB73F,EAAMi3F,GAElC,GADA91D,EAAczd,YAAY1jB,GAE9BoyB,SAAAA,EACAhQ,YAAAA,UAEK7E,GAEPtM,QAAQZ,MAAMkN,+CAIlB7W,IAAS,WACHgwF,IACFvmF,EAAM,6BACNumF,EAAel6F,cAIf,IAAAs1D,GAAU,EACVC,GAAU,EAERyhB,GAAc/2D,KACdg3D,GAAmBh3D,cAETtC,KACVu8E,IACFvmF,EAAM,SACNumF,EAAev8E,SAMf,IAAAk6D,IAAY,EAkBA,SAAA4D,GAAMrhD,GACpBzmB,EAAM,QAASymB,GAET,IAAA0gD,EAAe15D,EAAOS,MAAMre,GAC5B62B,EAAcC,EAAmBwgD,EAAc1gD,GAC/Cs7B,EAAOtuB,EAAgB0zC,EAAc1gD,UAC3CkhE,GAAoB,CAClB93F,KAAM4d,EAAOG,UAAU8Y,EAAa,KAAMzU,MAI1CL,KAAM8U,EACNygD,aAAAA,EACAplB,KAAAA,EACAC,KAAMv7B,YAIDmgE,QACP5mF,EAAM,UAEFiiB,eAKI,IAAArQ,EAAOnE,EAAOS,MAAMre,UAC1B83F,GAAoB,CAClB93F,KAAM4d,EAAOG,UAAUgE,EAAM,KAAMK,KAErCxJ,EAAA,EAAAg+E,GAAc,YAGPr5E,GACPmrD,EAAQnrD,qBAMHy5E,QACP7mF,EAAM,WAEFiiB,SACK,MAID,IAAArQ,EAAOnE,EAAOS,MAAMre,UAC1B83F,IACE93F,KAAM4d,EAAOG,UAAUgE,KAEzBnJ,EAAA,EAAAg+E,GAAc,IAEH,QACJr5E,GACPmrD,EAAQnrD,UAGE,WAGLw6E,QACP5nF,EAAM,WAEFiiB,MAKF0lE,GACE,CAAA93F,KAAMkgB,EAAWlgB,KAEnB4Y,EAAA,GAAAo/E,GAAa97E,IACbtD,EAAA,GAAAq/E,GAAiB,YACV16E,GACPmrD,EAAQnrD,IAmCI,SAAA09D,GAAkBid,GAIzB,IAHP55F,EAAE45F,EAAF55F,GACA0oE,EAAQkxB,EAARlxB,SACAjM,EAAWm9B,EAAXn9B,YACAxiD,EAAO2/E,EAAP3/E,YAGQ,IAAAwJ,EAAOnE,EAAOS,MAAMre,GAE1Bq0E,IAAY,EAEZF,EAAgB,CACd71E,GAAIA,GAAMm1E,GACV1xD,KAAAA,EACAilD,SAAUA,GAAQ,GAClBjM,YAAc,SAAAnkC,GACRmkC,EACFA,EAAW,CACTnkC,WAAAA,EACA7U,KAAAA,EACAm5D,gBAAiBpkD,EAAmB/U,EAAM6U,MAG5CzmB,EAAM,cAAeymB,GACrBqhD,GAAMrhD,KAGVre,QAAO,WACL87D,IAAY,EACZl6D,KACI5B,GACFA,aAICgF,GACPmrD,EAAQnrD,aA4FH46E,GAAah5F,EAAgBF,GACpCkR,EAAM,eAAkB,CAAAhR,OAAAA,EAAQF,KAAAA,IAE5By3F,GACFA,EAAe3tF,SACb2tF,EAAe7+E,MAAMtP,OAAM,CACzB4c,UAAS,CAAIhmB,OAAAA,EAAQF,KAAAA,GACrBmrD,gBAAgB,cAMfguC,GAAkB93F,EAAmB+3F,MAGD,IAAvCA,EAAKxgF,MAAMsN,UAAU6+D,OAAO9oF,OAAY,KACpC+pB,EAAQozE,EAAKxgF,MAAMsN,UAAU6+D,OAAO,GACpCsU,EAAet4F,EAAKvF,MAAMwqB,EAAMtZ,KAAMsZ,EAAMg/D,IAC9C,GAAiB,MAAjBqU,GAAyC,MAAjBA,EAAoB,CACxC,IAAAC,EAAQC,EAAcn6E,MAAMre,GAC5Bgf,EAAOzlB,OAAOyC,KAAKu8F,EAAME,UAAU/wC,MAAM,SAAA1oC,GAAI05E,IAAAA,EAE1C,OAAa,QAAbA,EADSH,EAAME,SAASz5E,GAChB3iB,aAAK,IAAAq8F,OAAA,EAAbA,EAAepV,OAAQr+D,EAAMtZ,QAEhCypB,EAAUmjE,EAAME,SAASz5E,MAE3BA,GAAQoW,GAAWA,EAAQ/4B,OAAS+4B,EAAQujE,SAC9CxoF,EAAM,mDAAoD6O,EAAMoW,GAGhE+iE,GAFe/iE,EAAQ/4B,MAAMinF,IAAM,EACtBluD,EAAQujE,SAASrV,IAAM,cAOnCsV,KACA,OAAAC,GAAOC,GAAkB,CAAA10F,MxG3gBI,MwG8gB7B,SAAAuzF,GAAoBoB,GAIhB,IAHXp7F,EAAMo7F,EAANp7F,OACAi6F,EAAWmB,EAAXnB,YACAxlE,EAAQ2mE,EAAR3mE,SACAhQ,EAAW22E,EAAX32E,YAOAjS,EAAM,2BAA8B,CAAAiiB,SAAAA,EAAUhQ,YAAAA,QAExCvK,EAAQmhF,GAAYx/F,OAAM,CAC9BuL,IAAK6yF,EACLzyE,UAAW8zE,GAAsBplB,GACjCqlB,WAAU,CACRC,GAAOC,GAAI,CAAAC,GAAevC,IAC1BI,EAAkBkC,GAAGR,MACrBU,KACAC,KACAC,KACAC,KACAvjB,KACAwjB,KACAC,KACAC,KACAZ,GAAYa,wBAAwBT,IAAG,GACvCU,KACA1D,GAAmB2D,GAAyB,CAAAC,UAAU,IACtDC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACApB,GAAOC,GAAE10F,GAAAA,OAAA4J,EACJksF,IAAmBlsF,EACnBmsF,IAAansF,EACbosF,IAAYpsF,EACZqsF,IAAarsF,EACbssF,IAAUtsF,EACVusF,IAAgBvsF,EAChBwsF,MAEL3E,GACA4E,GAAkB,CAAGC,iBAAiB,IACtCC,GAAWC,iBACT,CAAAC,SAAU/C,KAEZ6C,GAAWG,eAAehC,IAAI,SAAA7wF,OAC5Bm7E,EAAcn7E,EAAOsP,OAEjBtP,EAAO8yF,WACTC,KACS/yF,EAAOgzF,cAGhBC,QAGJC,KACA72D,GAAM,CACJrrB,KAAK,IAEP69E,EAAoBgC,GAAGJ,GAAY5mE,SAASgnE,GAAGhnE,IAC/CklE,EAAmB8B,GAAGJ,GAAYnC,QAAQuC,GAAGvC,IAC7CQ,EAAsB+B,GAAGsC,GAAiBt5E,IAC1Cm1E,EAAiB6B,GAAG6B,GAAWU,MAAK,CAAA,EAAA,CAAOC,KAAMC,QACjDZ,GAAWa,aACXC,aAIJrF,MAAqBuE,GAAU,CAC7BpjF,MAAAA,EACA4O,OAAQ9oB,aAUHk+F,KACA,QAAArF,GACH9kF,iBAAiB8kF,GAAewF,iBAAiB,eAAejyD,SAAS,QAItE,SAAAkyD,GAAsBhnC,OACrBj2C,EAAkBi2C,EAAlBj2C,KAAMqC,EAAY4zC,EAAZ5zC,QACN66E,EnGxaI,SAAiBl8F,EAAcgf,GAC7C,IACE,IAAMu5E,EAAQC,EAAcn6E,MAAMre,GAE5Bm8F,EAAcl9E,EAAmBD,GACjCoW,EAAUmjE,EAAME,SAAS0D,GAC/B,GAAI/mE,EACF,MAAO,CACLpW,KAAAA,EACA+B,KAAMqU,EAAQxzB,IAAMwzB,EAAQxzB,IAAImf,KAAOqU,EAAQ/4B,MAAQ+4B,EAAQ/4B,MAAM0kB,KAAO,EAC5EI,OAAQiU,EAAQxzB,IAAMwzB,EAAQxzB,IAAIuf,OAASiU,EAAQ/4B,MAAQ+4B,EAAQ/4B,MAAM8kB,OAAS,EAClFxV,KAAMypB,EAAQxzB,IAAMwzB,EAAQxzB,IAAI0hF,IAAMluD,EAAQ/4B,MAAQ+4B,EAAQ/4B,MAAMinF,IAAM,EAC1EW,GAAI7uD,EAAQgnE,OAAShnE,EAAQgnE,OAAO9Y,IAAMluD,EAAQujE,SAAWvjE,EAAQujE,SAASrV,IAAM,EAGzF,CAAC,MAAO/lE,GACPtM,QAAQZ,MAAMkN,EACf,CAED,MAAO,CACLyB,KAAAA,EACA+B,KAAM,EACNI,OAAQ,EACRxV,KAAM,EACNs4E,GAAI,EAER,CmG8YuCoY,CAAiBl7D,EAAczd,YAAY1jB,GAAOgf,UAGnFA,KAAAA,EACA+B,KAJUm7E,EAAJn7E,KAKNI,OALkB+6E,EAAN/6E,OAMZxV,KANwBuwF,EAAJvwF,KAOpBs4E,GAP4BiY,EAAFjY,GAQ1B5iE,QAAAA,EACAsxC,SAAUn4C,GAAmB4zD,QAC7Bpa,QAAO,aAIFsoC,GAAiBvpC,EAAwBF,GACxC,IAAA9xC,EAAoCgyC,EAApChyC,KAAMI,EAA8B4xC,EAA9B5xC,OAAQ9H,EAAsB05C,EAAtB15C,SAAUgI,EAAY0xC,EAAZ1xC,eAG9BrC,KAAI,GACJ+B,KAAAA,EACAI,OAAAA,EACAxV,KAAM0N,EACN4qE,GAAI5qE,EACJs5C,SAAUn4C,GAAmBnK,MAC7BgR,QAAAA,EACA2yC,QACEnB,IAAiBzgC,IAGTxyB,KAAM,cACNyO,wBAAa0pF,IAAY,IAG7B,MAcD,SAAAD,GAAqByE,GAAwC,IAAnBC,EAAWl5F,UAAApI,OAAAoI,QAAAzI,IAAAyI,UAAAzI,IAAAyI,UAAA,GACtDm5F,EAAUl6E,GAAQg6E,EAAYn6E,EAAaxE,GAC3Cs5D,GAAar9C,GAAQ0iE,EAAYz6E,GACjCs1D,EAAkBt1D,EACxBA,EAAUy6E,EACV3jF,EAAA,GAAA5Y,EAAOy8F,GAEPtsF,EAAM,uBAA0B,CAAA+mE,UAAAA,EAAWslB,YAAAA,IAEtC9F,IAAoBxf,GAAcslB,KAIlC3E,GAAkB73F,EAAMi3F,IAG3BP,EAAe3tF,SAAQ,CACrB2zF,QAAO,CACL/wF,KAAM,EACNs4E,GAAIyS,EAAe7+E,MAAM9S,IAAI7J,OAC7BgE,OAAQiiC,EAAczd,YAAY1jB,MAKxC28F,KACIzlB,GACFS,GAAa71D,EAASs1D,IAkBjB,SAAA6hB,GACP9zE,GAEO,OAAAoW,GAAgBpW,GAAay3E,GAAgBC,SAAS13E,QAAatqB,WAO/CiiG,YAAAA,GAAAnqE,EAAAC,IAAAC,2FAC3B1iB,EAAM,oBAIA4sF,KAAW,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAApvD,OAAAqvD,GAAAA,uCAiBVC,KACH,GAAqBxG,EAArB,CAIE,IAAAyG,EA5ICzG,EAAiBv1D,EAActd,cAAc6yE,EAAe7+E,MAAM9S,IAAImf,YAAc,GA8IrFgzD,EAAYimB,IAAmBn9F,KACrCmQ,EAAM,0BAAyB,CAAI+mE,UAAAA,IAC9BA,GAIC,IAAAE,EAAkBt1D,EACxBlJ,EAAA,GAAA5Y,EAAOm9F,GACPr7E,GAAY9hB,KAAAA,GAEZ28F,KACAhlB,GAAa71D,EAASs1D,GAOtBpvE,KAAOF,KAAK0zF,eA6CCuB,YAAWK,GAAA/uF,MAAA/K,KAAAA,UAAA85F,CAAAA,SAAAA,YAAAA,GAAAzqE,EAAAC,IAAAC,0GAGlB7qB,YAEF0uF,IACIkF,EAAOC,KACb1rF,EAAM,cAAa,CAAIyrF,KAAAA,IAEvBlF,EAAe3tF,SAAQ,CACrBs0F,QAAO,CAAG9F,EAAiB+F,YAAYrC,GAAWU,MAAK,GAAA,CAAOC,KAAAA,2EAK3D,SAAAF,GAAiBt5E,GACjB,OAAAm7E,GAAWnE,GAA0B,iBAAhBh3E,EAA2B,IAAIo7E,OAAOp7E,GAAeA,YAG1Eu6E,KACP/jF,EAAA,GAAAk5C,EAAU2rC,GAAU/G,EAAe7+E,OAAS,GAC5Ce,EAAA,GAAAm5C,EAAU2rC,GAAUhH,EAAe7+E,OAAS,GAE5C1H,EAAK,CAAG2hD,QAAAA,EAASC,QAAAA,IAhmBnBrrD,IAAS,WACPqB,QAGFirD,GAAkB,CAChB1sD,QAAAA,GACAI,UAAAA,GACAmf,UAAS,WAAQA,OAAAA,GAAU4wE,EAC3Bx1D,EAAAA,SAAQ,WAAS,OAAAozC,IAAa51E,SAASwiC,YAAejb,GAAuBywE,EAC7EtjC,EAAAA,QAAAA,EACAC,OAAM,WACJrrD,KACAqrD,OA6lBE,IAAAkoC,GAAmC51C,GACvCw3C,GxGh1BoC,cwGo1B7Bn1F,KACPuzF,GAAiCvzF,iBAG1B4vE,GAAa71D,EAAkBs1D,GAClC5kD,GACFA,EAAS1Q,EAASs1D,EAAe,CAC/B/gB,cAAe0gB,KACfhH,YAAa,gBAKVyrB,KACPn6D,EAAQ3tB,EAAA,CACNvQ,KAAMmX,GAActa,MACjB0jF,EAAYv+D,UAAUw4E,oBAIpB9F,GAAkB73F,EAAci3F,GAEhC,QADUj3F,GAAOA,EAAK9E,OAASqgB,KAClB07E,EAGlB,IAAAe,GAAa97E,GAEb+7E,GAAoC,cAE/Ba,QACHjB,GAAkB73F,EAAMi3F,YAItB,IAAA5gC,EAAgB0gB,KAElB,OAAA3gB,GAAoBC,GAGd,CAAAkgC,GAAa+F,GAFgBjmC,EAA7BtD,WAA6BsD,EAAjBxD,gBAKlByD,GAA0BD,GACrBA,EAAc3D,iBAAiBtkD,IAAI6tF,IAAuB7tF,IAAImoF,gBAMzDxf,KACd5mE,EAAM,kBAENpI,KAEM,IAAAsuD,EAAgBunC,GACpBz8D,EAAczd,YAAY1jB,GAC1BuyD,EACA30C,EACA40C,UAGE4D,GAAoBC,SACtB2hC,GAAa3hC,EAAcxD,aAAe12C,GxGv1Bb,gBwGw1B7B87E,GAAiB5hC,EAActD,iBAC/BL,EAAgB,MAEhB95C,EAAA,GAAAo/E,GAAa97E,IACbtD,EAAA,GAAAq/E,GAAiB,WACjBvlC,GAAmB2D,eAAAA,EAAe3D,mBAAgB,KAGpDviD,EAAM,gBAECkmD,MAKHunC,GAAuBhnB,GAAWnkB,aAE/BorC,KACH5F,IA/cG,SAAuBllC,GAC9B5iD,EAAM,qBAAsB4iD,GAEtB,IAAA+qC,EAAiBxB,GAAiBvpC,GAAY,GAOpDolC,GANoC,MAAvB2F,EAAenyF,KAAemyF,EAAenyF,KAAO,EACjC,MAArBmyF,EAAe7Z,GAAa6Z,EAAe7Z,GAAK,GAO3D9pE,KAocE4jF,CAAuB9F,QAIrB+F,GAAkB,CACtBnsE,KAAMosE,GACNj+F,KAAM,UACN2zD,MAAO,mCACPQ,QAAS0pC,+5BAzwBR18D,EAAgBje,GAA4B,CAC7CE,yBAAyB,EACzBC,wBAAAA,+BAGCy0E,GAAqBlkB,oBAihBf,SAAuBC,GACzB,GAAAt4C,GAAgBs4C,GAAhB,KAIC1uD,EAAY8zE,GAAsBplB,IACpC6iB,IAAkBvxE,GAAeu+D,GAAgBA,EAAYv+D,UAAU+4E,GAAG/4E,KAC5EhV,EAAM,yBAA0BgV,GAGhCuxE,EAAe3tF,SAAQ,CAAGoc,UAAAA,MA1hB3By4D,CAAuB/J,qBA0lBjB,SAAathB,GACpBpiD,EAAM,eAAgBoiD,GAEjBmkC,GAILA,EAAe3tF,SAAQ,CACrBs0F,QAASnG,EAAkBoG,YAAY1E,QAjmBxCuF,CAAa5rC,oBAqmBP,SAAkBnwC,GACrBs0E,IACFvmF,EAAM,oBAAqBiS,GAE3Bs0E,EAAe3tF,SAAQ,CACrBs0F,QAAShG,EAAsBiG,YAAY5B,GAAiBt5E,OAzmB/Dg8E,CAAkBh8E,oBA8mBZ,SAAcy0E,GACjBH,IACFvmF,EAAM,gBAAiB0mF,GAEvBH,EAAe3tF,SAAQ,CACrBs0F,QAAS/F,EAAmBgG,YAAYtE,GAAYnC,QAAQuC,GAAGvC,OAlnBlEwH,CAAcxH,oBAunBR,SAAezkE,GAClBskE,IACFvmF,EAAM,iBAAkBiiB,GAExBskE,EAAe3tF,SAAQ,CACrBs0F,QAAO,CAAGjG,EAAoBkG,YAAYtE,GAAY5mE,SAASgnE,GAAGhnE,QA3nBrEksE,CAAelsE,yBAKZolE,IAAoCn0E,IACtCzK,EAAA,GAAA4+E,EAAkCn0E,GAuiBpClT,EAAM,kBAAiB,CAAIkT,wBAAAA,IAEvBqzE,GACFA,EAAe3tF,SAAQ,CACrB2zF,QAAO,CACL/wF,KAAM,EACNs4E,GAAIyS,EAAe7+E,MAAM9S,IAAI7J,OAC7BgE,OAAQiiC,EAAczd,YAAY1jB,mDA8MvCu+F,EACDvG,KAAe77E,IAA2BiW,GAUrC4rE,MAPGnsE,KAAMomC,GACNj4D,KAAM,cACN2zD,MAAO,4BACPQ,QAAS4jC,IAEXiG,4DAtmBI,IAAAQ,MAbNpsE,MAKI,IAAArQ,EAAOnE,EAAOS,MAAMre,GAE1Bq0E,IAAY,EAEZH,EAAW,CACT51E,GAAIk1E,GACJzxD,KAAAA,EACAilD,SAAQ,GACRlM,QAAM0jC,EAAA7rE,EAAAC,IAAAC,2FAAW+D,EAAU6nE,EAAV7nE,WACfzmB,EAAM,SAAUymB,GAChBqhD,GAAMrhD,GAAU,wBAAA8nE,EAAA9wD,OAAA+wD,GAAAA,oDAElBpmF,QAAO,WACL87D,IAAY,EACZl6D,cAGGoD,GACPmrD,EAAQnrD,gBAgDN6U,GAIJ6oD,IACEjU,SAAQ,iBAKN0vB,IAEEF,GAAiBA,EAAc9kC,cAAc,cAC/CktC,GAAiBlI,GAEjBmI,GAAgBnI,gBAMhBtkE,GAIAskE,IACFxkC,GAAKwkC,GACLv8E,kBAKEiY,GAIAskE,IACFvkC,GAAKukC,GACLv8E,kBAKFvB,EAAA,EAAAq+E,GAAiB,GACjBa,GAAqBlkB,GAAiB,eAItCK,EAAa55D,GAAK0qE,kBAKlBmY,MAGO,SAA4BjoC,GACnC9kD,EAAM,0BAA2B8kD,GAEzB,IAAA6pC,EAAa7C,GAAsBhnC,GAAnCtpD,EAAImzF,EAAJnzF,KAAMs4E,EAAE6a,EAAF7a,GACD,OAATt4E,GAAwB,OAAPs4E,IAOrBkU,GAAaxsF,EAAMs4E,GAEnB9pE,8DAgQ2B,OAAA2iF,GAAAzuF,MAAA/K,KAAAA,uEAsQ4CkzF,EAAap8E,OAsE1D,WAAA,OAAAxB,EAAA,EAAAg+E,GAAc,EAAK,qDAhGuBH,EAAWr8E,QD36BnF67E,GAAe73F,MAAQ,SAACwzF,GAAI,OAAKyE,GAAczE,GAAQ,GAAG,qmCEApD73B,EAuDA31B,EAjEOriB,EAAyBlN,EAAzBkN,KACAqQ,EAAiBvd,EAAjBud,SACAwzC,EAA0B/wD,EAA1B+wD,aACA9K,EAAkBjmD,EAAlBimD,OACAC,EAAuBlmD,EAAvBkmD,YACA+C,EAA0CjpD,EAA1CipD,cACAiI,EAAkBlxD,EAAlBkxD,OACAC,EAAkBnxD,EAAlBmxD,OACAC,EAAkCpxD,EAAlCoxD,8YAGVrtD,EAAA,GAAEmhD,EAAgB3nC,EAkDX,CAAA,CAAAjvB,KAAM,YA/CNA,KAAM,SACN0uB,KAAM0qC,GACN5I,MAAO,OACPvkC,UAAW,WACX+kC,QAAS2G,EACT7lD,SAAUmd,QAAqBv3B,IAATknB,IAGtB5e,KAAM,SACN0uB,KAAM2qC,GACN7I,MAAO,6CACPvkC,UAAW,gBACX+kC,QAAS4G,EACT9lD,SAAUmd,QAAqBv3B,IAATknB,IAGtB5e,KAAM,SACN0uB,KAAMu0C,GACNzS,MAAO73C,GACPsT,UAAW,kBACX+kC,QAAS2J,GAGT,CAAA36D,KAAM,cAGNA,KAAM,SACN0uB,KAAMw0C,GACN1S,MAAO,gBACPvkC,UAAW,WACX+kC,QAAS4R,EACT9wD,UAAW2wD,EAAa9T,UAGxB3uD,KAAM,SACN0uB,KAAMy0C,GACN3S,MAAO,sBACPvkC,UAAW,WACX+kC,QAAS6R,EACT/wD,UAAW2wD,EAAa7T,SAGxB,CAAA5uD,KAAM,4BAUXyV,EAAA,EAAAwrB,EAAQ6hC,EAAalM,oVC/B0BvwC,EAAA,CAAAnvB,KAASwB,OAAjC0X,EAAAlZ,KAASwJ,sDAAe4lB,EAAAnc,GAAAkc,EAAA,CAAA9b,GAAArT,KAASwB,wMAAjC,GAAA,EAAAlB,GAAA4Y,KAAAA,EAAAlZ,KAASwJ,WAAS,+KAAMyJ,GAAAkc,EAAA,CAAA9b,GAAArT,KAASwB,sKADrD,QAAA2iE,EAAAnkE,KAASwJ,6GAAT,EAAAlJ,GAAAT,GAAAskE,EAAAA,EAAAnkE,KAASwJ,iNADVxJ,EAAS,iBAAda,OAAIC,GAAA,0RAACd,EAAS,YAAda,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,2JAnCO6jB,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACA4K,EAA0B4N,EAA1B5N,QACAwvB,EAAsB5hB,EAAtB4hB,cACAtR,EAA+BtQ,EAA/BsQ,UACAmhB,EAAiDzxB,EAAjDyxB,2BAEFkvC,EAAY5+C,EAA+BshD,UAI3CjxE,EAAQorB,QhFkuBH,SAA4BuE,EAAkC7U,GAC5E,OAAO6U,EAAWmoE,SAAQ,SAAC9nE,GACzB,GAAIK,EAAmBL,GAAY,CACjC,IAAMjY,EAAOG,EAAiB8X,EAAUjY,MACxC,GAAIA,EAAK9jB,OAAS,EAAG,CAInB,IAHA,IAAM8jG,EAA2C,CAAC/nE,GAE9CsB,EAAaC,EAAQxZ,GAClBuZ,EAAWr9B,OAAS,IAAMy+B,EAAS5X,EAAMwW,IAC9CymE,EAAmBpT,QAAQ,CACzBt5D,GAAI,MACJtT,KAAMC,EAAmBsZ,GACzBl8B,MAAO,CAAE,IAGXk8B,EAAaC,EAAQD,GAGvB,OAAOymE,CACR,CACF,CAED,OAAO/nE,CACT,GACF,CgF1vB2BgoE,CAA4BroE,EAAY3vB,EAAQk2D,WAAY+a,+RAGlFt/D,EAAA,EAAAwvB,GAAanhC,EAAQmrB,UAAY6I,GAAiB9V,IAAcmZ,GAAmBnZ,oBAEnFvM,EAAA,EAAAyvB,EAAYphC,EAAQw3D,cAAa,CAClCz/C,KAAAA,EACA3iB,MAAAA,EACA+1B,SAAUnrB,EAAQmrB,SAClBqE,cAAAA,EACA2R,UAAAA,EACAxqB,OAAQ3W,EAAQ2W,OAChBujB,cAAel6B,EAAQk6B,cACvBhc,UAAAA,EACAmhB,kBAAAA,EACAjU,QAASmjD,EACTp0C,YAAan6B,EAAQm6B,YACrBC,SAAUp6B,EAAQo6B,SAClBvB,OAAQ74B,EAAQ64B,OAChBwB,eAAgBr6B,EAAQq6B,eACxBnnB,MAAOlT,EAAQkT,y1BCvBhByS,GAA+B,QAAvBsyE,EAAC7kG,EAAO,GAAA0jB,UAAU1jB,EAAK,WAAA,IAAA6kG,EAAAA,EAAK,G3GNA,I2GM2B,wIAH5C7kG,EAAU,qBAHhC6E,GAOQvB,EAAA2V,EAAAnU,4FADLytB,GAA+B,UAAtBvyB,EAAO,GAAA0jB,UAAU1jB,EAAK,WAAA,IAAA8kG,EAAAA,EAAK,G3GNA,I2GM2B,KAAAl9F,GAAAwC,EAAAwiC,4BAH5C5sC,EAAU,wEAVnB2kB,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACAuhB,EAAkB/I,EAAlB+I,OACAwhF,EAAmBvqF,EAAnBuqF,WACAC,EAAgCxqF,EAAhCwqF,sMAOQ,WAAA,OAAAA,EAAOrgF,EAAI,o4BC8Bd3kB,EAAa,KAAKqgB,GAAc6B,IAAMi8C,GAAc8mC,mJADDjlG,EAAiB,GAAA,4BAAlF6E,GAEMvB,EAAAqpC,EAAA7nC,4DADQ9E,EAAa,KAAKqgB,GAAc6B,IAAMi8C,GAAc8mC,6DADDjlG,EAAiB,GAAA,uLAHjFuyB,GAASvyB,EAAU,G5G7BkB,I4G6BU,GAE7CuX,OAAkB/W,IAAlBR,MAA2BmZ,GAAAnZ,gMALxBA,EAAQ,GAA6DA,EAAU,GAApEA,KAAa,gEAFZA,EAAQ,qBAH9B6E,GAeQvB,EAAA2V,EAAAnU,GARNzB,GAEM4V,EAAA0zB,0DALI3sC,EAAU,6DAIjBuyB,GAASvyB,EAAU,G5G7BkB,I4G6BU,KAAA4H,GAAAqxB,EAAAisE,QAE3B1kG,IAAlBR,kIALGA,EAAQ,GAA6DA,EAAU,GAApEA,KAAa,6FAFZA,EAAQ,sIA3BjB2kB,EAAcnK,EAAdmK,KACAgW,EAAiCngB,EAAjCmgB,aACA5C,EAAiBvd,EAAjBud,SACA0oC,EAA4CjmD,EAA5CimD,oNAGVliD,EAAA,EAAE4mF,EAAcrzE,EAAQnN,GAAkC,SAA1BsM,GAAkBtM,oBAElDpG,EAAA,EAAEm2C,EACD/5B,GAAgB6E,GAAQ7a,EAAkB,QAAdygF,EAAEzqE,SAAAyqE,IAAYA,OAAZA,EAAAA,EAAczgF,MAAQgW,EAAa+5B,mBAAgBl0D,iBAClF+d,EAAA,EAAE8mF,EAAoB3wC,EAAgBzyC,GAAqByyC,QAAiBl0D,wBAGvEu3B,GAIJ0oC,EAAM,CACJ97C,KAAAA,EACA+vC,cAAeA,IAAkBr0C,GAAc6B,IAAM7B,GAAc8B,KAAO9B,GAAc6B,kBC9B1FojF,GACA74F,2KAaY,SAAAu3C,GAAehgD,EAAkBuhG,GAgB/C,OAfKD,KACH74F,GAAY,IAAIg/E,QAChB6Z,GAAW,IAAIpjD,gBAAe,SAACwB,GAAW,IACb8hD,EADaC,EAAA3pE,EACpB4nB,GAAO,IAA3B,IAAA+hD,EAAA1pE,MAAAypE,EAAAC,EAAAxzF,KAAA+pB,MAA6B,CAAA,IAAlByL,EAAK+9D,EAAAxjG,MACRujG,EAAW94F,GAAU7B,IAAI68B,EAAMnkC,QACjCiiG,GACFA,EAAS99D,EAAMnkC,OAElB,CAAA,CAAA4f,MAAAA,GAAAuiF,EAAAt3F,EAAA+U,EAAA,CAAA,QAAAuiF,EAAAziG,GAAA,CACH,KAGFyJ,GAAUhF,IAAIzD,EAASuhG,GACvBD,GAAS7hD,QAAQz/C,GAEV,CACL7B,QAAS,WACPsK,GAAgB,OAACzI,GACjBshG,GAASphD,UAAUlgD,EACpB,EAEL,uFCkNOhE,EAAO,GAAG,0EAAuEQ,4KAAjFR,EAAO,GAAG,0EAAuEQ,oKA9KlFk/D,EA3COh4C,EAAyBlN,EAAzBkN,KACA6S,EAA4B/f,EAA5B+f,cACAhX,EAAkB/I,EAAlB+I,OAEAo8C,EAAgBnlD,EAAhBmlD,QAEA1B,EAA8BzjD,EAA9ByjD,mBACA2B,EAAgDplD,EAAhDolD,oBACAE,EAAuBtlD,EAAvBslD,YACA4lC,EAAqBlrF,EAArBkrF,UACA3lC,EAAiCvlD,EAAjCulD,sBACAC,EAAgCxlD,EAAhCwlD,MACAC,EAAiCzlD,EAAjCylD,OACAt6B,EAAmBnrB,EAAnBmrB,QACAu6B,EAAoB1lD,EAApB0lD,SACA0V,EAA0Bp7D,EAA1Bo7D,eACAI,EAA6Bx7D,EAA7Bw7D,kBACAE,EAA4B17D,EAA5B07D,iBACAK,EAAuB/7D,EAAvB+7D,wwBAERh4D,EAAA,GAAAuM,EAAYyP,EAAczP,yBAE1BvM,EAAA,GAAAqiD,OAAmBpgE,IAATknB,wBACZnJ,EAAA,GAAEsiD,IAAiB/1C,6BACjBi2C,OAAsBvgE,IAATknB,GAAsBoD,EAAYyQ,EAAM7T,EAAM2Z,GAAavW,SAActqB,wBAEtF+d,EAAA,GAAA2lB,EACD08B,IACC//B,GAAiB/V,IAAc6V,GAAe7V,IAAc8V,GAAiB9V,0BAE/EvM,EAAA,GAAE6iD,EAAeR,GAAwB,MAAb91C,GAAqBuY,GAAmBvY,8BAClEu2C,EAAmBD,IAAiBz+C,GAAgBo+C,yBAEtDxiD,EAAA,GAAE6d,EACY,MAAbtR,QAAoCtqB,IAAfugE,GACjBrhC,GACEqhC,EACAxmC,EAAcE,iBACd7V,EAAmByc,GAAavW,IAChCvH,8BAKLm8C,EAAY,CACX,CAAA52D,KAAM,cAENA,KAAM,MACNihC,MAAK,EAEDjhC,KAAM,SACNihC,MAAK,CACD,CAAAjhC,KAAM,QAASnD,KAAM,gBAErBmD,KAAM,kBACN81D,KAAI,CACF91D,KAAM,SACNgxD,mBAAe,OAAAgG,GAAW,EAC1BtoC,KAAMoqC,GACNj8D,KAAM,OACN2zD,MAAO,6CACP1+C,UAAWwmD,GAEb5iD,MAAO,OACPurB,MAAK,EAEDjhC,KAAM,SACN0uB,KAAMoqC,GACNj8D,KAAM,OACN2zD,MAAO,6CACPQ,mBAAe,OAAAgG,GAAW,EAC1BllD,UAAWwmD,IAGXt4D,KAAM,SACN0uB,KAAM4E,EAAgBzE,GAAgBC,GACtCjyB,KAAM,iBACN2zD,MAAO,uEACPQ,mBAAe,OAAAiG,GAAqB,EACpCnlD,UAAWymD,MAKfv4D,KAAM,kBACN81D,KAAI,CACF91D,KAAM,SACNgxD,QAAO,WAAA,OAAQkG,GAAM,EAAI,EACzBxoC,KAAMqqC,GACNl8D,KAAM,MACN2zD,MAAO,6DACP1+C,UAAWspB,GAEb1lB,MAAO,OACPurB,MAAK,EAEDjhC,KAAM,SACN0uB,KAAMqqC,GACNl8D,KAAM,gBACN2zD,MAAO,6DACPQ,QAAO,WAAA,OAAQkG,GAAM,EAAI,EACzBplD,UAAWspB,IAGXp7B,KAAM,SACN0uB,KAAMqqC,GACNl8D,KAAM,gBACN2zD,MAAO,4DACPQ,QAAO,WAAQ,OAAAkG,GAAM,EACrBplD,EAAAA,UAAWspB,MAKfp7B,KAAM,kBACN81D,KAAI,CACF91D,KAAM,SACNgxD,QAAO,WAAQ,OAAAmG,GAAO,EACtBzoC,EAAAA,KAAMsqC,GACNn8D,KAAM,OACN2zD,MAAO,8DACP1+C,UAAWspB,GAEb1lB,MAAO,OACPurB,MAAK,EAEDjhC,KAAM,SACN0uB,KAAMsqC,GACNn8D,KAAM,iBACN2zD,MAAO,8DACPQ,QAAO,WAAQ,OAAAmG,GAAO,EACtBrlD,EAAAA,UAAWspB,IAGXp7B,KAAM,SACN0uB,KAAMsqC,GACNn8D,KAAM,iBACN2zD,MAAO,6DACPQ,QAAO,WAAA,OAAQmG,GAAO,EAAK,EAC3BrlD,UAAWspB,MAKfp7B,KAAM,SACNgxD,mBAAe,OAAAn0B,GAAO,EACtBnO,KAAMuqC,GACNp8D,KAAM,QACN2zD,MAAO,oCACP1+C,UAAWimD,IAGX/3D,KAAM,SACNgxD,mBAAe,OAAAoG,GAAQ,EACvB1oC,KAAM4qC,GACNz8D,KAAM,SACN2zD,MAAO,oCACP1+C,UAAWspB,MAKfp7B,KAAM,SACNihC,MAAK,CACD,CAAAjhC,KAAM,QAASnD,KAAM,eAErBmD,KAAM,SACNgxD,mBAAe,OAAA4rC,GAAS,EACxBluE,KAAMoqC,GACNj8D,KAAM,WACN2zD,MAAO,uBACP1+C,UAAWspB,IAGXp7B,KAAM,SACNgxD,mBAAe,OAAA8b,GAAc,EAC7Bp+C,KAAMwqC,GACNr8D,KAAM,gBACN2zD,MAAO,4BACP1+C,UAAWimD,IAGX/3D,KAAM,SACNgxD,mBAAe,OAAAkc,GAAiB,EAChCx+C,KAAM8qC,GACN38D,KAAM,gBACN2zD,MAAO,sCACP1+C,UAAWimD,IAGX/3D,KAAM,SACNgxD,mBAAe,OAAAoc,GAAgB,EAC/B1+C,KAAM8qC,GACN38D,KAAM,eACN2zD,MAAO,qCACP1+C,UAAWimD,IAGX/3D,KAAM,SACNgxD,mBAAe,OAAAyc,GAAW,EAC1B/+C,KAAM4qC,GACNz8D,KAAM,aACN2zD,MAAO,qBACP1+C,UAAWimD,4BAQpBtiD,EAAA,EAAAwrB,EAAQ61B,EAAoBF,ipFClLX,IAAAimC,EAAAnzF,KAAWA,EAAe,sEATvCxS,EAAY,SAAC,qGAAbA,EAAY,oFAJK,sOAQd,0JAF2B,sHAC0D,gCAAb6E,GAAavB,EAAA3D,EAAAmF,kGAa9E0iE,EAAAv2C,GAAkBjxB,EAAe,KAAA,KACLA,EAAK,IAAA,GAAG4lG,EAAU,IAAV5lG,EAAU,IAAI,QAAU,gFADtEA,EAAM,SAAC,mBAAsC,iCACT,iCAAyC,uJANhF6E,GAOQvB,EAAA2V,EAAAnU,mCADNzB,GAAqF4V,EAAA0zB,wGADpF3sC,EAAM,IAAI,EAAAM,GAAAknE,KAAAA,EAAAv2C,GAAkBjxB,EAAe,KAAA,KAAA4H,GAAAsxB,EAAAsuC,eACLxnE,EAAK,IAAA,KAAA4H,GAAAytC,EAAAwwD,GAAG,EAAAvlG,GAAAslG,KAAAA,EAAU,IAAV5lG,EAAU,IAAI,QAAU,SAAM4H,GAAA6tC,EAAAmwD,oHArB1E5lG,EAAe,GAAAyX,wCAMf,OAAAzX,OAAoBA,EAAQ,GAAAmZ,iCAM5BnZ,EAAgB,iBAArBa,OAAIC,GAAA,qGAdgCd,EAAY,iHA2B/CA,EAAM,SAAC,waA/Bd6E,GAoCKvB,EAAAg4D,EAAAx2D,GAnCHzB,GAAmCi4D,EAAA5jD,WAEnCrU,GA8BKi4D,EAAAhjD,GA7BHjV,GAAwDiV,EAAAT,mBACxDxU,GAYKiV,EAAAH,oGAaL9U,GAEQiV,EAAAW,2BAGV5V,GAAkCi4D,EAAAF,kFA/BMp7D,EAAY,4IAc3CA,EAAgB,YAArBa,OAAIC,GAAA,EAAA,8GAAJD,mBAaCb,EAAM,oGAvDP8lG,EATOngG,EAAwB6U,EAAxB7U,KACA+hB,EAAyBlN,EAAzBkN,KACAqQ,EAAiBvd,EAAjBud,SACAxU,EAAkB/I,EAAlB+I,OACA66D,EAA6C5jE,EAA7C4jE,oBACAxE,EAA0Bp/D,EAA1Bo/D,0SAER5f,EAASjiC,EAAW,OAAS,yBAG/BxZ,EAAA,EAAEunF,EAAmBp+E,WrBgdSA,GAA2B,IAAZq+E,EAAQ98F,UAAApI,eAAAL,IAAAyI,UAAA,GAAAA,UAAA,GAAG,EACnDzH,EAAoB,GAgB1B,OAdA,SAASgnB,EAAQxmB,EAAgB2iB,GAC3BwY,EAAan7B,IAAU2iB,EAAK9jB,OAASklG,GACvC7mG,OAAOyC,KAAKK,GAAO1C,SAAQ,SAACiI,GAC1BihB,EAAQxmB,EAAMuF,GAAMod,EAAKta,OAAO9C,GAClC,IAGE61B,EAAYp7B,IACdR,EAAM4K,KAAKuY,EAEd,CAED6D,CAAQd,EAAM,IAEPlmB,CACT,CqBjeMwkG,CAAiBt+E,GACdtnB,MAAM,EAAG,IACToL,QAAQ,SAAAmZ,GAAS,OAAAA,EAAK9jB,OAAS,CAAC,sBAEpC0d,EAAA,EAAA0nF,GAAmBn0E,EAAQg0E,qBAC3BvnF,EAAA,EAAA2nF,OAA2B1lG,IAATknB,IAAgC,KAAT/hB,QAAwBnF,IAATmF,qBAE1D4Y,EAAA,EAAE4nF,EAAeF,EACd,4BACAC,EACE,oBACA/oE,EAAazV,GACX,YACA0V,EAAY1V,GACV,sBAAgBrd,OACXiZ,GAAUoE,EAAMnE,uBAEtB,SAAW6iF,GACV,OAAA7qE,EAAM7T,EAAM0+E,GAA8BvlG,cA4B9B,SAAAulG,GAAA,OAAAhoB,EAAoBgoB,eAM8B,OAAAxsB,EAAa55D,GAAK0qE,8yBCxD9E2b,4HALkCz/F,GAAAqS,EAAA,QAAAg9C,EAAA,uCAAA5rD,OAAArK,EAA+B,GAAAqK,kBAAAA,OAAArK,EAC3E,SAD4C,2HAHhD6E,GASQvB,EAAA2V,EAAAnU,kFANwC,KAAA4T,GAAA,EAAApY,GAAA21D,KAAAA,EAAA,uCAAA5rD,OAAArK,EAA+B,GAAAqK,kBAAAA,OAAArK,EAC3E,SAD4C,iRARnCulB,EAAa/K,EAAb+K,MACA+rD,EAAsB92D,EAAtB82D,eACAg1B,EAAqB9rF,EAArB8rF,sKASK,OAAAA,iqJCgwDe9zF,EAAc,IAACqvB,WAAarvB,EAAY,oBAC3BA,EAAuB,IAACqhE,KAAKrhE,EAAQ,eAC3C,IAAA+zF,EAAAzyB,IACvBrrD,OAAOjW,EAAQ,OACOg0F,UAAvBh0F,EAAuB,gBAAAg0F,SAAvBA,EAAuB7yB,iFAeL,IAAAgyB,EAAA,CAAAl9E,OAAOjW,EAAW,OAAAnI,OAAOmI,EAAM,qBAC/B+oB,EAAM/oB,EAAI,KAAEA,EAAM,eAEhC,IAAA+zF,EAAA3lE,GAAiBpuB,EAAc,IAAAsY,YAC/ByY,GAAe/wB,EAAc,IAAAsY,UAAUnG,KAAMnS,EAAI,qBACK,QAArBi0F,EAAAj0F,EAAqB,YAArBi0F,IAAqBA,OAArBA,EAAAA,EAAuB/zB,QAAQlgE,EAAW,qBACnDshE,GAAsBthE,EAAI,KAAEA,EAAwB,mHA5DpDshE,GAAqB,GAEpB4yB,QAFoBA,EAE7Cl0F,EAAyB,eAAAk0F,SAAzBA,EAAyBriG,yHAlC/BrE,EAAa,gBACRA,EAAkB,WACvBA,EAAU,WACVA,EAAU,kBACHA,EAA8B,omBA+M/C6E,GAGKvB,EAAA6U,EAAArT,0HAlMA9E,EAAkB,IAAA,EA2KbA,YAAuBQ,IAATR,EAAI,KAA2B,KAATA,MAAW,+HAlL3C,+IAHd6E,GASOvB,EAAAuuB,EAAA/sB,GARLzB,GAOCwuB,EAAA/pB,oEADW9H,EAAW,26BAkLX25D,QAAA35D,EAAA,QAGFw3B,KAAMuhD,GACNpzE,KAAM,kBACN2zD,MAAO,0DACPQ,QAAS95D,EAAA,sNANP,EAAAM,EAAA,KAAAm8D,EAAA9C,QAAA35D,EAAA,QAGFw3B,KAAMuhD,GACNpzE,KAAM,kBACN2zD,MAAO,0DACPQ,QAAS95D,EAAA,6XA1KH8xB,EAA+B60E,QAAxBA,EAAC3mG,EAAuB,WAAvB2mG,IAAuBA,OAAvBA,EAAAA,EAAyBtiG,0BAYlCrE,EAAO,kBAAZa,OAAIC,GAAA,0FAUDd,EAAiB,KAAAomD,GAAApmD,GAajBo2B,EAAAjlB,GAAAnR,MAAewyE,2BAApB3xE,OAAIC,GAAA,sFA0EPd,EAAU,KAAA61B,GAAA71B,KA0BVA,EAAc,KAAAg2B,GAAAh2B,8DAwBuCA,EAA2B,6bA9Hf4G,GAAA6sD,EAAA,UAAAmzC,EAAA5mG,MAAQa,qDAApDb,EAAc,IAACqyE,YAAc,wDAsEazrE,GAAAgtD,EAAA,UAAAizC,EAAA7mG,MAAQa,qDAAlDb,EAAc,IAACuyE,UAAY,iKAjHrD1tE,GAqHKvB,EAAA8f,EAAAte,GA/GHzB,GA8GO+f,EAAAkwC,GA7GLjwD,GA4GOiwD,EAAA8G,GA3GL/2D,GAiCI+2D,EAAA7G,GAhCFlwD,GAYIkwD,EAAA0zB,0GAqBN5jF,GAEI+2D,EAAA1G,GADFrwD,GAA+EqwD,EAAAD,oEAqEjFpwD,GAEI+2D,EAAAvG,GADFxwD,GAA6EwwD,EAAAD,0GA9G/D5zD,EAAoB,oBAC7BA,EAAY,wDAMT8xB,EAA+Bg1E,QAAxBA,EAAC9mG,EAAuB,eAAA8mG,SAAvBA,EAAyBziG,qKAYlCrE,EAAO,aAAZa,OAAIC,GAAA,EAAA,yGAAJD,OAAIC,EAAAimG,EAAAlmG,OAAAC,GAAA,eAUDd,EAAiB,4HAWwC0Y,GAAA,KAAApY,EAAA,IAAAsmG,KAAAA,EAAA5mG,MAAQa,wDAApDb,EAAc,IAACqyE,YAAc,2CAE1Cj8C,EAAAjlB,GAAAnR,MAAewyE,sBAApB3xE,OAAIC,GAAA,EAAA,yGAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,cAoEwD4X,GAAA,KAAApY,EAAA,IAAAumG,KAAAA,EAAA7mG,MAAQa,wDAAlDb,EAAc,IAACuyE,UAAY,MAMhDvyE,EAAU,gIA0BVA,EAAc,qOA3HTa,OAAIC,GAAA,iCAuBND,OAAIC,GAAA,+XA9BKd,EAAe,MAAAgnG,GAAAhnG,oGAAfA,EAAe,gTAEiCxB,uHADnDqG,GAEKvB,EAAA8f,EAAAte,6QAOC9E,EAAM,KACE26B,aAAA36B,MAAc26B,kCAEpB36B,EAAc,uIAL1B6E,GAOIvB,EAAA2jF,EAAAniF,kEALM9E,EAAM,MACE,KAAAM,EAAA,KAAA2mG,EAAAtsE,aAAA36B,MAAc26B,8NASrBtpB,MAAMmS,QAAQxjB,EAAI,IAAIA,KAAKa,OAAS,yKAF/CgE,GAMIvB,EAAA2jF,EAAAniF,kEAJOuM,MAAMmS,QAAQxjB,EAAI,IAAIA,KAAKa,OAAS,iRAyBQrC,qSAFlDwB,EAAQ,KAAA,KACJA,EAAe,MAAAinD,GAAAjnD,kRALtB6E,GAQIvB,EAAA2jF,EAAAniF,2HAJD9E,EAAQ,KAAA,KAAA4H,GAAAqxB,EAAAisE,GACJllG,EAAe,gVA4BTgC,WAAUxB,IAAVR,OAAsBA,EAAK,KAAG,GACtBo8B,cAAAsD,GACb1/B,EACA,KAAAA,EAAc,IAAAy6B,iBACd7V,EAAmB5kB,EACnB,MAAAA,EAAQ,IAAAujB,kBAECvjB,EAAU,KAAGA,MAAc8qB,UAAY,sKAP3C,QAAAxqB,EAAA,KAAA4mG,EAAAllG,WAAUxB,IAAVR,OAAsBA,EAAK,KAAG,IACtB,SAAAM,EAAA,KAAA4mG,EAAA9qE,cAAAsD,GACb1/B,EACA,KAAAA,EAAc,IAAAy6B,iBACd7V,EAAmB5kB,EACnB,MAAAA,EAAQ,IAAAujB,oCAECvjB,EAAU,KAAGA,MAAc8qB,UAAY,2QAX1C9qB,EAAmB,+YAgBG,gBAAqBA,EAAe,kIADpE6E,GAEKvB,EAAA8f,EAAAte,gPAE4CtG,qSALpCi8D,GAAAz6D,MAAYA,EAAU,OAAKikC,GAAmBjkC,MAAc8qB,wEApBtE,MAAAwxC,IAAAA,IAAA35C,GAAgB3iB,EAAK,qEAwBhBA,EAAe,MAAAg5E,GAAAh5E,sHA3Bd4G,GAAAsgF,EAAA,YAAAigB,EAAAl7E,GAAejsB,EAAI,iCACJA,EAAU,uBAHtC6E,GAgCIvB,EAAA4jF,EAAApiF,kOAPa,QAAAxE,EAAA,KAAAm6D,GAAAz6D,MAAYA,EAAU,OAAKikC,GAAmBjkC,MAAc8qB,gIAIjE9qB,EAAe,6HA3Bd0Y,GAAA,QAAApY,EAAA,IAAA6mG,KAAAA,EAAAl7E,GAAejsB,EAAI,2EACJA,EAAU,6PAgCtC6E,GAA4BvB,EAAA4jF,EAAApiF,8DAtDxB9E,EAAQ,kBAWPA,EAAO,kBAAZa,OAAIC,GAAA,sFA0CDd,EAAiB,KAAAmnD,oKAtDxBtiD,GAyDIvB,EAAA+2D,EAAAv1D,6IAxDI9E,EAAQ,+GAWPA,EAAO,aAAZa,OAAIC,GAAA,EAAA,yGAAJD,OAAIC,EAAA6vB,EAAA9vB,OAAAC,GAAA,YA0CDd,EAAiB,iGA1CpBa,OAAIC,GAAA,iNA2DVkmB,6BAAA3c,OAAAgH,MAAMmS,QAAQxjB,MAAWwnC,UAAY,QAAU,SAAO,sBAIpDhQ,KAAMomC,GACNj4D,KAAM,wBACN2zD,MAAO,mDAKPW,YAAaj6D,EAAA,MAGb2F,KAAM,cACN2zD,MAAO,4CACPQ,QAAS95D,EAAA,mGAhBX,OAAAM,EAAA,KAAAm8D,EAAAz1C,QAAA3c,qBAAAA,OAAAgH,MAAMmS,QAAQxjB,MAAWwnC,UAAY,QAAU,SAAO,gRA0B9CmyB,QAAA35D,EAAA,QAGFw3B,KAAMimC,GACN93D,KAAM,KACN2zD,MAAO,+BACPQ,QAAS95D,EAAA,KAGTw3B,KAAMuhD,GACNpzE,KAAM,0BACN2zD,MAAO,8DACPQ,QAAS95D,EAAA,cAIRA,EAAK,gGAhBJ,EAAAM,EAAA,KAAAm8D,EAAA9C,QAAA35D,EAAA,QAGFw3B,KAAMimC,GACN93D,KAAM,KACN2zD,MAAO,+BACPQ,QAAS95D,EAAA,KAGTw3B,KAAMuhD,GACNpzE,KAAM,0BACN2zD,MAAO,8DACPQ,QAAS95D,EAAA,kKA3LpBA,EAAW,IAAAmmD,GAAAnmD,gDAcVA,EAAK,MAAA,6JApBUA,EAAW,qBAHlC6E,GAsOKvB,EAAA8f,EAAAte,+EAlOW9E,EAAe,oBACjBA,EAAa,wBACTA,EAAiB,6BAG5BA,EAAW,2JANKA,EAAW,4IAt9C5B,IAAA8xE,GAAoB,kCA5FlBh8D,EAAQH,GAAY,wBAClB0I,EAASxR,GAAoB,gBAA7BwR,KACA+oF,EACNv6F,GAAiC,kBAD3BmkB,EAAiBo2E,EAAjBp2E,kBAAmBP,EAAkB22E,EAAlB32E,mBAErB6oD,EAAOxiB,KACPqiB,EAAc/2D,KACdg3D,EAAmBh3D,KAEnB62D,EAA0B,oBAAX52E,OACrByT,EAAM,SAAUmjE,OA0BZnyC,EAMAgwC,EACAoC,EACA3oD,EAqBA7I,EACA/hB,EAtDOoyB,EAAiBvd,EAAjBud,SACAwhD,EAAwB/+D,EAAxB++D,gBACAC,EAA6Ch/D,EAA7Cg/D,kBACAC,EAAoBj/D,EAApBi/D,YACA1wD,EAAgCvO,EAAhCuO,wBACAC,EAAgCxO,EAAhCwO,wBACAq+E,EAAuB7sF,EAAvB6sF,eACA9jF,EAAkB/I,EAAlB+I,OACAo2D,EAAoCn/D,EAApCm/D,gBACAzhB,EAA2B19C,EAA3B09C,UACAC,EAA4B39C,EAA5B29C,iBACApwC,EAA4BvN,EAA5BuN,YACAoQ,EAAkB3d,EAAlB2d,SACAyhD,EAA0Bp/D,EAA1Bo/D,aACA5yC,EAAkBxsB,EAAlBwsB,SACAo9B,EAA4B5pD,EAA5B4pD,cACAwH,EAAkCpxD,EAAlCoxD,aACAhM,EAAgDplD,EAAhDolD,oBACA9G,EAAgBt+C,EAAhBs+C,QACAC,GAAcv+C,EAAdu+C,OACA8gB,GAAwBr/D,EAAxBq/D,YACAC,GAAkCt/D,EAAlCs/D,iBACAC,GAAoCv/D,EAApCu/D,kBAYXphB,GAAkB,CAChB1sD,QAAAA,GACAI,UAAAA,GACAmf,UAAS,kBAAQA,GAAUsrD,EAAa,EACxClwC,SAAQ,WAAS,OAAAozC,IAAa51E,SAASwiC,YAAejb,GAAuBmrD,EAAa,EAC1Fhe,QAAO,YACM,EACPA,GACFA,KAGJC,OAAM,YACO,EACPA,IACFA,QAOF,IAEAxxB,GAFAmxB,QAAqCl4D,EAOrC8wE,GAAiB,IACjBoB,GAAO,GAUPsH,IAAY,EAIZstB,GAAgB,CAAA,EAEhB11B,GAAiB,IACjBr1B,GAAY,EAoCP,SAAApV,GACPrc,GAKAhV,EAAM,kBAAmBgV,OAEnBg6C,EACiB,mBAAdh6C,EAA2BA,EAAUyP,GAAczP,YAAc,KAAOA,EAE5E0U,GAAQslC,EAAkBvqC,GAAczP,kBAC3CyP,GAAalhB,EAAAA,EACRkhB,CAAAA,EAAAA,QACHzP,UAAWg6C,KAGb99B,EAAS89B,IAIJ,SAAAsY,GAA8B11D,GAChC6S,GAAczP,gBAAsBtqB,IAATknB,IAK9B4X,EAAS5X,EAAM0Z,GAAc7G,GAAczP,aAC3CwU,EAAS5X,EAAM2Z,GAAa9G,GAAczP,cAK5ChV,EAAM,kDAAmDykB,GAAczP,gBACvEyP,GAAalhB,EAAAA,KACRkhB,IAAa,CAAA,EAAA,CAChBzP,UAAW,UAIX,IAAAyP,GAAgBD,KAChB+hD,IAAiB,EAuBf,IAOFzvE,GAPEivE,GAAUtkB,GAAa,CAC3Bp/B,SAAW,SAAA3a,GACTe,EAAA,GAAAgtD,GAAe/tD,MAGf+tD,GAAesQ,GAAQlkB,WAmBlB,SAAAglB,GAAqBl1D,GACtB,IAAA8/E,EAAmB7/E,EACnBm1D,EAAYj1D,GAAcH,GAC5BA,EAAQ9hB,OAASA,GAChB65B,GAAQ+nE,EAAqB9/E,EAAQC,SAE1C5R,EAAM,0BAAyB,CAAI+mE,UAAAA,IAE9BA,OAKCE,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bs3E,EAAev1D,EACfs1D,EAAgBziD,GAChBs2C,EAAelrE,EACfu3E,EAAyBb,GAE3B,GAAAz0D,GAAcH,OAEdlJ,EAAA,EAAAmJ,EAAOiyD,EAAgBlyD,EAAQ9hB,YAC/BA,EAAO8hB,EAAQ9hB,MACf4Y,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAm6C,QAAal4D,SACN0iB,OAEL3E,EAAA,EAAAmJ,EAAOiyD,EAAgB9zD,EAAW4B,EAAQ9hB,aAC1CA,EAAO8hB,EAAQ9hB,MACf4Y,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAm6C,QAAal4D,SACNg9E,GAEPj/D,EAAA,EAAAmJ,OAAOlnB,QACPmF,EAAO8hB,EAAQ9hB,MACf4Y,EAAA,GAAA89D,IAAiB,QACjB3jB,GACW,KAAT/yD,EACI0gB,GAAwB1gB,EAAOud,EAAc8D,SAAWyB,OAAOvF,SAC/D1iB,aAIVknB,EAAOD,EAAQC,MACfnJ,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAm6C,QAAal4D,GAIf48E,GAA8B11D,GAlJ1B6S,GAAcI,cAChBpc,EAAA,GAAAgc,GAAalhB,EAAAA,EAAA,CAAA,EACRkhB,IAAa,CAAA,EAAA,CAChBI,aAAc,QAoJlB0iD,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IAQFI,GAAaP,EAFO,OAgBb,SAAAM,GAAcmqB,GAIC,IAHtBvqB,EAAYuqB,EAAZvqB,aACAD,EAAawqB,EAAbxqB,cACAnM,EAAY22B,EAAZ32B,aACAqM,EAAsBsqB,EAAtBtqB,4BAOqB18E,IAAjBy8E,QAA+Cz8E,IAAjBqwE,SAKrBrwE,IAATknB,OACmBlnB,IAAjBy8E,EAEFpB,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,MAAK,EAAK3lD,GAAI,UAAWtT,KAAM,GAAI3iB,MAAOi7E,IAC1Cz/D,MAAOgmB,GAA4Bw5C,GACnCt1D,UAAMlnB,EACNmF,KAAMkrE,EACNwL,eAAgBa,GAElBplB,KAAI,CACF8lB,MAAK,CAAA,CAAK3lD,GAAI,UAAWtT,KAAM,GAAI3iB,MAAO0lB,IAC1ClK,MAAOgmB,GAA4BjJ,IACnC7S,UAAMlnB,EACNmF,KAAAA,EACA02E,eAAAA,MAIJR,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,WAAOp9E,EACPknB,UAAMlnB,EACNmF,KAAMkrE,EACNrzD,MAAOgmB,GAA4Bw5C,GACnCX,eAAgBa,GAElBplB,KAAI,CACF8lB,WAAOp9E,EACPknB,KAAAA,EACAlK,MAAOgmB,GAA4BjJ,IACnC50B,KAAAA,EACA02E,eAAAA,WAKe77E,IAAjBy8E,GACFpB,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,WAAOp9E,EACPknB,KAAMu1D,EACNz/D,MAAOgmB,GAA4Bw5C,GACnCr3E,KAAMkrE,EACNwL,eAAgBa,GAElBplB,KAAI,CACF8lB,WAAOp9E,EACPknB,UAAMlnB,EACNmF,KAAAA,EACA02E,eAAAA,GACA7+D,MAAOgmB,GAA4BjJ,YASzC89B,GAAgB,GAMdikB,GAAmBC,GAAWtkB,IAE3B,SAAAukB,GACP90D,EACAwwC,EACA30C,EACA40C,GAEAJ,mBAEQ0kB,MAEFA,EAAsBH,GAAiB50D,EAAMwwC,EAAW30C,EAAQ40C,SACzDj1C,GACPu5D,EAAmB,EAEf93D,KAAI,GACJqC,QAAS,uBAA0B9D,EAAc8D,QACjDsxC,SAAUn4C,GAAmB4zD,UAK9Bv0C,GAAQi9C,EAAqBpkB,MAChCviD,EAAM,4BAA6B2mE,GACnCl+D,EAAA,GAAA85C,GAAmBokB,OAGtB,SAAA3yE,GAAQ,OAAKgM,EAAKzL,+BAAAA,OAAgCP,SAAQ,aAI/C4yE,YACd5mE,EAAM,YAEF4iD,IAEAA,WAAAA,GACAF,cAAc,IAMlBgkB,GAAuB90D,EAAMwwC,EAAW30C,EAAQ40C,GACxCrmC,EAAQumC,IAA2C,KAArB,CAAAA,iBAAAA,cAGxBulB,GACdrhD,EACAshD,GAII,GAFJ/nE,EAAM,QAASymB,EAAYshD,QAEdr9E,IAATknB,EACQ,UAAA1b,MAAM,+BAGZ,IAAA+wE,GAA6Br1D,KAAAA,GAC7Bu1D,EAAev1D,EACfs1D,EAAgBziD,GAChB2iD,EAAyBb,GAGzBxkB,EAA0BvuB,GAC9B5hB,EACA6U,GAOI6K,EALU9K,GAAmB5U,EAAM6S,GAAegC,GAK5B7U,KACtBq2D,EAAuB/J,GAC3Bz5C,GACAgC,EACAm2C,IAGIrkE,EACkB,mBAAfwvE,EAA4BA,EAAWz2C,EAAa22C,QAAwBv9E,EAErF+d,EAAA,EAAAmJ,EAAOrZ,QAA8B7N,IAAlB6N,EAASqZ,KAAqBrZ,EAASqZ,KAAO0f,GAC3D,IAAA62C,EACJ5vE,QAA+B7N,IAAnB6N,EAASmP,MAAsBnP,EAASmP,MAAQugE,EAC9Dx/D,EAAA,GAAAgc,GAAgB0jD,GAChB1/D,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAgpB,QAAa/mC,GACb+d,EAAA,GAAAm6C,QAAal4D,GAEbq7E,GAAQvtE,IAAG,CACTupD,KAAI,CACF+lB,MAAO/lB,EACPnwC,UAAMlnB,EACNmF,UAAMnF,EACNgd,MAAOgmB,GAA4Bw5C,GACnCX,eAAgBa,GAElBplB,KAAI,CACF8lB,MAAOrhD,EACP7U,UAAMlnB,EACNgd,MAAOgmB,GAA4By6C,GACnCt4E,UAAMnF,EACN67E,eAAAA,UAIE3G,EAAW,CACfhuD,KAAAA,EACAu1D,aAAAA,EACAplB,KAAAA,EACAC,KAAMv7B,UAGR+gD,GAAaP,EAAiBrH,GAEvBA,WAGAyF,GACP5+C,EACAshD,UAEI9lD,GAGArQ,KAAAA,EACAu1D,aAAcv1D,EACdowC,KAAI,GACJD,KAAI,IAID+lB,GAAMrhD,EAAYshD,YAGlBP,GAAaP,EAA0BrH,YAGjBl1E,IAAzBu8E,EAAgBr1D,WAAgDlnB,KAA1Bu8E,eAAAA,EAAiBp3E,QAOvDwyB,EACE,QAAS33B,IAATmF,EAEFwyB,EADkB,CAAAxyB,KAAAA,EAAM+hB,UAAMlnB,GACZu8E,GAChB/gB,cAAe0gB,KACfhH,YAAAA,SAEOhuD,QAASlnB,IAATknB,EAAkB,CAE3ByQ,EADkB,CAAAxyB,UAAMnF,EAAWknB,KAAAA,GACjBq1D,GAChB/gB,cAAe0gB,KACfhH,YAAAA,KAMC,SAAA+xB,GAAWzlB,GAClBlsE,EAAM,aAAcksE,GAKb,SAAAG,GAAgBC,GACvBtsE,EAAM,sBAAuBssE,GAE7B7jE,EAAA,GAAAgpB,GAAa66C,GAGN,SAAAn7C,GAAetiB,GAChB,IAAAnR,EAAQ8O,SAASqC,EAAK,GAAI,IAC1BigE,EAAQ,CAAIn8D,OAAOjV,EAAQ,IAACnJ,OAAA4J,EAAM0Q,EAAKvkB,MAAM,YAE5Ck/B,EAAS5X,EAAMk9D,GAClBniD,GAAqBmiD,GAAU,GAC/BniD,GAAqB9d,GAAM,YAGjB7E,KACdhK,EAAM,SAIFya,IACFA,EAAezQ,QACfyQ,EAAenoB,mBA0CVs/F,KACFntE,GAAczP,WACjBqc,IAZE/J,EAAY1V,IAAUoK,EAAQpK,IAAUoK,EAAQ4gD,SAI3CjwC,GAFO,CAAA,KAAGp4B,OAAA4J,EAAKy+D,GAAQ,MAEI,IAgDtB,SAAAvzD,GAASwF,GAAgB,IAAAu8D,IAAmBj4E,UAAApI,OAAA,QAAAL,IAAAyI,UAAA,KAAAA,UAAG,GACvDiW,EAAMuzD,GAA0B9tD,EAAM+tD,GAAS40B,GAAkBx1B,IACjE61B,EAAgBzoF,EAAMq9B,GACtB4kC,EAAOpY,GAAYpkD,MAEzB7O,EAAM,WAAc,CAAA6O,KAAAA,EAAMzF,IAAAA,EAAKq9B,UAAAA,GAAW4kC,KAAAA,KAErCjI,EACI,OAAA7rE,QAAQC,cAGX8zE,EAAelI,EAAYjsD,wBAC7B,GAAAk0D,IAASD,EAAmB,KACxBG,EAAWF,EAAKl0D,wBAClB,GAAAo0D,EAASnxD,OAASkxD,EAAaliE,KAAOmiE,EAASniE,IAAMkiE,EAAalxD,OAE7D,OAAA7iB,QAAQC,UAIb,IAAAkY,GAAW47D,EAAa1iE,OAAS,aAM1BrR,QADT8zE,EACkB,SAAA7zE,GAClBgsE,EAAK6H,EAAI,CACP91D,UAAW6tD,EACX1zD,OAAAA,EACA1b,SjH5zBqB,IiH6zBrBuE,SAAQ,WAENu5F,GAAmBjjF,GACnBrX,QAKc,SAAAA,GAKRu6F,IAAAA,EAJVvuB,EAAKquB,EAAa,CAChBt8E,UAAW6tD,EACX1zD,OAAAA,EACA1b,SjHz0BqB,IiH00BrBuE,UAAQw5F,EAAAvvE,EAAAC,IAAAC,MAAA,SAAAsvE,IAAA,OAAAvvE,IAAAhf,MAAAwuF,SAAAC,GAAA,cAAAA,EAAAlvE,KAAAkvE,EAAAz8F,MAAA,KAAA,EAAA,OAAAy8F,EAAAz8F,KAAA,EACAoC,KAEAs6F,KAAAA,EAOFA,GAPWx1B,GACb9tD,EACA+tD,GACA40B,GACAx1B,MAGa5yD,EAAG8oF,CAAAA,EAAAz8F,KAAAy8F,EAAAA,KAAAA,CACV,OADUA,EAAAz8F,KACV,EAAA4T,GAASwF,EAAMu8D,GAAmB8mB,KAAAA,EAAAA,EAAAz8F,oBAGxCq8F,GAAmBjjF,GAAI,KAAA,EAGzBrX,IAAO,KAAA,GAAA,IAAA,MAAA,OAAA06F,EAAAz0D,OAAAu0D,GAAAA,uDAgCR,SAAAF,GAAmBjjF,OACpBw8D,EAAOpY,GAAYpkD,GACpB,GAAAw8D,GAASjI,EAAT,KAICkI,EAAelI,EAAYjsD,wBAC3Bo0D,EAAWF,EAAKl0D,wBAElB,GAAAo0D,EAASzzD,MAAQwzD,EAAaxzD,MAAK,CAC/B,IAAAi2D,EAAOxC,EAASzzD,MAAQwzD,EAAaxzD,WAC3CsrD,EAAY58B,YAAcunC,EAAI3K,GAG5B,GAAAmI,EAASjiE,KAAOgiE,EAAahiE,KAAI,CAC7B,IAAAykE,EAAOzC,EAAahiE,KAAOiiE,EAASjiE,UAC1C85D,EAAY58B,YAAcunC,EAAI3K,KAIzB,SAAAnpB,GAAeprC,IA7Cf,SAAiBA,MACnBu0D,GAIG,IAAAvG,EAAaC,GAAoBjuD,EAAM+tD,IAAvCC,SACFzzD,EAAMuzD,GAA0B9tD,EAAM+tD,GAAS40B,GAAkBx1B,IACjE5hD,EAAShR,GAAOooF,GAAiB30B,IAAab,IAG9CsP,EAAelI,EAAYjsD,wBAC3BilD,EAAc31B,GACd41B,EAAiB51B,GAAY6kC,EAAa1iE,OAH3BozD,GAKjB,GAAA5hD,EAASiiD,EAAc,KACnB0R,EAAO3zD,EAASiiD,OACtB+G,EAAY38B,WAAasnC,EAAI3K,GAG3B,GAAAh6D,EAAMgzD,EAAW,KACb2R,EAAO3R,EAAchzD,OAC3Bg6D,EAAY38B,WAAasnC,EAAI3K,KAyB/BgvB,CAAiBvjF,GACjBijF,GAAmBjjF,GAOL,SAAAokD,GAAYpkD,UACnBu0D,EAAcA,EAAY7hB,+BAAahtD,OAAkB4hB,GAAetH,GAAI,OAAS,KAGrF,SAAA09D,GAAe8lB,GACtB,IAAArjG,EAAMqjG,EAANrjG,OACAsa,EAAI+oF,EAAJ/oF,KACAF,EAAGipF,EAAHjpF,IACAV,EAAK2pF,EAAL3pF,MACAE,EAAMypF,EAANzpF,OACAoR,EAASq4E,EAATr4E,UACAE,EAAUm4E,EAAVn4E,WACA2vC,EAAOwoC,EAAPxoC,QA2BAqa,IAAY,EAEN,IAAAnpD,EAAUG,EAAkBo3E,GA3BvB,CACT1gF,KAAAA,EACe6S,cAAAA,GACfhX,OAAAA,EACAo8C,QAAAA,EAEAG,YAAaqe,GACbunB,UAAW2C,GACXtoC,sBAAuBse,GACvBre,MAAOse,GACPre,OAAQ0e,GACRh5C,QAASo5C,GACT7e,SAAUgf,GACVtJ,eAAgB0yB,GAChBtyB,kBAAmBuyB,GACnBryB,iBAAkBsyB,GAClBjyB,YAAakyB,GAEb7oC,oBAAAA,EACA3B,mBAAkB,WAChBxtC,EAAmBI,GACnB/Q,OAMqD,CACvDV,KAAAA,EACAF,IAAAA,EACA4Q,UAAAA,EACAE,WAAAA,EACAxR,MAAAA,EACAE,OAAAA,EACA5Z,OAAAA,EACA8W,mBAAmB,EACnBsC,QAAO,WACL87D,IAAY,EACZl6D,QAKG,SAAAigE,GAAkB95E,GACrB,IAAA8xB,IAAYkM,GAAmB1J,GAAczP,WAA7C,IAIA7kB,IACFA,EAAMU,kBACNV,EAAMM,kBAGJN,GAAwB,gBAAfA,EAAM6C,MAA0B7C,EAAM3C,SAAWitB,EAE5D8xD,GAAe,CACbjjE,KAAOnZ,EAAqBu8E,QAC5BtjE,IAAMjZ,EAAqBkjE,QAC3B3qD,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,eAKL76D,EAAoB,QAAd4jG,EAAGxvB,SAAW,IAAAwvB,OAAA,EAAXA,EAAarxC,cAAc,yCACtCvyD,EACFu9E,GAAe,CACbv9E,OAAAA,EACAgrB,UAAW,EACXtR,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,eAIL3yC,EAAkB27E,QAAdA,EAAGzvB,SAAAyvB,IAAWA,OAAXA,EAAAA,EAAa17E,wBACtBD,GACFq1D,GAAe,CACbnjE,IAAK8N,EAAK9N,IAAM,EAChBE,KAAM4N,EAAK5N,KAAO,EAClBZ,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,YAML,YAiBLwe,SACHpmD,GAAawC,GAAczP,WAIzB,IAAAnG,EAAO0c,GAAa9G,GAAczP,WAEpCnI,GADU4Y,EAAM7T,EAAM/C,IAExBy5D,GAAoBz5D,GAEpBwiB,GAAgB1E,GAAqB9d,GAAM,cAItC0jF,MACHtwE,GAAawC,GAAczP,WAM/BszD,GAFa/8C,GAAa9G,GAAczP,WACnB1qB,MAAM,EAAG,aAIvBi+E,KACH,IAAAtmD,GAAa6I,GAAiBrG,GAAczP,WAA5C,CAIE,IAAAnG,EAAO4V,GAAczP,UAAUnG,KAC/BoW,EAAUnW,EAAmBD,GAC7B3iB,EAAQu5B,EAAM7T,EAAM/C,GACpByX,GAAiBsD,GAAiB19B,EAAOu4B,GAAcE,iBAAkBM,EAASxX,GAClFgc,EAAenD,EAAgB3T,OAAOzmB,GAAS6hB,GAAc4E,OAAOzmB,GAAQuhB,GAElFzN,EAAM,4BAA2B,CAAIsmB,cAAAA,EAAep6B,MAAAA,EAAOu9B,aAAAA,IAE3D47C,KAGMljD,GAAI,UACJtT,KAAMoW,EACN/4B,MAAOu9B,KAGV,SAAA6H,EAAaC,UAEV7pB,MAAO2e,GAAiBkL,EAActM,EAASqB,QAMnBwsE,SAAAA,YAAAA,GAAAtwE,EAAAC,IAAAC,kGACG,GAArC1iB,EAAM,oBAAqByxB,IACtBA,GAAUshE,CAAAA,EAAAt9F,oBAAAs9F,EAAAv1D,OAAA,UAAA,KAAA,EAIP3uB,GAJOmkF,EAIYvhE,IAAnB5iB,KAAM6iB,EAAQshE,EAARthE,SAIVtZ,GADE40D,GAA4B,QAAXimB,EAAA7vB,SAAW,IAAA6vB,OAAA,EAAXA,EAAa1xC,cAAc,uBAAwB,OAExEyrB,EAAe10D,SAYjB+sD,GARgB,EAEZljD,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOwlC,KAOXqc,WAAW/jC,IAAK,wBAAA+oF,EAAAt1D,OAAA,GAAAy1D,uCAGTjqB,KACP1gE,EACE2gE,UAGK59D,CAAAA,EAAAA,IACHnF,CAAAA,EAAAA,CAAAA,YAAW,CACTuC,MAAO,WAIT,CAAAN,mBAAe,OAAA4B,IAAK,aAeXw+D,GAAS2qB,GAAA,OAAAC,GAAAl1F,MAAA/K,KAAAA,oBAAAigG,YAAAA,GAAA5wE,EAAAC,IAAAC,MAAT,SAAA2wE,EAAU3qB,UAAejmD,IAAAhf,MAAA,SAAA6vF,GAAA,cAAAA,EAAAtwE,KAAAswE,EAAA79F,aAAA,OAAA69F,EAAA79F,KAAA,EAChCy0D,GAAK,CACTt4C,KAAAA,EACA6S,cAAAA,GACAxS,YAAay2D,EAASz2D,OAAcvnB,EACpCu3B,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,sEAIE,CAAA,SAAAwD,KAAU0qB,OAAAA,GAAAr1F,MAAAvN,KAAAwC,UAAA,CAAA,SAAAogG,YAAAA,GAAA/wE,EAAAC,IAAAC,sGACnB9Q,GADoB82D,IAAM8qB,EAAAzoG,eAAAL,IAAA8oG,EAAA,KAAAA,EAAG,QACpB9oG,IAATknB,EAAkB,CAAA6hF,EAAAh+F,KAAAg+F,EAAAA,KAAAA,CAAAA,OAAAA,EAAAj2D,wBAAA,OAAAi2D,EAAAh+F,KAAA,EAIhB00D,GAAM,CACVv4C,KAAAA,EACA6S,cAAAA,GACAxS,YAAay2D,EAASz2D,OAAcvnB,EACpC+iB,OAAAA,iFAIK27D,KACPhf,GAAQ,CACNx4C,KAAAA,EACA/hB,KAAAA,EACA40B,cAAAA,GACAi7C,eAAe,EACfz9C,SAAAA,EACAI,SAAAA,EACAH,QAASmjD,cAIJmtB,KACP1yB,GAAc,CAAGluD,KAAAA,EAAM6S,cAAAA,GAAem4C,QAAAA,GAAS36C,SAAAA,EAAUC,QAASmjD,cAG3DotB,KACPvyB,GAAiB,CAAGtuD,KAAAA,EAAM6S,cAAAA,GAAem4C,QAAAA,GAAS36C,SAAAA,EAAUC,QAASmjD,cAG9DqtB,KACPtyB,GAAgB,CAAGxuD,KAAAA,EAAM6S,cAAAA,GAAem4C,QAAAA,GAAS36C,SAAAA,EAAUC,QAASmjD,cAG7DstB,KACPlyB,GAAW,CAAG7uD,KAAAA,EAAM6S,cAAAA,GAAem4C,QAAAA,GAAS36C,SAAAA,EAAUC,QAASmjD,KAG7BquB,SAAAA,YAAAA,GAAAlxE,EAAAC,IAAAC,MAArB,SAAAixE,EAAsB/3E,UAAY6G,IAAAhf,MAAA,SAAAmwF,GAAAA,cAAAA,EAAA5wE,KAAA4wE,EAAAn+F,MAAAm+F,KAAAA,SAAAA,EAAAn+F,OACzC8rE,GAAiB,CACrB3lD,KAAAA,EACAmlD,cAAc,EACdC,cAAAA,EACApvD,KAAAA,EACAoD,UAAWyP,GAAczP,UACzBiN,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,GACTpE,cAAewI,GACfv4C,SAAUG,sEAIL,UAwLAo4C,GAAkB/iD,EAAsBqhD,GACzC,IAAAb,EAAgBziD,GAChB0iD,EAAev1D,EACfmpD,EAAelrE,EACfo3E,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bu3E,EAAyBb,GAEzBv+C,EAAejD,GAAmBnT,EAAM6S,MAAmBiG,IAE3DnyB,EACkB,mBAAfwvE,EAA4BA,EAAWrhD,EAAasB,QAAgBt9B,EAE7E+d,EAAA,EAAAmJ,EAAOrZ,QAA8B7N,IAAlB6N,EAASqZ,KAAqBrZ,EAASqZ,KAAO8U,GACjEje,EAAA,GAAAgc,GAAgBlsB,QAA+B7N,IAAnB6N,EAASmP,MAAsBnP,EAASmP,MAAQsgB,GAC5Evf,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAm6C,QAAal4D,GAGb48E,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IAQFI,GAAaP,EAFO,eAMb4E,GAAiBl2C,EAAqBoyC,GAC7C/nE,EAAM,oBAEA,IAAAknE,EAAgBziD,GAChB0iD,EAAev1D,EACfmpD,EAAelrE,EACfo3E,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bu3E,EAAyBb,WAG7B30D,EAAOiyD,EAAgBluC,IACvBltB,EAAA,GAAAgc,GAAgBM,GAAmBnT,EAAM6S,MAAmBiG,KAC5DjiB,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAm6C,QAAal4D,SACN0iB,OAEL3E,EAAA,EAAAmJ,EAAOiyD,EAAgB9zD,EAAW4lB,KAClCltB,EAAA,GAAAgc,GAAgBM,GAAmBnT,EAAM6S,MAAmBiG,KAC5DjiB,EAAA,GAAA5Y,EAAO8lC,GACPltB,EAAA,GAAA89D,IAAiB,GACjB99D,EAAA,GAAAm6C,QAAal4D,SACNg9E,GAEPj/D,EAAA,EAAAmJ,OAAOlnB,GACP+d,EAAA,GAAAgc,GAAgBD,GAAmB,CAAG5S,KAAAA,EAAMkT,OAAQ4F,MACpDjiB,EAAA,GAAA5Y,EAAO8lC,GACPltB,EAAA,GAAA89D,IAAiB,QACjB3jB,GACW,KAAT/yD,EACI0gB,GAAwB1gB,EAAOud,EAAc8D,SAAWyB,OAAOvF,SAC/D1iB,IAIC,GAAe,mBAAfq9E,EAAyB,CAC5B,IAAAxvE,EAAWwvE,EAAWn2D,EAAM6S,QAElC7S,EAAOrZ,GAAYA,EAASqZ,KAAOrZ,EAASqZ,KAAOA,GACnDnJ,EAAA,GAAAgc,GAAgBlsB,GAAYA,EAASmP,MAAQnP,EAASmP,MAAQ+c,IAIhE6iD,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IAMFI,GAAaP,EAFO,MAiDN,SAAA6D,GAAmBz6E,GAC7B,QAAS3F,IAATknB,EAAA,CAII,IAAAzjB,EAA6BkC,EAA7BlC,GAAIy8D,EAAyBv6D,EAAzBu6D,YAAaxiD,EAAY/X,EAAZ+X,QACnByuD,EAAWxmE,EAAQwmE,UAAQ,GAEjCqN,IAAY,EAEZF,GAAgB,CACd71E,GAAIA,GAAMm1E,EACV1xD,KAAAA,EACAilD,SAAUA,GAAQ,GAClBjM,YAAc,SAAAnkC,GACRmkC,EACFA,EAAW,CACTnkC,WAAAA,EACM7U,KAAAA,EACNm5D,gBAAiBpkD,EAAmB/U,EAAM6U,MAG5CzmB,EAAM,cAAe62D,EAAUpwC,GAE/B4+C,GAAY5+C,KAGhBre,QAAO,WACL87D,IAAY,EACZl6D,KACI5B,GACFA,QAMC,SAAAkgE,GAAoBz5D,GAC3B7O,EAAM,sBAAqB,CAAI6O,KAAAA,IAE/Bq1D,IAAY,EAGZD,GAAiB,CACftyD,SACEC,KAAM6T,EAAM7T,EAAM/C,IAEpBA,KAAAA,EACAqT,QAASprB,GAAQorB,QACjB9Z,QAAO,WACL87D,IAAY,EACZl6D,iBAKGs1D,GAAgBzvE,EAAcs3D,GACrC5+C,EACE4gE,IAEEt5E,KAAAA,EACAm3D,QAAU,SAAAn3D,GAAY,OAAKqgB,GAAiBrgB,GAAO,SAAAyE,GAAM,OAAAub,GAAevb,EAAGmZ,KAC3Ew5C,EAAAA,SAAU72C,GACV+2C,QAAAA,UAGG77C,IAAoB,CAAA,EAAA,CACvBnF,aACEuC,MAAO,QACPE,OAAQ,SAEVvC,cACE60B,QAAS,EACTtyB,OAAQ,UAIV,CAAAR,0BAAe4B,IAAK,aAgBjBwgE,SACHvoD,GAIC8jD,GAAQlkB,WAAWF,aAIlB/jC,EAAOmoD,GAAQhkB,UAChBnkC,OAICqpD,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAEhC4Y,EAAA,EAAAmJ,EAAOgM,EAAKmkC,KAAK+lB,MAAQnhD,EAAmB/U,EAAMgM,EAAKmkC,KAAK+lB,OAASlqD,EAAKmkC,KAAKnwC,MAC/EnJ,EAAA,GAAAgc,GAAgB7G,EAAKmkC,KAAKr6C,OAC1Be,EAAA,GAAA5Y,EAAO+tB,EAAKmkC,KAAKlyD,MACjB4Y,EAAA,GAAA89D,GAAiB3oD,EAAKmkC,KAAKwkB,gBAC3B99D,EAAA,GAAAm6C,QAAal4D,GAEbsV,EAAM,OAAU,CAAA4d,KAAAA,EAAMhM,KAAAA,IAYtB41D,GAAaP,EATXrpD,EAAKmkC,KAAK+lB,OAASlqD,EAAKokC,KAAK8lB,OAEvBl2D,KAAAA,EACAu1D,aAAcF,EAAgBr1D,KAC9BowC,KAAMpkC,EAAKmkC,KAAK+lB,MAChB/lB,KAAMnkC,EAAKokC,KAAK8lB,OAElB,MAIN99D,KACIya,GAAczP,WAChB3L,GAASkiB,GAAa9G,GAAczP,YAAY,cAI3Cy1D,SACHxoD,GAIC8jD,GAAQlkB,WAAWD,aAIlBhkC,EAAOmoD,GAAQ/jB,UAChBpkC,OAICqpD,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAEhC4Y,EAAA,EAAAmJ,EAAOgM,EAAKokC,KAAK8lB,MAAQnhD,EAAmB/U,EAAMgM,EAAKokC,KAAK8lB,OAASlqD,EAAKokC,KAAKpwC,MAC/EnJ,EAAA,GAAAgc,GAAgB7G,EAAKokC,KAAKt6C,OAC1Be,EAAA,GAAA5Y,EAAO+tB,EAAKokC,KAAKnyD,MACjB4Y,EAAA,GAAA89D,GAAiB3oD,EAAKokC,KAAKukB,gBAC3B99D,EAAA,GAAAm6C,QAAal4D,GAEbsV,EAAM,OAAU,CAAA4d,KAAAA,EAAMhM,KAAAA,IAYtB41D,GAAaP,EATXrpD,EAAKmkC,KAAK+lB,OAASlqD,EAAKokC,KAAK8lB,OAEvBl2D,KAAAA,EACAu1D,aAAcF,EAAgBr1D,KAC9BowC,KAAMpkC,EAAKokC,KAAK8lB,MAChB/lB,KAAMnkC,EAAKmkC,KAAK+lB,OAElB,MAIN99D,KACIya,GAAczP,WAChB3L,GAASkiB,GAAa9G,GAAczP,YAAY,cAQ3C6+E,GAAgB3lG,EAAkB2uE,GACzCp0D,EAAA,GAAA+oF,GAAiB30B,GAAY3uE,EAAQipB,wBAAwBvO,OAAM4oF,klCAtgDpE/oF,EAAA,GAAEuoB,EAAgBje,GAA4B,CAC7CE,wBAAAA,EACAC,wBAAAA,0BAgCC2zD,GAAqBpD,yBAuNf,SAAuBC,GACzBh6C,GAAQjF,GAAczP,UAAW0uD,KACpC1jE,EAAM,yBAA0B0jE,IAE5Bv4C,GAAgBu4C,IAA4C,OAAtBA,IACxCryC,GAAgBqyC,IA3NnB+J,CAAuB/J,6CAIvBj7D,EAAA,GAAAm0D,GAAUt1C,EAAY1V,GvB3HX,SACdkiF,EACAC,GAEA,IAImCC,EAJ7BC,EAAiB,IAAIloG,IAAIgoG,EAAgB91F,IAAI6Q,IAC7ColF,EAAgB,IAAInoG,IAAI+nG,EAAW71F,IAAI6Q,QAGxBmlF,OAArB,IAAAE,EAAAluE,MAAA+tE,EAAAG,EAAAh4F,KAAA+pB,MAAqC,CAA1B,IAAAlV,EAAMgjF,EAAA9nG,MACVgoG,EAAcloG,IAAIglB,IACrBijF,EAAc,OAAQjjF,EAEzB,oCAGiCojF,MAAbF,GAAa,IAAlC,IAAAG,EAAApuE,MAAAmuE,EAAAC,EAAAl4F,KAAA+pB,MAAoC,KAAzBlV,EAAMojF,EAAAloG,MACV+nG,EAAejoG,IAAIglB,IACtBijF,EAAez7F,IAAIwY,EAEtB,CAAA,CAAA,MAAA5D,GAAAinF,EAAAh8F,EAAA+U,EAAA,CAAA,QAAAinF,EAAAnnG,IAED,OAAOiR,EAAI81F,GAAgBh2F,IAAI+Q,EACjC,CuBsGMslF,CAAoBh5B,GAAW1pD,EAAM2/E,EAAgB/1B,IAAiBoB,iCAGvE23B,EAAqB3iF,IAASoK,EAAQ4gD,wBACtCn0D,EAAA,GAAA+rF,EAAoBj5F,MAAMmS,QAAQkE,IAASA,EAAK7mB,OAASywE,0CAc3D/yD,EAAA,GAAEskD,EAAiB8O,GAClBp1B,GACAq1B,GACAlqD,EACA4/E,GACAx1B,wBAWIoH,GACFA,EAAY/5D,SAAQ,CAClBD,IAAKg6D,EAAY38B,UACjBn9B,KAAM85D,EAAY58B,+EAsFrB1vC,GAAO,CACRmrB,SAAAA,EACAxU,OAAAA,EACAujB,cAAAA,EACAg8B,0BAAep7C,GACf4hD,mCAAwB/uC,EACxBwuC,EAAAA,YAAAA,GACA9hC,eAAAA,GACAnnB,MAAAA,GACAkY,QAASmjD,GACTn0C,SAAUG,GACV1B,OAAQgiE,GACR1gE,YAAao7C,GACb/d,cAAAA,8CAkKCoY,GAAuB90D,EAAMwwC,EAAW30C,EAAQ40C,4BAChDoyC,EAA0Bv3B,GAAsB3a,GAAkBqa,oCAsP/D2J,SAA2B77E,IAATknB,EAAkB,CAChC,IAAAs1D,EAAgBziD,GAChB0iD,EAAev1D,EACfmpD,EAAelrE,EACfo3E,EAAe,CAAKr1D,KAAAA,EAAM/hB,KAAAA,GAC1Bu3E,EAAyBb,GAG/B99D,EAAA,GAAA5Y,OAAOnF,GACP+d,EAAA,GAAA89D,IAAiB,GAEjBe,GAA8B11D,GAE9B21D,GAAc,CACZJ,aAAAA,EACAD,cAAAA,EACAnM,aAAAA,EACAqM,uBAAAA,IAQFI,GAAaP,EAFO,MAKb,MAAA,CAAAr1D,KAAAA,EAAM/hB,KAAAA,mDAheiDnF,UAEzD,SAAegqG,OAClBzyE,GAIJjiB,EAAM,iBAAkB00F,OAGlB77F,EAAY67F,EAAgB91C,gBAAkBr0C,GAAc8B,MAAQ,EAAI,EAE9Eg5D,GADmBzO,GAAShlD,EAFd,GAE8B8iF,EAAgB7lF,KAAMhW,IACzC,SAAAy4B,EAAaC,UAElC7pB,MAAKnE,EAAAA,KACAguB,GAAY,CAAA,EAAA,CACf1M,aAAc6vE,UAuYb,SAAavkG,GACpBsY,EAAA,GAAAg+B,GAAat2C,EAAM3C,OAAkC,YAG9C,SAAgB2C,OACjB3C,EAAS2C,EAAM3C,OACfqhB,EAAOwH,GAAsB7oB,MAC/BqhB,EAAI,CAGJ,GAAAsf,GAAmB1J,GAAczP,YACjC2Z,GAAgB/c,EAAM6S,GAAczP,UAAWnG,UAKjDwiB,GAAgB1E,GAAqB9d,GAAM,IAE3C1e,EAAMM,iBAIH2jB,GAAkB5mB,EAAQ,WAAcA,EAAOmoB,mBAClD3L,YA6RK,SAA+B7Z,GAClC8xB,GAIJsqD,GAAe,CACbv9E,OAAQ8mB,GAAuB3lB,EAAM3C,OAAuB,UAC5DwsB,UAAW,EACXtR,MAAOwD,GACPtD,OAAQqD,GACR49C,SAAS,gBAyDuB,OAAAipC,GAAA50F,MAAA/K,KAAAA,UAAA2/F,aA8ClC9yF,EAAM,qBACNyI,EAAA,GAAAgpB,QAAa/mC,GACbsf,iBAIA85D,EAAa55D,GAAKra,OAsEX,SAAcM,OACfsgC,EAAQlY,GAAkBpoB,GAgD5B,GA/CJ6P,EAAM,UAAa,CAAAywB,MAAAA,EAAOh/B,IAAKtB,EAAMsB,MAEvB,WAAVg/B,IAEFtgC,EAAMM,iBACN+3E,IAAU,IAEE,iBAAV/3C,IAEFtgC,EAAMM,iBACN+3E,IAAU,IAEE,WAAV/3C,IAEFtgC,EAAMM,iBACNo4E,IAAW,IAEC,iBAAVp4C,IAEFtgC,EAAMM,iBACNo4E,IAAW,IAIC,WAAVp4C,GACFtgC,EAAMM,iBAIM,WAAVggC,GAAgC,cAAVA,IACxBtgC,EAAMM,iBACN24E,MAEY,WAAV34C,GACFtgC,EAAMM,iBAGM,WAAVggC,GACFtgC,EAAMM,iBAKM,WAAVggC,GACFw5C,GAAkB95E,GAGN,cAAVsgC,IACFtgC,EAAMM,iBAENmhG,KAEIntE,GAAczP,WAAS,CACnB,IAAAse,EvB/8BE,SAAqBspC,EAAqB5nD,GACxD,IAAA2/E,EAAkC73B,GAAoBvxC,GAAavW,GAAY4nD,GAAvEC,EAAQ83B,EAAR93B,SAAUG,EAAW23B,EAAX33B,YAElB,OAAIA,EAAc,EAGTrwC,GADcswC,GADI,CAAEJ,SAAAA,EAAUG,YAAaA,EAAc,GACHJ,IACnB,GAGrC5nD,CACT,CuBq8B6B4/E,CAAqBh4B,GAASn4C,GAAczP,WACjEqc,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAI5B,GAAU,eAAV7C,IACFtgC,EAAMM,iBAENmhG,KAEIntE,GAAczP,WAAS,CACnB,IAAAse,EvB/8BE,SAAiBspC,EAAqB5nD,GACpD,IAAA6/E,EAAkC/3B,GAAoBvxC,GAAavW,GAAY4nD,GAAvEC,EAAQg4B,EAARh4B,SAAUG,EAAW63B,EAAX73B,YAElB,OAAIA,EAAcJ,EAAQ7xE,OAAS,EAG1B4hC,GADUswC,GADI,CAAEJ,SAAAA,EAAUG,YAAaA,EAAc,GACPJ,IACf,GAGjC5nD,CACT,CuBq8B6B8/E,CAAiBl4B,GAASn4C,GAAczP,WAC7Dqc,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAI5B,GAAU,YAAV7C,IACFtgC,EAAMM,iBAENmhG,KAEIntE,GAAczP,WAAS,CACnB,IAAAse,EvBngCE,SAAkBspC,EAAqB5nD,GACrD,IAAA+/E,EAAkCj4B,GAAoBvxC,GAAavW,GAAY4nD,GAAvEC,EAAQk4B,EAARl4B,SAAUG,EAAW+3B,EAAX/3B,YAElB,OAAIH,EAAW,EAGNlwC,GADcswC,GADI,CAAEJ,SAAUA,EAAW,EAAGG,YAAAA,GACUJ,IACnB,GAGrC5nD,CACT,CuBy/B6BggF,CAAkBp4B,GAASn4C,GAAczP,WAC9Dqc,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAI5B,GAAU,cAAV7C,IACFtgC,EAAMM,iBAENmhG,KAEIntE,GAAczP,WAAS,KACnBse,WvBlgCZ1hB,EACAgrD,EACA5nD,GAEA,IAAAigF,EAAkCn4B,GAAoBvxC,GAAavW,GAAY4nD,GAAvEC,EAAQo4B,EAARp4B,SAAUG,EAAWi4B,EAAXj4B,YAElB,OAAIH,EAAYjrD,EAAwB7mB,OAAS,EAGxC4hC,GADUswC,GADI,CAAEJ,SAAUA,EAAW,EAAGG,YAAAA,GACMJ,IACf,GAGjC5nD,CACT,CuBq/B6BkgF,CAActjF,EAAMgrD,GAASn4C,GAAczP,WAChEqc,GAAgBiC,GAChB2mB,GAAe1uB,GAAa+H,IAI5B,GAAU,UAAV7C,GAAqBhM,GAAczP,WACjC8V,GAAiBrG,GAAczP,WAAS,CAC1C7kB,EAAMM,iBAEA,IAAAoe,EAAO4V,GAAczP,UAAUnG,KAEjChC,GADU4Y,EAAM7T,EAAM/C,IAGxBy5D,GAAoBz5D,GAEfoT,GAEHoP,GAAe9tB,EAAAA,EAAMkhB,CAAAA,EAAAA,GAAczP,WAAW2Y,CAAAA,EAAAA,CAAAA,MAAM,KAOxD,GAA2B,IADP8C,EAAM5oB,QAAQ,WAAY,IAC9B9c,QAAgB05B,GAAczP,iBAGhD7kB,EAAMM,+BAtI0B0kG,GAAAzB,GAAAx1F,MAAA/K,KAAAA,UAAAugG,CAuIhCvpB,CAAsBh6E,EAAMsB,KAI1B,GAAU,eAAVg/B,GAA0B3F,GAAiBrG,GAAczP,WAAS,KAC9D9oB,EAAQu5B,EAAM7T,EAAM6S,GAAczP,UAAUnG,MAE9Cf,GAAM5hB,IAERK,OAAOgc,KAAKoK,OAAOzmB,GAAQ,UAIjB,WAAVukC,GAAsBhM,GAAczP,YACtC7kB,EAAMM,iBACN4gC,GAAgB,OAGJ,WAAVZ,GACFtgC,EAAMM,iBAKM,WAAVggC,GACFtgC,EAAMM,iBAKM,WAAVggC,IACFtgC,EAAMM,iBAEN+5E,MAGY,iBAAV/5C,IACFtgC,EAAMM,iBAENg6E,OAIK,SAAYt6E,GAAqBilG,IAAAA,EACxCjlG,EAAMM,iBAEA,IAAAmgC,EAAmCwkE,QAAtBA,EAAGjlG,EAAMwgC,qBAANykE,IAAmBA,OAAnBA,EAAAA,EAAqBvkE,QAAQ,mBAC7BnmC,IAAlBkmC,GAIJf,GAAO,CACLe,cAAAA,EACAhf,KAAAA,EACAoD,UAAWyP,GAAczP,UACzBiN,SAAAA,EACAxU,OAAAA,EACAyU,QAASmjD,GACThG,aAAcwM,GACdvM,gBAAAA,MAoGK,SAA4Bp/D,GACnCF,EAAM,0BAA2BE,GAEjCmxB,GAAgB1E,GAAqBzsB,EAAM2O,MAAM,IAEjDxF,GAASnJ,EAAM2O,sBAGR,SAAcgoD,GACjB50C,QAAqBv3B,IAATknB,IAIhBsyD,IAAY,EAEZH,GAAW,CACT51E,GAAIk1E,EACJzxD,KAAAA,EACAilD,SAAAA,EACAlM,OAAW,SAAA0qC,GAAA,IAAA5uE,EAAU4uE,EAAV5uE,WAAY8C,EAAQ8rE,EAAR9rE,SAAU1wB,EAASw8F,EAATx8F,UAC/BmH,EAAM,SAAUymB,EAAYowC,EAAUttC,EAAU1wB,GAEhDwsE,GAAY5+C,GAAa,SAAA6K,EAAaC,UAElC7pB,MAAKnE,EAAAA,KACAguB,GAAY,CAAA,EAAA,CACf1M,aAAY,CACVhW,KAAM0a,EACNq1B,eAA8B,IAAf/lD,EAAmB0R,GAAc8B,KAAO9B,GAAc6B,YAM/EhE,QAAO,WACL87D,IAAY,EACZl6D,SA4FJ0gE,CADc,gBAKdI,IACEjU,SAAQ,YAwFH,SAAqB3oE,GAC5Bua,EAAA,GAAAqzD,GAAiB5tE,EAAQipB,wBAAwBvO,gIAuClC6R,EAAcxQ,OA0CK,WAAA,OAAAxB,EAAA,EAAA+yD,GAAiBhpD,IAAQ,EAmBtB,SAAAqqD,EAAA3uE,GAAY,OAAA2lG,GAAgB3lG,EAAS2uE,wDAtD3DuG,EAAWn5D,2DA9BjB+2D,EAAa/2D,8jCC95CL/f,EAAO,qBACLA,EAAS,0WAoBdA,EAAgB,wBACTA,EAAuB,+NAtB3BA,EAAO,iCACLA,EAAS,uqBAoBdA,EAAgB,oCACTA,EAAuB,+SAlD3BA,EAAO,qBACLA,EAAS,2TAiBdA,EAAgB,wBACTA,EAAuB,+NAnB3BA,EAAO,iCACLA,EAAS,okBAiBdA,EAAgB,oCACTA,EAAuB,+SA5C3BA,EAAO,qBACLA,EAAS,yRAiBdA,EAAgB,uMAlBbA,EAAO,iCACLA,EAAS,6hBAiBdA,EAAgB,+TArB7BA,EAAI,KAAKggB,GAAKra,MAAyB,SAAjB8iB,OAAOzoB,EAAI,UAyB5BA,EAAI,KAAKggB,GAAKszC,MAAK,4YAlMvB83C,EACAC,EACAC,EAEAC,EAgCAC,EASAC,EAhFOhkF,EAAgBjN,EAAhBiN,QACAqD,EAAqCtQ,EAArCsQ,UAEAiN,EAAiBvd,EAAjBud,SACAhQ,EAA4BvN,EAA5BuN,YACAy0E,EAAehiF,EAAfgiF,QACArQ,EAAU3xE,EAAV2xE,KACA1S,EAAoBj/D,EAApBi/D,YACAC,EAAsBl/D,EAAtBk/D,cACA4iB,EAAkB9hF,EAAlB8hF,UACAC,EAAoB/hF,EAApB+hF,YACAxzE,EAAgCvO,EAAhCuO,wBACAC,EAAgCxO,EAAhCwO,wBACAq+E,EAAuB7sF,EAAvB6sF,eACA9jF,EAAkB/I,EAAlB+I,OACAo2D,EAAoCn/D,EAApCm/D,gBACAzhB,EAA2B19C,EAA3B09C,UACAC,EAA4B39C,EAA5B29C,iBACAiW,EAA0B5zD,EAA1B4zD,WACAs9B,EAAoBlxF,EAApBkxF,YAEAvzE,EAAkB3d,EAAlB2d,SACAyhD,EAA0Bp/D,EAA1Bo/D,aACA5yC,EAAkBxsB,EAAlBwsB,SACAo9B,EAA4B5pD,EAA5B4pD,cACA8D,EAAwB1tD,EAAxB0tD,YACA0D,EAA0BpxD,EAA1BoxD,aACAhM,EAAwCplD,EAAxColD,oBACAyO,EAAgB7zD,EAAhB6zD,QACAvV,EAAgBt+C,EAAhBs+C,QACAC,EAAcv+C,EAAdu+C,OACA8gB,EAAwBr/D,EAAxBq/D,YACAC,EAAkCt/D,EAAlCs/D,iBACAC,EAAoCv/D,EAApCu/D,kBAkCL4xB,EAAiB,CACrB7iG,KAAM,aA8HqB,SAAA8iG,WAAAA,EAAAtzE,EAAAC,IAAAC,6EACvB8yE,KAAAA,EAAAA,IAAAA,EAAWO,CAAAA,EAAAtgG,KAAA,EAAA,KAAA,CAAA,OAAAsgG,EAAAtgG,KAAA,EACP+/F,EAAYn9E,UAAO,KAAA,EAAA,IAAA,MAAA,OAAA09E,EAAAt4D,UAAAu4D,EAAA,w5CA5J1BP,EAAa,EAEZziG,KAAM,SACNnD,KAAM,OACN2zD,4CAAKjvD,OAAwC8hF,EAAI,KAEjDp3D,UACE,8BACCo3D,IAASnsE,GAAKra,MAA6B,SAApBwmF,EAA6B,gBAAkB,IACzEryB,QAAe,WAAA,OAAA8f,EAAa55D,GAAKra,SAGjCmD,KAAM,SACNnD,KAAM,OACN2zD,MAAKjvD,sCAAAA,OAAwC8hF,EAAI,KACjDp3D,UAAW,qBAAuBo3D,IAASnsE,GAAK0qE,KAAO,gBAAkB,IACzE5wB,QAAe,kBAAA8f,EAAa55D,GAAK0qE,SAGjC5hF,KAAM,SACNnD,KAAM,QACN2zD,MAAKjvD,uCAAAA,OAAyC8hF,EAAI,KAClDp3D,UAAW,6BAA+Bo3D,IAASnsE,GAAKszC,MAAQ,gBAAkB,IAClFwG,QAAe,WAAA,OAAA8f,EAAa55D,GAAKszC,iDASpC/0C,EAAA,GAAEitF,EAAoB,SAAAzhE,GACf,IAAAgiE,EAAevwC,GAAYzxB,EAAM,IACnCwhE,EAAclhG,OAAO0/B,GACrBwhE,EAAclhG,OAAOshG,EAAmB5hE,UAErC6hC,EAAamgC,EAAgB,CAAA5f,KAAAA,EAAM6f,MAAON,KAAkBK,uCAIpExtF,EAAA,GAAEktF,EAA2B,SAAA1hE,UACrB61B,EAAoB71B,EAAS,CAAAoiD,KAAAA,EAAM6f,MAAON,KAAkB3hE,gFAGrD,SAAMxN,MAChB6uE,SAGKA,EAAYxtB,MAAMrhD,MAGvB8uE,SAGKA,EAAaztB,MAAMrhD,MAGxB+uE,SACKA,EAAY1tB,MAAMrhD,GAGjB,MAAA,IAAAvwB,MAAK,0CAAA3B,OAA2C8hF,EAAI,OAGhD,SAAO99E,MACjB+8F,SACKA,EAAYxwE,OAAOvsB,GAEhB,MAAA,IAAArC,MAAK,2CAAA3B,OAA4C8hF,EAAI,OAOnD,SAAUhmF,MACpBmlG,EACFA,EAAY1qB,mBAAmBz6E,QACtBilG,GAAAA,EACTA,EAAYxqB,mBAAmBz6E,YACtBklG,EAGC,MAAA,IAAAr/F,MAAK,8CAAA3B,OAA+C8hF,EAAI,MAFlEkf,EAAazqB,mBAAmBz6E,mBAW9BmlG,EACK,OAAAA,EAAY5uB,cACV0uB,EACF,OAAAA,EAAY1uB,cACV2uB,EACF,OAAAA,EAAa3uB,WAEV,MAAA,IAAA1wE,MAAK3B,6CAAAA,OAA8C8hF,EAAI,yBAgB/Dif,EACKA,EAAYa,mBAEZxkF,GAIK,SAAS9C,MACnBymF,SACKA,EAAYjsF,SAASwF,GACnB0mF,GAAAA,SACFA,EAAalsF,SAASwF,GAGnB,MAAA,IAAA3Y,MAAK,6CAAA3B,OAA8C8hF,EAAI,OAIrD,SAAYxnE,MACtBymF,SACKA,EAAYriC,YAAYpkD,GACtB0mF,GAAAA,SACFA,EAAatiC,YAAYpkD,GAEtB,MAAA,IAAA3Y,MAAK,gDAAA3B,OAAiD8hF,oBAK9Dmf,EACFA,EAAYxrF,QACHsrF,EACTA,EAAYtrF,QACHurF,GACTA,EAAavrF,oBAIY,OAAA8rF,EAAA53F,WAAA/K,UAAA,wDAYhBqiG,EAAWvrF,2DAyBXsrF,EAAYtrF,2DA4BZqrF,EAAWrrF,22OCtBf/f,EAAK,+DADR6E,GAEKvB,EAAA8f,EAAAte,+CADF9E,EAAK,2FAMMksG,0DAAe,6FAD7BrnG,GAEQvB,EAAA2V,EAAAnU,gDAF8C9E,EAAW,kTAOjE6E,GAA0FvB,EAAA2V,EAAAnU,uBAAtC9E,EAAW,8OAF/D6E,GAA0FvB,EAAA2V,EAAAnU,uBAAtC9E,EAAW,kLAjEvCA,EAAK,IAACa,OAAS,EAAC,KAAAwJ,OAAQrK,MAAMa,OAAM,KAAM,YAC7Db,EAAW,cAgBVmsF,KAAAnsF,MAAamsF,KACV1kE,QAAAznB,MAAaynB,QACXqD,UAAA9qB,MAAa8qB,gTAgBX,UACJ9qB,EAAW,aACVA,EAAY,iBACRA,EAAgB,aACpBA,EAAqB,kDAGtBxB,UACDA,2GAKWwB,EAAqB,wCAKrCA,EAAK,KAAAg2B,GAAAh2B,KAMLA,EAAK,IAACa,OAAS,GAAC4W,GAAAzX,0BAKfA,EAAQ,MAAAmZ,mhBAxD0DnZ,EAAe,gRAV7F6E,GAyEKvB,EAAA63D,EAAAr2D,wBAnEHzB,GAkEK83D,EAAAE,GAjEHh4D,GAEKg4D,EAAAxjD,WACLxU,GAA4Fg4D,EAAAvzD,WAE5FzE,GAEKg4D,EAAA/iD,WAELjV,GAoCKg4D,EAAAD,wBAEL/3D,GAiBKg4D,EAAAC,0FAvEiDt7D,EAAW,qFAErCA,EAAK,IAACa,OAAS,EAACwJ,KAAAA,OAAQrK,MAAMa,OAAM,KAAM,6CAQIb,EAAe,eAAfA,EAAe,cAS/E,QAAAM,EAAA,KAAA6rG,EAAAhgB,KAAAnsF,MAAamsF,MACV,QAAA7rF,EAAA,KAAA6rG,EAAA1kF,QAAAznB,MAAaynB,SACX,QAAAnnB,EAAA,KAAA6rG,EAAArhF,UAAA9qB,MAAa8qB,6tBAkCrB9qB,EAAK,2DAMLA,EAAK,IAACa,OAAS,gZAlEf,SAAAif,GAAM9b,GACbA,EAAQ8b,uCA3INssF,EAtCEt2F,EAAQH,GAAY,8BAEf8R,EAAgBjN,EAAhBiN,QACA9C,EAAcnK,EAAdmK,KACAqT,EAAgBxd,EAAhBwd,QAEAD,EAAiBvd,EAAjBud,SACAhQ,EAA4BvN,EAA5BuN,YACAy0E,EAAehiF,EAAfgiF,QACA/iB,EAAoBj/D,EAApBi/D,YACAC,EAAsBl/D,EAAtBk/D,cACA4iB,EAAkB9hF,EAAlB8hF,UACAC,EAAoB/hF,EAApB+hF,YACAxzE,EAAgCvO,EAAhCuO,wBACAC,EAAgCxO,EAAhCwO,wBACAq+E,EAAuB7sF,EAAvB6sF,eACA9jF,EAAkB/I,EAAlB+I,OACA20C,EAA2B19C,EAA3B09C,UACAC,EAA4B39C,EAA5B29C,iBACAiW,EAA0B5zD,EAA1B4zD,WAEAhK,EAA4B5pD,EAA5B4pD,cACA8D,EAAwB1tD,EAAxB0tD,YACA0D,EAA0BpxD,EAA1BoxD,aACAhM,EAAwCplD,EAAxColD,oBAEAia,EAAwBr/D,EAAxBq/D,YACAC,EAAkCt/D,EAAlCs/D,iBAEHj7D,EAAUhS,GAAoB,gBAA9BgS,MAWFwtF,EAAS,CACblgB,KAAMmgB,EAAc7kF,GACpBA,QAAAA,EACAqD,UAAW,KACXyhF,aAAc5nF,GAEZysE,GAAuBib,GASvBr2F,OAA4BxV,EAEvB,SAAA8rG,EAAc7kF,GACd,OAAAI,GAAcJ,IAAY2V,EAAY3V,EAAQC,MAAQ1H,GAAKszC,MAAQtzC,GAAK0qE,cAGxE8hB,IAAiB,IAAAC,EAClB3hF,GAAqD2hF,QAAbA,EAAApuE,EAAK+yD,UAALqb,IAAaA,OAAbA,EAAAA,EAAa3hF,YAAa,KACpEmW,GAAgBnW,IAClBshF,EAAUjtF,SAASkiB,GAAavW,4hCAhBjC4hF,EAAeruE,EAAK+yD,IAAUib,0BAChC9tF,EAAA,GAAEouF,EAAevb,EAAMsT,SAAS,SAAAlnF,GAAK,OAAKA,EAAM+uF,YAAY,uBAC1DhuF,EAAA,GAAAquF,EAAmB96E,EAAQ66E,GAAkD,kBAAlC17E,GAAkB07E,6BAG7DhzB,EAAkB4C,GAAWh5D,EAAOS,4EAgBrClO,EAAM,gBAEFiiB,MAKFxZ,EAAA,GAAAvI,OAAQxV,OAEFmkB,EAAO+nF,EAAaH,aACpB9kF,EAAUilF,EAAajlF,QACvB8U,EAAU,EAEZtE,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOimB,GAAcR,EAASlE,GAAQmE,UAItC0pE,EAAMvwF,OAAS,EAAC,KAEZgsG,EAAa5kF,GADGmpE,EAAMA,EAAMvwF,OAAS,GAAG4mB,QACElE,GAAQmE,KAClDolF,EAAoB,CACxBplF,KAAM+U,EAAmBowE,EAAYtwE,IAKjCwwE,EAAkB1zF,EAAAA,EAAoB2zF,CAAAA,EADxB5b,EAAMA,EAAMvwF,OAAS,IAAMwrG,GACU5kF,CAAAA,EAAAA,CAAAA,QAASqlF,IAClEvuF,EAAA,GAAA6yE,EAAK/mF,GAAAA,OAAA4J,EAAOm9E,EAAMhxF,MAAM,EAAGgxF,EAAMvwF,OAAS,IAAIksG,CAAAA,KAC9Cp/F,KAAOF,KAAK++F,QAEZx0E,EAAQuE,GAER1d,UAEKqE,QACPlN,EAAQyS,OAAOvF,iBAKjBpN,EAAM,eAEFs7E,EAAMvwF,OAAS,QAEjBuwF,EAAQjzD,EAAQizD,IAChBzjF,KAAOF,KAAK++F,GAGZjuF,EAAA,GAAAvI,OAAQxV,IAGRqe,KAIK,SAAa+9D,GACpB9mE,EAAM,eAAgB8mE,GAEhB,IAAA9+C,EAAYzkB,EAAAA,KACbqzF,GAAY,CAAA,EAAA,CACfjlF,QAASm1D,IAGXr+D,EAAA,GAAA6yE,EAAK/mF,GAAAA,OAAA4J,EAAOkqB,EAAQizD,KAAQtzD,MAGrB,SAAsBsL,GAC7BtzB,EAAM,wBAAyBszB,GAEzB,IAAAtL,EAAYzkB,EAAAA,EAAA,CAAA,EACbqzF,GACH5hF,CAAAA,EAAAA,CAAAA,UAAWse,IAGb7qB,EAAA,GAAA6yE,EAAK,GAAA/mF,OAAA4J,EAAOkqB,EAAQizD,IAAQtzD,CAAAA,MAGrB,SAAiBmvE,GACxBn3F,EAAM,mBAAoBm3F,GAEpB,IAAAnvE,EAAYzkB,EAAAA,KACbqzF,GAAY,CAAA,EAAA,CACfvgB,KAAM8gB,IAGR1uF,EAAA,GAAA6yE,KAAK/mF,OAAA4J,EAAOkqB,EAAQizD,IAAQtzD,CAAAA,MAGrB,SAAYovE,QACnBl3F,EAAQk3F,EAASrjF,YACjBjT,QAAQZ,MAAMk3F,aAGcC,GAAG,IAAA1lF,EAAO0lF,EAAP1lF,QAAS9C,EAAIwoF,EAAJxoF,KACxC7O,EAAM,wBAA2B,CAAA2R,QAAAA,EAAS9C,KAAAA,QAEpCyoF,EAAgB,CACpBjhB,KAAMmgB,EAAc7kF,GACpBA,QAAAA,EACAqD,UAAW,KACXyhF,aAAc5nF,QAEhBysE,KAAK/mF,OAAA4J,EAAOm9E,GAAK,CAAEgc,kEA0BJhB,EAASrsF,0gBC3NpBnT,EAAUC,GAAoB,uBAEhBD,EAAQyR,KACPzR,EAAQiS,i+BCqcN,yBAEH7e,EAAY,iBACRA,EAAU,aACdA,EAAY,kDAGbA,EAAW,WACZA,EAAU,+oCA7BhBA,EAAU,uQADqBA,EAAQ,0CAA/C6E,GAsCKvB,EAAA8f,EAAAte,kJArCG9E,EAAU,8GADqBA,EAAQ,kNAF9B,kVALbmb,aAAAkyF,EAAArtG,0BAAAqtG,EAAsB7jG,WACxB+X,gBACQ,wHACFvhB,EAAoB,mHAHxBmb,aAAAmyF,EAAAttG,0BAAAstG,EAAsB9jG,4jBAjV1B+jG,EACAlvF,EA7CEvI,EAAQH,GAAY,2BAEc6E,EAA7BiN,QAAAA,OAAO,IAAA+lF,EAAA,CAAc7nG,KAAM,IAAE6nG,EAC7BC,EAA4CjzF,EAA5CsQ,UAAAA,OAAwC,IAA/B2iF,EAA+B,KAAIA,EAE5CC,EAAgBlzF,EAAhBud,SAAAA,OAAQ,IAAA21E,GAAQA,EAChBC,EAAgCnzF,EAAhCuN,YAAAA,OAA+B,IAApB4lF,EAAoB,EAACA,EAChCC,EAAWpzF,EAAXgiF,QAAAA,OAAU,IAAHoR,EAAG,EAACA,IACWpzF,EAAtB2xE,KAAAA,OAAI,IAAA0hB,EAAS7tF,GAAK0qE,KAAImjB,EACtBC,EAAkBtzF,EAAlBi/D,YAAAA,OAAc,IAAHq0B,GAAOA,EAClBC,EAAoBvzF,EAApBk/D,cAAAA,OAAa,IAAAq0B,GAAOA,EACpBC,EAAgBxzF,EAAhB8hF,UAAAA,OAAY,IAAH0R,GAAOA,EAChBC,EAAkBzzF,EAAlB+hF,YAAAA,OAAW,IAAA0R,GAAOA,EAClBC,EAA+B1zF,EAA/BuO,wBAAAA,OAA0B,IAAHmlF,GAAQA,EAC/BC,EAA+B3zF,EAA/BwO,wBAAAA,OAAuB,IAAAmlF,GAAQA,EAC/BC,EAAqB5zF,EAArB6sF,eAAAA,OAAiB,IAAH+G,GAAOA,EACrBC,EAAyB7zF,EAAzB+I,OAAAA,OAAqByE,IAAfqmF,EAAermF,KAAIqmF,EACzBC,EAAkC9zF,EAAlC09C,UAAAA,OAAS,IAAAo2C,EAAqB,KAAIA,EAClCC,EAAmC/zF,EAAnC29C,iBAAAA,OAA+BnwC,IAAfumF,EAAevmF,KAAIumF,MACnCngC,WAAAA,OAAU,IAAAogC,EAAA,CACnBxqF,MAAOmN,GACPzN,UAAWuN,MAGFw9E,EAA0Dj0F,EAA1D07C,eAAAA,WAAcu4C,GAAqBz7E,IAAuBy7E,EAC1DC,EAA8Cl0F,EAA9C27C,gBAAAA,OAAe,IAAAu4C,EAAWx4C,EAAe,GAAGjyD,GAAEyqG,EAE9CC,EAAmDn0F,EAAnD47C,sBAAAA,OAAqB,IAAAu4C,EAA0BnwG,GAAImwG,EACnDC,EAAyBp0F,EAAzB2d,SAAAA,OAAQ,IAAAy2E,EAAa,KAAIA,EACzBC,EAAyBr0F,EAAzBwsB,SAAAA,OAAqBxoC,IAAbqwG,EAAarwG,GAAIqwG,EACzBC,EAA0Ct0F,EAA1C4pD,cAAAA,QAAa,IAAA0qC,EAAkBjhE,GAAWihE,EAC1CC,GAA0Cv0F,EAA1C0tD,YAAAA,YAAW6mC,cAA+BA,EAAAA,GAC1CC,GAAiCx0F,EAAjCoxD,aAAAA,QAA6BptE,IAAjBwwG,GAAiBxwG,GAAIwwG,GACjCC,GAA+Cz0F,EAA/ColD,oBAAAA,QAAmB,IAAAqvC,GAAwBzwG,GAAIywG,GAC/CC,GAAiC10F,EAAjCo/D,aAAAA,QAA6Bp7E,IAAjB0wG,GAAiB1wG,GAAI0wG,GACjCC,KAAA9gC,QAAAA,QAAO,IAAA8gC,GAAa,SAAAjsF,GAC7BtM,QAAQZ,MAAMkN,GACdksF,MAAMlsF,EAAI2G,gBAEDwlF,GAAuB70F,EAAvBs+C,QAAAA,QAAmBt6D,IAAZ6wG,GAAY7wG,GAAI6wG,GACvBC,GAAqB90F,EAArBu+C,OAAAA,QAAiBv6D,IAAX8wG,GAAW9wG,GAAI8wG,GAE5BC,GAAantF,KACbwkB,IAAW,EAGX4oE,GAGO,KAgBPC,GAAiBlsF,WAuBImsF,YAAAA,GAAAp3E,EAAAC,IAAAC,MAAH,SAAAm3E,EAAIzN,GAAmB0N,IAAAA,SAAAr3E,IAAAhf,MAAAs2F,SAAAC,GAAAA,cAAAA,EAAAh3E,KAAAg3E,EAAAvkG,MAC3CuK,KAAAA,EAEmD,GAFnDA,EAAM,SAEA85F,EAAepoF,GAAoB06E,IACzB4N,CAAAA,EAAAvkG,mBACJ,IAAAS,MAAM4jG,UAIG,OAArBrxF,EAAA,GAAAgxF,GAAantF,MAAQ0tF,EAAAvkG,KAAA,EAEfoC,KAAI,KAAA,EAGV4Q,EAAA,EAAAkJ,EAAUy6E,GAAU,KAAA,EAAA,IAAA,MAAA,OAAA4N,EAAAv8D,OAAAo8D,GAAAA,6BAGA,UAAMI,YAAAA,GAAAz3E,EAAAC,IAAAC,MAAN,SAAAw3E,EAAOpzB,OAAuBgzB,EAAA,OAAAr3E,IAAAhf,MAAA,SAAA02F,GAAA,cAAAA,EAAAn3E,KAAAm3E,EAAA1kG,MAClDuK,KAAAA,EAGI85F,GAHJ95F,EAAM,YAEA85F,EAAepoF,GAAoBo1D,IACzBqzB,CAAAA,EAAA1kG,mBACJ,IAAAS,MAAM4jG,UAGM,OAAxBrxF,EAAA,EAAAkJ,EAAUm1D,GAAcqzB,EAAA1kG,KAAA,EAElBoC,KAAI,KAAA,EAAA,IAAA,MAAA,OAAAsiG,EAAA18D,OAAAy8D,GAAAA,6BAGU,UAAKE,YAAAA,GAAA53E,EAAAC,IAAAC,MAAL,SAAA23E,EAAM5zE,OAA6B96B,EAAA,OAAA82B,IAAAhf,MAAA,SAAA62F,GAAA,cAAAA,EAAAt3E,KAAAs3E,EAAA7kG,MACnDqc,KAAAA,EAAAA,IAAAA,GAAcH,GAAO2oF,CAAAA,EAAA7kG,KAAA6kG,EAAAA,KAAAA,CAAAA,EAAAt3E,KAAA,MAErBrR,EAAO,CACLC,KAAMnE,EAAOS,MAAMyD,EAAQ9hB,MAC3BA,UAAMnF,0BAGE,sBAAA,MAAA,GAAA,IAAAwL,MAAM,qEAM6B,OAA3CvK,EAAS8rG,EAAkB3vB,MAAMrhD,GAAU6zE,EAAA7kG,KAAA,GAE3CoC,KAAIyiG,KAAAA,GAAAA,OAAAA,EAAA98D,OAEH7xC,SAAAA,GAAM2uG,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAA78D,OAAA48D,GAAAA,0CAGO,CAAME,SAAAA,YAAAA,GAAA/3E,EAAAC,IAAAC,MAAN,SAAA83E,EAAOlnE,GAAwC7Q,OAAAA,IAAAhf,MAAA,SAAAg3F,GAAAA,cAAAA,EAAAz3E,KAAAy3E,EAAAhlG,MACnEgT,KAAAA,EAAwB,OAAxBA,EAAA,EAAAuM,EAAYse,GAAYmnE,EAAAhlG,KAAA,EAElBoC,KAAI4iG,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAh9D,OAAA,GAAA+8D,EAAA,2BAGU,CAAME,SAAAA,YAAAA,GAAAl4E,EAAAC,IAAAC,MAAN,SAAAi4E,EAAOpiG,GAAmB,OAAAkqB,IAAAhf,MAAA,SAAAm3F,GAAAA,cAAAA,EAAA53E,KAAA43E,EAAAnlG,MAC9CgiG,KAAAA,EAAiC,OAAjCA,EAAkB3yE,OAAOvsB,GAAQqiG,EAAAnlG,KAAA,EAE3BoC,6BAAI+iG,EAAAn9D,OAAA,GAAAk9D,EAAA,2BAMI,CAuBsB,SAAAE,YAAAA,GAAAr4E,EAAAC,IAAAC,0FACc,OAA5C/Q,EAAU8lF,EAAkBtB,mBAAgB2E,EAAArlG,KAAA,EAE5CoC,mBAAIijG,EAAAt9D,OAAA,SAEH7rB,GAAO,KAAA,EAAA,IAAA,MAAA,OAAAmpF,EAAAr9D,OAAA,GAAAs9D,EAAA,6BAGM,CAAQ,SAAAC,YAAAA,GAAAx4E,EAAAC,IAAAC,MAAR,SAAAu4E,EAASpsF,GAAc4T,OAAAA,IAAAhf,MAAAy3F,SAAAC,GAAAA,cAAAA,EAAAn4E,KAAAm4E,EAAA1lG,MAAA0lG,KAAAA,EACrC,OADqCA,EAAA1lG,KACrC,EAAAgiG,EAAkBpuF,SAASwF,GAAI,KAAA,EAAA,IAAA,MAAA,OAAAssF,EAAA19D,OAAA,GAAAw9D,EAAA,2BAGvB,UAIMjxF,KAAK,OAAAoxF,GAAAl9F,MAAAvN,KAAAwC,UAAA,CAAA,SAAAioG,YAAAA,GAAA54E,EAAAC,IAAAC,oFACF,OAAvB+0E,EAAkBztF,QAAKqxF,EAAA5lG,KAAA,EAEjBoC,KAAIwjG,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAA59D,OAAA69D,GAAAA,6BAGU,CAAOC,SAAAA,YAAAA,GAAA/4E,EAAAC,IAAAC,oFACrB,cAAA,EAAA+0E,EAAkBp/E,UAAO,KAAA,EAAA,IAAA,MAAA,OAAAmjF,EAAA/9D,OAAAg+D,GAAAA,8BAGA,SAAAC,YAAAA,GAAAl5E,EAAAC,IAAAC,MAAX,SAAAi5E,EAAYjwG,GAA8B+2B,OAAAA,IAAAhf,MAAAm4F,SAAAC,GAAA,cAAAA,EAAA74E,KAAA64E,EAAApmG,aAG/C,OAAf9E,KAAKmrG,KAAKpwG,GAAKmwG,EAAApmG,KAAA,EAEToC,KAAI,KAAA,EAAA,IAAA,MAAA,OAAAgkG,EAAAp+D,OAAA,GAAAk+D,EAAAhrG,KAAA,2BAGU,CAAO,SAAAorG,YAAAA,GAAAv5E,EAAAC,IAAAC,oFAKrB,OAFN/xB,KAAK8O,WAAQu8F,EAAAvmG,KAEP,EAAAoC,KAAI,KAAA,EAAA,IAAA,MAAA,OAAAmkG,EAAAv+D,OAAA,GAAAw+D,EAAAtrG,KAAA,2BAGH,CA4BgB,SAAAurG,YAAAA,GAAA15E,EAAAC,IAAAC,MAAV,SAAAy5E,EAAWhF,GAAa,OAAA10E,IAAAhf,MAAA24F,SAAAC,GAAA,cAAAA,EAAAr5E,KAAAq5E,EAAA5mG,MAAA,KAAA,EAAA,GACjC4gF,IAAS8gB,EAAO,CAAAkF,EAAA5mG,KAAA,EAAA,KAAA,CAAA,OAAA4mG,EAAA7+D,OAAA,UAAA,KAAA,EAIN,OAAd/0B,EAAA,EAAA4tE,EAAO8gB,GAAOkF,EAAA5mG,KAAA,EAERoC,KAAIwkG,KAAAA,EACJ,OADIA,EAAA5mG,KACJ,EAAAuU,KAAK,KAAA,EAEX85D,GAAaqzB,GAAO,KAAA,EAAA,IAAA,MAAA,OAAAkF,EAAA5+D,OAAA,GAAA0+D,EAAA,4BAGb,SAAA57C,GAA0BC,GACjCxgD,EAAM,4BAA6BwgD,GACnC/3C,EAAA,GAAA43C,EAAkBG,GAClBF,EAAsBE,YAKfwjB,GAAgBs4B,GAA2C,IAAxCnuG,EAAEmuG,EAAFnuG,GAAIyjB,EAAI0qF,EAAJ1qF,KAAMilD,EAAQylC,EAARzlC,SAAUjM,EAAW0xC,EAAX1xC,YAAaxiD,EAAOk0F,EAAPl0F,QACvD6Z,GAIJ1Z,EACEg0F,IAEEpuG,GAAAA,EACAyjB,KAAAA,EACAilD,SAAAA,EACA5kD,YAAAA,EACAgB,wBAAAA,EACAC,wBAAAA,EACAzF,OAAAA,EACAo2D,gBAAAA,EACAxhB,iBAAAA,EACAiW,WAAAA,EACAlY,eAAAA,EACAC,gBAAAA,EACAC,sBAAuBC,GACvB+N,cAAAA,GACAwH,aAAAA,GACAhM,oBAAAA,GACAsI,YAAAA,GACAxH,YAAAA,GAEFp/C,GAEE,CAAApD,QAAAA,aAMG27D,GAAWy4B,GAAG,IAAAruG,EAAEquG,EAAFruG,GAAIyjB,EAAI4qF,EAAJ5qF,KAAMilD,EAAQ2lC,EAAR3lC,SAAUlM,EAAM6xC,EAAN7xC,OAAQviD,EAAOo0F,EAAPp0F,QAC7C6Z,GAIJ1Z,EACEk0F,GAAS,CAEPtuG,GAAAA,EACAyjB,KAAAA,EACAilD,SAAAA,EACAlM,OAAAA,GAEFp/C,GAEE,CAAAnD,QAAAA,+0CA3PCwK,GAAcnF,EAAQksF,IAAc,CAGnC,GAFJ35F,EAAM,mCAEF+R,GAAcJ,GAAO,CACjB,IAAA9hB,EAAO8pG,GAAe/rF,UAAU+D,EAAQC,UAC9CD,EAAO,CACLC,UAAelnB,IAATmF,EAAqB4d,EAAOS,MAAMre,QAAQnF,IAIpD+d,EAAA,GAAAkxF,GAAiBlsF,GAGjBhF,EAAA,GAAAgxF,GAAantF,8BA5BTwtF,EAAepoF,GAAoBC,GACrCmoF,GACFh5F,QAAQZ,MAAM,UAAY45F,4BAO3Bj2B,EAAkB4C,GAAWh5D,EAAOS,0BAkTrClO,EAAM,kBAAmBq2E,GAGZ,SAATA,GAEFv1E,QAAQugB,KACN,6JA1JG,SAAaylD,EAAyBG,EAA0By1B,GACvEj0F,EAAA,EAAAkJ,EAAUm1D,GAENzkD,GACFA,EAASykD,EAAgBG,EAAiBy1B,IAIrC,SAAa1tC,GACpBvmD,EAAA,EAAAuM,EAAYg6C,GAEZ99B,EAAS89B,eAITvmD,EAAA,GAAAqoB,IAAW,GACPkyB,IACFA,iBAKFv6C,EAAA,GAAAqoB,IAAW,GACPmyB,IACFA,eAIqB05C,GAAA,OAAAT,GAAAh+F,MAAAvN,KAAAwC,UAAA,QA8EhB,SAAiBypG,GAAG,IAAAjrF,EAAOirF,EAAPjrF,QAAS9C,EAAI+tF,EAAJ/tF,KAAMqT,EAAO06E,EAAP16E,QAAS9Z,EAAOw0F,EAAPx0F,QACnDpI,EAAM,oBAAuB,CAAA2R,QAAAA,EAAS9C,KAAAA,SAEtC6qF,GAAoB,CAClBhmG,UAAW+J,GAAKo/F,GAAe,CAC7BlrF,QAAAA,EACA9C,KAAAA,EACAqT,QAAAA,EAEAD,SAAAA,EACAhQ,YAAAA,EACAy0E,QAAAA,EACA/iB,YAAAA,EACAC,cAAAA,EACA4iB,UAAAA,EACAC,YAAAA,EACAxzE,wBAAAA,EACAC,wBAAAA,EACAq+E,eAAAA,EACA9jF,OAAAA,EACA20C,eAAW13D,EACX23D,iBAAAA,EACAiW,WAAAA,EACAhK,cAAAA,GACA8D,YAAAA,GACA0D,aAAAA,GACAhM,oBAAAA,GACAia,YAAAA,GACAC,iBAAAA,KAEFrtE,UACE,CAAAyR,QAAAA,qBAKuB00F,EAAAC,UAC3BD,EAAApD,UAAoB,IAAAoD,GAAW,QAAXA,EAApBA,EAAsBnmG,iBAASomG,IAAAD,GAASC,QAATA,EAA/BD,EAAiC10F,mBAAO20F,GAAxCA,EAAArsG,KAAAosG,GACAr0F,EAAA,GAAAixF,GAAuB,4CAtRhB/nF,YAGgBqrF,UAAApD,GAAA17F,MAAA/K,KAAAA,YAiBH,SAAM8pG,GAAAhD,OAAAA,GAAA/7F,MAAA/K,KAAAA,YAaN,SAAK+pG,GAAA9C,OAAAA,GAAAl8F,MAAA/K,KAAAA,YAqBL,SAAMgqG,GAAA,OAAA5C,GAAAr8F,MAAAvN,KAAAwC,UAAAonG,EAMN,SAAM6C,GAAA,OAAA1C,GAAAx8F,MAAA/K,KAAAA,UAAAunG,EASZ,SAAUrqG,GACxBonG,EAAkB3xD,UAAUz1C,eAQrB,OAAAonG,EAAkB7wB,uBAcW,OAAAi0B,GAAA38F,MAAAvN,KAAAwC,UAAA,EAQhB,SAAQkqG,GAAA,OAAArC,GAAA98F,MAAAvN,KAAAwC,UAAA,EAId,SAAY0b,UACnB4oF,EAAkBxkC,YAAYpkD,OASjB,WAAO0sF,OAAAA,GAAAr9F,MAAA/K,KAAAA,UAAAooG,WAII+B,UAAA5B,GAAAx9F,MAAAvN,KAAAwC,UAAA,EAQX,WAAO,OAAA4oG,GAAA79F,MAAAvN,KAAAwC,UAAA,gFAoLRskG,EAAiBxtF,6wFCrYN6sB,EAAA5sC,MAAO2F,KAAI,8CAA1B0tG,EAAA9qG,QAAA+qG,EAAAtzG,MAAOgC,uCAAtB6C,GAAkDvB,EAAA+vG,EAAAvuG,4BAApB,EAAAxE,GAAAssC,KAAAA,EAAA5sC,MAAO2F,KAAI,KAAAiC,GAAAwC,EAAAwiC,GAA1B,EAAAtsC,GAAAgzG,KAAAA,EAAAtzG,MAAOgC,oGADjBhC,EAAO,iBAAZa,OAAIC,GAAA,wIAPmBokC,GAAcllC,EAAS,GAAEA,EAAM,MAAA,uBAEnC,IAATA,EAAS,IAAA4N,IAAA,WAAA,OAAA5N,EAAA,IAAAwG,KAAA4B,MADDM,GAAAN,EAAA,eAAAw4B,GAAiB5gC,EAAS,sBAFhD6E,GAWQvB,EAAA8E,EAAAtD,yDARM9E,EAAS,IAAA,sDAEVA,EAAY,qBACTuzG,mEAEPvzG,EAAO,YAAZa,OAAIC,GAAA,EAAA,iHAAJD,gDAPuBqkC,GAAcllC,EAAS,GAAEA,EAAM,MAAA,8CAE5CA,EAAS,UADD0I,GAAAN,EAAA,eAAAw4B,GAAiB5gC,EAAS,wEARrC,SAAAuzG,GAAgBttG,GAEvBA,EAAMU,yCAjCJ6sG,EATO7uF,EAAcnK,EAAdmK,KACA3iB,EAAcwY,EAAdxY,MACAuhB,EAAkB/I,EAAlB+I,OACAwU,EAAiBvd,EAAjBud,SACAjN,EAA+BtQ,EAA/BsQ,UACAkN,EAAgBxd,EAAhBwd,QAEA7xB,EAAgDqU,EAAhDrU,QAIPstG,EAAqBzxG,+RACxBuc,EAAA,EAAEk1F,EAAYzxG,iBAEN,SAAW8oB,GACdA,GACE0oF,GACFA,EAAU1zF,QAKb4zF,CAAW5oF,eAEL,SAAa7kB,GACpBA,EAAMU,kBAEFoxB,GAIJC,EAAO,EAEHC,GAAI,UACJtT,KAAMC,EAAmBD,GACzB3iB,MAAOyxG,yBpI61BR,IACAE,IoIh1BgBltG,KpIg1BS4wD,cAAc,YoIh1BhCo8C,EpIi1BNE,GAAmBA,EAAgBprG,0EoIh1B9BirG,EAASzzF,6NCrDN6zF,GACdC,EACAC,EACAnvF,GAEA,IAAMovF,EAAgBC,GAAWH,EAAQC,GAAqB,CAAA,EAAInvF,GAElE,OAAOovF,EASH,SAAmBF,GACvB,GAAIxiG,MAAMmS,QAAQqwF,EAAa,MAC7B,OAAOA,EAAa,KAGtB,IAAMI,EAAYJ,EAAc,OAAKA,EAAc,OAAKA,EAAc,MACtE,GAAIxiG,MAAMmS,QAAQywF,GAAY,CAC5B,IAAM5/E,EAAQ4/E,EAAUzoG,QAAO,SAACi8B,GAAU,OAAAA,EAAU,IAAA,IACpD,GAAIpT,EAAMxzB,OAAS,EACjB,OAAOwzB,EAAM,OAEhB,CAED,OAAO,IACT,CAvByB6/E,CAASH,GAAiB,IACnD,CA6BM,SAAUC,GACdG,EACAL,EACAnvF,GAOA,IAN8B,IAA9ByvF,EAAanrG,UAAApI,OAAA,QAAAL,IAAAyI,UAAAzI,GAAAyI,UAAGkrG,GAAAA,EAEVvvB,EAAWjgE,EAAKvkB,MAAM,EAAGukB,EAAK9jB,QAC9B+nC,EAAUjkB,EAAK,GAEjB0vF,EAAkB,CAACD,GACvBE,IAAAC,EAAyB,CAACH,EAAcI,MAAOJ,EAAcK,MAAOL,EAAcM,OAAMJ,EAAAC,EAAA1zG,OAAAyzG,IAAE,CAArF,IAAMK,EAAUJ,EAAAD,GACfjjG,MAAMmS,QAAQmxF,KAChBN,EAAkBA,EAAgBhqG,OAAOsqG,GAE5C,CAAA,IAEmCC,EAFnCC,EAAA/4E,EAEoBu4E,GAAe,IAApC,IAAAQ,EAAA94E,MAAA64E,EAAAC,EAAA5iG,KAAA+pB,MAAsC,CAGpC,GAAI,SAFJo4E,EADeQ,EAAA5yG,QAG8C,iBAAvBoyG,EAAcU,KAAmB,CAAA,IAAAC,EAC/D78E,EAAMk8E,EAAcU,KAC1B,GAAI58E,KAAO47E,EACTM,EAAgBN,EAAkB57E,OACzBA,KAAAA,EAAI/hB,WAAW,MAUf,IAA8B,KAAb,QAAjB4+F,EAAA78E,EAAI7D,MAAM,eAAO,IAAA0gF,OAAA,EAAjBA,EAAmBl0G,QAAc,CAC1C,IAAiDm0G,EAAAz9E,EAAfW,EAAI5sB,MAAM,MAArC2pG,GAAAA,EAASD,EAAEzI,GAAAA,EAAYyI,EAAA,GAC9B,GAAIC,KAAanB,EAAmB,CAClC,IAAMoB,EAAmBpB,EAAkBmB,GACrC/kE,EAAY,CAAE4kE,KAAM,KAAKzqG,OAAOkiG,IAChC4I,EAAc,GAKpB,OAJAA,EAAY/oG,KAAKw8B,GACbg8C,EAAS/jF,OAAS,GACpBs0G,EAAY/oG,KAAI4H,MAAhBmhG,EAAWlhG,EAAS2wE,IAEfovB,GAAWkB,EAAkBpB,EAAmBqB,EAAajlE,EACrE,CACC,MAAMlkC,MAAK,+BAAA3B,OAAgC6tB,GAE9C,CACC,MAAMlsB,MAAK,+BAAA3B,OAAgC6tB,GAC5C,CAzBC,IAAMk9E,EAAUl9E,EAAI9R,UAAU,GAAG9a,MAAM,KACvC8oG,EAAgBD,EAAc,IACDkB,EADCC,EAAAx5E,EACRs5E,GAAtB,IAAA,IAAAE,EAAAv5E,MAAAs5E,EAAAC,EAAArjG,KAAA+pB,MAA+B,CAApB,IAAAu5E,EAAOF,EAAArzG,MAChB,KAAIuzG,KAAWnB,GAGb,MAAMpoG,MAAK3B,+BAAAA,OAAgC6tB,IAF3Ck8E,EAAgBA,EAAcmB,EAIjC,CAAA,OAAAryF,GAAAoyF,EAAAnnG,EAAA+U,EAAAoyF,CAAAA,QAAAA,EAAAtyG,GACF,CAgBA,CACF,CAID,QAAgBxC,IAAZooC,EACF,OAAOwrE,EAGT,GACsC,WAApCx0G,EAAOw0G,EAActsB,aACQ,OAA7BssB,EAActsB,YACdl/C,KAAWwrE,EAActsB,WAGzB,OAAOksB,GAAWG,EAAgBL,EAAmBlvB,EADrDwvB,EAAiBA,EAActsB,WAA0Cl/C,IAI3E,GAC6C,WAA3ChpC,EAAOw0G,EAAcoB,oBACe,OAApCpB,EAAcoB,kBAEd,IAAK,IAAM/jF,KAAQ2iF,EAAcoB,kBAC/B,GAAI5sE,EAAQvU,MAAM5C,GAEhB,OAAOuiF,GAAWG,EAAgBL,EAAmBlvB,EADrDwvB,EAAiBA,EAAcoB,kBAAiD/jF,IAMtF,GAAkD,WAA9C7xB,EAAOw0G,EAAcqB,sBAEvB,OAAOzB,GAAWG,EAAgBL,EAAmBlvB,EADrDwvB,EAAgBA,EAAcqB,sBAIhC,GAAmC,WAA/B71G,EAAOw0G,EAAcrqE,QAA8C,OAAxBqqE,EAAcrqE,MAE3D,OAAOiqE,GAAWG,EAAgBL,EAAmBlvB,EADrDwvB,EAAgBA,EAAcrqE,MAGjC,CAAA,CAAA,MAAA7mB,GAAA2xF,EAAA1mG,EAAA+U,WAAA2xF,EAAA7xG,GAED,CAAA,OAAW,IACb,UCxHgB0yG,GACdl0G,EACAqyG,EACAC,GAEA,IAAM6B,EAAa/B,GAAqBC,EAAQC,EAAmBtyG,EAAMmjB,MAEzE,GAAIgxF,EAAY,CACd,IAAQ3zG,EAAsDR,EAAtDQ,MAAO2iB,EAA+CnjB,EAA/CmjB,KAAMmG,EAAyCtpB,EAAzCspB,UAAWvH,EAA8B/hB,EAA9B+hB,OAAQwU,EAAsBv2B,EAAtBu2B,SAAUC,EAAYx2B,EAAZw2B,QAE5C7xB,EAAUwvG,EAAW5hG,KAAI,SAAC6hG,GAAe,MAAA,CAC7C5zG,MAAO4zG,EACPjwG,KAAMiwG,EACP,IAIKC,EAAmBF,EAAWjmE,SAASluC,EAAMQ,OAC/CmE,EACA,CAAC,CAAEnE,MAAOA,EAAkB2D,KAAM3D,IAAoBqI,OAAOlE,GAEjE,MAAO,CACL,CACEqD,UAAWssG,GACXt0G,MAAO,CACLQ,MAAAA,EACA2iB,KAAAA,EACAmG,UAAAA,EACAvH,OAAAA,EACAwU,SAAAA,EACAC,QAAAA,EACA7xB,QAAS0vG,IAIhB,CAED,OAAO,IACT,CCtBM,SAAUE,GAAmB5vG,GAEjC,QAAuB3F,IAAnB2F,EAAQ0tG,OACV,MAAU,IAAA7nG,MACR,6QASJ,IAAIgqG,EAwBN,SAA2B7vG,GACzB,IAAQ2tG,EAAkC3tG,EAAlC2tG,kBAAmBmC,EAAe9vG,EAAf8vG,WAErBD,EAAM,IAAIE,GAAO78F,EAAA,CACrB88F,WAAW,EACXC,SAAS,EACTC,OAAO,GACJJ,IAGDnC,GACF50G,OAAOyC,KAAKmyG,GAAmBx0G,SAAQ,SAAC44B,GACtC89E,EAAIM,UAAUxC,EAAkB57E,GAAgBA,EAClD,IAGF,OAAO89E,CACT,CAzCYO,CAAkBpwG,GAC5B,QAA4B3F,IAAxB2F,EAAQqwG,cAIe,KAHzBR,EAAM7vG,EAAQqwG,YAAYR,IAAQA,GAG1BS,KAAKL,QACX,MAAM,IAAIpqG,MAAM,uDAIpB,IAAM0qG,EAAcV,EAAIW,QAAQxwG,EAAQ0tG,QAExC,GAAI6C,EAAYjjC,OACd,MAAMijC,EAAYjjC,OAAO,GAG3B,OAAgB,SAAS/rD,GAIvB,OAHAgvF,EAAYhvF,IACMgvF,EAAYjjC,QAAU,IAEvB1/D,IAAI6iG,IAAiB7iG,KAAI,SAACiC,GAAU,OAuBzD,SAA2B0R,EAAemvF,GACxC,MAAO,CACLlyF,KAAMsZ,EAAUvW,EAAMmvF,EAASC,cAC/B9vF,QAAS6vF,EAAS7vF,SAAW,gBAC7BsxC,SAAUn4C,GAAmB4zD,QAEjC,CA7ByDgjC,CAAkBrvF,EAAM1R,EAAM,GACrF,CACF,CAoCA,SAAS4gG,GAAgBC,GACvB,GAAyB,SAArBA,EAAS3f,SAAsB7lF,MAAMmS,QAAQqzF,EAAShD,QAAS,CACjE,IAAImD,EAAQH,EAAShD,OACrB,GAAImD,EAAO,CAGT,IAFAA,EAAQA,EAAMjjG,KAAI,SAAC/R,GAAK,OAAKgmB,KAAKtE,UAAU1hB,EAAO,KAEzCnB,OAAS,EAAG,CACpB,IAAMo2G,EAAO,CAAC,KAAOD,EAAMn2G,OAAS,GAAK,cACzCm2G,EAAQA,EAAM52G,MAAM,EAAG,IACjBgM,KAAK6qG,EACZ,CACDJ,EAAS7vF,QAAU,8BAAgCgwF,EAAMrrG,KAAK,KAC/D,CACF,CAMD,MAJyB,yBAArBkrG,EAAS3f,UACX2f,EAAS7vF,QAAU,wCAA0C6vF,EAASnnG,OAAOwnG,oBAGxEL,CACT,CClHA,IAUaM,GAAqC,CAChDlzG,GAAI,SACJsB,KAAM,qBAJP,sZAUD,SAAqBmiB,EAAeuL,GAClC,IAAQznB,EAA6BynB,EAA7BznB,OAAQmU,EAAqBsT,EAArBtT,KAAMuT,EAAeD,EAAfC,WAChBC,EAAa,CAAC,4BAEpB,GAAI3nB,GAAUA,EAAOmZ,MAAQnZ,EAAO4nB,UAAY5nB,EAAOxJ,MAAO,CAG5D,IAAMqxB,EAAiBhpB,eAAAA,OAAkB6nB,GAAuB1mB,EAAOmZ,OAEjE2O,EAAcX,GAAYnnB,EAAOxJ,OACjCuxB,EACmB,iBAAhBD,EAAwB,IAAAjpB,OACvBmB,EAAOxJ,MAAK,KAChBiiB,GAAUzY,EAAOxJ,SAAWihB,OAAOuQ,cAAcF,GAAYjpB,GAAAA,OACxDmB,EAAOxJ,MAAQ,KAClBwJ,EAAOxJ,MAEfmxB,EAAW/mB,KAAI,eAAA/B,OAAgBgpB,EAAiB,KAAAhpB,OAAImB,EAAO4nB,SAAQ/oB,KAAAA,OAAIkpB,SACxE,CAEG5T,GAAQA,EAAKgF,MAAQhF,EAAKhR,WAC5BwkB,EAAW/mB,KAAI,iBAAA/B,OhHwDb,SAAuCsa,GAC3C,OAAuB,IAAhBA,EAAK9jB,OACR,GACA8jB,EAAKqe,OAAM,SAACvR,GAAS,OAAAP,GAAmBzO,KAAKgP,IAASO,GAAwBvP,KAAKgP,EAAK,IACtF,IAAM9M,EAAK5Q,IAAIge,IAAyBpmB,KAAK,IAAIgS,QAAQ,MAAO,IAAM,IACtEqK,KAAKtE,UAAUiB,EACvB,CgH7DuByyF,CAA6Bz3F,EAAKgF,MAAK,SAAAta,OAAQsV,EAAKhR,UAAS,UAIlF,GAAIukB,GAAcA,EAAWO,MAG3B,GAAIP,EAAWO,MAAM5yB,OAAS,EAAG,CAE/B,IAAM4yB,EAAQP,EAAWO,MAAM1f,KAAI,SAAC4Q,GAClC,IAAMpf,EAAO84B,EAAK1Z,IAAS,OAC3B,MAAAta,SAAAA,OAAgB2d,KAAKtE,UAAUne,GAAK8E,UAAAA,OAAS6nB,GAAuBvN,GACtE,IACAwO,EAAW/mB,6BAAI/B,OAAyBopB,EAAM9nB,KAAK,sBACpD,KAAM,CACL,IAAMgZ,EAAOuO,EAAWO,MAAM,GAC9BN,EAAW/mB,KAAI/B,wBAAAA,OAAyB6nB,GAAuBvN,GAAK,OACrE,CAKH,OAFAwO,EAAW/mB,KAAK,kBAEhB,4BAAA/B,OAAmC8oB,EAAWxnB,KAAK,IAAG,IACxD,eAEA,SAAsB+b,EAAeiM,IAyBrC,SAAkBA,GAAa,IAAA0jF,EAAAC,EAIvBC,EAAuCF,QAA7BA,EAAG1jF,EAAMU,MAAM,0BAAcgjF,SAA1BA,EAA4Bx2G,OACzC22G,EAAwCF,QAA9BA,EAAG3jF,EAAMU,MAAM,2BAAeijF,SAA3BA,EAA6Bz2G,OAEhD,GAAI02G,IAAeC,EACjB,MAAU,IAAAxrG,MAAM,mEAEpB,CAlCE0wE,CAAS/oD,GAMT,IAcMC,EAdU,IAAIC,SAClB,IACA,oBAEEF,EAFF,iKAFc,CAYdY,EAEaT,CAAQpM,GACvB,YAAkBlnB,IAAXozB,EAAuBA,EAAS,IACzC,GCxFA,IAQa6jF,GAAuC,CAClDxzG,GAAI,WACJsB,KAAM,WACN8/E,YAXe,wTAYfkB,YAYF,SAAqB7+D,EAAeuL,GAClC,IAAQtT,EAA6BsT,EAA7BtT,KAAMnU,EAAuBynB,EAAvBznB,OAAQ0nB,EAAeD,EAAfC,WAClBS,EAAQ,GAEZ,GAAInoB,GAAUA,EAAOmZ,MAAQnZ,EAAO4nB,UAAY5nB,EAAOxJ,MAAO,CAC5D,IAAM01G,EAAc,CAAC,KAAKrtG,OAAOmB,EAAOmZ,MAClCgzF,EAAep8E,EAAM7T,EAAMgwF,GAC3BpkF,EAAcX,GAAYnnB,EAAOxJ,OACjCuxB,EACoB,iBAAjBokF,GAAP,MAAoCrkF,EAAiD,IAAAjpB,OAC7EmB,EAAOxJ,MAAK,KAChBsxB,EAENK,GACE,MACAikF,GAAyBpsG,EAAOmZ,MAChC,IACAnZ,EAAO4nB,SAHP,KAMAG,EANA,IASH,MACCI,GAAStiB,MAAMmS,QAAQkE,GAAQ,MAAQ,IAGrC/H,GAAQA,EAAKgF,MAAQhF,EAAKhR,YACL,SAAnBgR,EAAKhR,UACPglB,GAAS,0BAA4BikF,GAAyBj4F,EAAKgF,MAAQ,KAE3EgP,GAAS,kBAAoBikF,GAAyBj4F,EAAKgF,MAAQ,KAIvE,GAAIuO,GAAcA,EAAWO,MAK3B,GAJgC,MAA5BE,EAAMA,EAAM9yB,OAAS,KACvB8yB,GAAS,UAGqB,IAA5BT,EAAWO,MAAM5yB,OAAc,CACjC,IAAM8jB,EAAOuO,EAAWO,MAAM,GAE9BE,GACkB,IAAhBhP,EAAK9jB,OACD,GACA,IAAM+2G,GAAyBjzF,EACtC,MAAUuO,EAAWO,MAAM5yB,OAAS,IACnC8yB,GACE,KACAT,EAAWO,MACR1f,KAAI,SAAC4Q,GAEJ,OAAOkzF,GADMlzF,EAAKA,EAAK9jB,OAAS,IACH,KAAO+2G,GAAyBjzF,EAC/D,IACChZ,KAAK,MACR,KAON,OAAOgoB,CACT,EA3EEkzD,aAgFF,SAAsBn/D,EAAeiM,EAAepQ,GAQlD,IAAMu0F,EAAmBpvF,GAAcnF,EAAQyE,MAAQN,EALvD,SAA2BA,GACzB,IAAM/hB,EAAO4d,EAAOG,UAAUgE,GAC9B,YAAgBlnB,IAATmF,EAAqBqiB,KAAKhE,MAAMre,QAAQnF,CAChD,CAE6Du3G,CAAkBrwF,GAEhF,OAAOswF,GAASztE,OAAOutE,EAAkBnkF,EAC3C,GAIM,SAAUikF,GAAyBjzF,GACvC,GAAoB,IAAhBA,EAAK9jB,OACP,MAAO,IAGT,IAAM0J,EAAMoa,EACT5Q,KAAI,SAAC0d,GACJ,MAAoB,iBAATA,EACF,IAAMA,EAAO,IAEb,IAAMomF,GAAcpvF,OAAOgJ,GAEtC,IACC9lB,KAAK,IAER,MAAkB,MAAXpB,EAAI,GACPA,EAAInK,MAAM,GACVmK,CACN,CAEA,SAASstG,GAAcpmF,GACrB,OAAOA,EAAK4C,MAAM,mBAAqB5C,EAAOzJ,KAAKtE,UAAU+N,EAC/D","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,31,32,33,53,54,55,56,57,58,59,60,61,62,63,119,120]}