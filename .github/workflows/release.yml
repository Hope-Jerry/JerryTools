name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: '叮当工具箱 v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false

      - name: ls target
        run: ls src-tauri/target/release/bundle

      - name: ubuntu ls
        if: matrix.platform == 'ubuntu-20.04'
        run: ls src-tauri/target/release/bundle/deb

      - name: ubuntu ls appimage
        if: matrix.platform == 'ubuntu-20.04'
        run: ls src-tauri/target/release/bundle/appimage

      - name: dmg ls
        if: matrix.platform == 'macos-latest'
        run: ls src-tauri/target/release/bundle/dmg

      - name: macos ls
        if: matrix.platform == 'macos-latest'
        run: ls src-tauri/target/release/bundle/macos

      - name: msi ls
        if: matrix.platform == 'windows-latest'
        run: ls src-tauri/target/release/bundle/msi

      - name: nsis ls
        if: matrix.platform == 'windows-latest'
        run: ls src-tauri/target/release/bundle/nsis

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/msi/*.zip
            src-tauri/target/release/bundle/msi/*.sig
            src-tauri/target/release/bundle/macos/*.app
            src-tauri/target/release/bundle/dmg/*.dmp
            src-tauri/target/release/bundle/macos/*.app.tar.gz
            src-tauri/target/release/bundle/macos/*.sig
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/appimage/*.AppImage.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          UPLOAD_PATH: src-tauri/target/release/
  
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tauri-app
          path: src-tauri/target/release/bundle